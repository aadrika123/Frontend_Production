import{Q as f}from"./index-ff45b2e2.js";import"./index-5febc24e.js";const u=()=>{let t=new Date,e=t.getFullYear(),n=String(t.getMonth()+1),s=String(t.getDate());return n.length<2&&(n=`0${n}`),s.length<2&&(s=`0${s}`),`${e}-${n}-${s}`},$=(t,e,n=null)=>t.length>n?e:t===""||/^\d*\.?\d*$/.test(t)?t:e,d=(t,e,n=null)=>t.length>n?e:t===""||/^[0-9\b]+$/.test(t)?t:e,b=(t,e,n=null)=>t.length>n?e:t===""||/^[a-zA-Z\s]*$/.test(t)?t:e,y=(t,e,n=null)=>t.length>n?e:t===""||/^[\a-zA-Z,! ]*$/.test(t)?t:e,I=(t,e,n=null)=>t.length>n?e:t===""||/^[\a-zA-Z0-9!]*$/.test(t)?t:e,w=(t,e,n=null)=>t.length>n?e:t===""||/^[\a-zA-Z0-9!]*$/.test(t)?t:e,D=(t,e,n=null)=>t.length>n?e:t===""||/^[\a-zA-Z0-9/!]*$/.test(t)?t:e,N=(t,e,n=null)=>t.length>n?e:t===""||/^[\a-zA-Z0-9@.!]*$/.test(t)?t:e,C=(t,e,n=null)=>t.length>n?e:t,S=(t,e,n=null)=>t.length>n?e:t===""||/^[\a-zA-Z0-9!, ]*$/.test(t)?t:e,A=t=>t==null||typeof t>"u"||t===""?"NA":t===!0?"Yes":t===!1?"No":t,M=t=>{t.current.scrollIntoView({behavior:"smooth",block:"center",inline:"start"})},T=t=>t==null||typeof t>"u"||t===""?"0":parseFloat(t).toLocaleString("en-IN"),L=t=>t==null||typeof t>"u"||t===""?parseFloat(0).toLocaleString("en-IN",{style:"currency",currency:"INR"}):parseFloat(t).toLocaleString("en-IN",{style:"currency",currency:"INR"}),z=t=>{const e=(t==null?void 0:t.name).split(".")[(t==null?void 0:t.name).split(".").length-1],n=(t==null?void 0:t.size)/(1024*1024);switch(e){case"jpeg":return n<=1?!0:(f.info("Image must be less than 1Mb"),!1);case"jpg":return n<=1?!0:(f.info("Image must be less than 1Mb"),!1);case"png":return n<=1?!0:(f.info("Image must be less than 1Mb"),!1);case"pdf":return n<=10?!0:(f.info("PDF must be less than 10Mb"),!1);default:return f.info('File type must be "jpg", "jpeg", "png" or "pdf"'),!1}},E=t=>{if(t==null||typeof t>"u"||t==="")return"NA";if(t===!0)return"Yes";if(t===!1)return"No";{let e;const n=t.includes(":");if(t.includes("T")){const r=t.split("T")[0],a=r.substring(0,4),l=r.substring(5,7);return`${r.substring(8,10)}-${l}-${a}`}else{const o=t.split(" "),r=o[0].split("-"),a=n?o[1].split(":"):[],l=r[2],c=r[1],i=r[0];if(n){const h=a[0],g=a[1];return a[2],(i==null?void 0:i.length)>2?(e=`${l}-${c}-${i} ${h}:${g}`,e):(e=`${i}-${c}-${l} ${h}:${g}`,e)}else return(i==null?void 0:i.length)>2?(e=`${l}-${c}-${i}`,e):(e=`${i}-${c}-${l}`,e)}}},F=(t="",e)=>{let n=t==null?void 0:t.split(",");const s=e.toLowerCase(),o=[];return(n==null?void 0:n.length)>0&&(n==null||n.forEach(r=>{s!=null&&s.includes(r.toLowerCase())&&o.push(r)})),(o==null?void 0:o.length)!=0},P=t=>{function e(l){const[c,i,h]=l.split("-");return new Date(`${i}-${c}-${h}`)}const n=e(t),s=new Date,o=s-n,r=Math.floor(o/(1e3*60*60*24*365.25)),a=Math.floor((s.getFullYear()-n.getFullYear())*12+(s.getMonth()-n.getMonth()))%12;return t!=""?`${r??"0"} years and ${a??"0"} months`:"0 year and 0 month"},Z=(t,e="",n={})=>{let s=JSON.stringify(t);const o=["SQLSTATE","Undefined table","Connection","SQL","SELECT"],r=s.toLowerCase(),a=[];return o.forEach(l=>{r.includes(l.toLowerCase())&&a.push(l)}),(a==null?void 0:a.length)==0?s:"Error! Please try again later."};export{d as a,T as b,Z as c,b as d,w as e,N as f,u as g,z as h,E as i,L as j,I as k,y as l,F as m,A as n,P as o,C as p,S as q,$ as r,M as s,D as t};
