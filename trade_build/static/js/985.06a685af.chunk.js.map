{"version":3,"file":"static/js/985.06a685af.chunk.js","mappings":"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","sources":["../node_modules/react-tooltip/src/utils/debounce.ts","../node_modules/react-tooltip/src/components/TooltipProvider/TooltipProvider.tsx","../node_modules/react-tooltip/src/components/TooltipProvider/TooltipWrapper.tsx","../node_modules/react-tooltip/src/utils/use-isomorphic-layout-effect.ts","../node_modules/react-tooltip/src/utils/compute-positions.ts","../node_modules/react-tooltip/src/components/Tooltip/Tooltip.tsx","../node_modules/react-tooltip/src/components/TooltipContent/TooltipContent.tsx","../node_modules/react-tooltip/src/components/TooltipController/TooltipController.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { computeTooltipPosition } from '../../utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n  }\n\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      return\n    }\n    handleShow(false)\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${anchorSelect}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < renderContent or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    renderedContent = (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode}\n      </div>\n    )\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],"names":["f","e","t","r","o","_this","_len","arguments","length","l","Array","_key","n","apply","this","setTimeout","clearTimeout","h","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","y","getTooltipData","A","undefined","_","window","i","c","b","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref3","_ref3$elementReferenc","_ref3$tooltipReferenc","_ref3$tooltipArrowRef","_ref3$place","_ref3$offset","_ref3$strategy","_ref3$middlewares","a","wrap","_context","prev","next","elementReference","tooltipReference","tooltipArrowReference","place","offset","strategy","middlewares","p","Number","v","m","padding","abrupt","tooltipStyles","tooltipArrowStyles","push","u","element","d","placement","middleware","then","_ref5","x","middlewareData","left","concat","top","_ref6","arrow","_defineProperty","right","bottom","split","_ref7","stop","_x","g","tooltip","fixed","noArrow","clickable","show","dark","light","success","warning","error","info","E","_ref8","_s","id","className","classNameArrow","_ref8$variant","variant","anchorId","anchorSelect","_ref8$place","_ref8$offset","_ref8$events","events","_ref8$openOnClick","openOnClick","_ref8$positionStrateg","positionStrategy","w","wrapper","_ref8$delayShow","delayShow","S","_ref8$delayHide","delayHide","_ref8$float","float","T","_ref8$noArrow","O","_ref8$clickable","k","_ref8$closeOnEsc","closeOnEsc","L","N","style","position","R","afterShow","I","afterHide","$","content","D","contentWrapperRef","H","isOpen","j","setIsOpen","q","C","W","F","P","U","_r5","_r6","_slicedToArray","M","B","_r7","_r8","K","X","_r9","_r10","z","J","_r11","_r12","Y","Z","_r13","_r14","G","Q","V","ee","_A2","te","re","oe","_r15","_r16","le","ne","ae","ce","includes","ie","se","ue","currentTarget","target","isConnected","de","pe","_ref9","getBoundingClientRect","width","height","Object","keys","ve","clientX","clientY","me","fe","document","querySelector","_toConsumableArray","some","contains","he","key","ye","we","forEach","add","addEventListener","event","listener","_ref10","removeEventListener","_ref11","MutationObserver","type","attributeName","getAttribute","removedNodes","call","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","observe","body","childList","subtree","attributes","attributeFilter","disconnect","Ae","ResizeObserver","from","Se","role","s","_objectSpread","ref","_ref12","dangerouslySetInnerHTML","__html","_ref13","html","render","_ref13$variant","_ref13$place","_ref13$offset","_ref13$wrapper","_ref13$children","children","_ref13$events","_ref13$openOnClick","_ref13$positionStrate","_ref13$delayShow","_ref13$delayHide","_ref13$float","_ref13$noArrow","_ref13$clickable","_ref13$closeOnEsc","_r17","_r18","_r19","_r20","_r21","_r22","_r23","_r24","_r25","_r26","_r27","_r28","_r29","_r30","_r31","_r32","_r33","_r34","_r35","_r36","_r37","_r38","_r39","_r40","_A3","getAttributeNames","reduce","startsWith","replace","values","entries","_ref14","_ref15","console","warn","size"],"sourceRoot":""}