{"version":3,"file":"static/js/1961.1f23aa64.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingRenewList.jsx"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Tooltip } from \"@material-tailwind/react\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\nimport AxiosInterceptors from \"../../../../../Components/GlobalData/AxiosInterceptors\";\r\nimport ApiHeader from \"../../../../../Components/ApiList/ApiHeader\";\r\nimport AdvtListTablePagination from \"../../../AdvtListTablePagination\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingRenewList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_postHoardingRenewList, api_archivedApplication } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    // const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    ///testing pagination\r\n    const [readymadeListData, setreadymadeListData] = useState(false);\r\n    const [readymadeListStatus, setreadymadeListStatus] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    // table related states\r\n    const [totalDataCount, settotalDataCount] = useState(0);\r\n    const [currentPageIndex, setcurrentPageIndex] = useState(1);\r\n    const [lastPageIndex, setlastPageIndex] = useState(0);\r\n    const [pageLength, setpageLength] = useState(10);\r\n    const [searchValue, setsearchValue] = useState('');\r\n    const [refreshStatus, setrefreshStatus] = useState(false);\r\n\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <div>\r\n                        <button\r\n                            onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                            className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                        >\r\n                            View\r\n                        </button>\r\n                        {cell.row.original.renew_option == 1 &&\r\n                            <button\r\n                                onClick={() => navigate(`/hoarding/${id}/${cell.row.values.id}/renew`)}\r\n                                className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\"\r\n                            >\r\n                                Renew\r\n                            </button>\r\n                        }\r\n\r\n                        {cell.row.original.renew_option == \"Expired\" &&\r\n                            <button\r\n                                className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\" disabled\r\n                            >\r\n                                Expired\r\n                            </button>\r\n                        }\r\n                        {cell.row.original.renew_option == \"Expired\" &&\r\n                            <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Archived\">\r\n                                <button\r\n                                    onClick={() => handleArchived(cell.row.values.id)}\r\n                                    className=\"bg-indigo-500 float-right px-2 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-5 h-5\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\" clip-rule=\"evenodd\" />\r\n                                    </svg>\r\n\r\n                                    {/* Archived */}\r\n                                </button>\r\n                            </Tooltip>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </>\r\n\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInboxList(currentPageIndex, pageLength, searchValue)\r\n    }, [currentPageIndex, searchValue, pageLength])\r\n\r\n    const fetchInboxList = (page, perPage, key = '') => {\r\n        // console.log('at inbox list fetch')\r\n        setrefreshStatus(true)\r\n        setisLoading(true)\r\n\r\n        AxiosInterceptors.post(api_postHoardingRenewList, { page: page, perPage: perPage, key: key }, ApiHeader())\r\n            .then((res) => {\r\n                // console.log('inbox list response...', res?.data?.data?.data)\r\n                setreadymadeListData(res.data?.data?.data)\r\n                setreadymadeListStatus(true)\r\n                setisLoading(false)\r\n\r\n                settotalDataCount(res.data?.data?.total);\r\n                setlastPageIndex(res.data?.data?.last_page)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error while fetching Filter Data\", err)\r\n                setreadymadeListStatus(false)\r\n                setisLoading(false)\r\n\r\n            });\r\n\r\n        setTimeout(() => {\r\n            setrefreshStatus(false)\r\n        }, [500])\r\n    }\r\n\r\n\r\n    const values = {\r\n        totalDataCount: totalDataCount,\r\n        currentPageIndex: currentPageIndex,\r\n        setcurrentPageIndex: setcurrentPageIndex,\r\n        pageLength: pageLength,\r\n        setpageLength: setpageLength,\r\n        lastPageIndex: lastPageIndex,\r\n        setlastPageIndex: setlastPageIndex,\r\n        fetchInboxList: fetchInboxList,\r\n        searchValue: searchValue,\r\n        setsearchValue: setsearchValue,\r\n        refreshStatus: refreshStatus\r\n    }\r\n\r\n    // const getApplicationList = () => {\r\n    //     seterroState(false)\r\n    //     setisLoading(true)\r\n    //     AxiosInterceptors.post(api_postHoardingRenewList, {}, ApiHeaderAdvrt())\r\n    //         .then((res) => {\r\n    //             // console.log(\"renew list\", res.data.data.data);\r\n    //             if (res.data.status) {\r\n    //                 setapplicationDetail(res.data.data);\r\n    //                 settableStatus(true);\r\n    //                 setisLoading(false)\r\n    //             } else {\r\n\r\n    //             }\r\n\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //             seterroState(true)\r\n    //             setisLoading(false)\r\n    //         })\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     getApplicationList()\r\n    // }, [])\r\n\r\n    console.log(\"application renew list\", applicationDetail)\r\n    const handleArchived = (applicationId) => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n        console.log(\"request body in renew...12\", applicationId)\r\n        AxiosInterceptors.post(`${api_archivedApplication}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('archived response', response.data)\r\n                notify(\"Archived successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                notify(\"failed to archived\", \"error\")\r\n            })\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application data in renew list 12\", applicationDetail)\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">RENEW APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null &&\r\n                            // {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n                        {readymadeListStatus && readymadeListData?.length != 0 &&\r\n                            // <ListTable assessmentType={false} columns={columnSchema} dataList={readymadeListData} />\r\n                            <AdvtListTablePagination columns={COLUMNS} dataList={readymadeListData} values={values} />\r\n                        }\r\n                        {\r\n                            readymadeListStatus && readymadeListData?.length == 0 &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">Data Not Found</div>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingRenewList;"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_AdvertisementApiList","AdvertisementApiList","api_postHoardingRenewList","api_archivedApplication","_useState5","_useState6","applicationDetail","_useState7","_useState8","_useState9","_useState10","applicationType","setapplicationType","_useState11","_useState12","applicationNo","setapplicationNo","_useState13","_useState14","setshow","_useState15","_useState16","erroState","_useState17","_useState18","modalIsOpen","setIsOpen","closeModal","_useState19","_useState20","_useState21","_useState22","readymadeListData","setreadymadeListData","_useState23","_useState24","readymadeListStatus","setreadymadeListStatus","_useState25","_useState26","isLoading","setisLoading","_useState27","_useState28","totalDataCount","settotalDataCount","_useState29","_useState30","currentPageIndex","setcurrentPageIndex","_useState31","_useState32","lastPageIndex","setlastPageIndex","_useState33","_useState34","pageLength","setpageLength","_useState35","_useState36","searchValue","setsearchValue","_useState37","_useState38","refreshStatus","setrefreshStatus","id","useParams","console","log","notify","toastData","type","toast","navigate","useNavigate","COLUMNS","Header","Cell","_ref","row","_jsx","className","children","index","accessor","_ref2","cell","_Fragment","_jsxs","onClick","modalAction","values","original","renew_option","concat","disabled","Tooltip","handleArchived","xmlns","viewBox","fill","class","d","applicationId","useEffect","fetchInboxList","page","perPage","key","arguments","length","undefined","AxiosInterceptors","ApiHeader","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","data","total","last_page","catch","err","setTimeout","requestBody","ApiHeaderAdvrt","response","error","BrandLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","ToastContainer","position","autoClose","src","AdvtListTablePagination","columns","dataList","isOpen","onAfterOpen","onRequestClose","style","contentLabel","HoardingApplicationFullDetail","showLoader","val"],"sourceRoot":""}