{"version":3,"file":"static/js/195.fb3967d6.chunk.js","mappings":"8UA8BAA,IAAAA,cAAoB,SA4TpB,UA3TA,SAAmBC,GAEf,IAAAC,GAAiCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAC/CI,GADkBF,EAAA,GAAWA,EAAA,IACKD,EAAAA,EAAAA,WAAS,IAAMI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8CP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAoCX,EAAAA,EAAAA,UAAS,IAAGY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAAzCE,EAAUD,EAAA,GACjBE,GADgCF,EAAA,IACsDG,EAAAA,EAAAA,MAA9EC,EAA2BF,EAA3BE,4BAAgDC,GAAFH,EAAjBI,kBAA4CJ,EAAzBG,2BAChDE,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OAERG,IADiBC,EAAAA,EAAAA,OACiBvB,EAAAA,EAAAA,WAAS,IAAMwB,GAAAtB,EAAAA,EAAAA,GAAAoB,EAAA,GAA1CG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsC3B,EAAAA,EAAAA,UAAS,MAAK4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgC/B,EAAAA,EAAAA,UAAS,IAAGgC,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCnC,EAAAA,EAAAA,UAAS,IAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAA7BE,GAAFD,EAAA,GAAeA,EAAA,IAChCE,GAAsCtC,EAAAA,EAAAA,UAAS,IAAGuC,GAAArC,EAAAA,EAAAA,GAAAoC,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAmBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,KACPE,UAAWF,EAAAA,OAGTG,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXJ,MAAO,GACPC,UAAW,IAEfI,SAAU,SAACC,GACPC,QAAQC,IAAI,sBAAuBF,EAcvC,EACAR,iBAAAA,IA8EEW,GAA0B,SAACC,EAAOC,GACpCzB,EAAeyB,GACf7B,EAAa4B,EAEjB,EAGME,GAAoB,SAACC,EAAKC,EAASC,GAEN,IAA3Bb,EAAOI,OAAOL,WAAwC,IAArBC,EAAOI,OAAOO,KAKnDN,QAAQC,IAAI,qBAAsBK,EAAKC,EAASC,GAEhDzB,EAAY,IACZiB,QAAQC,IAAI,eACZ9C,GAAa,GACbI,GAAmB,GAEfgD,EACK,OAAL5D,QAAK,IAALA,GAAAA,EAAO8D,aAAaF,GAEf,OAAL5D,QAAK,IAALA,GAAAA,EAAO+D,SAASJ,GAvER,SAACP,GAWb,IAAIY,EAVJpC,GAAa,GACbpB,GAAa,GACbI,GAAmB,GAUfoD,EADuB,GAAvBZ,EAAON,MAAMmB,OACC,CACVlB,UAAWK,EAAOL,WAGR,CACVmB,KAAMd,EAAON,OAIrBO,QAAQC,IAAI,oCAAqCU,GAEjDG,EAAAA,EAAAA,KACUjD,EAA6B8C,GAAaI,EAAAA,EAAAA,MAC/CC,MAAK,SAACC,GAAc,IAADC,EAEYC,EAAAC,EAIrBC,EALPrB,QAAQC,IAAI,mCAA4C,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAC9C,OAARL,QAAQ,IAARA,GAAc,QAANC,EAARD,EAAUK,YAAI,IAAAJ,GAAdA,EAAgBK,QACX,OAAL5E,QAAK,IAALA,GAAAA,EAAO6E,4BAAoC,OAARP,QAAQ,IAARA,GAAc,QAANE,EAARF,EAAUK,YAAI,IAAAH,GAAM,QAANC,EAAdD,EAAgBG,YAAI,IAAAF,OAAZ,EAARA,EAAsBK,UACpD,OAAL9E,QAAK,IAALA,GAAAA,EAAO+E,kBAAiB,GACnB,OAAL/E,QAAK,IAALA,GAAAA,EAAOgF,kBAAiB,IAExBzB,IAAwB,EAAc,OAARe,QAAQ,IAARA,GAAc,QAANI,EAARJ,EAAUK,YAAI,IAAAD,OAAN,EAARA,EAAgBO,SAElDzE,GAAa,EAEjB,IACC0E,OAAM,SAACC,GACJ9B,QAAQC,IAAI,iBAAkB6B,GAC9B9D,EAAO,wCAAyC,SAChDb,GAAa,GACb+C,IAAwB,EAAM,0CAC9B3C,GAAmB,EACvB,GACR,CA4BIwE,CAAQpC,EAAOI,SAhBXG,IAAwB,EAAM,0BAiBtC,EAEM8B,GAAU,CACZ,CACIC,OAAQ,WACRC,SAAU,aAEd,CACID,OAAQ,eACRC,SAAU,cAEd,CACID,OAAQ,SACRC,SAAU,QACVC,KAAM,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OAAQC,EAAAA,EAAAA,KAAA,QAAAC,UAAOC,EAAAA,EAAAA,IAASH,EAAKI,IAAIC,SAASC,QAAc,GAEzE,CACIV,OAAQ,aACRC,SAAU,iBACVC,KAAM,SAAAS,GAAA,IAAGP,EAAIO,EAAJP,KAAI,OAAQC,EAAAA,EAAAA,KAAA,QAAAC,UAAOC,EAAAA,EAAAA,IAASH,EAAKI,IAAIC,SAASG,iBAAuB,GAGlF,CACIZ,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAAW,GAAA,IAAGT,EAAIS,EAAJT,KAAI,OAAQC,EAAAA,EAAAA,KAAA,QAAAC,UAAOC,EAAAA,EAAAA,IAASH,EAAKI,IAAIC,SAASK,YAAkB,GAG7E,CACId,OAAQ,SACRC,SAAU,KACVC,KAAM,SAAAa,GAAA,IAAGX,EAAIW,EAAJX,KAAI,OACTC,EAAAA,EAAAA,KAAA,UACIW,QAAS,eAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAMlD,GAAsB,OAAJgC,QAAI,IAAJA,GAAS,QAALa,EAAJb,EAAMI,WAAG,IAAAS,GAAU,QAAVC,EAATD,EAAWR,gBAAQ,IAAAS,OAAf,EAAJA,EAAqBR,MAAW,OAAJN,QAAI,IAAJA,GAAS,QAALe,EAAJf,EAAMI,WAAG,IAAAW,GAAU,QAAVC,EAATD,EAAWV,gBAAQ,IAAAW,OAAf,EAAJA,EAAqBR,eAAoB,OAAJR,QAAI,IAAJA,GAAS,QAALiB,EAAJjB,EAAMI,WAAG,IAAAa,GAAU,QAAVC,EAATD,EAAWZ,gBAAQ,IAAAa,OAAf,EAAJA,EAAqBC,OAAO,EAC9HC,UAAU,8FAA6FlB,SAC1G,UAEQ,IA4CrB,OACImB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,CAEQrF,IAAaoF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,IAE1BtF,IAAagE,EAAAA,EAAAA,KAACuB,EAAAA,EAAe,CAAC3D,wBAAyBA,GAAyB4D,WAAYpF,KAO7F4D,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,4BAA2BxB,UAClCD,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,oBAAmBxB,UAC1BmB,EAAAA,EAAAA,MAAA,OAAKK,MAAM,2DAA0DxB,SAAA,EACjED,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,mEAAkExB,UACzEmB,EAAAA,EAAAA,MAAA,OAAKK,MAAM,GAAExB,SAAA,EACTD,EAAAA,EAAAA,KAAA,UACIW,QAAS,kBAAW,OAALtG,QAAK,IAALA,OAAK,EAALA,EAAOqH,YAAW,EAAM,EACvCC,KAAK,SACLF,MAAM,0KAAyKxB,UAE/KD,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,UAAUG,KAAK,eAAc3B,UACpCD,EAAAA,EAAAA,KAAA,QACI,YAAU,UACV6B,EAAE,qMACF,YAAU,iBAItB7B,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,2BAA0BxB,SAAC,6BAKtCD,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iCAAgCxB,UACvCmB,EAAAA,EAAAA,MAAA,QAAMD,UAAU,cAAalB,SAAA,CAAC,yCAAqCD,EAAAA,EAAAA,KAAA,SAAM,6BAI7EA,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,iCAAgCxB,UACvCD,EAAAA,EAAAA,KAAA,QAAMmB,UAAU,2BAA0BlB,SAAEzD,OAEhDwD,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,gDAA+CxB,UAEtDmB,EAAAA,EAAAA,MAAA,QAAM5D,SAAUH,EAAOyE,aAAcC,SApOhD,SAACC,GAClB,IAAIC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAGT,SAARF,GACA5E,EAAO+E,cAAc,YAAa,IAC7B,OAAL/H,QAAK,IAALA,GAAAA,EAAO8D,aAAa,MAEpBd,EAAO+E,cAAc,QAAS,IACzB,OAAL/H,QAAK,IAALA,GAAAA,EAAO+D,SAAS,KAMV,SAAR6D,GAAmB5E,EAAO+E,cAAc,QAASD,GACzC,aAARF,GAAuB5E,EAAO+E,cAAc,YAAaD,GAE9C,SAARF,GAAoBE,EAAM7D,QAAU,IAAgB,aAAR2D,GAAwBE,EAAM7D,QAAU,GACrFrD,GAAmB,GAGnBA,GAAmB,EAE3B,EA2M4FgF,SAAA,EACxDmB,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACID,EAAAA,EAAAA,KAAA,SAAOmB,UAAS,oFAAsFlB,SAAC,SACvGD,EAAAA,EAAAA,KAAA,SAAAqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAOV,KAAK,QAAYtE,EAAOiF,cAAc,UAAQ,IAAEnB,UAAU,mTAGrEnB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,qCAAoClB,SAAC,QAEpDmB,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACID,EAAAA,EAAAA,KAAA,SAAOmB,UAAS,oFAAsFlB,SAAC,iBACvGD,EAAAA,EAAAA,KAAA,SAAAqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAOV,KAAK,QAAYtE,EAAOiF,cAAc,cAAY,IAAEnB,UAAU,mTAGzEnB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,qBAAoBlB,SAAE7E,KACrCgG,EAAAA,EAAAA,MAAA,OAAKK,MAAM,qBAAoBxB,SAAA,CAE1BjF,IAAmBgF,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,SAAShB,QAnG3D,WAAO,IAAD4B,EAErBC,EAE0B,QAA9BD,EAAAE,OAAOC,QAAc,OAANrF,QAAM,IAANA,OAAM,EAANA,EAAQI,eAAO,IAAA8E,GAA9BA,EAAgCI,KAAI,SAAAC,EAAeC,GAAW,IAADC,GAAArI,EAAAA,EAAAA,GAAAmI,EAAA,GAAvBG,EAAGD,EAAA,GAAEX,EAAKW,EAAA,GAC/B,IAATX,IACAK,EAAO,CACHQ,WAAYD,EACZE,UAAWd,EACXe,UAAU,EACVC,KAAM,EACNC,QAAS,KAEbxG,EAAcmG,GAEtB,IAEAlI,GAAa,GAEb6C,QAAQC,IAAI,oBAAqB6E,GACjChE,EAAAA,EAAAA,KAAWhD,EAA2BgH,GAAM/D,EAAAA,EAAAA,MACvCC,MAAK,SAAC2E,GAAS,IAADC,EAEUC,EAAAC,EAAAC,EAAAC,EAAAC,EAKdC,GANPlG,QAAQC,IAAI,mBAAoB0F,GAC1B,OAAHA,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKrE,YAAI,IAAAsE,GAATA,EAAWrE,SACVjC,EAAkB,OAAHqG,QAAG,IAAHA,GAAS,QAANE,EAAHF,EAAKrE,YAAI,IAAAuE,GAAM,QAANC,EAATD,EAAWvE,YAAI,IAAAwE,OAAZ,EAAHA,EAAiBxE,MACK,IAA9B,OAAHqE,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKrE,YAAI,IAAAyE,GAAM,QAANC,EAATD,EAAWzE,YAAI,IAAA0E,GAAM,QAANC,EAAfD,EAAiB1E,YAAI,IAAA2E,OAAlB,EAAHA,EAAuBrF,SACvBV,IAAwB,EAAM,sBAGlCA,IAAwB,EAAS,OAAHyF,QAAG,IAAHA,GAAS,QAANO,EAAHP,EAAKrE,YAAI,IAAA4E,OAAN,EAAHA,EAAWtE,QAEjD,IACCC,OAAM,SAACC,GACJ9B,QAAQC,IAAI,iCAAkC6B,EAClD,IACCqE,SAAQ,kBAAMhJ,GAAa,EAAM,GAC1C,EA+D2GsG,UAAU,iRAAgRlB,SAAErF,EAAY,cAAgB,YACzXI,IAAmBgF,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,SAASR,UAAU,oNAAmNlB,SAAC,yBAQjR,OAAXlD,QAAW,IAAXA,OAAW,EAAXA,EAAauB,QAAS,IAEnB0B,EAAAA,EAAAA,KAAA,OAAKyB,MAAM,gFAA+ExB,UAElFD,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,CAACC,SAAUhH,EAAaiH,QAAStE,gBAY/E,C","sources":["Pages/Property/CitizenAuth/PtnNoCard.js"],"sourcesContent":["import { useContext, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport { allowCharacterNumberInput, allowNumberInput, nullToNA } from '../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport CitizenApplyApiList from '../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../Components/Common/BarLoader';\r\nimport axios from 'axios';\r\nimport { contextVar } from '../../../Components/ContextVar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allowCharacterNumberForwardInput } from '../../AdvertisementModule/FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../Components/ApiList/ApiHeader';\r\nimport CommonModal from '../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../AdvertisementModule/ServerErrorCard';\r\nimport BottomErrorCard from '../../../Components/BottomErrorCard';\r\nimport ListTable from '../../../Components/Common/ListTable/ListTable';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction PtnNoCard(props) {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [isButtonEnabled, setisButtonEnabled] = useState(false)\r\n    const [inputError, setinputError] = useState('')\r\n    const { api_sendMobileOtpAttachment, api_verifyHolding, api_filterPropertyDetails } = CitizenApplyApiList()\r\n    const { notify } = useContext(contextVar)\r\n    const navigate = useNavigate()\r\n    const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n    const [errorMsg, seterrorMsg] = useState('')\r\n    const [searchType, setsearchType] = useState('')\r\n    const [holdingList, setholdingList] = useState([])\r\n\r\n    const validationSchema = yup.object({\r\n        ptnNo: yup.string(),\r\n        holdingNo: yup.string(),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            ptnNo: \"\",\r\n            holdingNo: \"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log('at submit form.....', values)\r\n            // IF NO INPUT THEN GIVE ERROR\r\n            // if (values.ptnNo.length < 14 && values.holdingNo < 15) {\r\n            //     setinputError('Please enter PTN or holding no.')\r\n            //     return\r\n            // }\r\n\r\n            // IF PTN LENGTH IS ZERO THEN SET HOLDING OR VICE VERSA\r\n            // if (values.ptnNo.length == 0) {\r\n            //     props?.setholdingNo(values.holdingNo)\r\n            // } else {\r\n            //     props?.setptnNo(values.ptnNo)\r\n            // }\r\n            // sendOtp(values)\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // CLEAR OPPOSITE INPUT FIELD\r\n        if (name == 'ptnNo') {\r\n            formik.setFieldValue('holdingNo', '')\r\n            props?.setholdingNo('')\r\n        } else {\r\n            formik.setFieldValue('ptnNo', '')\r\n            props?.setptnNo('')\r\n        }\r\n\r\n        // INPUT RESTRICTION\r\n        // { name == 'ptnNo' && formik.setFieldValue(\"ptnNo\", allowCharacterNumberForwardInput(value, formik.values.ptnNo, 17)) }\r\n        // { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberForwardInput(value, formik.values.holdingNo, 16)) }\r\n        { name == 'ptnNo' && formik.setFieldValue(\"ptnNo\", value) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", value) }\r\n\r\n        if ((name == 'ptnNo' && (value.length >= 14) || (name == 'holdingNo' && (value.length >= 14)))) {\r\n            setisButtonEnabled(true)\r\n        }\r\n        else {\r\n            setisButtonEnabled(false)\r\n        }\r\n    };\r\n\r\n    // FUNCTION WHICH SENDS OTP TO REGISTERED MOBILE NO TO ATTACH HOLDING\r\n    const sendOtp = (values) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        setisButtonEnabled(false)\r\n        // DUMMY OTP SEND MESSAGE\r\n        // notify('Otp has been send to registered mobile no.', 'success')\r\n        // props?.setptnCardStatus(false)\r\n        // props?.setotpCardStatus(true)\r\n\r\n        // return\r\n\r\n        let requestBody\r\n        if (values.ptnNo.length == 0) {\r\n            requestBody = {\r\n                holdingNo: values.holdingNo\r\n            }\r\n        } else {\r\n            requestBody = {\r\n                ptNo: values.ptnNo\r\n            }\r\n        }\r\n\r\n        console.log('before send otp for attachment...', requestBody)\r\n        // return\r\n        axios\r\n            .post(api_sendMobileOtpAttachment, requestBody, ApiHeader())\r\n            .then((response) => {\r\n                console.log('otp send for attachment response', response?.data)\r\n                if (response?.data?.status) {\r\n                    props?.setpropertyAttachedMobileNo(response?.data?.data?.mobileNo)\r\n                    props?.setptnCardStatus(false)\r\n                    props?.setotpCardStatus(true)\r\n                } else {\r\n                    activateBottomErrorCard(true, response?.data?.message)\r\n                }\r\n                setisLoading(false)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error otp send\", err)\r\n                notify('Something went wrong in attachment...', 'error')\r\n                setisLoading(false)\r\n                activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                setisButtonEnabled(true)\r\n            });\r\n    }\r\n\r\n    const activateBottomErrorCard = (state, msg) => {\r\n        seterroMessage(msg)\r\n        seterroState(state)\r\n\r\n    }\r\n\r\n    // FUNCTION WHICH SENDS OTP TO REGISTERED MOBILE NO\r\n    const funcVerifyHolding = (ptn, holding, ulb) => {\r\n\r\n        if (formik.values.holdingNo == '' && formik.values.ptn == '') {\r\n            activateBottomErrorCard(true, \"Enter holding or pt no.\")\r\n            return\r\n        }\r\n\r\n        console.log(\"attach holding => \", ptn, holding, ulb)\r\n\r\n        seterrorMsg('')\r\n        console.log('otp send...')\r\n        setisLoading(true)\r\n        setisButtonEnabled(false)\r\n\r\n        if (holding) {\r\n            props?.setholdingNo(holding)\r\n        } else {\r\n            props?.setptnNo(ptn)\r\n        }\r\n        sendOtp(formik.values)\r\n    }\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"Ward No.\",\r\n            accessor: \"ward_name\",\r\n        },\r\n        {\r\n            Header: \"Owner's Name\",\r\n            accessor: \"owner_name\",\r\n        },\r\n        {\r\n            Header: \"PT No.\",\r\n            accessor: \"pt_no\",\r\n            Cell: ({ cell }) => (<span>{nullToNA(cell.row.original.pt_no)}</span>)\r\n        },\r\n        {\r\n            Header: \"Holding No\",\r\n            accessor: \"new_holding_no\",\r\n            Cell: ({ cell }) => (<span>{nullToNA(cell.row.original.new_holding_no)}</span>)\r\n\r\n        },\r\n        {\r\n            Header: \"Mobile No\",\r\n            accessor: \"mobile_no\",\r\n            Cell: ({ cell }) => (<span>{nullToNA(cell.row.original.mobile_no)}</span>)\r\n\r\n        },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <button\r\n                    onClick={() => funcVerifyHolding(cell?.row?.original?.pt_no, cell?.row?.original?.new_holding_no, cell?.row?.original?.ulb_id)}\r\n                    className=\"bg-indigo-500 px-3 py-1 rounded-lg shadow-lg hover:shadow-xl hover:bg-indigo-700 text-white\"\r\n                >\r\n                    Attach\r\n                </button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    // Getting list of holding\r\n    const getHoldingList = () => {\r\n\r\n        let body\r\n\r\n        Object.entries(formik?.values)?.map(([key, value], index) => {\r\n            if (value != '') {\r\n                body = {\r\n                    filteredBy: key,\r\n                    parameter: value,\r\n                    isLegacy: false,\r\n                    page: 1,\r\n                    perPage: 100\r\n                }\r\n                setsearchType(key)\r\n            }\r\n        })\r\n\r\n        setisLoading(true)\r\n\r\n        console.log(\"gettting body => \", body)\r\n        axios.post(api_filterPropertyDetails, body, ApiHeader())\r\n            .then((res) => {\r\n                console.log(\"holding list => \", res)\r\n                if(res?.data?.status){\r\n                    setholdingList(res?.data?.data?.data)\r\n                    if (res?.data?.data?.data?.length == 0) {\r\n                        activateBottomErrorCard(true, \"No Data Found !!!\")\r\n                    }\r\n                } else {\r\n                    activateBottomErrorCard(true, res?.data?.message)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error getting holding list => \", err)\r\n            })\r\n            .finally(() => setisLoading(false))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading && <BarLoader />\r\n            }\r\n            {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n            {/* <Modal\r\n                isOpen={modalIsOpen}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            > */}\r\n            {/* <div class=\"w-screen h-screen\"> */}\r\n            <div class=\"w-full sm:w-full  mx-auto\">\r\n                <div class=\"container mx-auto\">\r\n                    <div class=\"mx-auto flex flex-wrap gap-4 justify-center items-center\">\r\n                        <div class=\"w-max bg-white rounded text-center shadow-xl relative py-10 px-8\">\r\n                            <div class=\"\">\r\n                                <button\r\n                                    onClick={() => props?.closeModal(false)}\r\n                                    type=\"button\"\r\n                                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                                >\r\n                                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                                        <path\r\n                                            fill-rule=\"evenodd\"\r\n                                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                            clip-rule=\"evenodd\"\r\n                                        ></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <div class=\"text-2xl font-bold px-10\">Enter Holding or PT no.\r\n                                    {/* <button onClick={() => props?.setptnCardStatus(false)} type=\"button\" class=\"float-right right-2.5 text-red-400 bg-transparent hover:bg-red-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center \" >\r\n                                                <svg class=\"w-5 h-5\" fill=\"currentColor\" ><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\r\n                                            </button> */}\r\n                                </div>\r\n                                <div class=\"flex flex-col mt-4 text-center\">\r\n                                    <span className='text-center'>Enter 14 digit PTN no, or Holding no.<br />to attach a property</span>\r\n                                    {/* <span class=\"font-bold\">+91 ******876</span> */}\r\n                                </div>\r\n\r\n                                <div class=\"flex flex-col mt-4 text-center\">\r\n                                    <span className='text-center text-red-400'>{errorMsg}</span>\r\n                                </div>\r\n                                <div class=\"flex flex-row justify-center text-center mt-5\">\r\n\r\n                                    <form onSubmit={formik.handleSubmit} onChange={handleChange} >\r\n                                        <div>\r\n                                            <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold w-full text-left`}>PTN</label>\r\n                                            <input type=\"text\"  {...formik.getFieldProps('ptnNo')} className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className='font-semibold text-indigo-500 mt-2'>Or</div>\r\n\r\n                                        <div>\r\n                                            <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold w-full text-left`}>Holding No.</label>\r\n                                            <input type=\"text\"  {...formik.getFieldProps('holdingNo')} className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className='text-red-500 mt-10'>{inputError}</div>\r\n                                        <div class=\"w-full text-center\">\r\n\r\n                                            {isButtonEnabled && <button type='button' onClick={getHoldingList} className=\"w-full  py-2.5 bg-indigo-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-indigo-700 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out\">{isLoading ? \"Fetching...\" : \"Submit\"}</button>}\r\n                                            {!isButtonEnabled && <button type='button' className=\"w-full  py-2.5 bg-gray-400 text-white font-medium text-xs leading-tight  rounded shadow-md  hover:shadow-lg  focus:shadow-lg focus:outline-none focus:ring-0  transition duration-150 ease-in-out cursor-default \">Submit</button>}\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        {holdingList?.length > 0 &&\r\n\r\n                            <div class=\"bg-white py-10 px-8 rounded text-center shadow-xl relative md:w-auto w-[97vw]\">\r\n                                {\r\n                                    <ListTable dataList={holdingList} columns={COLUMNS} />\r\n                                }\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            {/* </Modal> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PtnNoCard"],"names":["Modal","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isLoading","setisLoading","_useState5","_useState6","isButtonEnabled","setisButtonEnabled","_useState7","_useState8","inputError","_CitizenApplyApiList","CitizenApplyApiList","api_sendMobileOtpAttachment","api_filterPropertyDetails","api_verifyHolding","notify","useContext","contextVar","_useState9","useNavigate","_useState10","erroState","seterroState","_useState11","_useState12","erroMessage","seterroMessage","_useState13","_useState14","errorMsg","seterrorMsg","_useState15","_useState16","setsearchType","_useState17","_useState18","holdingList","setholdingList","validationSchema","yup","ptnNo","holdingNo","formik","useFormik","initialValues","onSubmit","values","console","log","activateBottomErrorCard","state","msg","funcVerifyHolding","ptn","holding","ulb","setholdingNo","setptnNo","requestBody","length","ptNo","axios","ApiHeader","then","response","_response$data","_response$data2","_response$data2$data","_response$data3","data","status","setpropertyAttachedMobileNo","mobileNo","setptnCardStatus","setotpCardStatus","message","catch","err","sendOtp","COLUMNS","Header","accessor","Cell","_ref","cell","_jsx","children","nullToNA","row","original","pt_no","_ref2","new_holding_no","_ref3","mobile_no","_ref4","onClick","_cell$row","_cell$row$original","_cell$row2","_cell$row2$original","_cell$row3","_cell$row3$original","ulb_id","className","_jsxs","_Fragment","BarLoader","BottomErrorCard","errorTitle","class","closeModal","type","fill","d","handleSubmit","onChange","e","name","target","value","setFieldValue","_objectSpread","getFieldProps","_Object$entries","body","Object","entries","map","_ref5","index","_ref6","key","filteredBy","parameter","isLegacy","page","perPage","res","_res$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","_res$data3$data$data","_res$data4","finally","ListTable","dataList","columns"],"sourceRoot":""}