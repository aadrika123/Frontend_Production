{"version":3,"file":"static/js/7531.257c5f8d.chunk.js","mappings":"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","sources":["Pages/Contents/CitizenSafForm/SafFormReview/TopTabs.js","Pages/DetailsFactory/DetailsFactory.js","Pages/DetailsFactory/HarvestingDetailsEntry/HarvestingDetailsEntry.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\"\r\nimport { BiRupee } from 'react-icons/bi'\r\nimport { BiRightArrowAlt } from 'react-icons/bi'\r\nimport { nullToNA } from \"../../../../Components/Common/PowerUps/PowerupFunctions\"\r\nimport { buttonActionBorder, buttonActionSolid, pageTitle } from \"../../../../Components/Common/Styles/Styles\"\r\n\r\n\r\nfunction TopTabs(props) {\r\n    const navigate = useNavigate()\r\n    const { id, btc } = useParams()\r\n    console.log('id direct at topnav...', id)\r\n    // conditons :\r\n    // # for saf application\r\n    // 1 property details\r\n    // 2 demand details\r\n    // 3 upload documents\r\n\r\n    // # for holding\r\n    // 1 property details\r\n    // 2 payment history\r\n    // 3 demand details\r\n    let properyDetailsRoute = ''\r\n    let demandDetailsRoute = ''\r\n    let paymentHistoryRoute = ''\r\n    let uplodDocRoute = ''\r\n\r\n    if (props?.type == 'application') {\r\n        properyDetailsRoute = `/propApplicationDetails/${id}`\r\n        demandDetailsRoute = `/viewDemand/${id}`\r\n        uplodDocRoute = `/safdocumentupload/${id}/${props?.btc}`\r\n    } else {\r\n        properyDetailsRoute = `/holdingPropertyDetails/${id}`\r\n        demandDetailsRoute = `/viewDemandHoldingProperty/${id}`\r\n        paymentHistoryRoute = `/holding-transactions/${id}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col-reverse gap-y-4 md:flex-row md:py-2 justify-center items-center\">\r\n                <div className=\"flex-1 flex font-bold text-md text-gray-700\">\r\n                   <span className={pageTitle} > {props?.title}</span>\r\n                    {props?.payButton && <button onClick={() => navigate(`/property-payment/${id}/${props?.type == 'holding' ? 'holding' : 'saf'}`)} type=\"button\" className=\"ml-4 font-bold px-6 py-1 bg-indigo-500 text-white  text-sm leading-tight uppercase rounded  hover:bg-indigo-700 hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out shadow-xl border border-white\">Pay Tax <span><BiRightArrowAlt className=\"inline font-bold text-xl\" /></span> </button>}\r\n                </div>\r\n                <div className=\"flex flex-wrap md:flex-nowrap justify-between gap-y-2 md:justify-right items-center\">\r\n                    <button className={`mr-4 ${props?.active == 'property' ? buttonActionSolid : buttonActionBorder}`} onClick={() => navigate(properyDetailsRoute)}>Property-Details</button>\r\n                    {/* <button className={`mr-4 ${props?.active == 'property' ? 'bg-indigo-500  text-white' : 'bg-white border border-indigo-500 text-indigo-500'} px-4 py-1 shadow-lg hover:scale-105 rounded-sm text-sm md:text-base`} onClick={() => navigate(properyDetailsRoute)}>Property-Details</button> */}\r\n\r\n                    <button className={`mr-4 ${props?.active == 'demand'? buttonActionSolid : buttonActionBorder}`} onClick={() => navigate(demandDetailsRoute)}>Demand-Details</button>\r\n\r\n                    {props?.type == 'holding' && <button className={`mr-4 ${props?.active == 'payment' ? buttonActionSolid : buttonActionBorder}`} onClick={() => navigate(paymentHistoryRoute)}>Payment-History</button>}\r\n\r\n                    {(props?.type == 'application' || btc == true || btc == 'true') && <button className={`${props?.active == 'document' ? 'bg-indigo-500  text-white' : 'bg-white border border-indigo-500 text-indigo-500'} px-4 py-1 shadow-lg hover:scale-105 rounded-sm text-sm md:text-base`} onClick={() => navigate(uplodDocRoute)}>Upload-Documents</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopTabs","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport CitizenApplyApiList from '../../Components/CitizenApplyApiList'\r\nimport building from '../../Components/Media/building.png'\r\nimport folders from '../../Components/Media/folders.png'\r\nimport TopTabs from '../Contents/CitizenSafForm/SafFormReview/TopTabs'\r\nimport BarLoader from '../../Components/Common/BarLoader'\r\nimport ApiHeader from '../../Components/ApiList/ApiHeader'\r\nimport BrandLoader from '../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../AdvertisementModule/ServerErrorCard'\r\nimport { nullToNA } from '../../Components/Common/PowerUps/PowerupFunctions'\r\nimport { buttonActionBorder, pageTitle } from '../../Components/Common/Styles/Styles'\r\n\r\n\r\nfunction DetailsFactory(props) {\r\n\r\n    // DIRECT ACCESSING ID FROM PARAM\r\n    const { id } = useParams()\r\n\r\n    const [applicationFullData, setapplicationFullData] = useState()\r\n    const [showDetails, setshowDetails] = useState(false)\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios[props?.detailRules?.api?.api_getAppicationFullDetail?.method](props?.detailRules?.api?.api_getAppicationFullDetail?.url, { applicationId: id }, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('view full details...', response?.data)\r\n                if (response?.data?.status) {\r\n                    setapplicationFullData(response?.data?.data)\r\n                } else {\r\n                    seterroState(true)\r\n                }\r\n                setisLoading(false)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (erroState) {\r\n        return (\r\n            // <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            // </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='w-full mx-auto'>\r\n                <div className=''>\r\n                    {props?.detailRules?.filters?.topButtons && <TopTabs title={`${props?.detailRules?.detailInfo?.title} - ${applicationFullData?.application_no}`} type=\"application\" id={id} safNo={applicationFullData?.saf_no} active=\"property\" />}\r\n                    {props?.detailRules?.filters?.topButtons == false &&\r\n                        <div>\r\n                            <span className={pageTitle}>\r\n                                {props?.detailRules?.detailInfo?.title}\r\n                            </span>\r\n                        </div>}\r\n                </div>\r\n\r\n                <div className='flex flex-row flex-wrap justify-center'>\r\n                    <div class=\"rounded-lg pt-4 z-50 w-full\">\r\n                        <div className=''>\r\n\r\n                            <div className=\"text-gray-700 py-6 \">\r\n                                <div className=\"grid md:grid-cols-2 text-sm bg-white shadow-lg rounded-sm py-4\">\r\n                                    {\r\n                                        applicationFullData?.fullDetailsData?.cardArray?.data?.map((data) => (\r\n                                            <div className=\"grid grid-cols-2\">\r\n                                                <div className=\"px-4 py-2 font-semibold\">{nullToNA(data?.displayString)} : </div>\r\n                                                <div className=\"px-4 py-2\">{nullToNA(data?.value)}</div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className={buttonActionBorder}\r\n                                    onClick={() => setshowDetails(!showDetails)}\r\n                                >\r\n                                    {showDetails ? 'Hide Full Details' : 'Show Full Details'}\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* basic details */}\r\n                            {\r\n                                showDetails && <>\r\n                                    {applicationFullData?.fullDetailsData?.dataArray?.map((data) => (\r\n                                        <div className=\"\">\r\n                                            <div className=\"container mx-auto mb-0 mt-1  py-1 \">\r\n                                                <div className=\"md:flex no-wrap \">\r\n                                                    <div className=\"w-full\">\r\n                                                        <div className=\"py-3 rounded-sm\">\r\n                                                            <div className=\"flex items-center pl-0 space-x-2 font-semibold text-gray-900 leading-8 mb-2\">\r\n                                                                <div className=\"tracking-wide flex-1\"><img src={folders} alt=\"pin\" className='w-5 inline' /> {data?.headerTitle}</div>\r\n                                                            </div>\r\n                                                            <div className='shadow-lg rounded-lg  py-6 bg-white'>\r\n                                                                <div className=\"grid grid-cols-10 space-y-2  pl-4 \">\r\n                                                                    {data?.data?.map((data) => (\r\n                                                                        <div className='col-span-2 text-xs'>\r\n                                                                            <div className='font-bold text-sm'>{nullToNA(data?.value) }</div>\r\n                                                                            <div className='text-gray-500'>{nullToNA(data?.displayString)}</div>\r\n                                                                        </div>\r\n                                                                    ))}\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {\r\n                                        applicationFullData?.fullDetailsData?.tableArray?.map((data) => (\r\n                                            <div className=\"\" >\r\n                                                <div className=\"container mx-auto mb-0 mt-1 py-1 \">\r\n                                                    <div className=\"md:flex no-wrap\">\r\n                                                        <div className=\"w-full\">\r\n                                                            <div className=\"0 py-3 rounded-sm\">\r\n                                                                <div className=\"flex items-center pl-0 space-x-2 font-semibold text-gray-900 leading-8 mb-2\">\r\n                                                                    <span className=\"tracking-wide\"><img src={building} alt=\"building image\" className='inline w-4' /> {data?.headerTitle}</span>\r\n                                                                </div>\r\n\r\n                                                                <>\r\n                                                                    <table className='min-w-full leading-normal mt-2 bg-sky-5 shadow-lg rounded-lg'>\r\n                                                                        <thead className='font-bold text-left text-sm bg-white text-gray-600'>\r\n                                                                            <tr>\r\n                                                                                <th className=\"px-2 py-3 border-b border-gray-200  text-xs capitalize text-left\">#</th>\r\n                                                                                {data?.tableHead?.map((head) => (\r\n                                                                                    <th className=\"px-2 py-3 border-b border-gray-200  text-xs capitalize text-left\">{head}</th>\r\n                                                                                ))}\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody className=\"text-sm\">\r\n\r\n                                                                            <>\r\n                                                                                {data?.tableData?.map((dataIn, index) => (\r\n                                                                                    <tr className=\"bg-white  border-b border-gray-200\">\r\n                                                                                        <td className=\"px-2 py-2 text-sm text-left\">{index + 1}</td>\r\n                                                                                        {dataIn?.map((dataIn2) => (\r\n                                                                                            <td className=\"px-2 py-2 text-sm text-left\">{dataIn2 || 'N/A'}</td>\r\n                                                                                        ))}\r\n                                                                                    </tr>\r\n                                                                                ))}\r\n                                                                            </>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailsFactory","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 18 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Status - closed(open for responsive layout)\r\n// Component  - HarvestingDetailsEntry\r\n// DESCRIPTION - This component is to show rainwater harvesting application details\r\n\r\nimport React from 'react'\r\nimport CitizenApplyApiList from '../../../Components/CitizenApplyApiList'\r\nimport CustomErrorBoundary from '../../../Components/Common/CustomErrorBoundary'\r\nimport useSetTitle from '../../../Components/GlobalData/UseSetTitle'\r\nimport DetailsFactory from '../DetailsFactory'\r\n\r\nfunction HarvestingDetailsEntry() {\r\n    const { get_HarvestingDetailsById } = CitizenApplyApiList()\r\n    useSetTitle('Rainwater Harvesting Details')\r\n\r\n    const detailRules = {\r\n        api: {\r\n            // 1 - API TO FETCH TRANSACTION HISTORY LIST\r\n            api_getAppicationFullDetail: { method: 'post', url: get_HarvestingDetailsById },\r\n        },\r\n        detailInfo: {\r\n            title: 'RainWater Harvesting Details',\r\n        },\r\n        filters: {\r\n            // PASS true IF YOU WANT TO SEARCH TRANSACTIONS VIA APPLICATION NO ALSO\r\n            topButtons: false\r\n        }\r\n    }\r\n    return (\r\n        <CustomErrorBoundary errorMsg=\"Bug in rainwater harvesting\" >\r\n            <DetailsFactory detailRules={detailRules} />\r\n        </CustomErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default HarvestingDetailsEntry"],"names":["props","navigate","useNavigate","_useParams","useParams","id","btc","console","log","properyDetailsRoute","demandDetailsRoute","paymentHistoryRoute","uplodDocRoute","type","concat","_jsx","_Fragment","children","_jsxs","className","pageTitle","title","payButton","onClick","BiRightArrowAlt","active","buttonActionSolid","buttonActionBorder","_props$detailRules3","_props$detailRules3$f","_props$detailRules4","_props$detailRules4$d","_props$detailRules5","_props$detailRules5$f","_props$detailRules6","_props$detailRules6$d","_applicationFullData$","_applicationFullData$2","_applicationFullData$3","_applicationFullData$4","_applicationFullData$5","_applicationFullData$6","_applicationFullData$7","_useState","useState","_useState2","_slicedToArray","applicationFullData","setapplicationFullData","_useState3","_useState4","showDetails","setshowDetails","_useState5","_useState6","isLoading","setisLoading","_useState7","_useState8","erroState","seterroState","useEffect","_props$detailRules","_props$detailRules$ap","_props$detailRules$ap2","_props$detailRules2","_props$detailRules2$a","_props$detailRules2$a2","axios","detailRules","api","api_getAppicationFullDetail","method","url","applicationId","ApiHeader","then","response","_response$data","_response$data2","data","status","catch","error","getApplicationDetail","BrandLoader","ServerErrorCard","desc","buttonText","buttonUrl","filters","topButtons","TopTabs","detailInfo","application_no","safNo","saf_no","class","fullDetailsData","cardArray","map","nullToNA","displayString","value","dataArray","_data$data","src","folders","alt","headerTitle","tableArray","_data$tableHead","_data$tableData","building","tableHead","head","tableData","dataIn","index","dataIn2","get_HarvestingDetailsById","CitizenApplyApiList","useSetTitle","CustomErrorBoundary","errorMsg","DetailsFactory"],"sourceRoot":""}