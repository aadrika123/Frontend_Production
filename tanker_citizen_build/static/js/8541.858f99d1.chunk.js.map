{"version":3,"file":"static/js/8541.858f99d1.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingApprovedList.jsx"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\nimport AxiosInterceptors from \"../../../../../Components/GlobalData/AxiosInterceptors\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ViewAllHoardingApprovedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingApprovedApplicationList, api_blacklistedApplication } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                    {/* <button\r\n                        onClick={() => handleBlacklisted(cell.row.values.id)}\r\n                        className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\nhover:text-white text-white\"\r\n                    >\r\n                        Blacklisted\r\n                    </button> */}\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        AxiosInterceptors.post(api_getHoardingApprovedApplicationList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"res\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    const handleBlacklisted = (applicationId) => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n        console.log(\"request body in renew...12\", applicationId)\r\n        AxiosInterceptors.post(`${api_blacklistedApplication}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('archived response', response.data)\r\n                notify(\" success\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n                <div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING APPROVED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {/* {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewAllHoardingApprovedList;"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_AdvertisementApiList","AdvertisementApiList","api_getHoardingApprovedApplicationList","_useState5","api_blacklistedApplication","_useState6","applicationDetail","setapplicationDetail","_useState7","_useState8","tableStatus","settableStatus","_useState9","_useState10","applicationType","setapplicationType","_useState11","_useState12","applicationNo","setapplicationNo","_useState13","_useState14","setshow","_useState15","_useState16","isLoading","setisLoading","_useState17","_useState18","erroState","seterroState","_useState19","_useState20","modalIsOpen","setIsOpen","closeModal","_useState21","_useState22","COLUMNS","Header","Cell","_ref","row","_jsx","className","children","index","accessor","_ref2","cell","_Fragment","onClick","modalAction","values","id","applicationId","console","log","useEffect","AxiosInterceptors","ApiHeaderAdvrt","then","res","data","status","catch","err","BrandLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","_jsxs","ToastContainer","position","autoClose","src","ListTableAdvert","assessmentType","columns","dataList","isOpen","onAfterOpen","onRequestClose","style","contentLabel","class","HoardingApplicationFullDetail","showLoader","val"],"sourceRoot":""}