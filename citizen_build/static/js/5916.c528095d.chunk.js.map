{"version":3,"file":"static/js/5916.c528095d.chunk.js","mappings":"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","sources":["Components/GlobalData/UseSetTitle.js","Pages/AdvertisementModule/Advertisement/AdvrtSuccessScreen.jsx","Pages/AdvertisementModule/Advertisement/DocumentUploadSteps.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocTable.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/AdvtCategoryScreen.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementForm1.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/ReviewSelfAdvertForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementIndexForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen.jsx","Pages/AdvertisementModule/AdvtUlbSelectComponent.jsx","Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport { contextVar } from '../ContextVar'\r\n\r\nfunction useSetTitle({title, status}) {\r\n\r\n    const { settitleText, settitleStatus } = React.useContext(contextVar)\r\n    useEffect(() => {\r\n        settitleText(title)\r\n        settitleStatus(status)\r\n    }, [])\r\n\r\n\r\n}\r\n\r\nexport default useSetTitle","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction AdvrtSuccessScreen(props) {\r\n    const navigate = useNavigate\r\n\r\n    console.log(\"data in response screen\", props?.responseScreenData)\r\n    return (\r\n        <div>\r\n            <div className='grid grid-cols-1 md:grid-cols-6 lg:grid-cols-6 mt-6'>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n                <div className='col-span-2 bg-white shadow-lg mt-4'>\r\n                    <div className='p-2'>\r\n                        <img src='https://img.freepik.com/free-vector/mail-sent-concept-illustration_114360-96.jpg?w=740&t=st=1672636866~exp=1672637466~hmac=5f164187014737ee6e91346184ade8b9590a40d01e247f97d5dba6f313d4c474' className='h-64 mx-auto' />\r\n                    </div>\r\n                    <div className='ml-44 -mt-16'>\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/5610/5610944.png' className='h-20 -mt-4 mx-auto opacity-75' />\r\n                        {/* <img src='https://cdn-icons-png.flaticon.com/512/753/753344.png' className='h-12 mx-auto opacity-75' /> */}\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-3xl p-8 text-gray-600'>Application Submitted Successfully</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-xl text-gray-600 font-bold uppercase'> Application No. :- {props?.responseScreenData?.ApplicationNo}</h1>\r\n                    </div>\r\n                    <div className='text-center p-8'>\r\n                        {/* <Link to='/advertisement-dashboard'>\r\n                            <button class=\"w-32 text-xs p-3 mt-10 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-indigo-500 rounded-md hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\">\r\n                                Ok\r\n                            </button>\r\n                        </Link> */}\r\n                    </div>\r\n                </div>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvrtSuccessScreen","import React from 'react'\r\n\r\nfunction DocumentUploadSteps() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-xl'>How To Uplaod Document ?</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 1 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >Choose a file which you want to uplaod </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 2 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To upload image click on upload button</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 3 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on preview to view uploaded image </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 4 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on Save & Next button to proceed with the application</span>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div> */}\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/image-upload-concept-illustration_114360-798.jpg?w=826&t=st=1675677630~exp=1675678230~hmac=3ce8cef91d846d7436a3f83357381af891a8e1e3c51eeef330e620448f1420c8' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentUploadSteps","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport { checkSizeValidation } from '../../../../Components/Common/PowerUps/PowerupFunctions';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementDocTable(props) {\r\n\r\n    let labelStyle = \" text-xs  text-gray-600 font-bold\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState('')\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState('')\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            console.log(\"props?.mykey\", props?.mykey);\r\n            setimgPath(values)\r\n            props?.setinitialIndexFun();\r\n            props.collectAllDataFun(props?.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    console.log(\"initial index\", props?.initialIndex)\r\n    const handleDoc = (e) => {\r\n\r\n    }\r\n\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n        if (!checkSizeValidation(file)) {\r\n            return;\r\n        }\r\n        setimageFile(file)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n    console.log(\"file size 1\", imageFile?.name)\r\n\r\n    const fileSize = (imageFile?.size) / (1024 * 1024)\r\n    console.log(\"=====final file  size =====\", fileSize)\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    console.log(\"mykey\", props.mykey)\r\n    console.log(\"image path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {((imageFile?.name?.split('.').pop() == \"pdf\" && fileSize <= 10) || (imageFile?.name?.split('.').pop() == \"jpg\" && fileSize <= 1) || (imageFile?.name?.split('.').pop() == \"jpeg\" && fileSize <= 1) || (imageFile?.name?.split('.').pop() == \"png\" && fileSize <= 1)) &&\r\n                        <div className='px-1'>\r\n                            <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                                <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                    {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                        < button type='submit' id=\"upload\" className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0'>\r\n                                            <span className='text-xs'>upload</span>\r\n                                        </button> :\r\n                                        <>\r\n                                            <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                            < button type='submit' id=\"reUpload\" className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                                <span className='text-xs' >re-upload</span>\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocTable","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementDocForm\r\n//    DESCRIPTION - SelfAdvertisementDocForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\nimport SelfAdvertisementDocTable from './SelfAdvertisementDocTable';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport AxiosInterceptors from '../../../../Components/GlobalData/AxiosInterceptors';\r\n\r\n\r\nfunction SelfAdvertisementDocForm(props) {\r\n\r\n    const { setFormIndex, collectFormDataFun, type } = props?.values\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n    const [initialIndex, setinitialIndex] = useState(0);\r\n\r\n\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const setinitialIndexFun = () => {\r\n        setinitialIndex((prev) => prev + 1);\r\n       \r\n    }\r\n\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"===key===\", key);\r\n        console.log(\"===formdata===\", formData);\r\n\r\n      \r\n\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            let tempCollectDoc = [...collectDoc]\r\n            // let tempCollectDoc = [...formData]\r\n            tempCollectDoc[key] = formData\r\n            setcollectDoc(tempCollectDoc)\r\n            // collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n\r\n    console.log(\"all data doc inside document view\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        if (docList?.SELF_ADVERT?.length == collectDoc?.length) {\r\n            collectFormDataFun('selfAdvertisementDoc', collectDoc)\r\n            setFormIndex(3)\r\n        }\r\n        else {\r\n            notify(\"Upload All Document\", \"error\")\r\n        }\r\n    }\r\n\r\n    console.log(\"collect doc\", collectDoc.length)\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        AxiosInterceptors.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    console.log(\"document length\", docList?.SELF_ADVERT)\r\n\r\n    return (\r\n        <>\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <h1 className='text-center text-red-500'>Total number of document to be uploaded - <span className='font-semibold text-lg'>{docList?.SELF_ADVERT?.length}</span></h1>\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n\r\n                                {docList?.SELF_ADVERT?.map((items, index) => (\r\n\r\n                                    <div className={`${((index == initialIndex || index <= initialIndex) ? '' : 'hidden')}`}>\r\n                                        {/* index:{index} initialIndex:{initialIndex} */}\r\n                                        <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} setinitialIndexFun={setinitialIndexFun} initialIndex={initialIndex} />\r\n                                    </div>\r\n                                ))}\r\n                                {renewDocList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <div className={`${(index == initialIndex || index <= initialIndex) ? '' : 'hidden'}`}>\r\n                                        <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} setinitialIndexFun={setinitialIndexFun} />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>Back</button>\r\n                            </div>\r\n                            {(docList?.SELF_ADVERT?.length == collectDoc.length) &&\r\n                                <div className='col-span-6'>\r\n                                    <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocForm","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport axios from 'axios'\r\nimport AxiosInterceptors from '../../../../Components/GlobalData/AxiosInterceptors'\r\n\r\nfunction AdvtCategoryScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n\r\n    const { api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n\r\n    ///////////{***get advertisement category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        AxiosInterceptors.post(`${api_getAdvertisementCategory}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                setadvtCategory(response.data.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"advertisement category screen\", advtCategory)\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-12 '>\r\n                <div className='h-[42rem] overflow-y-auto'>\r\n                    <div className='flex flex-row'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                        </svg>\r\n                        <h1 className='ml-2 text-lg'>Typology Category</h1>\r\n                    </div>\r\n                    {advtCategory?.map((data) => (\r\n                        <div className={`${divStyle}flex mt-3 `}>\r\n                            <span className={`${tittleStyle} flex-1 `}>{data?.type}</span>\r\n\r\n                            <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdvtCategoryScreen","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementForm1\r\n//    DESCRIPTION - SelfAdvertisementForm1 Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from './SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport AdvtCategoryScreen from './AdvtCategoryScreen';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport useSetTitle from '../../../../Components/GlobalData/UseSetTitle';\r\nimport AdvtUlbSelectComponent from '../../AdvtUlbSelectComponent';\r\nimport AxiosInterceptors from '../../../../Components/GlobalData/AxiosInterceptors';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementForm1(props) {\r\n\r\n    const { setFormIndex, collectFormDataFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails, api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n    const [ulbId, setulbId] = useState()\r\n    const [ulbName, setulbName] = useState();\r\n\r\n    // const [open, setopen] = useState(false)\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600 font-bold\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        // ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.number().required('Enter mobile no.'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        entityName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        installationLocation: yup.string().required('This field is Required'),\r\n        brandDisplayName: yup.string().required('This field is Required'),\r\n        // holdingNo: yup.string().required('This field is Required'),\r\n        // tradeLicenseNo: yup.string().required('This field is Required'),\r\n        gstNo: yup.string().required('This field is Required'),\r\n        displayArea: yup.string().required('Enter Number'),\r\n        displayType: yup.string().required('This field is Required'),\r\n    })\r\n\r\n    const initialValues = {\r\n        ulb: ulbId,\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        aadharNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        installationLocation: '',\r\n        brandDisplayName: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        gstNo: '',\r\n        displayArea: '',\r\n        displayType: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        advrtCategory: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            console.log(\"self Advertisement values \", values)\r\n            collectFormDataFun('selfAdvertisement', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n    useSetTitle('', false)\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // { name == 'ulb' && handleUlb(value) }\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one')\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        else\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n        { name == 'displayArea' && formik.setFieldValue(\"displayArea\", allowFloatInput(value, formik.values.displayArea, 4)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n\r\n\r\n    console.log(\"storeUlbValue\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        AxiosInterceptors.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    useEffect(() => {\r\n        getWardListFun()\r\n    }, [ulbId])\r\n    const getWardListFun = () => {\r\n        const requestBody = {\r\n            ulbId: ulbId,\r\n            // ulbId: 2,\r\n        }\r\n        console.log(\"ulb id in request body\", requestBody)\r\n        AxiosInterceptors.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list..16', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ward list', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        AxiosInterceptors.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n                // setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** ADVERTISEMENT CATEGORY***}/////////\r\n    useEffect(() => {\r\n        getCategoryList()\r\n    }, [])\r\n    const getCategoryList = () => {\r\n        AxiosInterceptors.post(`${api_getAdvertisementCategory}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('advertisement category', response.data.data)\r\n                setadvtCategory(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residence_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_no)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('installationLocation', existingApplicationDetails?.installation_location)\r\n        formik.setFieldValue('brandDisplayName', existingApplicationDetails?.brand_display_name)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('displayArea', existingApplicationDetails?.display_area)\r\n        formik.setFieldValue('displayType', existingApplicationDetails?.display_type)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('advrtCategory', existingApplicationDetails?.advt_category)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    const setUlbValues = (ulbId, ulbName) => {\r\n        setulbId(ulbId);\r\n        setulbName(ulbName);\r\n    }\r\n\r\n    // console.log(\"existing application details\", existingApplicationDetails)\r\n    // console.log(\"advertisement category..2\", advtCategory)\r\n    // console.log(\" master data...\", masterData)\r\n    // console.log(\" License full data\", liceneData?.licenseDataById)\r\n    // console.log(\" trade License details\", liceneDetails)\r\n\r\n    console.log(\"selectedOption\", ulbId, \"   \", ulbName)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute top-2 ml-2 w-full pb-12'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n\r\n                        {/* {setFormIndex != 1 && */}\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12 '>\r\n                                    {ulbId == undefined ?\r\n                                        <>\r\n                                            <AdvtUlbSelectComponent open={true} setUlbValues={setUlbValues} />\r\n                                        </>\r\n                                        :\r\n                                        <div className='flex flex-row mt-4 space-x-2  '>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg>\r\n\r\n                                            <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase  px-2 text-md d md:text-xl text-violet-500'>{ulbName}</span> to proceed with the application.</h1>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* } */}\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value={existingApplicationDetails?.ward_id}>{existingApplicationDetails?.ward_name}</option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value={existingApplicationDetails?.permanent_ward_id}>{existingApplicationDetails?.permanent_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled >\r\n                                                                <option value={existingApplicationDetails?.entity_ward_id}>{existingApplicationDetails?.entity_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {ulbId != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Display Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude  </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16 '>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementForm1","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - ReviewSelfAdvertForm\r\n//    DESCRIPTION - ReviewSelfAdvertForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewSelfAdvertForm(props) {\r\n\r\n    const { setFormIndex } = props?.values\r\n    let labelStyle = \"mt-6 -ml-7 text-md text-gray-600  font-bold\"\r\n    let inputStyle = \"mt-6 -ml-7 text-sm text-gray-600\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form document...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 pb-24'>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Application Details</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.license_year_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.applicantName  || props?.reviewIdNameData?.selfAdvertisement?.applicant)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.fatherName  || props?.reviewIdNameData?.selfAdvertisement?.father)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.email  || props?.reviewIdNameData?.selfAdvertisement?.email)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceAddress || props?.reviewIdNameData?.selfAdvertisement?.residence_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceWardNo || props?.reviewIdNameData?.selfAdvertisement?.ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentAddress || props?.reviewIdNameData?.selfAdvertisement?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentWardNo || props?.reviewIdNameData?.selfAdvertisement?.permanent_ward_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.mobileNo || props?.reviewIdNameData?.selfAdvertisement?.mobile_no)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.aadharNo || props?.reviewIdNameData?.selfAdvertisement?.aadhar_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityName || props?.reviewIdNameData?.selfAdvertisement?.entity_name)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityAddress || props?.reviewIdNameData?.selfAdvertisement?.entity_address)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityWardNo || props?.reviewIdNameData?.selfAdvertisement?.entity_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Installation Location</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.installationLocation || props?.reviewIdNameData?.selfAdvertisement?.installation_location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Brand Display Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.brandDisplayName || props?.reviewIdNameData?.selfAdvertisement?.brand_display_name)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.holdingNo || props?.reviewIdNameData?.selfAdvertisement?.holding_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.tradeLicenseNo || props?.reviewIdNameData?.selfAdvertisement?.trade_license_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>GST No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.gstNo || props?.reviewIdNameData?.selfAdvertisement?.gst_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Display Area</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayArea || props?.reviewIdNameData?.selfAdvertisement?.display_area)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Display Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayType || props?.reviewIdNameData?.selfAdvertisement?.display_type)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Advertisement Category</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.advrtCategory || props?.reviewIdNameData?.selfAdvertisement?.advt_category_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.longitude || props?.reviewIdNameData?.selfAdvertisement?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.latitude || props?.reviewIdNameData?.selfAdvertisement?.latitude)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Documents Uploaded</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.selfAdvertisementDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} </p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>Back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewSelfAdvertForm","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementIndexForm\r\n//    DESCRIPTION - SelfAdvertisementIndexForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport SelfAdvertisementDocForm from './SelfAdvertisementDocForm'\r\nimport SelfAdvertisementForm1 from './SelfAdvertisementForm1'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport ReviewSelfAdvertForm from './ReviewSelfAdvertForm'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\nimport AxiosInterceptors from '../../../../Components/GlobalData/AxiosInterceptors';\r\n\r\nfunction SelfAdvertisementIndexForm() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { api_postSelfAdvertApplication, api_renewSelfAdvt_license, api_getApplicationDetailsToRenew } = AdvertisementApiList();\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'selfAdvertisement') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"review data...\", reviewData)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitSelfAdvertForm()\r\n    }\r\n\r\n    const submitSelfAdvertForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postSelfAdvertApplication  //new apply\r\n            requestBody = {\r\n                ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                // ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewSelfAdvt_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                // ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        console.log('request body...', requestBody)\r\n\r\n        AxiosInterceptors.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n                if (error.response.status === 401) return navigate('/logout')\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        AxiosInterceptors.post(`${api_getApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n                if (error.response.status === 401) return navigate('/logout')\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip  p-4 mt-3 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Self Advertisement</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle '>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementForm1 values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewSelfAdvertForm values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementIndexForm","import { Info } from '@mui/icons-material'\r\nimport React from 'react'\r\n\r\nfunction SelfAdvrtInformationScreen() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-12'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your address where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div>\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto'/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvrtInformationScreen","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { contextVar } from '../../Components/ContextVar';\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport CitizenApplyApiList from '../../Components/CitizenApplyApiList';\r\nimport Select from 'react-select';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction AdvtUlbSelectComponent(props) {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(props?.open);\r\n    const [ulbList, setUlbList] = useState();\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n\r\n    const { api_getAllUlb } = CitizenApplyApiList();\r\n    // const { notify } = useContext(contextVar)\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (props.openUlbModal == 0) setIsOpen(true);\r\n    }, [props.openUlbModal]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(api_getAllUlb)\r\n            .then(\r\n                (res) => (console.log(\"ULB LIsts...\", res), setUlbList(res.data.data))\r\n            )\r\n            .catch((err) => console.log(\"Error while fetching ulblist\", err));\r\n    }, []);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        navigate(-1);\r\n    }\r\n\r\n    const handleUlb = () => {\r\n        if (!selectedOption.id) {\r\n            return setSelectedOption(null);\r\n        } else {\r\n            // setValidULB(true);\r\n            // notify(\"ULB Selected\", \"success\")\r\n            console.log(\"Start Button Clicked..\");\r\n            // props.nextScreen();\r\n            // props.setSelectedUlb(selectedOption);\r\n            props?.setUlbValues(selectedOption.id, selectedOption.ulb_name)\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    // console.log(\"selectedOption\", selectedOption);\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"container\">\r\n                    <div class=\"relative w-full h-full max-w-3xl md:h-auto border-indigo-600 shadow-indigo-200 shadow-sm rounded\">\r\n                        <div class=\"relative bg-white rounded-lg shadow \">\r\n                            <div class=\"flex items-start justify-between p-4 border-b rounded-t darks:border-gray-600\">\r\n                                <h3 class=\"text-base md:text-xl font-semibold text-gray-900 darks:text-white\">Select Ulb </h3>\r\n                                <button\r\n                                    onClick={closeModal}\r\n                                    class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center darks:hover:bg-gray-600 darks:hover:text-white\"\r\n                                    data-modal-hide=\"defaultModal\"\r\n                                >\r\n                                    <svg\r\n                                        aria-hidden=\"true\"\r\n                                        class=\"w-5 h-5\"\r\n                                        fill=\"currentColor\"\r\n                                        viewBox=\"0 0 20 20\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path\r\n                                            fill-rule=\"evenodd\"\r\n                                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                            clip-rule=\"evenodd\"\r\n                                        ></path>\r\n                                    </svg>\r\n                                    <span class=\"sr-only\">Close modal</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"p-6 space-y-6\">\r\n                                <p class=\"md:text-base leading-relaxed text-gray-500 text-xs\">\r\n                                    Before applying for a advertisement, you may need to select ulb in which you want to register for advertisement.\r\n                                   \r\n                                </p>\r\n                                {/* <p class=\"md:text-base leading-relaxed text-gray-500 text-xs\">\r\n                                    Typically, you may need to provide information about the\r\n                                    property where you want the water connection, including the\r\n                                    address, the type of property (residential or commercial), and\r\n                                    the number of occupants or users. You may also need to provide\r\n                                    proof of ownership or tenancy, such as a copy of your lease or\r\n                                    property deed.\r\n                                </p> */}\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"block md:flex justify-center space-x-4\">\r\n                                <div className=\"font-semibold text-center\">Please Select Your ULB</div>\r\n\r\n                                <div className=\"md:w-1/2 w-auto mr-5\">\r\n                                    <Select\r\n                                        defaultValue={selectedOption}\r\n                                        onChange={setSelectedOption}\r\n                                        getOptionLabel={option => option.ulb_name}\r\n                                        getOptionValue={option => option.id}\r\n                                        options={ulbList}\r\n                                        isClearable={true}\r\n                                        isLoading={!ulbList}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-center\">\r\n                                {selectedOption && selectedOption?.id != \"\" ? (\r\n                                    <p>\r\n                                        You are applying for\r\n                                        <span className=\"text-indigo-500 mx-2\">\r\n                                            {selectedOption?.ulb_name}\r\n                                        </span>{\" \"}\r\n                                    </p>\r\n                                ) : (\r\n                                    <p className=\"text-red-500 py-2 mx-2\"> Please Select Your ULB</p>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div class=\"flex flex-row-reverse items-center p-6 border-t border-gray-200 rounded-b\">\r\n                                <button\r\n                                    onClick={handleUlb}\r\n                                    disabled={!selectedOption?.id}\r\n                                    class=\"mx-2 text-white  bg-indigo-500 hover:bg-indigo-600 focus:ring-4 focus:outline-none focus:ring-indigo-300 font-medium rounded leading-5 text-sm px-6 py-1 text-center darks:bg-indigo-600 darks:hover:bg-indigo-700 darks:focus:ring-indigo-800\"\r\n                                >\r\n                                    START\r\n                                </button>\r\n                                <button\r\n                                    onClick={closeModal}\r\n                                    class=\"mx-2 text-red-400 hover:text-white  hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-red-300 rounded leading-5 border border-red-200 text-sm font-medium px-4 py-1 focus:z-10 \"\r\n                                >\r\n                                    CANCEL\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AdvtUlbSelectComponent","\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n"],"names":["_ref","title","status","_React$useContext","React","contextVar","settitleText","settitleStatus","useEffect","props","_props$responseScreen","useNavigate","console","log","responseScreenData","_jsx","children","_jsxs","className","src","ApplicationNo","tittleStyle","labelStyle","divStyle","_Fragment","xmlns","fill","viewBox","stroke","class","d","concat","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","_props$data","_props$data2","_props$data3","_imgPath$image","_imgPath$image2","_imgPath$image3","_imgPath$image4","_imgPath$image4$name","_imgPath$image5","_imgPath$image5$name","_imgPath$image6","_imgPath$image6$name","_imgPath$image7","_imgPath$image7$name","_imgPath$image8","_imgPath$image8$name","_imgPath$image9","_imgPath$image9$name","_imgPath$image10","_imgPath$image10$name","_imgPath$image11","_imgPath$image11$name","_imageFile$name","_imageFile$name2","_imageFile$name3","_imageFile$name4","_useState","useState","_useState2","_slicedToArray","imgPath","setimgPath","_useState3","_useState4","DocUrl","setDocUrl","_useState5","_useState6","modalIsOpen","setIsOpen","_useState7","_useState8","imageFile","setimageFile","modalAction","url","initialValues","image","docCode","data","ownerDtlId","formik","useFormik","onSubmit","values","mykey","setinitialIndexFun","collectAllDataFun","initialIndex","name","fileSize","size","handleFile","file","setFieldValue","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","onChange","e","target","value","files","checkSizeValidation","encType","document_name","docType","undefined","alt","split","pop","onClick","Tooltip","type","accept","handleChange","id","isOpen","onAfterOpen","onRequestClose","style","contentLabel","frameborder","_docList$SELF_ADVERT2","_docList$SELF_ADVERT3","_renewDocList$SELF_AD","_docList$SELF_ADVERT4","_props$values","setFormIndex","collectFormDataFun","api_getSelfAdvertDocList","AdvertisementApiList","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","setinitialIndex","prev","collectAllData","key","formData","tempCollectDoc","_toConsumableArray","length","getDocumentList","AxiosInterceptors","deviceId","ApiHeaderAdvrt","then","response","catch","error","SELF_ADVERT","map","items","index","SelfAdvertisementDocTable","_docList$SELF_ADVERT","toastData","toast","notify","DocumentUploadSteps","api_getAdvertisementCategory","advtCategory","setadvtCategory","getHoardingCategoryList","descriptions","_masterData$paramCate","_masterData$paramCate2","_masterData$paramCate3","_masterData$paramCate4","_masterData$paramCate5","_masterData$paramCate6","_masterData$paramCate7","_masterData$paramCate8","_masterData$paramCate9","_masterData$paramCate10","_masterData$paramCate11","_masterData$paramCate12","existingApplicationDetails","_AdvertisementApiList","api_getAdvertMasterData","api_getUlbList","api_getWardList","api_getTradeLicenseDetails","_CitizenApplyApiList","CitizenApplyApiList","api_getAllUlb","api_wardByUlb","masterData","setmasterData","ulbList","setulbList","wardList","setwardList","reviewIdName","setreviewIdName","_useState9","_useState10","storeUlbValue","setstoreUlbValue","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","tabIndex","settabIndex","_useState21","_useState22","isLoading","setisLoading","_useState23","_useState24","erroState","seterroState","_useState25","_useState26","ulbId","setulbId","_useState27","_useState28","ulbName","setulbName","_useState29","_useState30","inputStyle","validationSchema","yup","licenseYear","required","applicantName","max","fatherName","email","residenceAddress","residenceWardNo","permanentAddress","permanentWardNo","mobileNo","aadharNo","min","entityName","entityAddress","entityWardNo","installationLocation","brandDisplayName","gstNo","displayArea","displayType","ulb","holdingNo","tradeLicenseNo","longitude","latitude","advrtCategory","enableReinitialize","useSetTitle","showLoader","getUlbListData","getWardListFun","requestBody","ApiHeader","getMasterDataFun","getCategoryList","feedApplicationData","ulb_id","license_year","applicant","father","residence_address","ward_id","permanent_address","permanent_ward_id","mobile_no","aadhar_no","entity_name","entity_address","entity_ward_id","installation_location","brand_display_name","trade_license_no","gst_no","holding_no","display_area","display_type","advt_category","BarLoader","CommonModal","ServerErrorCard","desc","buttonText","buttonUrl","_objectSpread","_defineProperty","selectedIndex","text","allowNumberInput","allowCharacterNumberInput","allowFloatInput","allowMailInput","AdvtUlbSelectComponent","open","setUlbValues","getFieldProps","paramCategories","LicenseYear","string_parameter","touched","errors","placeholder","disabled","ward_name","permanent_ward_name","entity_ward_name","selected","InstallationLocation","DisplayType","AdvtCategoryScreen","SelfAdvrtInformationScreen","_props$reviewIdNameDa","_props$reviewIdNameDa2","_props$reviewIdNameDa3","_props$reviewIdNameDa4","_props$reviewIdNameDa5","_props$reviewIdNameDa6","_props$reviewIdNameDa7","_props$reviewIdNameDa8","_props$reviewIdNameDa9","_props$reviewIdNameDa10","_props$reviewIdNameDa11","_props$reviewIdNameDa12","_props$reviewIdNameDa13","_props$reviewIdNameDa14","_props$reviewIdNameDa15","_props$reviewIdNameDa16","_props$reviewIdNameDa17","_props$reviewIdNameDa18","_props$reviewIdNameDa19","_props$reviewIdNameDa20","_props$reviewIdNameDa21","_props$reviewIdNameDa22","_props$reviewIdNameDa23","_props$reviewIdNameDa24","_props$reviewIdNameDa25","_props$reviewIdNameDa26","_props$reviewIdNameDa27","_props$reviewIdNameDa28","_props$reviewIdNameDa29","_props$reviewIdNameDa30","_props$reviewIdNameDa31","_props$reviewIdNameDa32","_props$reviewIdNameDa33","_props$reviewIdNameDa34","_props$reviewIdNameDa35","_props$reviewIdNameDa36","_props$reviewIdNameDa37","_props$reviewIdNameDa38","_props$reviewIdNameDa39","_props$reviewIdNameDa40","_props$reviewIdNameDa41","_props$reviewIdNameDa42","_props$reviewIdNameDa43","_props$reviewIdNameDa44","_props$reviewIdNameDa45","_props$reviewIdNameDa46","_props$reviewIdNameDa47","_props$reviewIdNameDa48","_props$reviewIdNameDa49","_props$reviewIdNameDa50","_props$reviewIdNameDa51","_props$reviewIdNameDa52","_props$reviewIdNameDa53","_props$reviewIdNameDa54","_props$reviewIdNameDa55","_props$reviewIdNameDa56","_props$reviewIdNameDa57","_props$reviewIdNameDa58","_props$reviewIdNameDa59","_props$reviewIdNameDa60","_props$reviewIdNameDa61","_props$reviewIdNameDa62","_props$reviewIdNameDa63","_props$reviewIdNameDa64","_props$reviewIdNameDa65","_props$reviewIdNameDa66","_props$reviewIdNameDa67","_props$reviewIdNameDa68","_props$reviewIdNameDa69","_props$reviewIdNameDa70","_props$reviewIdNameDa71","_props$reviewIdNameDa72","_props$reviewIdNameDa73","_props$reviewIdNameDa74","_props$reviewIdNameDa75","_props$reviewIdNameDa76","_props$reviewIdNameDa77","_props$reviewIdNameDa78","_props$reviewIdNameDa79","_props$reviewIdNameDa80","_props$reviewIdNameDa81","_props$reviewIdNameDa82","_props$reviewIdNameDa83","_props$reviewIdNameDa84","_props$reviewIdNameDa85","_props$reviewIdNameDa86","_props$reviewIdNameDa87","_props$reviewIdNameDa88","_props$reviewIdNameDa89","_props$reviewIdNameDa90","_props$reviewIdNameDa91","_props$reviewIdNameDa92","_props$reviewIdNameDa93","_props$reviewIdNameDa94","allFormData","reviewIdNameData","nullToNA","selfAdvertisement","license_year_name","advt_category_name","selfAdvertisementDoc","_data$image","submitFun","formIndex","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setexistingApplicationDetails","setapplicationType","_useParams","useParams","navigate","api_postSelfAdvertApplication","api_renewSelfAdvt_license","api_getApplicationDetailsToRenew","submitSelfAdvertForm","_allFormData$selfAdve","_allFormData$selfAdve2","_allFormData$selfAdve3","_allFormData$selfAdve4","_allFormData$selfAdve5","_allFormData$selfAdve6","_allFormData$selfAdve7","_allFormData$selfAdve8","_allFormData$selfAdve9","_allFormData$selfAdve10","_allFormData$selfAdve11","_allFormData$selfAdve12","_allFormData$selfAdve13","_allFormData$selfAdve14","_allFormData$selfAdve15","_allFormData$selfAdve16","_allFormData$selfAdve17","_allFormData$selfAdve18","_allFormData$selfAdve19","_allFormData$selfAdve20","_allFormData$selfAdve21","_allFormData$selfAdve22","_allFormData$selfAdve23","_allFormData$selfAdve24","_allFormData$selfAdve25","_allFormData$selfAdve26","_allFormData$selfAdve27","_allFormData$selfAdve28","_allFormData$selfAdve29","_allFormData$selfAdve30","_allFormData$selfAdve31","_allFormData$selfAdve32","_allFormData$selfAdve33","_allFormData$selfAdve34","_allFormData$selfAdve35","_allFormData$selfAdve36","_allFormData$selfAdve37","_allFormData$selfAdve38","_allFormData$selfAdve39","_allFormData$selfAdve40","_allFormData$selfAdve41","_allFormData$selfAdve42","_allFormData$selfAdve43","_allFormData$selfAdve44","_allFormData$selfAdve45","_allFormData$selfAdve46","_allFormData$selfAdve47","_allFormData$selfAdve48","wardId","permanentWardId","entityWardId","documents","applicationId","toastFun","fetchApplicationDetails","AdvrtSuccessScreen","BrandLoader","ToastContainer","position","autoClose","SelfAdvertisementForm1","SelfAdvertisementDocForm","ReviewSelfAdvertForm","background","setUlbList","selectedOption","setSelectedOption","closeModal","openUlbModal","axios","res","err","Select","defaultValue","getOptionLabel","option","ulb_name","getOptionValue","options","isClearable","currentValue","oldValue","arguments","test","allowCharacterNumberForwardInput"],"sourceRoot":""}