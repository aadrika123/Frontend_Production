{"version":3,"file":"static/js/3764.006cdb13.chunk.js","mappings":"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","sources":["Components/OtpScreenLinkConnectPage.js"],"sourcesContent":["//////////////////{*****}//////////////////////////////////////////\r\n// >Author - swati sharma\r\n// >Version - 1.0\r\n// >Date - 18 oct 2022\r\n// >Revision - 1\r\n// >Project - Akola\r\n// >Component  - OtpScreenLinkConnectPage\r\n// >DESCRIPTION - OtpScreenLinkConnectPage Component\r\n//////////////////{*****}//////////////////////////////////////////\r\n\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction OtpScreenLinkConnectPage(props) {\r\n\r\n\r\n    /////////{***âœ…btn id***}///////\r\n    const { id } = useParams()\r\n    console.log(\"param\", id)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [showFormOne, setshowFormOne] = useState('')\r\n    const [showForm2, setshowForm2] = useState('hidden')\r\n    const [otpText, setotpText] = useState()\r\n    const [InputOtp, setInputOtp] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    // const [MobileNo, setMobileNo] = useState()\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            width: '800',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            backgroundColor: 'white',\r\n            border: 'none'\r\n            \r\n        },\r\n    };\r\n\r\n    // ==============for clerical objection==================\r\n    useEffect(() => {\r\n        props?.openOtpScreen == true && openModal()\r\n    },[props?.openOtpScreen])\r\n    // =============for clerical objection end================\r\n\r\n    useEffect(() => {\r\n        id != undefined && openModal()\r\n    },[id])\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // ===for clerical==========\r\n        props?.closeOtpScreen()\r\n    }\r\n\r\n\r\n    const confirmSubmit = () => {\r\n        if (InputOtp == otpText) {\r\n            // alert('Mobile number verified');\r\n            setshowForm2('hidden');\r\n            setshowFormOne('');\r\n            console.log('after verification calling submit form')\r\n            // navigate(`/appicationList`)\r\n            // navigate(`/allTranscationList`)\r\n            if (id == 1) {\r\n                navigate(`/appicationList`)\r\n            }\r\n            else if (id == 2) {\r\n                navigate(`/allTranscationList`)\r\n            }\r\n            else {  }\r\n\r\n            // ======for clerical objection=========\r\n            if ( props?.id == 3 ) { \r\n                closeModal()\r\n                props?.verifyFun()\r\n             }\r\n             // ======for clerical objection end=========\r\n\r\n\r\n        } else {\r\n            alert('check OTP')\r\n        }\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setotpText(Math.floor(Math.random() * (9999 - 1000 + 1)));\r\n        setshowForm2('');\r\n        setshowFormOne('hidden');\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                // shouldCloseOnOverlayClick={false}\r\n\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"rounded-lg  shadow-xl pt-4 text-white text-center bg z-20  mx-auto\" style={{ 'width': '50vw', 'height': '70vh' }}>\r\n\r\n\r\n                    <div className='grid grid-col-1 lg:grid grid-cols-6 md:grid grid-cols-6 gap-2 mx-auto'>\r\n                        <div className='col-span-3 '>\r\n                            <img src='https://img.freepik.com/free-vector/two-factor-authentication-concept-illustration_114360-5488.jpg?w=740&t=st=1669023049~exp=1669023649~hmac=40cad9816374be9c1321686b44fd28816051fad89f95f2a3010382a82a720f81' className='h-96 opacity-95 hue-rotate-[40deg]' />\r\n                        </div>\r\n                        <div className='col-span-2'>\r\n                            <div className='w-80 h-96 border-2 border-gray-400 rounded-t-xl rounded-b-xl p-4'>\r\n                                {/* <Link to='/dashboardEntry'> */}\r\n                                    <button className='text-red-800 rounded-sm  shadow-md float-right text-xs bg-red-300 px-1' onClick={closeModal}>Cancel</button>\r\n                                {/* </Link> */}\r\n                                <div className=''>\r\n                                    <img src='https://cdn-icons-png.flaticon.com/512/1773/1773239.png' className='h-10 mx-auto mt-8 hue-rotate-[40deg]' />\r\n                                </div>\r\n                                <h1 className='text-center text-sm text-gray-600 p-4 font-semibold'>Mobile Number</h1>\r\n                                <h1 className='text-center text-xs text-gray-500 '>We need to send otp to authenticate your number</h1>\r\n                                <div className=' p-6 '>\r\n                                    <form onSubmit={handleSubmit} className={showFormOne}>\r\n\r\n                                        <div>\r\n                                            <input type=\"number\" maxLength={10} name='mobile' placeholder='Enter your mobile no' className='px-3 py-1 rounded-md shadow-md text-gray-500' />\r\n                                            <br /><br />\r\n                                            <button type='submit' className='w-44 py-1 rounded-md shadow-sm bg-indigo-500 hover:bg-indigo-600 text-gray-50 text-sm'> NEXT</button>\r\n                                        </div>\r\n                                    </form>\r\n                                    <form className={showForm2}>\r\n                                        <p htmlFor=\"forMobile\">Enter OTP</p>\r\n                                        <h5 className='text-green-600 text-md '> YOUR OTP IS {otpText} </h5> <br />\r\n\r\n                                        <div>\r\n                                            <input type=\"number\" maxLength={10} name='otp' placeholder='Enter your OTP' className='px-3 py-1 rounded-md shadow-md text-gray-500' onChange={(e) => setInputOtp(e.target.value)} />\r\n                                            <br /><br />\r\n                                            <button type='button' className='w-44 py-1 rounded-md shadow-sm bg-indigo-500 hover:bg-indigo-600 text-gray-50 text-sm' onClick={confirmSubmit}>CONFIRM</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtpScreenLinkConnectPage"],"names":["props","id","useParams","console","log","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showFormOne","setshowFormOne","_useState3","_useState4","showForm2","setshowForm2","_useState5","_useState6","otpText","setotpText","_useState7","_useState8","InputOtp","setInputOtp","_useState9","_useState10","modalIsOpen","setIsOpen","openModal","closeModal","closeOtpScreen","useEffect","openOtpScreen","undefined","_jsx","children","Modal","isOpen","onAfterOpen","onRequestClose","style","content","top","left","right","bottom","width","marginRight","transform","backgroundColor","border","contentLabel","className","_jsxs","src","onClick","onSubmit","e","Math","floor","random","preventDefault","type","maxLength","name","placeholder","htmlFor","onChange","target","value","verifyFun","alert"],"sourceRoot":""}