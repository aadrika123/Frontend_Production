{"version":3,"file":"static/js/1884.6edbf8b2.chunk.js","mappings":"gOAoBA,EAjB2B,SAACA,GAAW,IAADC,EAAAC,EAE9BC,GAAWC,EAAAA,EAAAA,MAGjB,OADAC,QAAQC,IAAI,IAAU,OAALN,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOO,YAAI,IAAAN,OAAN,EAALA,EAAaO,gBAE5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SAAC,kDAC3BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,cAAaC,SAAA,CAAC,qBAAiBF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBC,SAAA,CAAC,IAAO,OAALX,QAAK,IAALA,GAAW,QAANE,EAALF,EAAOO,YAAI,IAAAL,OAAN,EAALA,EAAaM,qBACnGC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,yFAAwFC,SAAC,eAC3GC,EAAAA,EAAAA,KAAA,UAAQC,QAAS,eAAAC,EAAA,OAAMX,EAAS,2CAADY,OAAiD,OAALf,QAAK,IAALA,GAAW,QAANc,EAALd,EAAOO,YAAI,IAAAO,OAAN,EAALA,EAAaE,IAAK,EAAEN,UAAU,wEAAuEC,SAAC,yBAIzL,ECmGA,I,iEC7GMM,EAAQ,CACZC,SAAU,6BACVC,MAAO,UACPC,UAAW,4EACXC,SAAU,2DA2WZ,EAvWiC,SAACrB,GAAW,IAADsB,EAAAC,EAAAC,EAAAC,EAE1CC,GAA8BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAgCL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAGhCG,GAA8CC,EAAAA,EAAAA,KAAtCC,EAAWF,EAAXE,YAAaC,EAAMH,EAANG,OAAQC,EAAYJ,EAAZI,aAE7BC,GAA6EC,EAAAA,EAAAA,KAArEC,EAA4BF,EAA5BE,6BAA8BC,EAAyBH,EAAzBG,0BAA2BC,EAAOJ,EAAPI,QAG3DC,EAAmBC,EAAAA,GAAW,CAClCC,IAAKD,EAAAA,KAAajC,SAAS,WAC3BmC,cAAeF,EAAAA,KAAajC,SAAS,aAMjCoC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cALoB,CACpBJ,IAAK,GACLC,cAAe,IAIfI,oBAAoB,EACpBC,SAAU,SAACC,EAAQC,GACjBC,EAAWF,EAIb,EACAT,iBAAAA,IAYIW,EAAa,SAACtD,GAElB,IAAMuD,EAAU,CACd,QAAe,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,QACjB,aAAoB,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,aACtB,WAAkB,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,UACpB,MAAa,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,MACf,cAAqB,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,oBACvB,MAAa,OAAJ5D,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,MACf,iBAAwB,OAAJ7D,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,iBAC1B,aAAoB,OAAJ9D,QAAI,IAAJA,OAAI,EAAJA,EAAM+D,aACtB,WAAkB,OAAJ/D,QAAI,IAAJA,OAAI,EAAJA,EAAMgE,WACpB,YAAmB,OAAJhE,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,YACrB,SAAgB,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,SAClB,MAAa,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,MACf,aAAoB,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMoE,aACtB,QAAe,OAAJpE,QAAI,IAAJA,OAAI,EAAJA,EAAMqE,QACjB,UAAiB,OAAJrE,QAAI,IAAJA,OAAI,EAAJA,EAAMsE,UACnB,YAAmB,OAAJtE,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,YACrB,QAAe,OAAJvE,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,QACjB,QAAe,OAAJxE,QAAI,IAAJA,OAAI,EAAJA,EAAMyE,QACjB,MAAa,OAAJzE,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,IACf,KAAY,OAAJ7C,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,KACd,MAAS,CACP,CACE,cAAqB,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,cACvB,SAAgB,OAAJ9C,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,SAClB,MAAa,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAM2E,MACf,MAAa,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,SAKrBrE,QAAQC,IAAI,mBAAoBwD,GAEhCqB,EAAAA,EAAAA,KAAuBpC,EAA8Be,EAASb,GAC3DmC,MAAK,SAACC,GACDA,EAAI9E,KAAK+E,QACXjF,QAAQC,IAAI,6BACZN,EAAMO,KAAK8E,EAAI9E,KAAKA,MACpBF,QAAQC,IAAI,IAAI+E,EAAI9E,KAAKA,MACzBP,EAAMuF,OAAO,IAEblF,QAAQC,IAAI,mCAEhB,IACCkF,OAAM,SAACC,GACNpF,QAAQC,IAAI,8CAA+CmF,EAC7D,GAEJ,EAuDA,OAlDAC,EAAAA,EAAAA,YAAU,WACRP,EAAAA,EAAAA,IAAsBzC,EAAaC,GAChCyC,MAAK,SAACC,GACDA,EAAI9E,KAAK+E,QACXvD,EAAWsD,EAAI9E,KAAKA,MACpBF,QAAQC,IAAI,WAAY+E,EAAI9E,OAE5BF,QAAQC,IAAI,0BAEhB,IACCkF,OAAM,SAACC,GACNpF,QAAQC,IAAI,+BACd,GACJ,GAAG,KAIHoF,EAAAA,EAAAA,YAAU,WACRP,EAAAA,EAAAA,KAAuBvC,EAAc,CAAE,MAASU,EAAOK,OAAOP,KAAOT,GAClEyC,MAAK,SAACC,GACDA,EAAI9E,KAAK+E,QACXnD,EAAYkD,EAAI9E,KAAKA,MACrBF,QAAQC,IAAI,YAAa+E,EAAI9E,OAE7BF,QAAQC,IAAI,2BAEhB,IACCkF,OAAM,SAACC,GACNpF,QAAQC,IAAI,gCACd,GACJ,GAAG,CAACgD,EAAOK,OAAOP,OAGlBsC,EAAAA,EAAAA,YAAU,WACRP,EAAAA,EAAAA,KAAuBnC,EAA2B,CAAC,EAAGC,GACnDmC,MAAK,SAACC,GACDA,EAAI9E,KAAK+E,QACX/C,EAAc8C,EAAI9E,KAAKA,MACvBF,QAAQC,IAAI,kBAAmB+E,EAAI9E,OAEnCF,QAAQC,IAAI,iCAEhB,IACCkF,OAAM,SAACC,GACNpF,QAAQC,IAAI,sCACd,GACJ,GAAG,KAKDM,EAAAA,EAAAA,KAAA+E,EAAAA,SAAA,CAAAhF,UACEF,EAAAA,EAAAA,MAAA,QAAMiD,SAAUJ,EAAOsC,aAAcC,SArHpB,SAACC,GACTA,EAAMC,OAAOC,KACZF,EAAMC,OAAOE,KAG3B,EAgHgEtF,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gDAA+CC,SAAC,0BAIjEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qEAAoEC,SAAA,EAEjFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,MAAKvF,SAAA,CAAC,eAAWC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC3FF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,QAAM,IAAEJ,KAAK,MAAMtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,WAER,OAAPmB,QAAO,IAAPA,OAAO,EAAPA,EAASuE,KAAI,SAACC,EAAMC,GAAK,OACvB3F,EAAAA,EAAAA,KAAA,UAAoBqF,MAAOK,EAAKtF,GAAGL,SAAE2F,EAAKE,UAA7BD,EAA+C,SAIlE3F,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQrD,KAAOE,EAAOoD,OAAOtD,IAAME,EAAOoD,OAAOtD,IAAM,WAGrG3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,eAAcvF,SAAA,CAAC,iBAAaC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACtGF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,iBAAe,IAAEJ,KAAK,eAAetF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EAChGC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,WAEL,OAAV2B,QAAU,IAAVA,GAA+B,QAArBhB,EAAVgB,EAAYqE,2BAAmB,IAAArF,OAArB,EAAVA,EAAiC+E,KAAI,SAACC,EAAMC,GAAK,OAC/C3F,EAAAA,EAAAA,KAAA,UAAoBqF,MAAOK,EAAKtF,GAAGL,SAAE2F,EAAKM,sBAA7BL,EAA2D,SAI9E3F,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQzC,cAAgBV,EAAOoD,OAAO1C,aAAeV,EAAOoD,OAAO1C,aAAe,WAGhIvD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,YAAWvF,SAAA,CAAC,qBAAiBC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACvGC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,cAAY,IAAES,KAAK,OAAOb,KAAK,YAAYtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cAC7FR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQxC,WAAaX,EAAOoD,OAAOzC,UAAYX,EAAOoD,OAAOzC,UAAY,WAEvHxD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,sBAAqBvF,SAAA,CAAC,2BAAuBC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACvHF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,wBAAsB,IAAEJ,KAAK,sBAAsBtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EAC9GC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,WAEL,OAAV2B,QAAU,IAAVA,GAAqB,QAAXf,EAAVe,EAAYwE,iBAAS,IAAAvF,OAAX,EAAVA,EAAuB8E,KAAI,SAACC,EAAMC,GAAK,OACrC3F,EAAAA,EAAAA,KAAA,UAAoBqF,MAAOK,EAAKtF,GAAGL,SAAE2F,EAAKS,YAA7BR,EAAiD,SAIpE3F,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQtC,qBAAuBb,EAAOoD,OAAOvC,oBAAsBb,EAAOoD,OAAOvC,oBAAsB,WAGrJ1D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,OAAMvF,SAAA,CAAC,eAAWC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC5FF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,SAAO,IAAEJ,KAAK,OAAOtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EAChFC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,YAEP,OAARuB,QAAQ,IAARA,OAAQ,EAARA,EAAU8E,QAAS,IAAa,OAAR9E,QAAQ,IAARA,OAAQ,EAARA,EAAUmE,KAAI,SAACC,EAAMC,GAAK,OAChD3F,EAAAA,EAAAA,KAAA,UAAoBqF,MAAOK,EAAKtF,GAAGL,SAAE2F,EAAKW,WAA7BV,EAAgD,gBAOvE3F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gDAA+CC,SAAC,2BAIjEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAE/CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,gBAAevF,SAAA,CAAC,qBAAiBC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC3GC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,kBAAgB,IAAES,KAAK,OAAOb,KAAK,gBAAgBtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACrGR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQpD,eAAiBC,EAAOoD,OAAOrD,cAAgBC,EAAOoD,OAAOrD,cAAgB,WAEnI5C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,WAAUvF,SAAA,CAAC,aAASC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC9FC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,aAAW,IAAES,KAAK,SAASb,KAAK,WAAWtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cAC7FR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQhC,UAAYnB,EAAOoD,OAAOjC,SAAWnB,EAAOoD,OAAOjC,SAAW,WAEpHhE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,QAAOvF,SAAA,CAAC,SAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACvFC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,UAAQ,IAAES,KAAK,QAAQb,KAAK,QAAQtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACtFR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQvB,OAAS5B,EAAOoD,OAAOxB,MAAQ5B,EAAOoD,OAAOxB,MAAQ,WAE3GzE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,QAAOvF,SAAA,CAAC,WAAOC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACzFC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,UAAQ,IAAES,KAAK,OAAOb,KAAK,QAAQtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACrFR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ/B,OAASpB,EAAOoD,OAAOhC,MAAQpB,EAAOoD,OAAOhC,MAAQ,cAK7GjE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,UAASvF,SAAA,CAAC,WAAOC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC3FC,EAAAA,EAAAA,KAAA,YAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAc7C,EAAO8C,cAAc,YAAU,IAAEJ,KAAK,UAAUkB,KAAK,IAAIxG,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOI,aACzFT,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ1C,SAAWT,EAAOoD,OAAO3C,QAAUT,EAAOoD,OAAO3C,QAAU,cAInHnD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gDAA+CC,SAAC,qBAIjEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qEAAoEC,SAAA,EACjFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,UAASvF,SAAA,CAAC,YAAQC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC5FF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,YAAU,IAAES,KAAK,OAAOb,KAAK,UAAUtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EAClGC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,YACjBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,IAAGtF,SAAC,SAClBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,IAAGtF,SAAC,aAEpBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQzB,SAAW1B,EAAOoD,OAAO1B,QAAU1B,EAAOoD,OAAO1B,QAAU,WAEjHvE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,UAASvF,SAAA,CAAC,eAAWC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC/FC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,YAAU,IAAES,KAAK,OAAOb,KAAK,UAAUtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACzFR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ1B,SAAWzB,EAAOoD,OAAO3B,QAAUzB,EAAOoD,OAAO3B,QAAU,WAEjHtE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,YAAWvF,SAAA,CAAC,UAAMC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC5FF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,cAAY,IAAES,KAAK,OAAOb,KAAK,YAAYtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EACtGC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,WAEL,OAAV2B,QAAU,IAAVA,GAAqB,QAAXd,EAAVc,EAAYuC,iBAAS,IAAArD,OAAX,EAAVA,EAAuB6E,KAAI,SAACC,EAAMC,GAAK,OACrC3F,EAAAA,EAAAA,KAAA,UAAoBqF,MAAOK,EAAKtF,GAAGL,SAAE2F,EAAKa,YAA7BZ,EAAiD,SAIpE3F,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ5B,WAAavB,EAAOoD,OAAO7B,UAAYvB,EAAOoD,OAAO7B,UAAY,WAEvHpE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,eAAcvF,SAAA,CAAC,iBAAaC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACtGC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,iBAAe,IAAES,KAAK,OAAOb,KAAK,eAAetF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACnGR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ9B,cAAgBrB,EAAOoD,OAAO/B,aAAerB,EAAOoD,OAAO/B,aAAe,WAEhIlE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,cAAavF,SAAA,CAAC,iBAAaC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACrGC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,gBAAc,IAAES,KAAK,OAAOb,KAAK,cAActF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACjGR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ3B,aAAexB,EAAOoD,OAAO5B,YAAcxB,EAAOoD,OAAO5B,YAAc,WAE7HrE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,QAAOvF,SAAA,CAAC,SAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACvFC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,UAAQ,IAAES,KAAK,OAAOb,KAAK,QAAQtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACrFR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQvC,OAASZ,EAAOoD,OAAOxC,MAAQZ,EAAOoD,OAAOxC,MAAQ,WAE3GzD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,QAAOvF,SAAA,CAAC,SAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACvFC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,UAAQ,IAAES,KAAK,OAAOb,KAAK,QAAQtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACrFR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQrC,OAASd,EAAOoD,OAAOtC,MAAQd,EAAOoD,OAAOtC,MAAQ,WAE3G3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,aAAYvF,SAAA,CAAC,0BAAsBC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC7GC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,eAAa,IAAES,KAAK,OAAOb,KAAK,aAAatF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cAC/FR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQlC,YAAcjB,EAAOoD,OAAOnC,WAAajB,EAAOoD,OAAOnC,WAAa,WAE1H9D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,cAAavF,SAAA,CAAC,kCAAyBC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACjHC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,gBAAc,IAAES,KAAK,OAAOb,KAAK,cAActF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACjGR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQjC,aAAelB,EAAOoD,OAAOlC,YAAclB,EAAOoD,OAAOlC,YAAc,WAE7H/D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,eAAcvF,SAAA,CAAC,kBAAcC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UACvGC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,iBAAe,IAAES,KAAK,OAAOb,KAAK,eAAetF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cACnGR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQnC,cAAgBhB,EAAOoD,OAAOpC,aAAehB,EAAOoD,OAAOpC,aAAe,WAEhI7D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,mBAAkBvF,SAAA,CAAC,kCAA8BC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC3HC,EAAAA,EAAAA,KAAA,SAAAuF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW7C,EAAO8C,cAAc,qBAAmB,IAAES,KAAK,OAAOb,KAAK,mBAAmBtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,cAC3GR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQpC,kBAAoBf,EAAOoD,OAAOrC,iBAAmBf,EAAOoD,OAAOrC,iBAAmB,WAE5I5D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOC,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAO+E,QAAQ,UAASvF,SAAA,CAAC,YAAQC,EAAAA,EAAAA,KAAA,QAAMF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOC,SAASP,SAAC,UAC5FF,EAAAA,EAAAA,MAAA,UAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY7C,EAAO8C,cAAc,YAAU,IAAEJ,KAAK,UAAUtF,UAAgB,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOG,UAAUT,SAAA,EACtFC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAC,WAEL,OAAV2B,QAAU,IAAVA,GAAyB,QAAfb,EAAVa,EAAY8E,qBAAa,IAAA3F,OAAf,EAAVA,EAA2B4E,KAAI,SAACC,EAAMC,GAAK,OACzC3F,EAAAA,EAAAA,KAAA,UAAoBqF,MAAOK,EAAKtF,GAAGL,SAAE2F,EAAKe,kBAA7Bd,EAAuD,SAI1E3F,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAE2C,EAAOmD,QAAQ7B,SAAWtB,EAAOoD,OAAO9B,QAAUtB,EAAOoD,OAAO9B,QAAU,iBAMrHnE,EAAAA,EAAAA,MAAA,KAAGC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOiG,KAAK,WAAWb,KAAK,GAAGhF,GAAG,MAClCJ,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sFAMLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCC,EAAAA,EAAAA,KAAA,UAAQiG,KAAK,SAASnG,UAAU,oDAAmDC,SAAC,6BAO9F,EClVA,EA7B6B,WAC3B,IAAAe,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C4F,EAAa1F,EAAA,GAAE2F,EAAgB3F,EAAA,GACtCI,GAAoEL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvEwF,EAA0BvF,EAAA,GAAEwF,EAA6BxF,EAAA,GAExDyF,GAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCF,kBAMR,OALAhC,EAAAA,EAAAA,YAAU,WACRgC,EAAkB,CAAC,0BACrB,GAAG,KAID9G,EAAAA,EAAAA,KAAA+E,EAAAA,SAAA,CAAAhF,UACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uCAAsCC,UACnDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2FAA0FC,SAAC,kCACxGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,KAAGC,UAAS,GAAAK,OAAsB,GAAjBuG,EAAqB,QAAU,UAAW3G,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACiH,EAAwB,CAACtC,OAAQgC,EAAkBhH,KAAMkH,IAAiC,QACxJhH,EAAAA,EAAAA,MAAA,KAAGC,UAAS,GAAAK,OAAsB,GAAjBuG,EAAqB,QAAU,UAAW3G,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACkH,EAAkB,CAACvC,OAAQgC,EAAkBhH,KAAMiH,gBAU7H,C","sources":["Pages/PetRegistration/Form/FormAppliedSuccess.jsx","Pages/PetRegistration/Form/PetAccordionPage.js","Pages/PetRegistration/Form/PetRegistrationFormIndex.js","Pages/PetRegistration/PetRegistrationIndex.js"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst FormAppliedSuccess = (props) => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  console.log('3', props?.data?.applicationNo)\r\n  return (\r\n    <div className='space-y-2'>\r\n      <p className='text-center'> Your Application has submitted successfully</p>\r\n      <p className='text-center'>Application No.  <span className='font-semibold text-lg'> {props?.data?.applicationNo}</span></p>\r\n      <div className='flex justify-center gap-x-5'>\r\n        <button className='border border-indigo-600 px-2 py-1 rounded shadow hover:bg-indigo-500 hover:text-white'>Dashboard</button>\r\n        <button onClick={() => navigate(`/apply-pet-registration/document-upload/${props?.data?.id}`)} className='bg-indigo-500 px-2 py-1 rounded shadow text-white hover:bg-indigo-700'>Upload Document</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormAppliedSuccess\r\n","import React from 'react';\r\n\r\nexport const PetAccordionPage = () => {\r\n    return (\r\n        <Accordion>\r\n            <AccordionItem toggle=\"panel-1\" className=\"bg-indigo-500 text-white\">\r\n                How to Apply ?\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-1\">\r\n                <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n                    minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n                    aliquip ex ea commodo consequat.\r\n                </p>\r\n                <p>\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n                    accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae\r\n                    ab illo inventore veritatis et quasi architecto beatae vitae dicta\r\n                    sunt explicabo.\r\n                </p>\r\n            </AccordionPanel>\r\n            <AccordionItem toggle=\"panel-2\" className=\"bg-indigo-500 text-white\">\r\n                Which documents need to submit ?\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-2\">\r\n                <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec\r\n                    odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla\r\n                    quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent\r\n                    mauris. Fusce nec tellus sed augue semper porta.\r\n                </p>\r\n                <p>\r\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui\r\n                    blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\r\n                    et quas molestias excepturi sint occaecati cupiditate non provident,\r\n                    similique sunt in culpa qui officia deserunt mollitia animi.\r\n                </p>\r\n            </AccordionPanel>\r\n            <AccordionItem toggle=\"panel-3\" className=\"bg-indigo-500 text-white\">\r\n                Accordion Group Item #3\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-3\">\r\n                <p className=\"mb-4\">\r\n                    dales ligula in libero. Sed dignissim lacinia nunc. Curabitur tortor.\r\n                    Pellentesque nibh. Aenean quam. In scelerisque sem at dolor. Maecenas\r\n                    mattis. Sed convallis tristique sem. Proin ut ligula vel nunc egestas\r\n                    porttitor. Morbi lectus risus, iaculis.\r\n                </p>\r\n                <p>\r\n                    Nulla metus metus, ullamcorper vel, tincidunt sed, euismod in, nibh.\r\n                    Quisque volutpat condimentum velit. Class aptent taciti sociosqu ad\r\n                    litora torquent per conubia nostra, per inceptos himenaeos. Nam nec\r\n                    ante.\r\n                </p>\r\n            </AccordionPanel>\r\n        </Accordion>\r\n    );\r\n};\r\n\r\n/* Logic */\r\n\r\nconst Context = React.createContext({});\r\n\r\nfunction Accordion({ children }) {\r\n    const [selected, setSelected] = React.useState();\r\n\r\n    const toggleItem = React.useCallback(\r\n        (id) => () => {\r\n            setSelected((prevState) => (prevState !== id ? id : ''));\r\n        },\r\n        [],\r\n    );\r\n    return (\r\n        <Context.Provider value={{ selected, toggleItem }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\n//custom hook to consume all accordion values\r\nconst useAccordion = () => React.useContext(Context);\r\n\r\nconst style = {\r\n    item: `block focus:outline-none border-b my-2 p-3`,\r\n    panel: `overflow-hidden md:overflow-x-hidden transition-height ease duration-300 text-gray-600`,\r\n};\r\n\r\nfunction AccordionItem({ toggle, children, className }) {\r\n    const { selected, toggleItem } = useAccordion();\r\n    return (\r\n        <div\r\n            role=\"button\"\r\n            onClick={toggleItem(toggle)}\r\n            className={`${style.item} ${className}`}\r\n        >\r\n            {children}\r\n            <span className=\"float-right\">\r\n                {selected === toggle ? <AngleUpIcon /> : <AngleDownIcon />}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AccordionPanel({ children, id }) {\r\n    const { selected } = useAccordion();\r\n    const ref = React.useRef();\r\n    const inlineStyle =\r\n        selected === id ? { height: ref.current?.scrollHeight } : { height: 0 };\r\n\r\n    return (\r\n        <div ref={ref} id={id} className={style.panel} style={inlineStyle}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AngleUpIcon = () => (\r\n    <svg\r\n        fill=\"white\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 320 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"mt-1 h-4\"\r\n    >\r\n        <path d=\"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\" />\r\n    </svg>\r\n);\r\n\r\nconst AngleDownIcon = () => (\r\n    <svg\r\n        stroke=\"currentColor\"\r\n        fill=\"white\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 320 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"mt-1 h-4\"\r\n    >\r\n        <path d=\"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\" />\r\n    </svg>\r\n);","import React, { useEffect, useState } from 'react'\r\nimport { useFormik, Formik, Form, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList'\r\nimport AxiosInterceptors from '../../../Components/GlobalData/AxiosInterceptors'\r\nimport PetRegAPIList from '../../../Components/ApiList/PetRegAPIList'\r\n\r\n\r\nconst style = {\r\n  required: 'text-red-700 font-semibold',\r\n  label: 'text-sm',\r\n  textFiled: 'block w-full h-9 border px-2 border-gray-300 rounded shadow text-gray-700',\r\n  textArea: 'block w-full border px-2 border-gray-300 rounded shadow'\r\n}\r\n\r\n\r\nconst PetRegistrationFormIndex = (props) => {\r\n\r\n  const [ulbList, setUlbList] = useState()\r\n  const [wardList, setWardList] = useState()\r\n  const [masterData, setMasterData] = useState()\r\n\r\n\r\n  const { api_ulbList, header, api_wardList } = WaterApiList();\r\n\r\n  const { api_PetRegistrationApplyForm, api_PetRegistrationMaster, header1 } = PetRegAPIList();\r\n\r\n  // ==== Formik Start\r\n  const validationSchema = yup.object({\r\n    ulb: yup.string().required('Require'),\r\n    applicantName: yup.string().required('Require'),\r\n  })\r\n  const initialValues = {\r\n    ulb: '',\r\n    applicantName: '',\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    enableReinitialize: true,\r\n    onSubmit: (values, resetForm) => {\r\n      submitForm(values)\r\n      // console.log(\"Value.....\", values)\r\n      // props.data(values)\r\n      // props.screen(2)\r\n    },\r\n    validationSchema\r\n  })\r\n  const handleChange = (event) => {\r\n    let name = event.target.name\r\n    let value = event.target.value\r\n    // { name === 'propertyType' && ((value == '1') ? setpropertyTypeStatusToggle(true) : setpropertyTypeStatusToggle(false)) }\r\n    // { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n  };\r\n\r\n  // ==== Formik End\r\n\r\n\r\n  const submitForm = (data) => {\r\n\r\n    const payload = {\r\n      \"address\": data?.address,\r\n      \"applyThrough\": data?.applyThrough,\r\n      \"propertyNo\": data?.holdingNo,\r\n      \"breed\": data?.breed,\r\n      \"ownerCategory\": data?.categoryApplication,\r\n      \"color\": data?.color,\r\n      \"dateOfLepVaccine\": data?.dateOfLepVaccine,\r\n      \"dateOfRabies\": data?.dateOfRabies,\r\n      \"doctorName\": data?.doctorName,\r\n      \"doctorRegNo\": data?.doctorRegNo,\r\n      \"mobileNo\": data?.mobileNo,\r\n      \"panNo\": data?.panNo,\r\n      \"petBirthDate\": data?.petBirthDate,\r\n      \"petFrom\": data?.petFrom,  // may be some issue\r\n      \"petGender\": data?.petGender, // check  this\r\n      \"petIdentity\": data?.petIdentity,\r\n      \"petName\": data?.petName,\r\n      \"petType\": data?.petType,\r\n      \"ulbId\": data?.ulb,\r\n      \"ward\": data?.ward,\r\n      \"owner\": [\r\n        {\r\n          \"applicantName\": data?.applicantName,\r\n          \"mobileNo\": data?.mobileNo,\r\n          \"email\": data?.email,\r\n          \"panNo\": data?.panNo\r\n        }\r\n      ]\r\n    }\r\n\r\n    console.log(\"complete payload\", payload)\r\n\r\n    AxiosInterceptors.post(api_PetRegistrationApplyForm, payload, header1)\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          console.log(\"Form applied successfully\");\r\n          props.data(res.data.data)\r\n          console.log(\"1\",res.data.data)\r\n          props.screen(2)\r\n        } else {\r\n          console.log(\"Failed to apply pet registration\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error while applying for pet registration..\", err)\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n  //Get all ulb list\r\n  useEffect(() => {\r\n    AxiosInterceptors.get(api_ulbList, header)\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          setUlbList(res.data.data)\r\n          console.log(\"ULB List\", res.data)\r\n        } else {\r\n          console.log(\"Error fetching ulb list\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error while getting ulb list\")\r\n      })\r\n  }, [])\r\n\r\n\r\n  //Get Ward list by ulb selection\r\n  useEffect(() => {\r\n    AxiosInterceptors.post(api_wardList, { \"ulbId\": formik.values.ulb }, header)\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          setWardList(res.data.data)\r\n          console.log(\"Ward List\", res.data)\r\n        } else {\r\n          console.log(\"Error fetching Ward list\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error while getting Ward list\")\r\n      })\r\n  }, [formik.values.ulb])\r\n\r\n  //Pet Registration Master Data\r\n  useEffect(() => {\r\n    AxiosInterceptors.post(api_PetRegistrationMaster, {}, header1)\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          setMasterData(res.data.data)\r\n          console.log(\"pet master data\", res.data)\r\n        } else {\r\n          console.log(\"Error fetching pet master list\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error while getting pet master list\")\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n        <div className='overflow-y-auto'>\r\n\r\n          <div className='col-span-12 ml-2 my-2'>\r\n            <div className='text-lg text-left text-gray-600 font-semibold'># Property Details</div>\r\n            {/* <p className='border-b border-gray-500'></p> */}\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-5 bg-white shadow-md rounded-md py-2'>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"ulb\">Select ULB <span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('ulb')} name='ulb' className={style?.textFiled}>\r\n                <option value=\"\">Select</option>\r\n                {\r\n                  ulbList?.map((item, index) => (\r\n                    <option key={index} value={item.id}>{item.ulb_name}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.ulb && formik.errors.ulb ? formik.errors.ulb : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"applyThrough\">Apply Through<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('applyThrough')} name='applyThrough' className={style?.textFiled}>\r\n                <option value=\"\">Select</option>\r\n                {\r\n                  masterData?.registrationThrough?.map((item, index) => (\r\n                    <option key={index} value={item.id}>{item.registration_through}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.applyThrough && formik.errors.applyThrough ? formik.errors.applyThrough : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"holdingNo\">Holding / SAF No.<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('holdingNo')} type=\"text\" name='holdingNo' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"categoryApplication\">Category of Application<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('categoryApplication')} name='categoryApplication' className={style?.textFiled}>\r\n                <option value=\"\">Select</option>\r\n                {\r\n                  masterData?.ownertype?.map((item, index) => (\r\n                    <option key={index} value={item.id}>{item.owner_type}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.categoryApplication && formik.errors.categoryApplication ? formik.errors.categoryApplication : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"ward\">Ward Number<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('ward')} name='ward' className={style?.textFiled}>\r\n                <option value=\"\">Select</option>\r\n                {\r\n                  wardList?.length > 0 && wardList?.map((item, index) => (\r\n                    <option key={index} value={item.id}>{item.ward_name}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-span-12 ml-2 my-2'>\r\n            <div className='text-lg text-left text-gray-600 font-semibold'># Applicant Details</div>\r\n            {/* <p className='border-b border-gray-500'></p> */}\r\n          </div>\r\n\r\n          <div className='bg-white shadow-md rounded-md py-2'>\r\n            <div className='grid grid-cols-1 md:grid-cols-4 '>\r\n\r\n              <div className='m-3'>\r\n                <label className={style?.label} htmlFor=\"applicantName\">Name of Applicant<span className={style?.required}>*</span></label>\r\n                <input {...formik.getFieldProps('applicantName')} type=\"text\" name='applicantName' className={style?.textFiled} />\r\n                <p className='text-red-500 text-xs'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n              </div>\r\n              <div className='m-3'>\r\n                <label className={style?.label} htmlFor=\"mobileNo\">Mobile No<span className={style?.required}>*</span></label>\r\n                <input {...formik.getFieldProps('mobileNo')} type=\"number\" name='mobileNo' className={style?.textFiled} />\r\n                <p className='text-red-500 text-xs'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n              </div>\r\n              <div className='m-3'>\r\n                <label className={style?.label} htmlFor=\"email\">Email<span className={style?.required}>*</span></label>\r\n                <input {...formik.getFieldProps('email')} type=\"email\" name='email' className={style?.textFiled} />\r\n                <p className='text-red-500 text-xs'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n              </div>\r\n              <div className='m-3'>\r\n                <label className={style?.label} htmlFor=\"panNo\">PAN No.<span className={style?.required}>*</span></label>\r\n                <input {...formik.getFieldProps('panNo')} type=\"text\" name='panNo' className={style?.textFiled} />\r\n                <p className='text-red-500 text-xs'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"address\">Address<span className={style?.required}>*</span></label>\r\n              <textarea {...formik.getFieldProps('address')} name='address' rows=\"3\" className={style?.textArea} ></textarea>\r\n              <p className='text-red-500 text-xs'>{formik.touched.address && formik.errors.address ? formik.errors.address : null}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-span-12 ml-2 my-2'>\r\n            <div className='text-lg text-left text-gray-600 font-semibold'># Pet Details</div>\r\n            {/* <p className='border-b border-gray-500'></p> */}\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-4 bg-white shadow-md rounded-md py-2'>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petType\">Pet Type<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('petType')} type=\"text\" name='petType' className={style?.textFiled}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">Dog</option>\r\n                <option value=\"2\">Cat</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petType && formik.errors.petType ? formik.errors.petType : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petName\">Name of Pet<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('petName')} type=\"text\" name='petName' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petName && formik.errors.petName ? formik.errors.petName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petGender\">Gender<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('petGender')} type=\"text\" name='petGender' className={style?.textFiled}>\r\n                <option value=\"\">Select</option>\r\n                {\r\n                  masterData?.petGender?.map((item, index) => (\r\n                    <option key={index} value={item.id}>{item.pet_gender}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petGender && formik.errors.petGender ? formik.errors.petGender : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petBirthDate\">Date of Birth<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('petBirthDate')} type=\"date\" name='petBirthDate' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petBirthDate && formik.errors.petBirthDate ? formik.errors.petBirthDate : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petIdentity\">Identity MarK<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('petIdentity')} type=\"text\" name='petIdentity' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petIdentity && formik.errors.petIdentity ? formik.errors.petIdentity : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"breed\">Breed<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('breed')} type=\"text\" name='breed' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.breed && formik.errors.breed ? formik.errors.breed : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"color\">Color<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('color')} type=\"text\" name='color' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.color && formik.errors.color ? formik.errors.color : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"doctorName\">Veterinary Doctor Name<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('doctorName')} type=\"text\" name='doctorName' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.doctorName && formik.errors.doctorName ? formik.errors.doctorName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"doctorRegNo\">Doctor’s MSVC/VCI number <span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('doctorRegNo')} type=\"text\" name='doctorRegNo' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.doctorRegNo && formik.errors.doctorRegNo ? formik.errors.doctorRegNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"dateOfRabies\">Date of Rabies<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('dateOfRabies')} type=\"date\" name='dateOfRabies' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dateOfRabies && formik.errors.dateOfRabies ? formik.errors.dateOfRabies : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"dateOfLepVaccine\">Leptospirosis Vaccination Date<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('dateOfLepVaccine')} type=\"date\" name='dateOfLepVaccine' className={style?.textFiled} />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dateOfLepVaccine && formik.errors.dateOfLepVaccine ? formik.errors.dateOfLepVaccine : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petFrom\">Pet From<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('petFrom')} name='petFrom' className={style?.textFiled} >\r\n                <option value=\"\">Select</option>\r\n                {\r\n                  masterData?.occurenceType?.map((item, index) => (\r\n                    <option key={index} value={item.id}>{item.occurrence_types}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petFrom && formik.errors.petFrom ? formik.errors.petFrom : null}</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <p className='flex mt-3 gap-x-3'>\r\n          <input type=\"checkbox\" name=\"\" id=\"\" />\r\n          <p>\r\n            I have entered the correct information and agree to the terms and conditions.\r\n          </p>\r\n        </p>\r\n\r\n\r\n        <div className='flex justify-center my-10'>\r\n          <button type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded shadow'>Submit Application</button>\r\n        </div>\r\n      </form>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetRegistrationFormIndex\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { contextVar } from '../../Components/ContextVar'\r\nimport FormAppliedSuccess from './Form/FormAppliedSuccess'\r\nimport { PetAccordionPage } from './Form/PetAccordionPage'\r\nimport PetRegistrationFormIndex from './Form/PetRegistrationFormIndex'\r\n\r\nconst PetRegistrationIndex = () => {\r\n  const [currentScreen, setCurrentScreen] = useState(1)\r\n  const [dataAfterApplicationSubmit, setDataAfterApplicationSubmit] = useState()\r\n\r\n  const { setBreadCrumbData } = useContext(contextVar)\r\n  useEffect(() => {\r\n    setBreadCrumbData([\"Apply Pet Registration\"])\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-9 space-x-6 my-2 mx-8\">\r\n        <div className='col-span-9 border border-gray-400 rounded'>\r\n          <p className=\"border-b border-indigo-300 bg-indigo-200 p-1 text-center text-xl shadow-md font-semibold\">Pet Registration Application</p>\r\n          <div className='p-5'>\r\n            <p className={`${currentScreen == 1 ? 'block' : 'hidden'}`}> <PetRegistrationFormIndex screen={setCurrentScreen} data={setDataAfterApplicationSubmit} /> </p>\r\n            <p className={`${currentScreen == 2 ? 'block' : 'hidden'}`}> <FormAppliedSuccess screen={setCurrentScreen} data={dataAfterApplicationSubmit} /></p>\r\n          </div>\r\n        </div>\r\n        {/* <div className='col-span-3 border border-gray-400 rounded p-3'>\r\n          <p className=\"border-2 border-indigo-400 p-2 text-center bg-white text-xl shadow-md\"> Frequently Asked Questions </p>\r\n          <PetAccordionPage />\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetRegistrationIndex"],"names":["props","_props$data","_props$data2","navigate","useNavigate","console","log","data","applicationNo","_jsxs","className","children","_jsx","onClick","_props$data3","concat","id","style","required","label","textFiled","textArea","_masterData$registrat","_masterData$ownertype","_masterData$petGender","_masterData$occurence","_useState","useState","_useState2","_slicedToArray","ulbList","setUlbList","_useState3","_useState4","wardList","setWardList","_useState5","_useState6","masterData","setMasterData","_WaterApiList","WaterApiList","api_ulbList","header","api_wardList","_PetRegAPIList","PetRegAPIList","api_PetRegistrationApplyForm","api_PetRegistrationMaster","header1","validationSchema","yup","ulb","applicantName","formik","useFormik","initialValues","enableReinitialize","onSubmit","values","resetForm","submitForm","payload","address","applyThrough","holdingNo","breed","categoryApplication","color","dateOfLepVaccine","dateOfRabies","doctorName","doctorRegNo","mobileNo","panNo","petBirthDate","petFrom","petGender","petIdentity","petName","petType","ward","email","AxiosInterceptors","then","res","status","screen","catch","err","useEffect","_Fragment","handleSubmit","onChange","event","target","name","value","htmlFor","_objectSpread","getFieldProps","map","item","index","ulb_name","touched","errors","registrationThrough","registration_through","type","ownertype","owner_type","length","ward_name","rows","pet_gender","occurenceType","occurrence_types","currentScreen","setCurrentScreen","dataAfterApplicationSubmit","setDataAfterApplicationSubmit","setBreadCrumbData","useContext","contextVar","PetRegistrationFormIndex","FormAppliedSuccess"],"sourceRoot":""}