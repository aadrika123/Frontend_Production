{"version":3,"file":"static/js/940.f616fb29.chunk.js","mappings":"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","sources":["Pages/LandingDashboard/PropertyDashboard/ApplicationInformation/InfoNewAssessment.js","Pages/LandingDashboard/PropertyDashboard/ApplicationInformation/InfoReAssessment.js","Pages/LandingDashboard/PropertyDashboard/SafApplyCard.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction InfoNewAssessment(props) {\r\n    return (\r\n        <div className='w-full sm:w-4/5 lg:3/5 mx-auto'>\r\n            <div className='bg-white shadow-xl flex justify-center items-center relative'>\r\n                <button\r\n                    onClick={props?.closeInfoModal}\r\n                    type=\"button\"\r\n                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                >\r\n                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                        <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                            clip-rule=\"evenodd\"\r\n                        ></path>\r\n                    </svg>\r\n                </button>\r\n                <div\r\n                    className=\"w-full px-4 mx-auto py-4 md:py-6 \">\r\n                    <div\r\n                        className=\"w-full\">\r\n                        <div>\r\n                            <h2 className=\"text-3xl font-medium text-center\">Apply Assessment</h2>\r\n                            <div className=\"mt-2 text-center w-full\">Choose from these assessment types</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-10 relative\">\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoNewAssessment","import React from 'react'\r\n\r\nfunction InfoReAssessment(props) {\r\n    return (\r\n        <div className='w-full sm:w-4/5 lg:3/5 mx-auto'>\r\n            <div className='bg-white shadow-xl flex justify-center items-center relative'>\r\n                <button\r\n                    onClick={props?.closeInfoModal}\r\n                    type=\"button\"\r\n                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                >\r\n                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                        <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                            clip-rule=\"evenodd\"\r\n                        ></path>\r\n                    </svg>\r\n                </button>\r\n                <div\r\n                    className=\"w-full px-4 mx-auto py-4 md:py-6 \">\r\n                    <div\r\n                        className=\"w-full\">\r\n                        <div>\r\n                            <h2 className=\"text-3xl font-medium text-center\">Apply Re Assessment</h2>\r\n                            <div className=\"mt-2 text-center w-full\">Choose from these assessment types</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-10 relative\">\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoReAssessment","import { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport newAsss from '../../../Components/Media/new.png'\r\nimport re from '../../../Components/Media/re.png'\r\nimport transfer from '../../../Components/Media/transfer.png'\r\nimport add from '../../../Components/Media/add.png'\r\nimport division from '../../../Components/Media/division.png'\r\nimport concession from '../../../Components/Media/concession.png'\r\nimport objection from '../../../Components/Media/objection.png'\r\nimport rwh from '../../../Components/Media/rwh.png'\r\nimport { BsQuestionCircle } from 'react-icons/bs'\r\nimport { Tooltip } from 'react-tooltip'\r\nimport CommonModal from '../../../Components/GlobalData/CommonModal'\r\nimport InfoNewAssessment from './ApplicationInformation/InfoNewAssessment'\r\nimport InfoReAssessment from './ApplicationInformation/InfoReAssessment'\r\n\r\nfunction SafApplyCard(props) {\r\n    const navigate = useNavigate()\r\n    const [infoCardCount, setinfoCardCount] = useState(0)\r\n\r\n    const activateInfoCard = (e, count) => {\r\n        e.stopPropagation()\r\n        setinfoCardCount(count)\r\n    }\r\n\r\n    const closeInfoModal = () => {\r\n        setinfoCardCount(0)\r\n    }\r\n\r\n    if (infoCardCount == 1) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 2) { return (<CommonModal><InfoReAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 3) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 4) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 5) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 6) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 7) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 8) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n\r\n\r\n\r\n    return (\r\n        <div className='w-full sm:w-4/5 lg:3/5 mx-auto'>\r\n            <div className='bg-white shadow-xl flex justify-center items-center relative'>\r\n                <button\r\n                    onClick={() => props?.closeModal(false)}\r\n                    type=\"button\"\r\n                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                >\r\n                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                        <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                            clip-rule=\"evenodd\"\r\n                        ></path>\r\n                    </svg>\r\n                </button>\r\n                <div\r\n                    className=\"w-full px-4 mx-auto py-4 md:py-6 \">\r\n                    <div\r\n                        className=\"w-full\">\r\n                        <div>\r\n                            <h2 className=\"text-3xl font-medium text-center\">Property related applications</h2>\r\n                            <div className=\"mt-2 text-center w-full\">Choose from these application types</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-10 relative\">\r\n                        <div className=\"grid gap-6 grid-cols-2 sm:grid-cols-3 lg:grid-cols-4\">\r\n                            {/* 1 NEW ASSESSMENT */}\r\n                            <div onClick={() => navigate('/safform/new/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card1\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 1)} id=\"card1\" data-tooltip-content=\"Click to know more about new assessment.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-16 w-16\"\r\n                                    src={newAsss}\r\n                                    alt=\"Mobiles\" />\r\n                                <div className=\"font-bold mt-4 text-center\">New Assessment</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this for fresh assessment of property.</div>\r\n                            </div>\r\n\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, reAssessment: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card5\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 2)} id=\"card5\" data-tooltip-content=\"Click to know more about new re assessment.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-16 w-16\"\r\n                                    src={re}\r\n                                    alt=\"Mobiles\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Re Assessment</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this for re assesment of your property.</div>\r\n                            </div>}\r\n\r\n\r\n\r\n                            {/* 3 MUTATION */}\r\n                            <div onClick={() => navigate('/safform/mu/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card2\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 3)} id=\"card2\" data-tooltip-content=\"Click to know more about mutation.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={transfer}\r\n                                    alt=\"Fashion\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Mutation</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this for transfer of ownership.</div>\r\n\r\n                            </div>\r\n\r\n                            {/* 4 BIFURCATION */}\r\n                            <div onClick={() => navigate('/safform/bi/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card3\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 4)} id=\"card3\" data-tooltip-content=\"Click to know more about bifurcation.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={division}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Bifurcation</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your property has been bifurcated from existing property.</div>\r\n\r\n                            </div>\r\n                            {/* 5 AMALGAMATION */}\r\n                            <div onClick={() => navigate('/safform/am/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card4\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 5)} id=\"card4\" data-tooltip-content=\"Click to know more about amalgamation.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={add}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Amalgamation</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your property has been amalgamated from existing properties.</div>\r\n                            </div>\r\n\r\n\r\n                            {/* 6 Concession */}\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, concession: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card6\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 6)} id=\"card6\" data-tooltip-content=\"Click to know more about concession.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={concession}\r\n                                    alt=\"Fashion\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Concession</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this to apply for concession application to get reabte on your property tax if applicable.</div>\r\n\r\n                            </div>\r\n                            }\r\n\r\n                            {/* 7 Rainwater harvesting */}\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, rainWater: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card7\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 7)} id=\"card7\" data-tooltip-content=\"Click to know more about Rainwater harvesting.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={rwh}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Rainwater Harvesting</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your rainwater harvesting status has been changed.</div>\r\n\r\n                            </div>\r\n                            }\r\n\r\n                            {/* 8 Objection */}\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, objection: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card8\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 8)} id=\"card8\" data-tooltip-content=\"Click to know more about objection.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={objection}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Objection</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your you have to object on your property.</div>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SafApplyCard"],"names":["props","className","onClick","closeInfoModal","type","class","fill","d","navigate","useNavigate","useState","infoCardCount","setinfoCardCount","activateInfoCard","e","count","stopPropagation","CommonModal","closeModal","href","style","anchorId","id","src","newAsss","alt","propertyCount","setPropertyScrollStatus","PropertyScrollStatus","reAssessment","re","transfer","division","add","concession","rainWater","rwh","objection"],"sourceRoot":""}