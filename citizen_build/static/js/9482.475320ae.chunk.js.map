{"version":3,"file":"static/js/9482.475320ae.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx","Components/GlobalData/LocalBrowserData.js","Pages/Property/PaymentCard.js","Pages/Property/PropertyPayment.js"],"sourcesContent":["\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n","export const name = localStorage.getItem('citizenName')\r\nexport const mobile = localStorage.getItem('citizenMobile')\r\n","import { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport rupee from '../../Components/Media/rupee.png'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nimport BarLoader from '../../Components/Common/BarLoader'\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  allowFloatInput,\r\n  allowCharacterNumberInput,\r\n  allowCharacterNumberSpaceCommaInput,\r\n  allowCharacterSpaceCommaInput,\r\n  nullToNA,\r\n  nullToZero,\r\n} from \"../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport RazorpayPaymentScreen from \"../../Components/RazorpayPaymentScreen\";\r\nimport CitizenApplyApiList from \"../../Components/CitizenApplyApiList\";\r\nimport ApiHeader from \"../../Components/ApiList/ApiHeader\";\r\nimport PaymentTranscationScreen from \"../../Components/PaymentTranscationScreen\";\r\nimport { name, mobile } from '../../Components/GlobalData/LocalBrowserData'\r\nimport { BiRupee } from 'react-icons/bi'\r\nimport { allowNumberInput } from \"../AdvertisementModule/FunctionComponent/ValidationFunction\";\r\nimport BottomErrorCard from \"../../Components/BottomErrorCard\";\r\n\r\n\r\nfunction PaymentCard(props) {\r\n  const {\r\n    propertyGenerateOrderId,\r\n    propertyGenerateHoldingOrderId,\r\n    propertyGenerateOrderIdDirect,\r\n    api_getTransactionNoForReceipt,\r\n    api_postPropertyPayment,\r\n    api_postSafPayment,\r\n  } = CitizenApplyApiList();\r\n  const { id, moduleType, userType } = useParams();\r\n  const [responseScreenStatus, setResponseScreenStatus] = useState(\"\");\r\n  const [isLoading, setisLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  // SETTING GLOBAL TITLE AT ONCE USING CUSTOM HOOK\r\n\r\n  const [formHide, setFormHide] = useState(false);\r\n  const [paymentMode, setPaymentMode] = useState();\r\n  const [advanceStatus, setadvanceStatus] = useState(false);\r\n  const [currentTransactionNo, setcurrentTransactionNo] = useState(null);\r\n  const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n  // const validationSchema = yup.object({\r\n  //   paymentUptoYear: yup.string().required(\"Select payment upto year\"),\r\n  //   paymentUptoQuarter: yup.string().required(\"Enter payment upto quarter\"),\r\n  //   paymentMode: yup.string().required(\"select payment mode\"),\r\n\r\n  //   remarks: yup.string().required(\"Enter remarks\"),\r\n  //   bankName: yup.string(),\r\n  //   branchName: yup.string(),\r\n  //   cheque_dd_no: yup.string(),\r\n  //   cheque_dd_date: yup.string(),\r\n\r\n  //   payAdvance: yup.string(),\r\n  //   advanceAmount: yup.string(),\r\n  // });\r\nlet validationSchema\r\n  if (moduleType == 'holding' || moduleType=='direct') {\r\n    validationSchema = yup.object({\r\n      paymentUptoYear: yup.string().required('Select Payment upto year'),\r\n      paymentUptoQuarter: yup.string().required('Select payment upt quarter'),\r\n      paymentMode: yup.string(),\r\n\r\n      remarks: yup.string().required('Enter remarks'),\r\n      payAdvance: yup.string(),\r\n      advanceAmount: yup.string().when('payAdvance', {\r\n        is: true,\r\n        then: yup.string().required('Enter advance amount')\r\n      }),\r\n\r\n\r\n    })\r\n  }\r\n  if (moduleType == 'saf') {\r\n    validationSchema = yup.object({\r\n      paymentUptoYear: yup.string(),\r\n      paymentUptoQuarter: yup.string(),\r\n      paymentMode: yup.string(),\r\n\r\n      remarks: yup.string(),\r\n\r\n      payAdvance: yup.string(),\r\n      advanceAmount: yup.string(),\r\n\r\n\r\n    })\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      paymentUptoYear: \"\",\r\n      paymentUptoQuarter: \"\",\r\n      paymentMode: \"ONLINE\",\r\n\r\n      remarks: \"\",\r\n      payAdvance: \"\",\r\n      advanceAmount: \"\",\r\n    },\r\n\r\n    onSubmit: (values, resetForm) => {\r\n      console.log(\"values at submit payment\", values);\r\n        getOrderId();\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const toggleForm = (e) => {\r\n    console.log(\"checkbox is changing \", e.target.checked);\r\n    setFormHide(e.target.checked);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    {\r\n      name == \"paymentMode\" && setPaymentMode(value);\r\n    }\r\n    {\r\n      name == \"payAdvance\" && setadvanceStatus(e.target.checked);\r\n    }\r\n\r\n    { (name == 'paymentUptoQuarter') && props?.fetchDemandDetail(value, formik.values.paymentUptoYear) }\r\n\r\n    { name == 'remarks' && formik.setFieldValue(\"remarks\", allowCharacterSpaceCommaInput(value, formik.values.remarks, 100)) }\r\n    { name == 'bankName' && formik.setFieldValue(\"bankName\", allowCharacterSpaceCommaInput(value, formik.values.bankName, 100)) }\r\n    { name == 'branchName' && formik.setFieldValue(\"branchName\", allowCharacterSpaceCommaInput(value, formik.values.branchName, 100)) }\r\n    { name == 'cheque_dd_no' && formik.setFieldValue(\"cheque_dd_no\", allowCharacterNumberInput(value, formik.values.cheque_dd_no, 20)) }\r\n    { name == 'advanceAmount' && formik.setFieldValue(\"advanceAmount\", allowNumberInput(value, formik.values.advanceAmount, 10)) }\r\n\r\n  };\r\n\r\n  //// PAYMENT METHOD  ////\r\n  const dreturn = (data) => {\r\n    // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n    console.log(\"all transaciton response.... =>\", data);\r\n    setResponseScreenStatus(data.status);\r\n    // return\r\n    if (data?.status) {\r\n      fetchTransactionNo(data?.data);\r\n      toast.success(\"Payment Success....\");\r\n    } else {\r\n      toast.error(\"Payment failed....\");\r\n    }\r\n  };\r\n\r\n  // FETCHING TRANSACTION NO TO PASS TO RECEIPT\r\n  const fetchTransactionNo = (data) => {\r\n    let requestBody = {\r\n      orderId: data?.razorpay_order_id,\r\n      paymentId: data?.razorpay_payment_id,\r\n    };\r\n    axios\r\n      .post(api_getTransactionNoForReceipt, requestBody, ApiHeader())\r\n      .then(function (response) {\r\n        setcurrentTransactionNo(response?.data?.data?.transaction_no)\r\n        console.log(\"transaction no get response...\", response?.data);\r\n        // return\r\n        // navigate(\r\n        //   `/paymentReceipt/${response?.data?.data?.transaction_no}/${moduleType == \"saf\" ? \"saf\" : \"holding\"\r\n        //   }`\r\n        // );\r\n        setisLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"transaction no get error...\", error);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  // FUNCTION FOR PAYMENT OTHER THAN ONLINE MODE\r\n  const makePayment = (data) => {\r\n    let url;\r\n    let requestBody = {\r\n      id: id,\r\n      amount: props?.paymentDetails?.totalDues,\r\n      paymentMode: data?.paymentMode,\r\n      chequeDate: data?.cheque_dd_date,\r\n      bankName: data?.bankName,\r\n      branchName: data?.branchName,\r\n      chequeNo: data?.cheque_dd_no,\r\n    };\r\n\r\n    if (moduleType == \"holding\") {\r\n      url = api_postPropertyPayment;\r\n    }\r\n    if (moduleType == \"direct\") {\r\n      url = api_postPropertyPayment;\r\n    }\r\n    if (moduleType == \"saf\") {\r\n      url = api_postSafPayment;\r\n    }\r\n\r\n    console.log(\"before make payment..\", requestBody);\r\n    // return\r\n    axios\r\n      .post(url, requestBody, ApiHeader())\r\n      .then(function (response) {\r\n        console.log(\"property payment response...\", response?.data);\r\n        // return\r\n        navigate(\r\n          `/paymentReceipt/${response?.data?.transaction_no}/${moduleType}`\r\n        );\r\n        setisLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"property payment error..\", error);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  const getOrderId = async () => {\r\n    // This Function is used to Order Id Generation\r\n    // props.showLoader(true)\r\n    setisLoading(true)\r\n    let url\r\n    let orderIdPayload\r\n    if (moduleType == 'holding') {\r\n      url = propertyGenerateHoldingOrderId\r\n      orderIdPayload = {\r\n        propId: id,\r\n        amount: props?.paymentDetails?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n    if (moduleType == 'saf') {\r\n      url = propertyGenerateOrderId\r\n      orderIdPayload = {\r\n        id: id,\r\n        amount: props?.safPaymentDetailsData?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n\r\n    if (moduleType == 'direct') {\r\n      url = propertyGenerateOrderIdDirect\r\n      orderIdPayload = {\r\n        propId: id,\r\n        amount: props?.paymentDetails?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n\r\n    console.log('name....', name, '....mobile..', mobile)\r\n\r\n    // setLoader(true)\r\n\r\n    console.log(\r\n      \"orderidpayload at payment before...\",\r\n      orderIdPayload,\r\n      \"moduleId..\",\r\n      moduleType\r\n    );\r\n    axios\r\n      .post(url, orderIdPayload, ApiHeader()) // This API will generate Order ID\r\n      .then((res) => {\r\n        console.log(\"Order Id Response \", res?.data);\r\n        if (res?.data?.status === true) {\r\n          console.log(\"OrderId Generated True\", res?.data?.data);\r\n          RazorpayPaymentScreen(res?.data?.data, dreturn); //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup\r\n         \r\n\r\n        }\r\n        else {\r\n          // props.showLoader(false)\r\n          activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n        }\r\n        setisLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n        console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n        setisLoading(false)\r\n\r\n        // props.showLoader(false)\r\n      });\r\n  };\r\n\r\n  const activateBottomErrorCard = (state, msg) => {\r\n    seterroMessage(msg)\r\n    seterroState(state)\r\n\r\n}\r\n\r\n  if (responseScreenStatus == true) {\r\n    return (\r\n      <>\r\n        <div className=\"w-full h-full bg-white p-20\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">Your payment has been successfully done !</div>\r\n            <div className=\"text-center mt-6\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/paymentReceipt/${currentTransactionNo}/${moduleType == \"saf\" ? \"saf\" : \"holding\"\r\n                }`)}>View Receipt</button>\r\n              {moduleType != \"direct\" && <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/propApplicationDetails/${id}`)}>View Application</button>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n\r\n        isLoading && <BarLoader />\r\n      }\r\n       {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n      <ToastContainer position=\"top-right\"\r\n        autoClose={2000} />\r\n      <div className={` block p-4 mt-4 w-full md:py-4 md:px-40 md:pb-0 md:pt-0 rounded-lg shadow-lg bg-white md:w-full mx-auto  overflow-x-auto mb-20 `}>\r\n        {/* <h1 className='px-2 font-semibold mt-0 bg-sky-100 text-center text-gray-700 font-serif py-2 text-lg shadow-lg border border-white'>SAF Payment</h1> */}\r\n\r\n        <div className=\" block p-4 w-full md:py-6 rounded-lg bg-white mx-auto \">\r\n          {/* <h1 className='mb-2 text-gray-600'><img src={rupee} alt=\"rupee-image\" className='w-5 inline' /> Demand Amount - <span className='font-semibold text-lg text-gray-800'>2000</span></h1> */}\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            onChange={handleChange}\r\n            className=\"p-4 relative\"\r\n          >\r\n            <div className=\"grid grid-cols-12\">\r\n              {moduleType != \"saf\" && (\r\n                <>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Upto Year\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentUptoYear\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {props?.paymentDetails?.paymentUptoYrs?.map(\r\n                        (data, index) => (\r\n                          <option\r\n                            selected={index == 0 ? true : false}\r\n                            value={data}\r\n                          >\r\n                            {data}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentUptoYear &&\r\n                        formik.errors.paymentUptoYear\r\n                        ? formik.errors.paymentUptoYear\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Upto Quarter\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentUptoQuarter\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {props?.paymentDetails?.paymentUptoQtrs?.map(\r\n                        (data, index) => (\r\n                          <option\r\n                            selected={index == 0 ? true : false}\r\n                            value={data}\r\n                          >\r\n                            {data}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentUptoQuarter &&\r\n                        formik.errors.paymentUptoQuarter\r\n                        ? formik.errors.paymentUptoQuarter\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Mode\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentMode\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      {/* IF USER TYPE IS DIRECT CITIZEN THEN DON'T SHOW OTHER PAYMENT MEHTOD */}\r\n                      {/* {\r\n                    userType != 'direct' &&\r\n                    <>\r\n                      <option value=\"CASH\" >Cash</option>\r\n                      <option value=\"CHEQUE\" >Cheque</option>\r\n                      <option value=\"DD\" >DD</option>\r\n                    </>\r\n                  } */}\r\n                      <option value=\"ONLINE\">Online</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentMode && formik.errors.paymentMode\r\n                        ? formik.errors.paymentMode\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* IF USER TYPE IS NOT DIRECT CITIZEN THEN ONLY SHOW REMARKS */}\r\n                  {userType != \"direct\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                        <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        Remarks\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"remarks\")}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        placeholder=\"Enter new ward no.\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.remarks && formik.errors.remarks\r\n                          ? formik.errors.remarks\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* toggle inputs of payment mode */}\r\n                  {(paymentMode == \"CHEQUE\" || paymentMode == \"DD\") && (\r\n                    <>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Bank Name\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"bankName\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.bankName && formik.errors.bankName\r\n                            ? formik.errors.bankName\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Branch Name\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"branchName\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.branchName && formik.errors.branchName\r\n                            ? formik.errors.branchName\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Cheque/DD No\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"cheque_dd_no\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.cheque_dd_no &&\r\n                            formik.errors.cheque_dd_no\r\n                            ? formik.errors.cheque_dd_no\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Cheque/DD Date\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"cheque_dd_date\")}\r\n                          type=\"date\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.cheque_dd_date &&\r\n                            formik.errors.cheque_dd_date\r\n                            ? formik.errors.cheque_dd_date\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* pay advance */}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <input\r\n                      {...formik.getFieldProps(\"payAdvance\")}\r\n                      id=\"checked-checkbox\"\r\n                      type=\"checkbox\"\r\n                      class=\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 cursor-pointer\"\r\n                    />\r\n                    <label\r\n                      for=\"checked-checkbox\"\r\n                      class=\"ml-2 text-sm font-medium text-gray-900 darks:text-gray-300\"\r\n                    >\r\n                      Pay Advance\r\n                    </label>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.payAdvance && formik.errors.payAdvance\r\n                        ? formik.errors.payAdvance\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {advanceStatus && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                        <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        advance amount\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"advanceAmount\")}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        placeholder=\"Enter new ward no.\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.advanceAmount &&\r\n                          formik.errors.advanceAmount\r\n                          ? formik.errors.advanceAmount\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* line break */}\r\n              <div className=\"col-span-12\"></div>\r\n\r\n              {/* text details */}\r\n              {/* SHOW IN CASE OF HOLDING */}\r\n              {moduleType != \"saf\" && (\r\n                <div className=\"bg-white col-span-12 grid grid-cols-12 pt-6 mb-4 border border-gray-200\">\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.paymentDetails?.rebateAmt)}\r\n                    </span>\r\n                  </div>\r\n                  {moduleType == \"saf\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <span>Late Assessment Penalty :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold\">\r\n                        {nullToZero(props?.paymentDetails?.lateAssPenalty)}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Special Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.paymentDetails?.rebatePerc)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>1% Penalty :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.paymentDetails?.onePercPenalty)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <div className=\"w-2/3\">\r\n                      <span>Total Payable Amount :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold text-xl\">\r\n                        {nullToZero(props?.paymentDetails?.payableAmount)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* SHOW IN CASE OF SAF */}\r\n              {moduleType == \"saf\" && (\r\n                <div className=\"bg-white col-span-12 grid grid-cols-12 pt-6 mb-4 border border-gray-200\">\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.safPaymentDetailsData?.rebateAmount)}\r\n                    </span>\r\n                  </div>\r\n                  {moduleType == \"saf\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <span>Late Assessment Penalty :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold\">\r\n                        {nullToZero(props?.safPaymentDetailsData?.lateAssessmentPenalty)}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Special Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.safPaymentDetailsData?.specialRebateAmount)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>1% Penalty Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.safPaymentDetailsData?.totalOnePercPenalty)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <div className=\"w-2/3\">\r\n                      <span>Total Payable Amount :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold text-xl\">\r\n                        {nullToZero(props?.safPaymentDetailsData?.payableAmount)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"col-span-12 grid grid-cols-2 mt-10\">\r\n                <div className=\"\"></div>\r\n                <div className=\"md:pl-10 text-right\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"ml-4 font-bold px-6 py-2 bg-indigo-500 text-white  text-sm leading-tight uppercase rounded  hover:bg-indigo-700 hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out shadow-xl border border-white\"\r\n                  >\r\n                    Pay <BiRupee className=\"inline mr-0 ml-2\" />\r\n                    {moduleType == 'saf' && nullToNA(props?.safPaymentDetailsData?.payableAmount)}\r\n                    {moduleType != 'saf' && nullToNA(props?.paymentDetails?.payableAmount)}\r\n                  </button>\r\n                  {/* {userType != 'direct' && <button type='submit' className=\" px-6 py-2.5 bg-green-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Pay Tax</button>} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentCard;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BarLoader from \"../../Components/Common/BarLoader\";\r\nimport ApiHeader from \"../../Components/ApiList/ApiHeader\";\r\nimport PropertyApiList from \"../../Components/ApiList/PropertyApiList\";\r\nimport PaymentCard from \"./PaymentCard\";\r\nimport CitizenApplyApiList from \"../../Components/CitizenApplyApiList\";\r\nimport BrandLoader from \"../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../AdvertisementModule/ServerErrorCard\";\r\nimport { nullToNA } from \"../../Components/Common/PowerUps/PowerupFunctions\";\r\n\r\nfunction PropertyPayment(props) {\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [isLoading2, setisLoading2] = useState(false);\r\n    const [applicationFullData, setapplicationFullData] = useState()\r\n    const [demandDetail, setdemandDetail] = useState()\r\n    const [fullData, setfullData] = useState()\r\n    const [loader, setLoader] = useState(false) // Used when click on Pay Now\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const { id, moduleType } = useParams()\r\n\r\n    const { propertyGenerateHoldingOrderId, api_getDirectHoldingDemandById, api_getHoldingDemandById, api_getsafDemandById } = CitizenApplyApiList();\r\n\r\n    const fetchDemandDetail = (fQtr = null,fYear = null) => {\r\n        seterroState(false)\r\n        let url\r\n        let requestBody\r\n\r\n        if (moduleType == 'holding') {\r\n            url = api_getHoldingDemandById\r\n            requestBody = {\r\n                propId: id,\r\n                fYear: fYear,\r\n                qtr: fQtr\r\n            }\r\n        }\r\n        if (moduleType == 'saf') {\r\n            url = api_getsafDemandById\r\n            requestBody = {\r\n                id: id\r\n            }\r\n        }\r\n        if (moduleType == 'direct') {\r\n            url = api_getDirectHoldingDemandById\r\n            requestBody = {\r\n                propId: id,\r\n                fYear: fYear,\r\n                qtr: fQtr\r\n            }\r\n        }\r\n\r\n\r\n        if (fQtr !== null) {\r\n            setisLoading2(true)\r\n        } else {\r\n            setisLoading(true)\r\n        }\r\n\r\n        axios.post(url, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('payment details data...', response?.data)\r\n                setdemandDetail(response?.data?.data)\r\n                setfullData(response?.data)\r\n                if (fQtr !== null) {\r\n                    setisLoading2(false)\r\n                } else {\r\n                    setisLoading(false)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('payment details error...', error)\r\n                seterroState(true)\r\n                if (fQtr !== null) {\r\n                    setisLoading2(false)\r\n                } else {\r\n                    setisLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDemandDetail()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading2 && <BarLoader />}\r\n            {/* <div className=\" font-bold text-2xl pb-4 md:py-4\">Holding Deactivation</div> */}\r\n\r\n            <div className=\"\">\r\n                <div className='w-full bg-white shadow-xl mb-6'>\r\n                    <div className='py-6 mt-2 rounded-lg shadow-lg p-4'>\r\n                        <div className=\"flex flex-col md:flex-row space-y-2 md:space-x-5 pl-4 \">\r\n                            {moduleType != 'saf' && <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.holding_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Holding No.</div>\r\n                            </div>}\r\n                            {moduleType == 'saf' && <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.saf_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Application No.(Saf No)</div>\r\n                            </div>}\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.old_ward_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Ward No.</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-lg'>{nullToNA(demandDetail?.basicDetails?.old_ward_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>New Ward No</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.ownership_type)}</div>\r\n                                <div className='text-gray-500 text-xs'>Ownership Type</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.property_type)}</div>\r\n                                <div className='text-gray-500 text-xs'>Property Type</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col md:flex-row space-y-2 md:space-x-10  pl-4 mt-4\">\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.zone_mstr_id)}</div>\r\n                                <div className='text-gray-500 text-xs'>Zone</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.is_mobile_tower)}</div>\r\n                                <div className='text-gray-500 text-xs'>Property has Mobile Tower(s) ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.is_hoarding_board)} </div>\r\n                                <div className='text-gray-500 text-xs'>Property has Hoarding Board(s) ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.is_petrol_pump)}</div>\r\n                                <div className='text-gray-500 text-xs'>Is property a Petrol Pump ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm' >{nullToNA(demandDetail?.basicDetails?.is_water_harvesting)}</div>\r\n                                <div className='text-gray-500 text-xs'>Rainwater harvesting provision ?</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <PaymentCard fetchDemandDetail={fetchDemandDetail} safPaymentDetailsData={demandDetail?.amounts} paymentDetails={demandDetail?.duesList} ulbId={demandDetail?.basicDetails?.ulb_id} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full h-40 md:none\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PropertyPayment;\r\n"],"names":["allowFloatInput","currentValue","oldValue","max","arguments","length","undefined","test","allowNumberInput","allowCharacterNumberInput","allowCharacterNumberForwardInput","allowMailInput","name","localStorage","getItem","mobile","props","_props$paymentDetails4","_props$paymentDetails5","_props$paymentDetails6","_props$paymentDetails7","_props$paymentDetails8","_props$paymentDetails9","_props$paymentDetails10","_props$paymentDetails11","_props$paymentDetails12","_props$safPaymentDeta2","_props$safPaymentDeta3","_props$safPaymentDeta4","_props$safPaymentDeta5","_props$safPaymentDeta6","_props$safPaymentDeta7","_props$paymentDetails13","validationSchema","_CitizenApplyApiList","CitizenApplyApiList","propertyGenerateOrderId","propertyGenerateHoldingOrderId","propertyGenerateOrderIdDirect","api_getTransactionNoForReceipt","_useParams","api_postPropertyPayment","api_postSafPayment","useParams","id","moduleType","userType","_useState","useState","_useState2","_slicedToArray","responseScreenStatus","setResponseScreenStatus","_useState3","_useState4","isLoading","setisLoading","navigate","useNavigate","_useState5","_useState6","_useState7","_useState8","paymentMode","setPaymentMode","_useState9","_useState10","advanceStatus","setadvanceStatus","_useState11","_useState12","currentTransactionNo","setcurrentTransactionNo","_useState13","_useState14","erroState","seterroState","_useState15","_useState16","erroMessage","seterroMessage","yup","paymentUptoYear","required","paymentUptoQuarter","remarks","payAdvance","advanceAmount","when","is","then","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","getOrderId","dreturn","data","status","fetchTransactionNo","toast","requestBody","orderId","razorpay_order_id","paymentId","razorpay_payment_id","axios","ApiHeader","response","_response$data","_response$data$data","transaction_no","catch","error","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","orderIdPayload","_props$paymentDetails2","_props$safPaymentDeta","_props$paymentDetails3","wrap","_context","prev","next","propId","amount","paymentDetails","payableAmount","contact","safPaymentDetailsData","res","_res$data","_res$data2","_res$data3","RazorpayPaymentScreen","activateBottomErrorCard","err","stop","apply","state","msg","_jsx","_Fragment","children","className","_jsxs","onClick","concat","BarLoader","BottomErrorCard","errorTitle","ToastContainer","position","autoClose","handleSubmit","onChange","e","target","value","checked","fetchDemandDetail","setFieldValue","allowCharacterSpaceCommaInput","bankName","branchName","cheque_dd_no","_objectSpread","getFieldProps","type","paymentUptoYrs","map","index","selected","touched","errors","paymentUptoQtrs","placeholder","cheque_dd_date","class","for","nullToZero","rebateAmt","lateAssPenalty","rebatePerc","onePercPenalty","rebateAmount","lateAssessmentPenalty","specialRebateAmount","totalOnePercPenalty","BiRupee","nullToNA","_demandDetail$basicDe","_demandDetail$basicDe2","_demandDetail$basicDe3","_demandDetail$basicDe4","_demandDetail$basicDe5","_demandDetail$basicDe6","_demandDetail$basicDe7","_demandDetail$basicDe8","_demandDetail$basicDe9","_demandDetail$basicDe10","_demandDetail$basicDe11","_demandDetail$basicDe12","isLoading2","setisLoading2","demandDetail","setdemandDetail","setfullData","api_getDirectHoldingDemandById","api_getHoldingDemandById","api_getsafDemandById","fQtr","fYear","qtr","useEffect","BrandLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","basicDetails","holding_no","saf_no","old_ward_no","ownership_type","property_type","zone_mstr_id","is_mobile_tower","is_hoarding_board","is_petrol_pump","is_water_harvesting","PaymentCard","amounts","duesList","ulbId","ulb_id"],"sourceRoot":""}