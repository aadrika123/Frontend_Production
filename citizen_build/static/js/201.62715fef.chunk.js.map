{"version":3,"file":"static/js/201.62715fef.chunk.js","mappings":"oRA+IA,IA7HA,SAAsCA,GAElC,IAAQC,GAA8BC,EAAAA,EAAAA,KAA9BD,0BACRE,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAA8Bb,EAAAA,EAAAA,YAAUc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA1BC,EAAA,GAAYA,EAAA,GAE1BC,QAAQC,IAAI,0BAA2BpB,EAAMqB,kBAC7CF,QAAQC,IAAI,uBAAwBpB,EAAMsB,eAE1C,IAAIC,EAAgBvB,EAAMuB,cAGpBC,GAFWxB,EAAMyB,WAEEC,EAAAA,GAAW,CAChCC,QAASD,EAAAA,KAAaE,SAAS,oBAQ7BC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cANkB,CAClBJ,QAAS,IAOTK,SAAU,SAACC,GACPC,EAAkBD,EACtB,EAEAT,iBAAAA,IAMEU,EAAoB,SAACD,GACvBd,QAAQC,IAAI,eAAgBa,GAC5BzB,GAAa,GAEb,IAAI2B,EAAc,CAEd,cAAiBZ,EACjB,QAAWU,EAAON,SAEtBR,QAAQC,IAAI,4BAA6Be,GACzCC,EAAAA,EAAAA,KAAWnC,EACPkC,GACAE,EAAAA,EAAAA,MAECC,MAAK,SAAUC,GAAW,IAADC,EAEtBrB,QAAQC,IAAI,gBAAiBmB,GACjB,OAARA,QAAQ,IAARA,GAAc,QAANC,EAARD,EAAUE,YAAI,IAAAD,GAAdA,EAAgBE,QACX,OAAL1C,QAAK,IAALA,GAAAA,EAAO2C,OAAO,+BACT,OAAL3C,QAAK,IAALA,GAAAA,EAAO4C,iBAEPC,GAAwB,EAAM,0CAElCrC,GAAa,EAGjB,IACCsC,OAAM,SAAAC,GACH5B,QAAQC,IAAI,MAAO2B,GACnBF,GAAwB,EAAM,0CACzB,OAAL7C,QAAK,IAALA,GAAAA,EAAO4C,eACX,GACR,EAMMC,EAA0B,SAACG,EAAOC,GACpCjC,EAAeiC,GACfrC,EAAaoC,EAEjB,EAEA,OACIE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACK7C,IAAa8C,EAAAA,EAAAA,KAACC,EAAAA,EAAS,IACvB3C,IAAa0C,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CAACV,wBAAyBA,EAAyBW,WAAYzC,KAC7FmC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,yBAAwBL,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,OAAML,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcL,UACzBC,EAAAA,EAAAA,KAAA,MAAII,UAAU,gFAA+EL,UACzFF,EAAAA,EAAAA,MAAA,KAAGO,UAAU,+BAA8BL,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACK,EAAAA,IAAU,CAACC,SAAU,KAAM,6BAKjFN,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAASL,UACpBC,EAAAA,EAAAA,KAAA,UAAQI,UAAU,kDAAkDG,QAAS,kBAAW,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAO4C,eAAe,EAACQ,UACtGC,EAAAA,EAAAA,KAAA,OAAKQ,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,uBAAsBZ,UACxGC,EAAAA,EAAAA,KAAA,QAAM,YAAU,UAAUY,EAAE,wRAAwR,YAAU,sBAK9UZ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,sGAEtDC,EAAAA,EAAAA,KAAA,QAAMrB,SAAUH,EAAOqC,aAAad,UAEhCF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sDAAqDL,SAAA,EAChEC,EAAAA,EAAAA,KAAA,YAAUc,KAAK,UAAUV,UAAU,oFAAoFW,MAAOvC,EAAOI,OAAON,QAAS0C,SAAUxC,EAAOyC,gBACtKjB,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gCAA+BL,SAAEvB,EAAO0C,QAAQ5C,SAAWE,EAAO2C,OAAO7C,QAAUE,EAAO2C,OAAO7C,QAAU,QAC3H0B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWL,UAEtBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sBAAqBL,UAChCF,EAAAA,EAAAA,MAAA,UAAQuB,KAAK,SAAShB,UAAU,6IAA4IL,SAAA,CAAC,aAAWC,EAAAA,EAAAA,KAACqB,EAAAA,IAAM,qBAW/N,C,yJC3IO,IAkEMC,EAAkB,SAACC,EAAcC,GAA0B,IAAhBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAC1D,GAAIH,EAAaI,OAASF,EACtB,OAAOD,EAGX,MAAqB,KAAjBD,GADO,cACmBM,KAAKN,GACxBA,EAEAC,CACf,EACaM,EAAmB,SAACP,EAAcC,GAA0B,IAAhBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAC3D,GAAIH,EAAaI,OAASF,EACtB,OAAOD,EAGX,MAAqB,KAAjBD,GADO,aACmBM,KAAKN,GACxBA,EAEAC,CACf,EA+BaO,EAA4B,SAACR,EAAcC,GAA0B,IAAhBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACpE,GAAIH,EAAaI,OAASF,EACtB,OAAOD,EAGX,MAAqB,KAAjBD,GADO,mBACmBM,KAAKN,GACxBA,EAEAC,CACf,EACaQ,EAAmC,SAACT,EAAcC,GAA0B,IAAhBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAC3E,GAAIH,EAAaI,OAASF,EACtB,OAAOD,EAGX,MAAqB,KAAjBD,GADO,oBACmBM,KAAKN,GACxBA,EAEAC,CACf,EACaS,EAAiB,SAACV,EAAcC,GAA0B,IAAhBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACzD,GAAIH,EAAaI,OAASF,EACtB,OAAOD,EAGX,MAAqB,KAAjBD,GADO,qBACmBM,KAAKN,GACxBA,EAEAC,CACf,C,mKC9GAU,IAAAA,cAAoB,SA2FpB,UAzFuB,SAACvF,IAEPwF,EAAAA,EAAAA,MAAPC,IAESC,EAAAA,EAAAA,MAFjB,IAIAvF,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BwF,EAAKtF,EAAA,GAAEuF,EAAQvF,EAAA,GACtBI,GAAiCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCoF,EAAWnF,EAAA,GAAEoF,EAASpF,EAAA,GAC7BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BkF,EAAKjF,EAAA,GAAEkF,EAAQlF,EAAA,GACtBG,GAAoCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA5CgF,EAAU/E,EAAA,GAAEgF,EAAahF,EAAA,GAChCiF,GAA8B/F,EAAAA,EAAAA,UAAS,IAAGgG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAgCnG,EAAAA,EAAAA,UAAS,IAAGoG,GAAAlG,EAAAA,EAAAA,GAAAiG,EAAA,GAOtCE,GAPSD,EAAA,GAAaA,EAAA,GAOT,WACjBV,GAAU,GACV9F,EAAM0G,SACR,GAgCA,OAPAC,EAAAA,EAAAA,YAAU,WACRxF,QAAQC,IAAI,sBAA4B,OAALpB,QAAK,IAALA,OAAK,EAALA,EAAO4G,cAEhB,IAAjB,OAAL5G,QAAK,IAALA,OAAK,EAALA,EAAO4G,cAA4C,IAAjB,OAAL5G,QAAK,IAALA,OAAK,EAALA,EAAO4G,cAA4C,IAAjB,OAAL5G,QAAK,IAALA,OAAK,EAALA,EAAO4G,gBAnCrEV,GAAc,GACdJ,GAAU,GAoCZ,GAAG,CAAM,OAAL9F,QAAK,IAALA,OAAK,EAALA,EAAO4G,eAGT1D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAACkC,IAAK,CACJsB,OAAQhB,EACRiB,YAdiB,WAAQ,EAezBrD,UAAU,kGACVsD,aAAa,gBAAe3D,UAG5BF,EAAAA,EAAAA,MAAA,OAAKc,MAAM,kOAAiOZ,SAAA,EAE1OC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0FAA0FG,QAAS6C,EAAWrD,UAC3HC,EAAAA,EAAAA,KAAC2D,EAAAA,IAAO,CAACrD,SAAU,OAIG,IAAjB,OAAL3D,QAAK,IAALA,OAAK,EAALA,EAAO4G,eAAoBvD,EAAAA,EAAAA,KAAC4D,EAAAA,QAA2B,CAACC,WAAYT,EAAYhB,GAAS,OAALzF,QAAK,IAALA,OAAK,EAALA,EAAOyF,GAAI0B,WA/C/E,SAACpB,GACzB5E,QAAQC,IAAI,aAAc2E,GAC1BC,EAASD,GACTO,EAAW,sBACXG,IACAP,GAAc,EAChB,IA4CgC,IAAjB,OAALlG,QAAK,IAALA,OAAK,EAALA,EAAO4G,eAAoBvD,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAC+D,EAAAA,QAAkB,CAACF,WAAYT,EAAYhB,GAAS,OAALzF,QAAK,IAALA,OAAK,EAALA,EAAOyF,GAAI0B,WA1C3E,SAACpB,GACzBC,EAASD,GACTU,IACAP,GAAc,GACdI,EAAW,uBACb,MAwCgC,IAAjB,OAALtG,QAAK,IAALA,OAAK,EAALA,EAAO4G,eAAoBvD,EAAAA,EAAAA,KAACgE,EAAAA,QAAgB,CAACH,WAAYT,EAAYhB,GAAS,OAALzF,QAAK,IAALA,OAAK,EAALA,EAAOyF,GAAI0B,WAtCpE,SAACpB,GACzBC,EAASD,GACTU,IACAP,GAAc,GACdI,EAAW,oBACb,UAuCIjD,EAAAA,EAAAA,KAACiE,EAAAA,EAAuB,CAACjB,QAASA,EAASkB,MAAOxB,EAAOE,WAAYA,EAAYuB,QAAS,kBAAM5B,EAASD,EAAQ,EAAE,MAKzH,C,oNC+TA,MAxZA,SAA6B3F,GAC3B,IAAMyF,EAAU,OAALzF,QAAK,IAALA,OAAK,EAALA,EAAOyF,GAElBtF,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAC/CM,GADeJ,EAAA,GAAaA,EAAA,IACQD,EAAAA,EAAAA,aAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3BgH,GAAF/G,EAAA,GAAeA,EAAA,IAChCG,GAAkCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1B6G,GAAF5G,EAAA,GAAcA,EAAA,IAC9BG,GAAsCb,EAAAA,EAAAA,YAAUc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA5B0G,GAAFzG,EAAA,GAAgBA,EAAA,IAClCiF,GAA4B/F,EAAAA,EAAAA,YAAUgG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAA/ByB,EAAMxB,EAAA,GAAEyB,EAASzB,EAAA,GACxBG,GAAkDnG,EAAAA,EAAAA,YAAUoG,GAAAlG,EAAAA,EAAAA,GAAAiG,EAAA,GAArDuB,EAAiBtB,EAAA,GAAEuB,EAAoBvB,EAAA,GAC9CwB,GAA4B5H,EAAAA,EAAAA,WAAS,GAAM6H,GAAA3H,EAAAA,EAAAA,GAAA0H,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BhI,EAAAA,EAAAA,YAAUiI,GAAA/H,EAAAA,EAAAA,GAAA8H,EAAA,GAAjCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAkCpI,EAAAA,EAAAA,WAAS,GAAMqI,GAAAnI,EAAAA,EAAAA,GAAAkI,EAAA,GAA1C7H,EAAS8H,EAAA,GAAE7H,EAAY6H,EAAA,GAC9BC,GAAsCtI,EAAAA,EAAAA,UAAS,MAAKuI,GAAArI,EAAAA,EAAAA,GAAAoI,EAAA,GAA7C3H,EAAW4H,EAAA,GAAE3H,EAAc2H,EAAA,GAElCC,GAII1I,EAAAA,EAAAA,KAHF2I,EAA2BD,EAA3BC,4BACAC,EAAqBF,EAArBE,sBACAC,GAA8BH,EAA9BG,+BAGIvH,GAAmBE,EAAAA,GAAW,CAClCsH,iBAAkBtH,EAAAA,KAAaE,SAAS,6BACxCqH,SAAUvH,EAAAA,KAAYE,SAAS,kBAK3BC,IAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbmH,wBAAyB,GACzBF,iBAAkB,GAClBC,SAAU,IAMZjH,SAAU,SAACC,EAAQkH,GAEjB,GADAhI,QAAQC,IAAI,mBAAoBa,KAC3BmH,EAAAA,EAAAA,IAAoBxB,GAIvB,OAHA/F,GAAOwH,cAAc,WAAY,IAAI/G,MAAK,WACxCO,IAAwB,EAAM,uBAChC,KACO,EAETyG,GAAcrH,EAChB,EACAT,iBAAAA,MAGFmF,EAAAA,EAAAA,YAAU,WACRwB,GAAU,GACV/F,EAAAA,EAAAA,KACQ,GAADmH,OAAIR,IAAkC,CAAC,GAAG1G,EAAAA,EAAAA,MAC9CC,MAAK,SAAUC,GAAW,IAADC,EAEIgH,EAAAC,EAAAC,GAD5BvI,QAAQC,IAAI,gCAAiCmB,GACjC,OAARA,QAAQ,IAARA,GAAc,QAANC,EAARD,EAAUE,YAAI,IAAAD,GAAdA,EAAgBE,QAClB6F,EAAmB,OAARhG,QAAQ,IAARA,GAAc,QAANiH,EAARjH,EAAUE,YAAI,IAAA+G,GAAM,QAANC,EAAdD,EAAgB/G,YAAI,IAAAgH,GAAY,QAAZC,EAApBD,EAAsBE,QAAQ,UAAE,IAAAD,OAAxB,EAARA,EAAkCE,cAE7C/G,IAAwB,EAAM,yDAEhCsF,GAAU,EACZ,IACCrF,OAAM,SAAU+G,GACf1I,QAAQC,IAAI,yCAA0CyI,GACtDhH,IAAwB,EAAM,yDAC9BsF,GAAU,EAEZ,GACJ,GAAG,KAEHxB,EAAAA,EAAAA,YAAU,WACRwB,GAAU,GACV2B,YAAW,WACT3B,GAAU,EACZ,GAAG,KAEH,IAAI4B,EAAQC,OAAOC,aAAaC,QAAQ,SACxC/I,QAAQC,IAAI,2CAA4C2I,GACxD,IAAMI,EAAS,CACbC,QAAS,CACPC,cAAc,UAADd,OAAYQ,GACzBO,OAAQ,qBAIZlI,EAAAA,EAAAA,KACQ0G,EAAuB,CAAEyB,WAAY9E,GAAM0E,GAChD7H,MAAK,SAACkI,GAAS,IAADC,EACbtJ,QAAQC,IAAI,iCAAkCoJ,GAC9CzC,EAAwB,OAAHyC,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAK/H,YAAI,IAAAgI,OAAN,EAAHA,EAAWhI,MAChC0F,GAAU,EACZ,IACCrF,OAAM,SAACC,GACN5B,QAAQC,IAAI,uCAAwC2B,GACpDoF,GAAU,EACZ,GACJ,GAAG,IAGH,IAAMmB,GAAgB,SAACrH,GACrBkG,GAAU,GAGV,IAAIuC,EAAK,IAAIC,SAGbD,EAAGE,OAAO,mBAAoB3I,EAAO+G,kBAIrC0B,EAAGE,OAAO,WAAYhD,GACtB8C,EAAGE,OAAO,UAAWtC,GACrBoC,EAAGE,OAAO,aAAcnF,GACxBiF,EAAGE,OAAO,QAA0B,OAAjB9C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB+C,QAEtCf,YAAW,WACT3B,GAAU,EACZ,GAAG,KAGH/F,EAAAA,EAAAA,KACQ,GAADmH,OAAIV,GAA+B6B,GAAII,EAAAA,EAAAA,MAC3CxI,MAAK,SAAUC,GAAW,IAADwI,EACYC,EAAN,IAAlB,OAARzI,QAAQ,IAARA,GAAc,QAANwI,EAARxI,EAAUE,YAAI,IAAAsI,OAAN,EAARA,EAAgBrI,SAClBvB,QAAQC,IACN,kDACAmB,GAEF0I,EAAAA,GAAAA,QAAc,4CACd9C,GAAU,GACVnI,EAAMkL,iBAAyB,OAAR3I,QAAQ,IAARA,GAAc,QAANyI,EAARzI,EAAUE,YAAI,IAAAuI,OAAN,EAARA,EAAgBvI,OAEvCI,IAAwB,EAAM,sFAGhCsF,GAAU,EAEZ,IACCrF,OAAM,SAAU+G,GACf1B,GAAU,GACVtF,IAAwB,EAAM,qFAChC,GACJ,EA8BMA,GAA0B,SAACG,EAAOC,GACtCjC,EAAeiC,GACfrC,EAAaoC,EAEf,EAGA,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG8E,IAAU7E,EAAAA,EAAAA,KAACC,EAAAA,EAAS,IACpB3C,IAAa0C,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CAACV,wBAAyBA,GAAyBW,WAAYzC,KAE7FsC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gKAA+JL,UAC5KF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,0BAAyBL,SAAA,EACtCC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,0CAAyCL,UACvDC,EAAAA,EAAAA,KAAC8H,EAAAA,IAAe,CAAC1H,UAAU,mBAE7BJ,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yDAAwDL,SAAC,qCAM7EC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCL,SAAC,8dAKlC,OAAjB0E,QAAiB,IAAjBA,GAAAA,EAAmBsD,qBAClB/H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mFAAkFL,UAE/FC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0DAAyDL,SAAC,8DAO3EF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAGEF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,+FAA8FL,SAAA,CAK9E,KAAX,OAAjB0E,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBuD,aAA2CpG,IAAX,OAAjB6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBuD,QAAqBhI,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACzEF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,6DAA4DL,SAAC,oCAG9EC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gCAA+BL,UAC5CkI,EAAAA,EAAAA,IAA0B,OAAjBxD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBuD,eAGjCnI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,6DAA4DL,SAAC,+BAG9EC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gCAA+BL,UAC5CkI,EAAAA,EAAAA,IAA8C,KAApB,OAAjBxD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmByD,gBAAwC,OAAjBzD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB0D,WAA8B,OAAjB1D,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmByD,sBAI7GrI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,6DAA4DL,SAAC,oCAG9EC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gCAA+BL,UAC5CkI,EAAAA,EAAAA,IAA0B,OAAjBxD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBuD,aAIjCnI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,6DAA4DL,SAAC,iCAC9EC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gCAA+BL,UAAEkI,EAAAA,EAAAA,IAA0B,OAAjBxD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB2D,mBAG/EvI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,6DAA4DL,SAAC,iCAC9EC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gCAA+BL,UAAEkI,EAAAA,EAAAA,IAA0B,OAAjBxD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB4D,sBAMjFrI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,+EAA8EL,UAC3FF,EAAAA,EAAAA,MAAA,QAAMlB,SAAUH,GAAOqC,aAAcG,SAAUxC,GAAOyC,aAAalB,SAAA,EA+CjEF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,0BAAyBL,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,yDAAwDL,SAAA,EACrEF,EAAAA,EAAAA,MAAA,SAAOO,UAAU,sDAAqDL,SAAA,EACpEC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,wDAAuDL,SAAC,MAEjE,uDAGVC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACLN,KAAK,mBACLV,UAAU,8RACVkI,YAAY,GACZvH,MAAOvC,GAAOI,OAAO+G,iBACrB3E,SAAUxC,GAAOyC,gBAEnBjB,EAAAA,EAAAA,KAAA,KAAGI,UAAU,+BAA8BL,SACxCvB,GAAO0C,QAAQyE,kBACdnH,GAAO2C,OAAOwE,iBACZnH,GAAO2C,OAAOwE,iBACd,WAIR9F,EAAAA,EAAAA,MAAA,OAAKO,UAAU,2FAA0FL,SAAA,EACvGF,EAAAA,EAAAA,MAAA,SAAOO,UAAU,2EAA0EL,SAAA,EACzFC,EAAAA,EAAAA,KAAA,SAAOI,UAAU,kDAAiDL,SAAC,MAE3D,kCAGVC,EAAAA,EAAAA,KAAA,SACEuI,OAAO,aACPnH,KAAK,OACLN,KAAK,WACLV,UAAU,4RACVkI,YAAY,GACZvH,MAAOvC,GAAOI,OAAOgH,SACrB5E,SAzMQ,SAACwH,GACzB,IAAM1H,EAAO0H,EAAEC,OAAO3H,KAEtB,GAAY,YAARA,EAAoB,CACtB,IAAI4H,EAAOF,EAAEC,OAAOE,MAAM,GAC1B7K,QAAQC,IAAI,GAADmI,OAAIpF,EAAI,uBAAuB4H,GACxClK,GAAOwH,cAAclF,EAAM4H,GAC3BlE,EAAUgE,EAAEC,OAAOE,MAAM,GAC7B,CAEA,GAAY,gBAAR7H,EAAwB,CAC1B,IAAI4H,EAAOF,EAAEC,OAAOE,MACpBvE,EAAcoE,EAAEC,OAAOE,MAAM,IAC7B7K,QAAQC,IAAI,qBAAsB2K,EACpC,CAEA,GAAY,eAAR5H,EAAuB,CACzB,IAAI4H,EAAOF,EAAEC,OAAOE,MACpBtE,EAAamE,EAAEC,OAAOE,MAAM,IAC5B7K,QAAQC,IAAI,qBAAsB2K,EACpC,CAEA,GAAY,iBAAR5H,EAAyB,CAC3B,IAAI4H,EAAOF,EAAEC,OAAOE,MACpBrE,EAAekE,EAAEC,OAAOE,MAAM,IAC9B7K,QAAQC,IAAI,qBAAsB2K,EACpC,CACF,KAgLgB1I,EAAAA,EAAAA,KAAA,KAAGI,UAAU,+BAA8BL,SACxCvB,GAAO0C,QAAQ0E,UAAYpH,GAAO2C,OAAOyE,SACtCpH,GAAO2C,OAAOyE,SACd,cAmCV/F,EAAAA,EAAAA,MAAA,OAAKO,UAAU,uDAAsDL,SAAA,EACnEC,EAAAA,EAAAA,KAAA,UACEO,QAAS,kBAAM5D,EAAMkH,YAAY,EACjCzC,KAAK,SACLhB,UAAU,kSAAiSL,SAC5S,WAIDC,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLhB,UAAU,uSAAsSL,SACjT,wBASjB,C,2DCpaA,IApBoB,SAACpD,GACnB,OACEqD,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACgBF,EAAAA,EAAAA,MAAA,OAAKc,MAAM,kBAAiBZ,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,mBAAkBL,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,UAASL,UAACC,EAAAA,EAAAA,KAAC4I,EAAAA,IAAa,CAACC,KAAM,WAClF7I,EAAAA,EAAAA,KAAA,MAAIW,MAAM,qDAAoDZ,SAAC,8CAC/DF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACAC,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAST,MAAM,iLAAiLJ,QAAS,kBAAW,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAOmM,cAAc,EAAC/I,SAAC,YAGnPC,EAAAA,EAAAA,KAAA,UAAQO,QAAc,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAOyG,WAAYhC,KAAK,SAAST,MAAM,uLAAsLZ,SAAC,kBAQvQ,C,skBCkBA,MArCA,SAA2BpD,GACvB,OACIqD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iCAAgCL,UAC3CF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,+DAA8DL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UACIO,QAAc,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAOoM,eAChB3H,KAAK,SACLT,MAAM,0KAAyKZ,UAE/KC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,UAAUD,KAAK,eAAcX,UACpCC,EAAAA,EAAAA,KAAA,QACI,YAAU,UACVY,EAAE,qMACF,YAAU,iBAItBf,EAAAA,EAAAA,MAAA,OACIO,UAAU,oCAAmCL,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OACII,UAAU,SAAQL,UAClBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAII,UAAU,mCAAkCL,SAAC,sBACjDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0BAAyBL,SAAC,6CAGjDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0BASnC,ECEA,MArCA,SAA0BzD,GACtB,OACIqD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iCAAgCL,UAC3CF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,+DAA8DL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UACIO,QAAc,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAOoM,eAChB3H,KAAK,SACLT,MAAM,0KAAyKZ,UAE/KC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,UAAUD,KAAK,eAAcX,UACpCC,EAAAA,EAAAA,KAAA,QACI,YAAU,UACVY,EAAE,qMACF,YAAU,iBAItBf,EAAAA,EAAAA,MAAA,OACIO,UAAU,oCAAmCL,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OACII,UAAU,SAAQL,UAClBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAII,UAAU,mCAAkCL,SAAC,yBACjDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0BAAyBL,SAAC,6CAGjDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0BASnC,ECsLA,MA3MA,SAAsBzD,GAClB,IAAMqM,GAAW3G,EAAAA,EAAAA,MACjBvF,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CmM,EAAajM,EAAA,GAAEkM,EAAgBlM,EAAA,GAEhCmM,EAAmB,SAACX,EAAGY,GACzBZ,EAAEa,kBACFH,EAAiBE,EACrB,EAEML,EAAiB,WACnBG,EAAiB,EACrB,EAEA,OAAqB,GAAjBD,GAA8BjJ,EAAAA,EAAAA,KAACsJ,EAAAA,EAAW,CAAAvJ,UAACC,EAAAA,EAAAA,KAACuJ,EAAiB,CAACR,eAAgBA,MAC7D,GAAjBE,GAA8BjJ,EAAAA,EAAAA,KAACsJ,EAAAA,EAAW,CAAAvJ,UAACC,EAAAA,EAAAA,KAACwJ,EAAgB,CAACT,eAAgBA,MAC5D,GAAjBE,GACiB,GAAjBA,GACiB,GAAjBA,GACiB,GAAjBA,GACiB,GAAjBA,GACiB,GAAjBA,GAL8BjJ,EAAAA,EAAAA,KAACsJ,EAAAA,EAAW,CAAAvJ,UAACC,EAAAA,EAAAA,KAACuJ,EAAiB,CAACR,eAAgBA,OAU9E/I,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iCAAgCL,UAC3CF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,+DAA8DL,SAAA,EACzEC,EAAAA,EAAAA,KAAA,UACIO,QAAS,kBAAW,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAOyG,YAAW,EAAM,EACvChC,KAAK,SACLT,MAAM,0KAAyKZ,UAE/KC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,UAAUD,KAAK,eAAcX,UACpCC,EAAAA,EAAAA,KAAA,QACI,YAAU,UACVY,EAAE,qMACF,YAAU,iBAItBf,EAAAA,EAAAA,MAAA,OACIO,UAAU,oCAAmCL,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OACII,UAAU,SAAQL,UAClBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAII,UAAU,mCAAkCL,SAAC,mCACjDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0BAAyBL,SAAC,8CAGjDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBL,UAC3BF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,uDAAsDL,SAAA,EAEjEF,EAAAA,EAAAA,MAAA,OAAKU,QAAS,kBAAMyI,EAAS,iBAAiB,EAC1C5I,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,2CAA2ChC,UAAU,mFACxLJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKC,EACLC,IAAI,aACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,oBAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,qDAIhC,KAApB,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOsN,iBAAuBpK,EAAAA,EAAAA,MAAA,OAAKU,QAAS,WACpC,OAAL5D,QAAK,IAALA,GAAAA,EAAOuN,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAChB,OAALxN,QAAK,IAALA,OAAK,EAALA,EAAOyN,sBAAoB,IAAEC,cAAc,KAE/C,OAAL1N,QAAK,IAALA,GAAAA,EAAOyG,YAAW,EACtB,EACIhD,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,8CAA8ChC,UAAU,mFAC3LJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKQ,EACLN,IAAI,aACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,mBAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,uDAM1DF,EAAAA,EAAAA,MAAA,OAAKU,QAAS,kBAAMyI,EAAS,gBAAgB,EACzC5I,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,qCAAqChC,UAAU,mFAClLJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKS,EACLP,IAAI,aACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,cAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,+CAK1DF,EAAAA,EAAAA,MAAA,OAAKU,QAAS,kBAAMyI,EAAS,gBAAgB,EACzC5I,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,wCAAwChC,UAAU,mFACrLJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKU,EACLR,IAAI,iBACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,iBAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,iFAI1DF,EAAAA,EAAAA,MAAA,OAAKU,QAAS,kBAAMyI,EAAS,gBAAgB,EACzC5I,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,yCAAyChC,UAAU,mFACtLJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKW,EACLT,IAAI,iBACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,kBAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,mFAMhC,KAApB,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOsN,iBAAuBpK,EAAAA,EAAAA,MAAA,OAAKU,QAAS,WACpC,OAAL5D,QAAK,IAALA,GAAAA,EAAOuN,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAChB,OAALxN,QAAK,IAALA,OAAK,EAALA,EAAOyN,sBAAoB,IAAEM,YAAY,KAE7C,OAAL/N,QAAK,IAALA,GAAAA,EAAOyG,YAAW,EACtB,EACIhD,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,uCAAuChC,UAAU,mFACpLJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKY,EACLV,IAAI,aACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,gBAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,yGAOhC,KAApB,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOsN,iBAAuBpK,EAAAA,EAAAA,MAAA,OAAKU,QAAS,WACpC,OAAL5D,QAAK,IAALA,GAAAA,EAAOuN,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAChB,OAALxN,QAAK,IAALA,OAAK,EAALA,EAAOyN,sBAAoB,IAAEO,WAAW,KAE5C,OAALhO,QAAK,IAALA,GAAAA,EAAOyG,YAAW,EACtB,EACIhD,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,iDAAiDhC,UAAU,mFAC9LJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKc,EACLZ,IAAI,iBACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,0BAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,yEAOhC,KAApB,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOsN,iBAAuBpK,EAAAA,EAAAA,MAAA,OAAKU,QAAS,WACpC,OAAL5D,QAAK,IAALA,GAAAA,EAAOuN,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAChB,OAALxN,QAAK,IAALA,OAAK,EAALA,EAAOyN,sBAAoB,IAAES,WAAW,KAE5C,OAALlO,QAAK,IAALA,GAAAA,EAAOyG,YAAW,EACtB,EACIhD,UAAU,uGACVqJ,KAAK,GAAE1J,SAAA,EACPC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO,CAAE,OAAU,KAAQC,SAAS,WAC7C5J,EAAAA,EAAAA,KAAA,QAAMI,UAAU,yBAAwBL,UAACC,EAAAA,EAAAA,KAAC6J,EAAAA,IAAgB,CAACtJ,QAAS,SAACiI,GAAC,OAAKW,EAAiBX,EAAG,EAAE,EAAEpG,GAAG,QAAQ,uBAAqB,sCAAsChC,UAAU,mFACnLJ,EAAAA,EAAAA,KAAA,OACII,UAAU,YACV0J,IAAKe,EACLb,IAAI,iBACRhK,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BL,SAAC,eAC5CC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCL,SAAC,4EAUtF,C,2FCtHA,IAxFwB,SAACpD,GAAW,IAADmO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEzB9C,GAAW3G,EAAAA,EAAAA,MAEnB,OACErC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UAEAC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,yJAAwJL,UACnIF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBL,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,+BAA8BL,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,4BAA2BL,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,8CAA6CL,SAAA,EACxDF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDL,UAAEkI,EAAAA,EAAAA,IAAc,OAALtL,QAAK,IAALA,GAAkB,QAAbmO,EAALnO,EAAOoP,mBAAW,IAAAjB,OAAb,EAALA,EAAoBkB,mBACjGhM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCL,SAAC,uBAG7DF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDL,UAAEkI,EAAAA,EAAAA,IAAc,OAALtL,QAAK,IAALA,GAAkB,QAAboO,EAALpO,EAAOoP,mBAAW,IAAAhB,OAAb,EAALA,EAAoBkB,eACjGjM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCL,SAAC,sBAIjEF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,2DAA0DL,SAAA,CACpD,cAAX,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOuP,SAAwBrM,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDL,UAAEkI,EAAAA,EAAAA,IAAc,OAALtL,QAAK,IAALA,GAAkB,QAAbqO,EAALrO,EAAOoP,mBAAW,IAAAf,OAAb,EAALA,EAAoBmB,mBACjGnM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCL,SAAC,wBAG5C,cAAX,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOuP,SAAwBrM,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDL,UAAEkI,EAAAA,EAAAA,IAAc,OAALtL,QAAK,IAALA,GAAkB,QAAbsO,EAALtO,EAAOoP,mBAAW,IAAAd,OAAb,EAALA,EAAoBmB,iBACjGpM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCL,SAAC,sBAG9B,KAAxB,OAALpD,QAAK,IAALA,GAAkB,QAAbuO,EAALvO,EAAOoP,mBAAW,IAAAb,OAAb,EAALA,EAAoBlD,aAA4CpG,IAAxB,OAALjF,QAAK,IAALA,GAAkB,QAAbwO,EAALxO,EAAOoP,mBAAW,IAAAZ,OAAb,EAALA,EAAoBnD,QACzDnI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDL,UAAEkI,EAAAA,EAAAA,IAAgD,KAAjC,OAALtL,QAAK,IAALA,GAAkB,QAAbyO,EAALzO,EAAOoP,mBAAW,IAAAX,OAAb,EAALA,EAAoBlD,sBAA8DtG,IAAjC,OAALjF,QAAK,IAALA,GAAkB,QAAb0O,EAAL1O,EAAOoP,mBAAW,IAAAV,OAAb,EAALA,EAAoBnD,gBAAoC,OAALvL,QAAK,IAALA,GAAkB,QAAb2O,EAAL3O,EAAOoP,mBAAW,IAAAT,OAAb,EAALA,EAAoBnD,WAAkB,OAALxL,QAAK,IAALA,GAAkB,QAAb4O,EAAL5O,EAAOoP,mBAAW,IAAAR,OAAb,EAALA,EAAoBrD,mBAClOlI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCL,SAAC,oBAG7DF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAYL,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDL,UAAEkI,EAAAA,EAAAA,IAAc,OAALtL,QAAK,IAALA,GAAkB,QAAb6O,EAAL7O,EAAOoP,mBAAW,IAAAP,OAAb,EAALA,EAAoBxD,UACjGhI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCL,SAAC,8BAY/B,IAAhC,OAALpD,QAAK,IAALA,GAAkB,QAAb8O,EAAL9O,EAAOoP,mBAAW,IAAAN,OAAb,EAALA,EAAoBY,gBACpBxM,EAAAA,EAAAA,MAAA,OAAKO,UAAU,qEAAoEL,SAAA,CAAC,iDACpCC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,wBAAuBL,SAAC,2BAA6B,uFAEtHF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,qEAAoEL,SAAA,CAAC,QACzE,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOuP,MAAM,+BAA2BrM,EAAAA,EAAAA,MAAA,QAAMO,UAAU,wBAAuBL,SAAA,CAAC,IAAO,OAALpD,QAAK,IAALA,GAAkB,QAAb+O,EAAL/O,EAAOoP,mBAAW,IAAAL,OAAb,EAALA,EAAoBY,WAAW,OAAQ,2DAGxF,IAAhC,OAAL3P,QAAK,IAALA,GAAkB,QAAbgP,EAALhP,EAAOoP,mBAAW,IAAAJ,OAAb,EAALA,EAAoBU,iBACvBxM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAII,UAAU,6CACdP,EAAAA,EAAAA,MAAA,OAAKO,UAAU,8BAA6BL,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4DAA2DL,SAAC,YAC/EC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6CAA4CL,UAC1DF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,6CAA4CL,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACuM,EAAAA,IAAgB,CAACjM,SAAU,GAAIF,UAAU,WAAW,yBAAqBJ,EAAAA,EAAAA,KAAA,QAAMI,UAAU,8KAA8KG,QAAS,eAAAiM,EAAA,OAAMxD,EAAS,sBAAD9C,OAA4B,OAALvJ,QAAK,IAALA,GAAkB,QAAb6P,EAAL7P,EAAOoP,mBAAW,IAAAS,OAAb,EAALA,EAAoBC,eAAc,KAAAvG,OAAS,OAALvJ,QAAK,IAALA,OAAK,EAALA,EAAOuP,OAAQ,EAACnM,SAAC,uBAI3aF,EAAAA,EAAAA,MAAA,QAAMU,QAAS,eAAAmM,EAAA,OAAM1D,EAAS,IAAD9C,OAAU,OAALvJ,QAAK,IAALA,OAAK,EAALA,EAAOgQ,SAAQ,KAAAzG,OAAS,OAALvJ,QAAK,IAALA,GAAkB,QAAb+P,EAAL/P,EAAOoP,mBAAW,IAAAW,OAAb,EAALA,EAAoBD,gBAAiB,EAAErM,UAAU,6PAA4PL,SAAA,CAAC,gBAAYC,EAAAA,EAAAA,KAAC4M,EAAAA,IAAe,CAACxM,UAAU,uCAEzX,cAAX,OAALzD,QAAK,IAALA,OAAK,EAALA,EAAOuP,QAAuBlM,EAAAA,EAAAA,KAAA,QAAMI,UAAU,wLAAuLL,SAAO,OAALpD,QAAK,IAALA,OAAK,EAALA,EAAOuP,SACxQrM,EAAAA,EAAAA,MAAA,QAAMO,UAAU,wLAAuLL,SAAA,CAChK,qBAAhC,OAALpD,QAAK,IAALA,GAAkB,QAAbiP,EAALjP,EAAOoP,mBAAW,IAAAH,OAAb,EAALA,EAAoBiB,iBAAuC7M,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAE,uBACxB,qBAAhC,OAALpD,QAAK,IAALA,GAAkB,QAAbkP,EAALlP,EAAOoP,mBAAW,IAAAF,OAAb,EAALA,EAAoBgB,iBAAuC7M,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAE,yBACxB,YAAhC,OAALpD,QAAK,IAALA,GAAkB,QAAbmP,EAALnP,EAAOoP,mBAAW,IAAAD,OAAb,EAALA,EAAoBe,iBAA8B7M,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAE,+BAQ7E,C,8OCpEAmC,IAAAA,cAAoB,SAgNpB,UA/MA,SAAmBvF,GAEf,IAAAG,GAAiCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAC/CM,GADkBJ,EAAA,GAAWA,EAAA,IACKD,EAAAA,EAAAA,WAAS,IAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1C0P,EAASzP,EAAA,GAAE0P,EAAY1P,EAAA,GAC9BG,GAA8CT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtDwP,EAAevP,EAAA,GAAEwP,EAAkBxP,EAAA,GAC1CG,GAAoCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAzCsP,EAAUrP,EAAA,GAAEsP,EAAatP,EAAA,GACxBuP,GAAgCvQ,EAAAA,EAAAA,KAAhCuQ,4BACA9N,GAAW+N,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBhO,OAERwD,IADiBT,EAAAA,EAAAA,OACiBtF,EAAAA,EAAAA,WAAS,IAAMgG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAA1CxF,EAASyF,EAAA,GAAExF,EAAYwF,EAAA,GAC9BG,GAAsCnG,EAAAA,EAAAA,UAAS,MAAKoG,GAAAlG,EAAAA,EAAAA,GAAAiG,EAAA,GAA7CxF,EAAWyF,EAAA,GAAExF,EAAcwF,EAAA,GAClCwB,GAAgC5H,EAAAA,EAAAA,UAAS,IAAG6H,GAAA3H,EAAAA,EAAAA,GAAA0H,EAAA,GAArC4I,EAAQ3I,EAAA,GAKTzG,GALsByG,EAAA,GAKHvG,EAAAA,GAAW,CAChCmP,MAAOnP,EAAAA,KACPoP,UAAWpP,EAAAA,QAGTG,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACX8O,MAAO,GACPC,UAAW,IAEf9O,SAAU,SAACC,GACPd,QAAQC,IAAI,sBAAuBa,GAE/BA,EAAO4O,MAAM7L,OAAS,IAAM/C,EAAO6O,UAAY,GAC/CN,EAAc,oCAKS,GAAvBvO,EAAO4O,MAAM7L,OACR,OAALhF,QAAK,IAALA,GAAAA,EAAO+Q,aAAa9O,EAAO6O,WAEtB,OAAL9Q,QAAK,IAALA,GAAAA,EAAOgR,SAAS/O,EAAO4O,OAE3BI,EAAQhP,GACZ,EACAT,iBAAAA,IA6BEyP,EAAU,SAAChP,GAWb,IAAIE,EAVJvB,GAAa,GACbwP,GAAa,GACbE,GAAmB,GAUfnO,EADuB,GAAvBF,EAAO4O,MAAM7L,OACC,CACV8L,UAAW7O,EAAO6O,WAGR,CACVI,KAAMjP,EAAO4O,OAIrB1P,QAAQC,IAAI,oCAAqCe,GAEjDC,EAAAA,EAAAA,KACUqO,EAA6BtO,GAAaE,EAAAA,EAAAA,MAC/CC,MAAK,SAACC,GAAc,IAADC,EAEYgH,EAAAC,GAD5BtI,QAAQC,IAAI,mCAA4C,OAARmB,QAAQ,IAARA,OAAQ,EAARA,EAAUE,MAC9C,OAARF,QAAQ,IAARA,GAAc,QAANC,EAARD,EAAUE,YAAI,IAAAD,GAAdA,EAAgBE,SACX,OAAL1C,QAAK,IAALA,GAAAA,EAAOmR,4BAAoC,OAAR5O,QAAQ,IAARA,GAAc,QAANiH,EAARjH,EAAUE,YAAI,IAAA+G,GAAM,QAANC,EAAdD,EAAgB/G,YAAI,IAAAgH,OAAZ,EAARA,EAAsB2H,UACpD,OAALpR,QAAK,IAALA,GAAAA,EAAOqR,kBAAiB,GACnB,OAALrR,QAAK,IAALA,GAAAA,EAAOsR,kBAAiB,IAExBzO,GAAwB,EAAM,0CAElCuN,GAAa,EAEjB,IACCtN,OAAM,SAACC,GACJ5B,QAAQC,IAAI,iBAAkB2B,GAC9BJ,EAAO,wCAAyC,SAChDyN,GAAa,GACbvN,GAAwB,EAAM,0CAC9ByN,GAAmB,EACvB,GACR,EAEMzN,EAA0B,SAACG,EAAOC,GACpCjC,EAAeiC,GACfrC,EAAaoC,EAEjB,EAIA,OACIE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEQ+M,IAAa9M,EAAAA,EAAAA,KAACC,EAAAA,EAAS,IAEzB3C,IAAa0C,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CAACV,wBAAyBA,EAAyBW,WAAYzC,KAO9FsC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,4BAA2BZ,UAClCC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,oBAAmBZ,UAC1BC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,+BAA8BZ,UACrCC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,8DAA6DZ,UACpEF,EAAAA,EAAAA,MAAA,OAAKc,MAAM,GAAEZ,SAAA,EACTC,EAAAA,EAAAA,KAAA,UACIO,QAAS,kBAAW,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAOyG,YAAW,EAAM,EACvChC,KAAK,SACLT,MAAM,0KAAyKZ,UAE/KC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,UAAUD,KAAK,eAAcX,UACpCC,EAAAA,EAAAA,KAAA,QACI,YAAU,UACVY,EAAE,qMACF,YAAU,iBAItBZ,EAAAA,EAAAA,KAAA,OAAKW,MAAM,2BAA0BZ,SAAC,mBAKtCC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,iCAAgCZ,UACvCF,EAAAA,EAAAA,MAAA,QAAMO,UAAU,cAAaL,SAAA,CAAC,yCAAqCC,EAAAA,EAAAA,KAAA,SAAM,6BAI7EA,EAAAA,EAAAA,KAAA,OAAKW,MAAM,iCAAgCZ,UACvCC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,2BAA0BL,SAAEwN,OAEhDvN,EAAAA,EAAAA,KAAA,OAAKW,MAAM,gDAA+CZ,UAEtDF,EAAAA,EAAAA,MAAA,QAAMlB,SAAUH,EAAOqC,aAAcG,SA9HhD,SAACwH,GAClB,IAAI1H,EAAO0H,EAAEC,OAAO3H,KAChBC,EAAQyH,EAAEC,OAAO1H,MAGT,SAARD,GACAtC,EAAOwH,cAAc,YAAa,IAC7B,OAALrJ,QAAK,IAALA,GAAAA,EAAO+Q,aAAa,MAEpBlP,EAAOwH,cAAc,QAAS,IACzB,OAALrJ,QAAK,IAALA,GAAAA,EAAOgR,SAAS,KAIV,SAAR7M,GAAmBtC,EAAOwH,cAAc,SAAShE,EAAAA,EAAAA,IAAiCjB,EAAOvC,EAAOI,OAAO4O,MAAO,KACtG,aAAR1M,GAAuBtC,EAAOwH,cAAc,aAAahE,EAAAA,EAAAA,IAAiCjB,EAAOvC,EAAOI,OAAO6O,UAAW,KAE/G,SAAR3M,GAAoBC,EAAMY,QAAU,IAAgB,aAARb,GAAwBC,EAAMY,QAAU,GACrFsL,GAAmB,GAGnBA,GAAmB,EAE3B,EAuG4FlN,SAAA,EACxDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOI,UAAS,oFAAsFL,SAAC,SACvGC,EAAAA,EAAAA,KAAA,SAAAmK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAO/I,KAAK,QAAY5C,EAAO0P,cAAc,UAAQ,IAAE9N,UAAU,mTAGrEJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCL,SAAC,QAEpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOI,UAAS,oFAAsFL,SAAC,iBACvGC,EAAAA,EAAAA,KAAA,SAAAmK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAO/I,KAAK,QAAY5C,EAAO0P,cAAc,cAAY,IAAE9N,UAAU,mTAGzEJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBL,SAAEmN,KACrCrN,EAAAA,EAAAA,MAAA,OAAKc,MAAM,qBAAoBZ,SAAA,CAE1BiN,IAAmBhN,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAShB,UAAU,iRAAgRL,SAAC,YACnUiN,IAAmBhN,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAShB,UAAU,oNAAmNL,SAAC,gCAiBrT,C","sources":["Components/CitizenMessageScreenModified.js","Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx","Pages/Contents/ObjectionEntryForm/ObjectionIndex.js","Pages/Contents/WaterHarvesting/WaterHarvestingForm.js","Pages/LandingDashboard/PropertyDashboard/DeleteModal.js","Pages/LandingDashboard/PropertyDashboard/ApplicationInformation/InfoNewAssessment.js","Pages/LandingDashboard/PropertyDashboard/ApplicationInformation/InfoReAssessment.js","Pages/LandingDashboard/PropertyDashboard/SafApplyCard.js","Pages/LandingDashboard/PropertyDashboard/ServicesAppCard.js","Pages/Property/CitizenAuth/PtnNoCard.js"],"sourcesContent":["///////////////////////////////////////////////////////////////////////\r\n// Author : R U Bharti\r\n// Project : JUIDCO\r\n///////////////////////////////////////////////////////////////////////\r\n\r\nimport { useFormik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport CitizenApplyApiList from './CitizenApplyApiList';\r\nimport axios from 'axios';\r\nimport ApiHeader from './ApiList/ApiHeader';\r\nimport * as yup from 'yup'\r\nimport './Fonts.css'\r\nimport { TiMessages } from 'react-icons/ti'\r\nimport { MdSend } from 'react-icons/md'\r\nimport BarLoader from './Common/BarLoader';\r\nimport BottomErrorCard from './BottomErrorCard';\r\n\r\n\r\nfunction CitizenMessageScreenModified(props) {\r\n\r\n    const { api_safindependentComment } = CitizenApplyApiList()\r\n    const [isloading, setisloading] = useState(false)\r\n    const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n\r\n    const [sendMsg, setsendMsg] = useState()\r\n\r\n    console.log(\"props..applicationIdfun\", props.applicationIdfun)\r\n    console.log(\"props..workflowIdfun\", props.workflowIdfun)\r\n\r\n    let applicationId = props.applicationId\r\n    let workflowId = props.workflowId\r\n\r\n    const validationSchema = yup.object({\r\n        message: yup.string().required('Enter message')\r\n    })\r\n\r\n    const initialValues = {\r\n        message: '',\r\n    }\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n\r\n        onSubmit: (values) => {\r\n            handleSendComment(values)\r\n        }\r\n        ,\r\n        validationSchema\r\n\r\n    });\r\n\r\n\r\n\r\n    const handleSendComment = (values) => {\r\n        console.log(\"post data...\", values);\r\n        setisloading(true)\r\n\r\n        let requestBody = {\r\n            // \"workflowId\": workflowId,\r\n            \"applicationId\": applicationId,\r\n            \"comment\": values.message\r\n        }\r\n        console.log('before citizen comment...', requestBody)\r\n        axios.post(api_safindependentComment,\r\n            requestBody,\r\n            ApiHeader()\r\n        )\r\n            .then(function (response) {\r\n                // setloader(false)\r\n                console.log('send msg.....', response)\r\n                if (response?.data?.status) {\r\n                    props?.notify('Message successfully sent !')\r\n                    props?.closeModalFun()\r\n                } else {\r\n                    activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                }\r\n                setisloading(true)\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err\", err)\r\n                activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                props?.closeModalFun()\r\n            })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.fun(false)\r\n    }\r\n\r\n    const activateBottomErrorCard = (state, msg) => {\r\n        seterroMessage(msg)\r\n        seterroState(state)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isloading && <BarLoader />}\r\n            {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n            <div className='p-4 md:w-[25vw] w-full'>\r\n                <div className='flex'>\r\n                    <div className='flex-initial'>\r\n                        <h1 className=\"text-gray-900 text-xl font-semibold title-font mb-4 flex items-center poppins\">\r\n                            <p className=' font-sans flex items-center'> <TiMessages fontSize={20} /> &nbsp; Send Message</p>\r\n                        </h1>\r\n\r\n                    </div>\r\n\r\n                    <div className='flex-1 '>\r\n                        <button className='float-right hover:scale-105 z-10 cursor-pointer' onClick={() => props?.closeModalFun()}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 text-red-500\">\r\n                                <path fill-rule=\"evenodd\" d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z\" clip-rule=\"evenodd\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=' font-sans flex items-center text-sm'> You can send message to the verification team regarding your application if you have any query.</div>\r\n\r\n                <form onSubmit={formik.handleSubmit}>\r\n\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 mt-4'>\r\n                        <textarea name='message' className='bg-white shadow-lg px-2 poppins rounded-md text-gray-700 border-2 border-gray-300' value={formik.values.message} onChange={formik.handleChange} />\r\n                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.message && formik.errors.message ? formik.errors.message : null}</span>\r\n                        <div className=\"flex mt-2\">\r\n\r\n                            <div className='flex-1 mx-auto mt-5'>\r\n                                <button type='submit' className='bg-indigo-500 hover:bg-indigo-600 text-white poppins transition-all duration-200 ease-in-out rounded-sm px-6 py-[0.2rem] flex items-center'>Send &nbsp;<MdSend /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CitizenMessageScreenModified","\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : Objection\r\n// Description : Objection page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useState } from 'react'\r\nimport { RiBuilding2Line } from 'react-icons/ri'\r\nimport { FcDepartment } from 'react-icons/fc'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { TbWebhook } from 'react-icons/tb'\r\nimport { useContext } from 'react'\r\nimport { useEffect } from 'react'\r\nimport './assets/fonts/Font.css'\r\nimport { BsArrowBarLeft, BsArrowLeft, BsArrowRight } from 'react-icons/bs'\r\nimport Modal from 'react-modal'\r\nimport ObjectionRectificationTable from './ObjectionRectificationTable'\r\nimport ObjectionFormIndex from './ObjectionFormIndex'\r\nimport ObjectionForgery from './ObjectionForgery'\r\nimport { ImCross } from 'react-icons/im'\r\nimport ApplicationSubmitScreen from './ApplicationSubmitScreen'\r\n\r\n// Modal\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: 'white',\r\n    border: 'none'\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst ObjectionIndex = (props) => {\r\n\r\n  const { id } = useParams()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [index, setindex] = useState(0)\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [appId, setappId] = useState('')\r\n  const [openSubmit, setopenSubmit] = useState(false)\r\n  const [heading, setheading] = useState('')\r\n  const [formName, setformName] = useState('')\r\n\r\n  const openModal = () => {\r\n    setopenSubmit(false)\r\n    setIsOpen(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false)\r\n    props.resetId()\r\n  }\r\n\r\n  const openSubmitScreen1 = (appId) => {\r\n    console.log(\"app id => \", appId)\r\n    setappId(appId)\r\n    setheading(\"Clerical Objection\")\r\n    closeModal()\r\n    setopenSubmit(true)\r\n  }\r\n\r\n  const openSubmitScreen2 = (appId) => {\r\n    setappId(appId)\r\n    closeModal()\r\n    setopenSubmit(true)\r\n    setheading(\"Assessment Objection\")\r\n  }\r\n\r\n  const openSubmitScreen3 = (appId) => {\r\n    setappId(appId)\r\n    closeModal()\r\n    setopenSubmit(true)\r\n    setheading(\"Forgery Objection\")\r\n  }\r\n  const afterOpenModal = () => { }\r\n\r\n  useEffect(() => {\r\n    console.log('modal enter obj => ', props?.modalAction)\r\n    {\r\n      ((props?.modalAction == 1) || (props?.modalAction == 2) || (props?.modalAction == 3)) && openModal()\r\n    }\r\n  }, [props?.modalAction])\r\n\r\n  return (\r\n    <>\r\n      {/* ===============Modal============================ */}\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        className=\"z-20 h-screen w-screen backdrop-blur-sm flex flex-row justify-center items-center overflow-auto\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n\r\n        <div class=\" rounded-lg shadow-lg shadow-indigo-300 md:w-[73%] sm:h-[85vh] w-full relative border-2 border-indigo-500 bg-gray-50 px-6 py-4 h-max border-t-2 border-l-2 overflow-auto animate__animated animate__slideInLeft animate__faster\" >\r\n\r\n          <div className=\"absolute top-2 z-10 bg-red-200 hover:bg-red-300 right-2 rounded-full p-2 cursor-pointer\" onClick={closeModal}>\r\n            <ImCross fontSize={10} />\r\n          </div>\r\n\r\n          {\r\n            props?.modalAction == 1 && <ObjectionRectificationTable closePopUp={closeModal} id={props?.id} submitForm={openSubmitScreen1} />\r\n          }\r\n          {\r\n            props?.modalAction == 2 && <div><ObjectionFormIndex closePopUp={closeModal} id={props?.id} submitForm={openSubmitScreen2} /></div>\r\n          }\r\n          {\r\n            props?.modalAction == 3 && <ObjectionForgery closePopUp={closeModal} id={props?.id} submitForm={openSubmitScreen3} />\r\n          }\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n      <ApplicationSubmitScreen heading={heading} appNo={appId} openSubmit={openSubmit} refresh={() => setindex(index + 1)} />\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default ObjectionIndex","//////////////////{*****}//////////////////////////////////////////\r\n// >Author - R U Bharti\r\n// >Version - 1.0\r\n// >Date - 7 oct 2022\r\n// >Revision - 1\r\n// >Project - JUIDCO\r\n// >Component  - WaterHarvestingForm\r\n// >DESCRIPTION - WaterHarvestingForm Component\r\n//////////////////{*****}//////////////////////////////////////////\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { RiBuilding2Fill } from \"react-icons/ri\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport CitizenApplyApiList from \"../../../Components/CitizenApplyApiList\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport ApiHeader2 from \"../../../Components/ApiList/ApiHeader2\";\r\nimport BarLoader from \"../../../Components/Common/BarLoader\";\r\n// import { commonInputStyle } from 'Components/Common/CommonTailwind/CommonTailwind'\r\nimport {\r\n  allowCharacterCommaInput,\r\n  allowCharacterNumberInput,\r\n  allowCharacterInput,\r\n  allowNumberCharacterInput,\r\n  allowNumberCommaInput,\r\n  allowCharacterSpaceCommaInput,\r\n  allowFloatInput,\r\n  allowNumberInput,\r\n  allowCharacterNumberSpaceCommaInput,\r\n  nullToNA,\r\n  checkSizeValidation,\r\n} from \"../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport \"./formanimation.css\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport BottomErrorCard from \"../../../Components/BottomErrorCard\";\r\n\r\nfunction WaterHarvestingForm(props) {\r\n  const id = props?.id;\r\n\r\n  const [formOpen, setformOpen] = useState(false);\r\n  const [rwhDocLeft, setrwhDocLeft] = useState();\r\n  const [rwhDocTop, setrwhDocTop] = useState();\r\n  const [rwhDocRight, setrwhDocRight] = useState();\r\n  const [rwhDoc, setrwhDoc] = useState();\r\n  const [harvestingDetails, setharvestingDetails] = useState();\r\n  const [loader, setloader] = useState(false);\r\n  const [docCode, setdocCode] = useState();\r\n  const [erroState, seterroState] = useState(false);\r\n  const [erroMessage, seterroMessage] = useState(null);\r\n\r\n  const {\r\n    api_postWaterHarvestingData,\r\n    api_getHoldingDetails,\r\n    api_postWaterHarvestindDocCode,\r\n  } = CitizenApplyApiList();\r\n\r\n  const validationSchema = yup.object({\r\n    dateOfCompletion: yup.string().required(\"Select date of completion\"),\r\n    rwhImage: yup.mixed().required(\"Upload image\"),\r\n    // rwhImageLeft: yup.mixed().required(\"Upload left view image\"),\r\n    // rwhImageTop: yup.mixed().required(\"Upload top view image\"),\r\n    // rwhImageRight: yup.mixed().required(\"Upload right view image\")\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      isWaterHarvestingBefore: \"\",\r\n      dateOfCompletion: \"\",\r\n      rwhImage: \"\",\r\n      // rwhImageLeft : '',\r\n      // rwhImageTop : '',\r\n      // rwhImageRight : ''\r\n    },\r\n\r\n    onSubmit: (values, resetForm) => {\r\n      console.log(\"waterHarvesting \", values);\r\n      if (!checkSizeValidation(rwhDoc)) {\r\n        formik.setFieldValue('rwhImage', '').then(() => {\r\n          activateBottomErrorCard(true, 'Check your file size')\r\n        })\r\n        return true\r\n      }\r\n      submitSafForm(values);\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setloader(true)\r\n    axios\r\n      .post(`${api_postWaterHarvestindDocCode}`, {}, ApiHeader())\r\n      .then(function (response) {\r\n        console.log(\"water harvesting doc code => \", response);\r\n        if (response?.data?.status) {\r\n          setdocCode(response?.data?.data?.masters[0]?.documentCode);\r\n        } else {\r\n          activateBottomErrorCard(true, 'Error occurred in submittion. Please try again later.')\r\n        }\r\n        setloader(false)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"water harvesting doc code errorrr.... \", error);\r\n        activateBottomErrorCard(true, 'Error occurred in submittion. Please try again later.')\r\n        setloader(false)\r\n\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setloader(true);\r\n    setTimeout(() => {\r\n      setloader(false);\r\n    }, 10000);\r\n\r\n    let token = window.localStorage.getItem(\"token\");\r\n    console.log(\"token at basic details is  get method...\", token);\r\n    const header = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(api_getHoldingDetails, { propertyId: id }, header)\r\n      .then((res) => {\r\n        console.log(\"getting harvesting details => \", res);\r\n        setharvestingDetails(res?.data?.data);\r\n        setloader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"getting harvesting details error => \", err);\r\n        setloader(false);\r\n      });\r\n  }, []);\r\n\r\n  ///////////{***WATER HARVESTING  SUBMIT FUNCTION***}/////////\r\n  const submitSafForm = (values) => {\r\n    setloader(true);\r\n\r\n\r\n    let fd = new FormData();\r\n\r\n    // fd.append(\"isWaterHarvestingBefore\", values.isWaterHarvestingBefore);\r\n    fd.append(\"dateOfCompletion\", values.dateOfCompletion);\r\n    // fd.append(\"rwhImageLeft\", rwhDocLeft)\r\n    // fd.append(\"rwhImageTop\", rwhDocTop)\r\n    // fd.append(\"rwhImageRight\", rwhDocRight)\r\n    fd.append(\"document\", rwhDoc);\r\n    fd.append(\"docCode\", docCode);\r\n    fd.append(\"propertyId\", id);\r\n    fd.append(\"ulbId\", harvestingDetails?.ulb_id);\r\n\r\n    setTimeout(() => {\r\n      setloader(false);\r\n    }, 10000);\r\n\r\n    // return\r\n    axios\r\n      .post(`${api_postWaterHarvestingData}`, fd, ApiHeader2())\r\n      .then(function (response) {\r\n        if (response?.data?.status == true) {\r\n          console.log(\r\n            \"response after submitting water harvesting data\",\r\n            response\r\n          );\r\n          toast.success(\"Water Harvesting Applied Successfully !!\");\r\n          setloader(false);\r\n          props.submitHarvesting(response?.data?.data);\r\n        } else {\r\n          activateBottomErrorCard(true, 'Error occurred in submitting water harvesting application. Please try again later.')\r\n\r\n        }\r\n        setloader(false)\r\n\r\n      })\r\n      .catch(function (error) {\r\n        setloader(false);\r\n        activateBottomErrorCard(true, 'Error occurred in submitting water harvesting application. Please try again later.')\r\n      });\r\n  };\r\n  const handleChangeImage = (e) => {\r\n    const name = e.target.name;\r\n\r\n    if (name == \"rwhImage\") {\r\n      let file = e.target.files[0];\r\n      console.log(`${name} file in change => `, file);\r\n        formik.setFieldValue(name, file)\r\n        setrwhDoc(e.target.files[0]);\r\n    }\r\n\r\n    if (name == \"rwhImageLeft\") {\r\n      let file = e.target.files;\r\n      setrwhDocLeft(e.target.files[0]);\r\n      console.log(\"file in change => \", file);\r\n    }\r\n\r\n    if (name == \"rwhImageTop\") {\r\n      let file = e.target.files;\r\n      setrwhDocTop(e.target.files[0]);\r\n      console.log(\"file in change => \", file);\r\n    }\r\n\r\n    if (name == \"rwhImageRight\") {\r\n      let file = e.target.files;\r\n      setrwhDocRight(e.target.files[0]);\r\n      console.log(\"file in change => \", file);\r\n    }\r\n  };\r\n\r\n  const activateBottomErrorCard = (state, msg) => {\r\n    seterroMessage(msg)\r\n    seterroState(state)\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {loader && <BarLoader />}\r\n      {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n\r\n      <div className=\"2xl:mt-6 mt-3 bg-indigo-500 text-white flex flex-row md:justify-evenly items-center justify-center uppercase text-base poppins mb-4 shadow-md py-2 rounded-md\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"font-extrabold text-base sm:text-[30px]\">\r\n            <RiBuilding2Fill className=\"inline mr-2\" />\r\n          </span>\r\n          <span className=\"font-semibold poppins 2xl:text-xl text-base sm:text-lg\">\r\n            Rain Water Harvesting Form\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poppins my-2 2xl:font-base text-sm\">\r\n      As per the provisions of Notification Number: 01/विविध/रा.क.नि./10/2016/न.वि.-5350, Dated: 24-09-2016, issued by the UD&HD, GoJ, if any property or asset is located in an area of 300 square meters (3228 sqft) or more and does not adopt the technique or structure for rainwater harvesting, then a penalty will be imposed equal to 1.5 times of the total payable property tax and collected as the rainwater tax.\r\n\r\n      </div>\r\n\r\n      {harvestingDetails?.is_water_harvesting ?\r\n        <div className=\"animate__animated animate__fadeInUp w-full flex justify-center mt-2 items-center\">\r\n\r\n          <div className=\"bg-indigo-500 text-white rounded-md shadow-lg px-4 py-2\">\r\n          You have already applied and your form is in workflow.\r\n          </div>\r\n\r\n        </div>\r\n        :\r\n\r\n        <>\r\n\r\n          {/* ===========Details View================ */}\r\n          <div className=\"p-4 w-full md:py-6 rounded-lg shadow-lg bg-white mx-auto flex flex-wrap gap-x-20 top-14 mb-6\">\r\n            {/* <div className='col-span-1'>\r\n                            <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Name </label>\r\n                        </div> */}\r\n\r\n            {harvestingDetails?.pt_no == '' && harvestingDetails?.pt_no == undefined ? <>\r\n              <div className=\"col-span-1\">\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 text-sm poppins\">\r\n                  Property Tax No.: &nbsp;&nbsp;&nbsp;\r\n                </label>\r\n                <span className=\"font-semibold text-sm poppins\">\r\n                  {nullToNA(harvestingDetails?.pt_no)}\r\n                </span>\r\n              </div></> :\r\n              <div className=\"col-span-1\">\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 text-sm poppins\">\r\n                  Holding No.: &nbsp;&nbsp;&nbsp;\r\n                </label>\r\n                <span className=\"font-semibold text-sm poppins\">\r\n                  {nullToNA(harvestingDetails?.new_holding_no == '' ? harvestingDetails?.holding_no : harvestingDetails?.new_holding_no)}\r\n                </span>\r\n              </div>}\r\n\r\n            <div className=\"col-span-1\">\r\n              <label className=\"form-label inline-block mb-1 text-gray-600 text-sm poppins\">\r\n                Property Tax No.: &nbsp;&nbsp;&nbsp;\r\n              </label>\r\n              <span className=\"font-semibold text-sm poppins\">\r\n                {nullToNA(harvestingDetails?.pt_no)}\r\n              </span>\r\n            </div>\r\n\r\n            <div className='col-span-1'>\r\n              <label className=\"form-label inline-block mb-1 text-gray-600 text-sm poppins\">Old Ward No.:  &nbsp;&nbsp;&nbsp;</label>\r\n              <span className='font-semibold text-sm poppins'>{nullToNA(harvestingDetails?.old_ward_no)}</span>\r\n            </div>\r\n\r\n            <div className='col-span-1'>\r\n              <label className=\"form-label inline-block mb-1 text-gray-600 text-sm poppins\">New Ward No.:  &nbsp;&nbsp;&nbsp;</label>\r\n              <span className='font-semibold text-sm poppins'>{nullToNA(harvestingDetails?.new_ward_no)}</span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {/* ===================Form Fill============================== */}\r\n          <div className=\"block p-4 w-full 2xl:py-6 py-3 rounded-lg shadow-lg bg-white mx-auto  top-14\">\r\n            <form onSubmit={formik.handleSubmit} onChange={formik.handleChange}>\r\n              {/* <div className=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-4\">\r\n            <div className=\"col-span-1\">\r\n              <div className=\"flex flex-row space-x-3\">\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold poppins\">\r\n                  <small className=\"mt-1 text-sm font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  Does Completion of Water Harvesting is done before 31-03-2017?\r\n                </label>\r\n                <input\r\n                  className=\"w-6 h-6 text-blue-600 bg-gray-100 border-gray-300  darks:bg-gray-700 darks:border-gray-600\"\r\n                  type=\"radio\"\r\n                  id=\"isWaterHarvestingBefore\"\r\n                  name=\"isWaterHarvestingBefore\"\r\n                  value={1}\r\n                  onChange={formik.handleChange}\r\n                  required\r\n                />\r\n                <label\r\n                  for=\"option1\"\r\n                  className=\" text-sm font-medium text-gray-900 poppins\"\r\n                >\r\n                  Yes\r\n                </label>\r\n\r\n                <input\r\n                  className=\"w-6 h-6 text-blue-600 bg-gray-100 border-gray-300  darks:bg-gray-700 darks:border-gray-600\"\r\n                  type=\"radio\"\r\n                  id=\"isWaterHarvestingBefore\"\r\n                  name=\"isWaterHarvestingBefore\"\r\n                  value={0}\r\n                  onChange={formik.handleChange}\r\n                  required\r\n                />\r\n                <label\r\n                  for=\"option1\"\r\n                  className=\"text-sm font-medium text-gray-900 poppins\"\r\n                >\r\n                  No\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 gap-4\"></div> */}\r\n\r\n              <div className=\"grid grid-cols-12 gap-2\">\r\n                <div className=\"col-span-10 flex flex-row flex-wrap items-center gap-4\">\r\n                  <label className=\"form-label mb-1 text-gray-600 text-sm font-semibold\">\r\n                    <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                      *\r\n                    </small>\r\n                    Date of Completion of Water Harvesting Structure\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"dateOfCompletion\"\r\n                    className=\"form-control px-3 py-1.5 2xl:text-base text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md poppins\"\r\n                    placeholder=\"\"\r\n                    value={formik.values.dateOfCompletion}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <p className=\"text-red-500 text-xs poppins\">\r\n                    {formik.touched.dateOfCompletion &&\r\n                      formik.errors.dateOfCompletion\r\n                      ? formik.errors.dateOfCompletion\r\n                      : null}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"2xl:col-span-10 col-span-10 flex flex-row flex-wrap items-center gap-2 2xl:gap-4 poppins\">\r\n                  <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold poppins\">\r\n                    <small className=\" mt-1 text-sm font-semibold text-red-600 inline\">\r\n                      *\r\n                    </small>\r\n                    Rain Water Harvesting Image\r\n                  </label>\r\n                  <input\r\n                    accept=\".jpg,.jpeg\"\r\n                    type=\"file\"\r\n                    name=\"rwhImage\"\r\n                    className=\"form-control px-2 py-1 2xl:text-base text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md poppins\"\r\n                    placeholder=\"\"\r\n                    value={formik.values.rwhImage}\r\n                    onChange={handleChangeImage}\r\n                  />\r\n                  <p className=\"text-red-500 text-xs poppins\">\r\n                    {formik.touched.rwhImage && formik.errors.rwhImage\r\n                      ? formik.errors.rwhImage\r\n                      : null}\r\n                  </p>\r\n                </div>\r\n                {/* <div className=\"col-span-2 flex items-center justify-start\"><p className='text-red-500 text-xs poppins'>{formik.touched.rwhImage && formik.errors.rwhImage ? formik.errors.rwhImage : null}</p></div> */}\r\n\r\n                {/* <div className='md:col-span-4 col-span-10 mt-4'>\r\n                            <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Rain Water Harvesting Left View Image </label>\r\n                            <input accept='.jpg,.jpeg' type=\"file\" name='rwhImageLeft' className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                placeholder=\"\"\r\n                                value={formik.values.rwhImageLeft} onChange={handleChangeImage}\r\n                            />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.rwhImageLeft && formik.errors.rwhImageLeft ? formik.errors.rwhImageLeft : null}</p>\r\n\r\n                        </div>\r\n\r\n                        <div className='md:col-span-4 col-span-10 mt-4'>\r\n                            <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Rain Water Harvesting Top View Image </label>\r\n                            <input accept='.jpg,.jpeg' type=\"file\" name='rwhImageTop' className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                placeholder=\"\"\r\n                                value={formik.values.rwhImageTop} onChange={handleChangeImage}\r\n                            />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.rwhImageTop && formik.errors.rwhImageTop ? formik.errors.rwhImageTop : null}</p>\r\n\r\n                        </div>\r\n\r\n                        <div className='md:col-span-4 col-span-10 mt-4'>\r\n                            <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Rain Water Harvesting Right View Image </label>\r\n                            <input accept='.jpg,.jpeg' type=\"file\" name='rwhImageRight' className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                placeholder=\"\"\r\n                                value={formik.values.rwhImageRight} onChange={handleChangeImage}\r\n                            />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.rwhImageRight && formik.errors.rwhImageRight ? formik.errors.rwhImageRight : null}</p>\r\n\r\n                        </div> */}\r\n              </div>\r\n              <div className=\"col-span-10 mt-4 flex justify-between bg-transparent\">\r\n                <button\r\n                  onClick={() => props.closePopUp()}\r\n                  type=\"button\"\r\n                  className=\" px-3 py-1.5 2xl:px-6 2xl:py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out poppins\"\r\n                >\r\n                  Close\r\n                </button>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\" px-3 py-1.5 2xl:px-6 2xl:py-2.5 bg-green-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out poppins\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WaterHarvestingForm;\r\n","import React from 'react'\r\nimport { FiAlertCircle } from 'react-icons/fi'\r\n\r\nconst DeleteModal = (props) => {\r\n  return (\r\n    <>\r\n                    <div class=\"p-6 text-center\">\r\n                        <div className='w-full flex h-10'> <span className='mx-auto'><FiAlertCircle size={30} /></span></div>\r\n                        <h3 class=\"mb-5 2xl:text-lg text-md font-normal text-gray-500\">do you want to delete this application ?</h3>\r\n                        <div>\r\n                        <button type=\"button\" class=\"text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2\" onClick={() => props?.deleteSafFun()}>\r\n                            Delete\r\n                        </button>\r\n                        <button onClick={props?.closeModal} type=\"button\" class=\"text-white bg-green-600 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2\">\r\n                            Cancel\r\n                        </button>\r\n                        </div>\r\n\r\n                    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeleteModal","import React from 'react'\r\n\r\nfunction InfoNewAssessment(props) {\r\n    return (\r\n        <div className='w-full sm:w-4/5 lg:3/5 mx-auto'>\r\n            <div className='bg-white shadow-xl flex justify-center items-center relative'>\r\n                <button\r\n                    onClick={props?.closeInfoModal}\r\n                    type=\"button\"\r\n                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                >\r\n                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                        <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                            clip-rule=\"evenodd\"\r\n                        ></path>\r\n                    </svg>\r\n                </button>\r\n                <div\r\n                    className=\"w-full px-4 mx-auto py-4 md:py-6 \">\r\n                    <div\r\n                        className=\"w-full\">\r\n                        <div>\r\n                            <h2 className=\"text-3xl font-medium text-center\">Apply Assessment</h2>\r\n                            <div className=\"mt-2 text-center w-full\">Choose from these assessment types</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-10 relative\">\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoNewAssessment","import React from 'react'\r\n\r\nfunction InfoReAssessment(props) {\r\n    return (\r\n        <div className='w-full sm:w-4/5 lg:3/5 mx-auto'>\r\n            <div className='bg-white shadow-xl flex justify-center items-center relative'>\r\n                <button\r\n                    onClick={props?.closeInfoModal}\r\n                    type=\"button\"\r\n                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                >\r\n                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                        <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                            clip-rule=\"evenodd\"\r\n                        ></path>\r\n                    </svg>\r\n                </button>\r\n                <div\r\n                    className=\"w-full px-4 mx-auto py-4 md:py-6 \">\r\n                    <div\r\n                        className=\"w-full\">\r\n                        <div>\r\n                            <h2 className=\"text-3xl font-medium text-center\">Apply Re Assessment</h2>\r\n                            <div className=\"mt-2 text-center w-full\">Choose from these assessment types</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-10 relative\">\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoReAssessment","import { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport newAsss from '../../../Components/Media/new.png'\r\nimport re from '../../../Components/Media/re.png'\r\nimport transfer from '../../../Components/Media/transfer.png'\r\nimport add from '../../../Components/Media/add.png'\r\nimport division from '../../../Components/Media/division.png'\r\nimport concession from '../../../Components/Media/concession.png'\r\nimport objection from '../../../Components/Media/objection.png'\r\nimport rwh from '../../../Components/Media/rwh.png'\r\nimport { BsQuestionCircle } from 'react-icons/bs'\r\nimport { Tooltip } from 'react-tooltip'\r\nimport CommonModal from '../../../Components/GlobalData/CommonModal'\r\nimport InfoNewAssessment from './ApplicationInformation/InfoNewAssessment'\r\nimport InfoReAssessment from './ApplicationInformation/InfoReAssessment'\r\n\r\nfunction SafApplyCard(props) {\r\n    const navigate = useNavigate()\r\n    const [infoCardCount, setinfoCardCount] = useState(0)\r\n\r\n    const activateInfoCard = (e, count) => {\r\n        e.stopPropagation()\r\n        setinfoCardCount(count)\r\n    }\r\n\r\n    const closeInfoModal = () => {\r\n        setinfoCardCount(0)\r\n    }\r\n\r\n    if (infoCardCount == 1) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 2) { return (<CommonModal><InfoReAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 3) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 4) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 5) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 6) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 7) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n    if (infoCardCount == 8) { return (<CommonModal><InfoNewAssessment closeInfoModal={closeInfoModal} /></CommonModal>) }\r\n\r\n\r\n\r\n    return (\r\n        <div className='w-full sm:w-4/5 lg:3/5 mx-auto'>\r\n            <div className='bg-white shadow-xl flex justify-center items-center relative'>\r\n                <button\r\n                    onClick={() => props?.closeModal(false)}\r\n                    type=\"button\"\r\n                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                >\r\n                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                        <path\r\n                            fill-rule=\"evenodd\"\r\n                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                            clip-rule=\"evenodd\"\r\n                        ></path>\r\n                    </svg>\r\n                </button>\r\n                <div\r\n                    className=\"w-full px-4 mx-auto py-4 md:py-6 \">\r\n                    <div\r\n                        className=\"w-full\">\r\n                        <div>\r\n                            <h2 className=\"text-3xl font-medium text-center\">Property related applications</h2>\r\n                            <div className=\"mt-2 text-center w-full\">Choose from these application types</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-10 relative\">\r\n                        <div className=\"grid gap-6 grid-cols-2 sm:grid-cols-3 lg:grid-cols-4\">\r\n                            {/* 1 NEW ASSESSMENT */}\r\n                            <div onClick={() => navigate('/safform/new/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card1\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 1)} id=\"card1\" data-tooltip-content=\"Click to know more about new assessment.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-16 w-16\"\r\n                                    src={newAsss}\r\n                                    alt=\"Mobiles\" />\r\n                                <div className=\"font-bold mt-4 text-center\">New Assessment</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this for fresh assessment of property.</div>\r\n                            </div>\r\n\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, reAssessment: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card5\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 2)} id=\"card5\" data-tooltip-content=\"Click to know more about new re assessment.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-16 w-16\"\r\n                                    src={re}\r\n                                    alt=\"Mobiles\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Re Assessment</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this for re assesment of your property.</div>\r\n                            </div>}\r\n\r\n\r\n\r\n                            {/* 3 MUTATION */}\r\n                            <div onClick={() => navigate('/safform/mu/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card2\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 3)} id=\"card2\" data-tooltip-content=\"Click to know more about mutation.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={transfer}\r\n                                    alt=\"Fashion\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Mutation</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this for transfer of ownership.</div>\r\n\r\n                            </div>\r\n\r\n                            {/* 4 BIFURCATION */}\r\n                            <div onClick={() => navigate('/safform/bi/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card3\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 4)} id=\"card3\" data-tooltip-content=\"Click to know more about bifurcation.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={division}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Bifurcation</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your property has been bifurcated from existing property.</div>\r\n\r\n                            </div>\r\n                            {/* 5 AMALGAMATION */}\r\n                            <div onClick={() => navigate('/safform/am/0')}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card4\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 5)} id=\"card4\" data-tooltip-content=\"Click to know more about amalgamation.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={add}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Amalgamation</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your property has been amalgamated from existing properties.</div>\r\n                            </div>\r\n\r\n\r\n                            {/* 6 Concession */}\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, concession: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card6\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 6)} id=\"card6\" data-tooltip-content=\"Click to know more about concession.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={concession}\r\n                                    alt=\"Fashion\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Concession</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this to apply for concession application to get reabte on your property tax if applicable.</div>\r\n\r\n                            </div>\r\n                            }\r\n\r\n                            {/* 7 Rainwater harvesting */}\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, rainWater: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card7\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 7)} id=\"card7\" data-tooltip-content=\"Click to know more about Rainwater harvesting.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={rwh}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Rainwater Harvesting</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your rainwater harvesting status has been changed.</div>\r\n\r\n                            </div>\r\n                            }\r\n\r\n                            {/* 8 Objection */}\r\n                            {/* 2 RE-ASSESSMENT */}\r\n                            {props?.propertyCount !== 0 && <div onClick={() => {\r\n                                props?.setPropertyScrollStatus(\r\n                                    { ...props?.PropertyScrollStatus, objection: true }\r\n                                )\r\n                                props?.closeModal(false)\r\n                            }}\r\n                                className=\"bg-gray-100  rounded-xl flex flex-col justify-center items-center p-4 md:p-6 relative cursor-pointer\"\r\n                                href=\"\">\r\n                                <Tooltip style={{ 'zIndex': 1000 }} anchorId=\"card8\" />\r\n                                <span className='absolute top-2 right-2'><BsQuestionCircle onClick={(e) => activateInfoCard(e, 8)} id=\"card8\" data-tooltip-content=\"Click to know more about objection.\" className=\"inline text-red-500 text-xl font-semibold cursor-pointer hover:text-red-800\" /></span>\r\n                                <img\r\n                                    className=\"h-20 w-20\"\r\n                                    src={objection}\r\n                                    alt=\"Electronics\" />\r\n                                <div className=\"font-bold mt-4 text-center\">Objection</div>\r\n                                <div className=\"mt-1 text-center w-full text-xs px-4\">Choose this if your you have to object on your property.</div>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SafApplyCard","///////////////////////////////////////////////////////////////////////\r\n// Author : R U Bharti\r\n// Project : JUIDCO\r\n///////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useState } from 'react'\r\nimport { BiChevronsRight } from 'react-icons/bi'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {AiFillInfoCircle} from 'react-icons/ai'\r\nimport { nullToNA } from '../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nconst ServicesAppCard = (props) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className='w-full pb-0 pt-10 bg-white rounded-lg border border-gray-100 shadow-xl mb-6 relative overflow-hidden animate__animated animate__fadeIn animate__faster'>\r\n                                        <div className='w-full pb-4 pt-0 px-4'>\r\n                                            <div className='w-full rounded-lg  space-b-2'>\r\n                                                <div className='w-full  grid grid-cols-12'>\r\n                                                    <div className='col-span-12 md:col-span-6 grid grid-cols-12'>\r\n                                                        <div className='col-span-6'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA(props?.application?.applicant_name)}</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'>Applicant Name</div>\r\n                                                        </div>\r\n\r\n                                                        <div className='col-span-6'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA(props?.application?.apply_date) }</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'>Apply Date</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                   \r\n                                                    <div className='col-span-12 md:col-span-6 grid grid-cols-12 mt-4 md:mt-0'>\r\n                                                        {props?.label != 'Objection' && <div className='col-span-6'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA(props?.application?.application_no) }</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'>Application No. </div>\r\n                                                        </div>}\r\n\r\n                                                        {props?.label == 'Objection' && <div className='col-span-6'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA(props?.application?.objection_no)}</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'>Objection No. </div>\r\n                                                        </div>}\r\n\r\n                                                        {(props?.application?.pt_no == '' || props?.application?.pt_no == undefined) ? \r\n                                                        <div className='col-span-6'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA((props?.application?.new_holding_no == '' || props?.application?.new_holding_no == undefined) ? props?.application?.holding_no : props?.application?.new_holding_no)}</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'>Holding No.</div>\r\n                                                        </div> \r\n                                                        :\r\n                                                        <div className='col-span-6'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA(props?.application?.pt_no)}</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'>Property Tax No.</div>\r\n                                                        </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                    {/* <div className='col-span-12 md:col-span-2 grid grid-cols-12 mt-4 md:mt-0'>\r\n                                                        <div className='col-span-12'>\r\n                                                            <div className='font-semibold text-gray-700 2xl:text-base text-sm'>{nullToNA(props?.application?.backToCitizen)}</div>\r\n                                                            <div className='text-xs text-gray-600 font-serif italic'><abbr title=\"Back To Citizen\" className='text-xs text-gray-600 font-serif italic no-underline'>BTC</abbr> </div>\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                \r\n                                                {props?.application?.backToCitizen == true ?\r\n                                                 <div className=\"w-full poppins 2xl:text-sm text-xs italic mt-4 text-gray-800 pr-10\">\r\n                                                    Your application form has been redirected as <span className=\"font-semibold poppins\">Back to Citizen (BTC) </span>to re-upload documents. We are waiting for you to upload documents. Thank You !!\r\n                                                </div> : \r\n                                                <div className=\"w-full poppins 2xl:text-sm text-xs italic mt-4 text-gray-800 pr-10\">\r\n                                                Your {props?.label} application is pending at <span className='font-semibold poppins'> {props?.application?.pending_at} </span> and it is in process. Thank you for your patience !!\r\n                                            </div>\r\n                                                }\r\n                                                 {props?.application?.backToCitizen == true &&\r\n                                               <>\r\n                                               <hr className='2xl:h-[0.2rem] 2xl:my-4 h-[0.1rem] my-2' />\r\n                                               <div className='w-full pl-2 text-sm poppins'>\r\n                                                    <div className='font-semibold 2xl:text-base text-md 2xl:mb-2 mb-1 poppins'>Action</div>\r\n                                                <div className='flex flex-wrap items-center flex-row gap-8'>\r\n                                                 <div className='2xl:text-sm text-xs text-amber-600 poppins'> <AiFillInfoCircle fontSize={14} className=\"inline\" /> Document is pending <span className='float-right ml-4 cursor-pointer bg-indigo-500 text-white px-4  2xl:text-sm text-xs shadow-lg py-[0.2rem] hover:bg-indigo-600 hover:scale-105 rounded-sm border border-white' onClick={() => navigate(`/servicesDocUpload/${props?.application?.application_id}/${props?.label}`)}>Upload</span></div>\r\n                                                </div>\r\n                                                </div>\r\n                                                </>}\r\n                                                <span onClick={() => navigate(`/${props?.location}/${props?.application?.application_id}`)} className=' text-white px-2 2xl:px-4 py-[0.2rem] text-xs 2xl:text-sm md:absolute bottom-3 2xl:bottom-2 right-2 rounded-sm bg-indigo-500 border-indigo-400 hover:border-indigo-600 hover:bg-indigo-600 hover:text-white shadow-sm  cursor-pointer poppins md:mt-0 mt-2'>View Details<BiChevronsRight className=\"inline font-semibold text-xl\" /></span>\r\n                                                </div>\r\n                                                {props?.label != 'Objection' ? <span className='px-2 text-xs absolute top-2 left-2  py-1 rounded-sm bg-amber-500 border-amber-300 hover:border-amber-600 hover:bg-amber-500 tracking-wider text-white font-semibold shadow-sm poppins'>{props?.label}</span> :\r\n                       <span className='px-2 text-xs absolute top-2 left-2  py-1 rounded-sm bg-amber-500 border-amber-300 hover:border-amber-600 hover:bg-amber-500 tracking-wider text-white font-semibold shadow-sm poppins'>\r\n                        {props?.application?.objection_for == 'Clerical Mistake' && <>Clerical Objection</>}\r\n                        {props?.application?.objection_for == 'Assessment Error' && <>Assessment Objection</>}\r\n                        {props?.application?.objection_for == 'Forgery' && <>Forgery Objection</>}\r\n                        </span>                         \r\n                                }\r\n                                                </div>\r\n                                                </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServicesAppCard","import { useContext, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport { allowCharacterNumberInput, allowNumberInput } from '../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport CitizenApplyApiList from '../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../Components/Common/BarLoader';\r\nimport axios from 'axios';\r\nimport { contextVar } from '../../../Components/ContextVar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allowCharacterNumberForwardInput } from '../../AdvertisementModule/FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../Components/ApiList/ApiHeader';\r\nimport CommonModal from '../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../AdvertisementModule/ServerErrorCard';\r\nimport BottomErrorCard from '../../../Components/BottomErrorCard';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction PtnNoCard(props) {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [isButtonEnabled, setisButtonEnabled] = useState(false)\r\n    const [inputError, setinputError] = useState('')\r\n    const { api_sendMobileOtpAttachment } = CitizenApplyApiList()\r\n    const { notify } = useContext(contextVar)\r\n    const navigate = useNavigate()\r\n    const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n    const [errorMsg, seterrorMsg] = useState('')\r\n\r\n\r\n\r\n\r\n    const validationSchema = yup.object({\r\n        ptnNo: yup.string(),\r\n        holdingNo: yup.string(),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            ptnNo: \"\",\r\n            holdingNo: \"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log('at submit form.....', values)\r\n            // IF NO INPUT THEN GIVE ERROR\r\n            if (values.ptnNo.length < 14 && values.holdingNo < 15) {\r\n                setinputError('Please enter PTN or holding no.')\r\n                return\r\n            }\r\n\r\n            // IF PTN LENGTH IS ZERO THEN SET HOLDING OR VICE VERSA\r\n            if (values.ptnNo.length == 0) {\r\n                props?.setholdingNo(values.holdingNo)\r\n            } else {\r\n                props?.setptnNo(values.ptnNo)\r\n            }\r\n            sendOtp(values)\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // CLEAR OPPOSITE INPUT FIELD\r\n        if (name == 'ptnNo') {\r\n            formik.setFieldValue('holdingNo', '')\r\n            props?.setholdingNo('')\r\n        } else {\r\n            formik.setFieldValue('ptnNo', '')\r\n            props?.setptnNo('')\r\n        }\r\n\r\n        // INPUT RESTRICTION\r\n        { name == 'ptnNo' && formik.setFieldValue(\"ptnNo\", allowCharacterNumberForwardInput(value, formik.values.ptnNo, 17)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberForwardInput(value, formik.values.holdingNo, 16)) }\r\n\r\n        if ((name == 'ptnNo' && (value.length >= 14) || (name == 'holdingNo' && (value.length >= 15)))) {\r\n            setisButtonEnabled(true)\r\n        }\r\n        else {\r\n            setisButtonEnabled(false)\r\n        }\r\n    };\r\n\r\n    // FUNCTION WHICH SENDS OTP TO REGISTERED MOBILE NO TO ATTACH HOLDING\r\n    const sendOtp = (values) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        setisButtonEnabled(false)\r\n        // DUMMY OTP SEND MESSAGE\r\n        // notify('Otp has been send to registered mobile no.', 'success')\r\n        // props?.setptnCardStatus(false)\r\n        // props?.setotpCardStatus(true)\r\n\r\n        // return\r\n\r\n        let requestBody\r\n        if (values.ptnNo.length == 0) {\r\n            requestBody = {\r\n                holdingNo: values.holdingNo\r\n            }\r\n        } else {\r\n            requestBody = {\r\n                ptNo: values.ptnNo\r\n            }\r\n        }\r\n\r\n        console.log('before send otp for attachment...', requestBody)\r\n        // return\r\n        axios\r\n            .post(api_sendMobileOtpAttachment, requestBody, ApiHeader())\r\n            .then((response) => {\r\n                console.log('otp send for attachment response', response?.data)\r\n                if (response?.data?.status) {\r\n                    props?.setpropertyAttachedMobileNo(response?.data?.data?.mobileNo)\r\n                    props?.setptnCardStatus(false)\r\n                    props?.setotpCardStatus(true)\r\n                } else {\r\n                    activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                }\r\n                setisLoading(false)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error otp send\", err)\r\n                notify('Something went wrong in attachment...', 'error')\r\n                setisLoading(false)\r\n                activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                setisButtonEnabled(true)\r\n            });\r\n    }\r\n\r\n    const activateBottomErrorCard = (state, msg) => {\r\n        seterroMessage(msg)\r\n        seterroState(state)\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading && <BarLoader />\r\n            }\r\n             {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n            {/* <Modal\r\n                isOpen={modalIsOpen}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            > */}\r\n            {/* <div class=\"w-screen h-screen\"> */}\r\n            <div class=\"w-full sm:w-full  mx-auto\">\r\n                <div class=\"container mx-auto\">\r\n                    <div class=\"max-w-sm mx-auto md:max-w-lg\">\r\n                        <div class=\"w-full bg-white rounded text-center shadow-xl relative p-20\">\r\n                            <div class=\"\">\r\n                                <button\r\n                                    onClick={() => props?.closeModal(false)}\r\n                                    type=\"button\"\r\n                                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                                >\r\n                                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                                        <path\r\n                                            fill-rule=\"evenodd\"\r\n                                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                            clip-rule=\"evenodd\"\r\n                                        ></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <div class=\"text-2xl font-bold px-10\">Enter PTN No.\r\n                                    {/* <button onClick={() => props?.setptnCardStatus(false)} type=\"button\" class=\"float-right right-2.5 text-red-400 bg-transparent hover:bg-red-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center \" >\r\n                                                <svg class=\"w-5 h-5\" fill=\"currentColor\" ><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\r\n                                            </button> */}\r\n                                </div>\r\n                                <div class=\"flex flex-col mt-4 text-center\">\r\n                                    <span className='text-center'>Enter 14 digit PTN no, or Holding no.<br />to attach a property</span>\r\n                                    {/* <span class=\"font-bold\">+91 ******876</span> */}\r\n                                </div>\r\n\r\n                                <div class=\"flex flex-col mt-4 text-center\">\r\n                                    <span className='text-center text-red-400'>{errorMsg}</span>\r\n                                </div>\r\n                                <div class=\"flex flex-row justify-center text-center mt-5\">\r\n\r\n                                    <form onSubmit={formik.handleSubmit} onChange={handleChange} >\r\n                                        <div>\r\n                                            <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold w-full text-left`}>PTN</label>\r\n                                            <input type=\"text\"  {...formik.getFieldProps('ptnNo')} className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className='font-semibold text-indigo-500 mt-2'>Or</div>\r\n\r\n                                        <div>\r\n                                            <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold w-full text-left`}>Holding No.</label>\r\n                                            <input type=\"text\"  {...formik.getFieldProps('holdingNo')} className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className='text-red-500 mt-10'>{inputError}</div>\r\n                                        <div class=\"w-full text-center\">\r\n\r\n                                            {isButtonEnabled && <button type='submit' className=\"w-full  py-2.5 bg-indigo-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-indigo-700 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out\">Submit</button>}\r\n                                            {!isButtonEnabled && <button type='button' className=\"w-full  py-2.5 bg-gray-400 text-white font-medium text-xs leading-tight  rounded shadow-md  hover:shadow-lg  focus:shadow-lg focus:outline-none focus:ring-0  transition duration-150 ease-in-out cursor-default \">Submit</button>}\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            {/* </Modal> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PtnNoCard"],"names":["props","api_safindependentComment","CitizenApplyApiList","_useState","useState","_useState2","_slicedToArray","isloading","setisloading","_useState3","_useState4","erroState","seterroState","_useState5","_useState6","erroMessage","seterroMessage","_useState7","_useState8","console","log","applicationIdfun","workflowIdfun","applicationId","validationSchema","workflowId","yup","message","required","formik","useFormik","initialValues","onSubmit","values","handleSendComment","requestBody","axios","ApiHeader","then","response","_response$data","data","status","notify","closeModalFun","activateBottomErrorCard","catch","err","state","msg","_jsxs","_Fragment","children","_jsx","BarLoader","BottomErrorCard","errorTitle","className","TiMessages","fontSize","onClick","xmlns","viewBox","fill","class","d","handleSubmit","name","value","onChange","handleChange","touched","errors","type","MdSend","allowFloatInput","currentValue","oldValue","max","arguments","length","undefined","test","allowNumberInput","allowCharacterNumberInput","allowCharacterNumberForwardInput","allowMailInput","Modal","useParams","id","useNavigate","index","setindex","modalIsOpen","setIsOpen","appId","setappId","openSubmit","setopenSubmit","_useState9","_useState10","heading","setheading","_useState11","_useState12","closeModal","resetId","useEffect","modalAction","isOpen","onAfterOpen","contentLabel","ImCross","ObjectionRectificationTable","closePopUp","submitForm","ObjectionFormIndex","ObjectionForgery","ApplicationSubmitScreen","appNo","refresh","setrwhDocLeft","setrwhDocTop","setrwhDocRight","rwhDoc","setrwhDoc","harvestingDetails","setharvestingDetails","_useState13","_useState14","loader","setloader","_useState15","_useState16","docCode","setdocCode","_useState17","_useState18","_useState19","_useState20","_CitizenApplyApiList","api_postWaterHarvestingData","api_getHoldingDetails","api_postWaterHarvestindDocCode","dateOfCompletion","rwhImage","isWaterHarvestingBefore","resetForm","checkSizeValidation","setFieldValue","submitSafForm","concat","_response$data2","_response$data2$data","_response$data2$data$","masters","documentCode","error","setTimeout","token","window","localStorage","getItem","header","headers","Authorization","Accept","propertyId","res","_res$data","fd","FormData","append","ulb_id","ApiHeader2","_response$data3","_response$data4","toast","submitHarvesting","RiBuilding2Fill","is_water_harvesting","pt_no","nullToNA","new_holding_no","holding_no","old_ward_no","new_ward_no","placeholder","accept","e","target","file","files","FiAlertCircle","size","deleteSafFun","closeInfoModal","navigate","infoCardCount","setinfoCardCount","activateInfoCard","count","stopPropagation","CommonModal","InfoNewAssessment","InfoReAssessment","href","Tooltip","style","anchorId","BsQuestionCircle","src","newAsss","alt","propertyCount","setPropertyScrollStatus","_objectSpread","PropertyScrollStatus","reAssessment","re","transfer","division","add","concession","rainWater","rwh","objection","_props$application","_props$application2","_props$application3","_props$application4","_props$application5","_props$application6","_props$application7","_props$application8","_props$application9","_props$application10","_props$application11","_props$application12","_props$application13","_props$application14","_props$application17","_props$application18","_props$application19","application","applicant_name","apply_date","label","application_no","objection_no","backToCitizen","pending_at","AiFillInfoCircle","_props$application15","application_id","_props$application16","location","BiChevronsRight","objection_for","isLoading","setisLoading","isButtonEnabled","setisButtonEnabled","inputError","setinputError","api_sendMobileOtpAttachment","useContext","contextVar","errorMsg","ptnNo","holdingNo","setholdingNo","setptnNo","sendOtp","ptNo","setpropertyAttachedMobileNo","mobileNo","setptnCardStatus","setotpCardStatus","getFieldProps"],"sourceRoot":""}