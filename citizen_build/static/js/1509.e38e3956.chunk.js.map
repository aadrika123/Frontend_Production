{"version":3,"file":"static/js/1509.e38e3956.chunk.js","mappings":"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","sources":["Pages/Contents/ObjectionEntryForm/ObjectionIndex.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : Objection\r\n// Description : Objection page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useState } from 'react'\r\nimport { RiBuilding2Line } from 'react-icons/ri'\r\nimport { FcDepartment } from 'react-icons/fc'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { TbWebhook } from 'react-icons/tb'\r\nimport { useContext } from 'react'\r\nimport { useEffect } from 'react'\r\nimport './assets/fonts/Font.css'\r\nimport { BsArrowBarLeft, BsArrowLeft, BsArrowRight } from 'react-icons/bs'\r\nimport Modal from 'react-modal'\r\nimport ObjectionRectificationTable from './ObjectionRectificationTable'\r\nimport ObjectionFormIndex from './ObjectionFormIndex'\r\nimport ObjectionForgery from './ObjectionForgery'\r\nimport { ImCross } from 'react-icons/im'\r\nimport ApplicationSubmitScreen from './ApplicationSubmitScreen'\r\n\r\n// Modal\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: 'white',\r\n    border: 'none'\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst ObjectionIndex = (props) => {\r\n\r\n  const { id } = useParams()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [index, setindex] = useState(0)\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [appId, setappId] = useState('')\r\n  const [openSubmit, setopenSubmit] = useState(false)\r\n  const [heading, setheading] = useState('')\r\n  const [formName, setformName] = useState('')\r\n\r\n  const openModal = () => {\r\n    setopenSubmit(false)\r\n    setIsOpen(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false)\r\n    props.resetId()\r\n  }\r\n\r\n  const openSubmitScreen1 = (appId) => {\r\n    console.log(\"app id => \", appId)\r\n    setappId(appId)\r\n    setheading(\"Clerical Objection\")\r\n    closeModal()\r\n    setopenSubmit(true)\r\n  }\r\n\r\n  const openSubmitScreen2 = (appId) => {\r\n    setappId(appId)\r\n    closeModal()\r\n    setopenSubmit(true)\r\n    setheading(\"Assessment Objection\")\r\n  }\r\n\r\n  const openSubmitScreen3 = (appId) => {\r\n    setappId(appId)\r\n    closeModal()\r\n    setopenSubmit(true)\r\n    setheading(\"Forgery Objection\")\r\n  }\r\n  const afterOpenModal = () => { }\r\n\r\n  useEffect(() => {\r\n    console.log('modal enter obj => ', props?.modalAction)\r\n    {\r\n      ((props?.modalAction == 1) || (props?.modalAction == 2) || (props?.modalAction == 3)) && openModal()\r\n    }\r\n  }, [props?.modalAction])\r\n\r\n  return (\r\n    <>\r\n      {/* ===============Modal============================ */}\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        className=\"z-20 h-screen w-screen backdrop-blur-sm flex flex-row justify-center items-center overflow-auto\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n\r\n        <div class=\" rounded-lg shadow-lg shadow-indigo-300 md:w-[73%] sm:h-[85vh] w-full relative border-2 border-indigo-500 bg-gray-50 px-6 py-4 h-max border-t-2 border-l-2 overflow-auto animate__animated animate__slideInLeft animate__faster\" >\r\n\r\n          <div className=\"absolute top-2 z-10 bg-red-200 hover:bg-red-300 right-2 rounded-full p-2 cursor-pointer\" onClick={closeModal}>\r\n            <ImCross fontSize={10} />\r\n          </div>\r\n\r\n          {\r\n            props?.modalAction == 1 && <ObjectionRectificationTable closePopUp={closeModal} id={props?.id} submitForm={openSubmitScreen1} />\r\n          }\r\n          {\r\n            props?.modalAction == 2 && <div><ObjectionFormIndex closePopUp={closeModal} id={props?.id} submitForm={openSubmitScreen2} /></div>\r\n          }\r\n          {\r\n            props?.modalAction == 3 && <ObjectionForgery closePopUp={closeModal} id={props?.id} submitForm={openSubmitScreen3} />\r\n          }\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n      <ApplicationSubmitScreen heading={heading} appNo={appId} openSubmit={openSubmit} refresh={() => setindex(index + 1)} />\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default ObjectionIndex"],"names":["Modal","props","useParams","id","useNavigate","_useState","useState","_useState2","_slicedToArray","index","setindex","_useState3","_useState4","modalIsOpen","setIsOpen","_useState5","_useState6","appId","setappId","_useState7","_useState8","openSubmit","setopenSubmit","_useState9","_useState10","heading","setheading","_useState11","_useState12","closeModal","resetId","useEffect","console","log","modalAction","_jsxs","_Fragment","children","_jsx","isOpen","onAfterOpen","className","contentLabel","class","onClick","ImCross","fontSize","ObjectionRectificationTable","closePopUp","submitForm","ObjectionFormIndex","ObjectionForgery","ApplicationSubmitScreen","appNo","refresh"],"sourceRoot":""}