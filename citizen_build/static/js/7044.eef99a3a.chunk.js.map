{"version":3,"file":"static/js/7044.eef99a3a.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingPaymentModal.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingUnpaidList.jsx"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingPaymentModal\r\n//    DESCRIPTION - HoardingPaymentModal Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport AxiosInterceptors from \"../../../../../Components/GlobalData/AxiosInterceptors\";\r\nimport RazorpayPaymentScreen from \"../../../../../Components/RazorpayPaymentScreen\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction HoardingPaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const { api_getHoardingOrderIdForPayment } = AdvertisementApiList()\r\n    const [orderId, setorderId] = useState()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    console.log(\"payment card details\", props?.applicationDetails)\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    ///////////{*** PAYMENT METHOD ***}/////////\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data?.status == true) {\r\n            navigate(`/paymentScreen/${data.data.razorpay_payment_id}/${props?.applicationDetails?.workflow_id}`)\r\n            notify(\"Payment Successfull\", \"success\")\r\n        } else {\r\n            toast.error('Payment failed....')\r\n            notify(\"Payment Failed\", \"error\")\r\n            navigate('/advertDashboard')\r\n        }\r\n    }\r\n\r\n    const payNow = (e) => {\r\n        console.log(\"payment id on click pay\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            id: applicationId\r\n        }\r\n        AxiosInterceptors.post(`${api_getHoardingOrderIdForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('generate order id', response.data)\r\n                if (response.data.status == true) {\r\n                    console.log(\"OrderId Generated True\", response.data)\r\n                    RazorpayPaymentScreen(response.data.data, dreturn)  //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup     \r\n                }\r\n                else {\r\n\r\n                }\r\n                setorderId(response)\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Backend Server error. Unable to Generate Order Id\");\r\n                // console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-violet-200 text-slate-50 drop-shadow-2xl border border-violet-500 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className='shadow-md shadow-violet-300 py-1 pl-3 bg-white border-gray-400 text-gray-600 flex'>Make Payment For<span className=\"font-bold text-md ml-4 uppercase \">{props?.applicationDetails?.type} </span></div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Application No. -</p>\r\n                                            <p>Applied date -</p>\r\n\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.application_no} </p>\r\n                                            <p>{props?.applicationDetails?.application_date}</p>\r\n                                            {/* <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Approve Date -</p>\r\n                                            {/* <p>Entity Name -</p> */}\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.approve_date}  </p>\r\n                                            {/* <p>{props?.applicationDetails?.entity_name} </p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg \">Payable Amount</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg bg-violet-300 px-2 \">{props?.applicationDetails?.payment_amount}</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Cancel</button>\r\n                                            <button onClick={payNow} id={props?.applicationDetails?.id} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <img src='https://cdn-icons-png.flaticon.com/256/7057/7057515.png' className=\"h-16\" />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className=\"\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default HoardingPaymentModal;\r\n","// //////////////////////////////////////////////////////////////////////////////////////\r\n// //    Author - Talib Hussain\r\n// //    Version - 1.0\r\n// //    Date - 14 july 2022\r\n// //    Revision - 1\r\n// //    Project - JUIDCO\r\n// //    Component  - PropertySafInbox (closed)\r\n// //    DESCRIPTION - PropertySafInbox Component\r\n// //////////////////////////////////////////////////////////////////////////////////////\r\nimport { useEffect, useState } from \"react\";\r\n// import { useQuery } from \"react-query\";\r\n// import axios from \"axios\";\r\n// import { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\n// import Loader from \"../../Loader\";\r\n// import AgencyNotification from \"../AgencyNotification\";\r\nimport axios from \"axios\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport HoardingPaymentModal from \"./HoardingPaymentModal\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\nimport AxiosInterceptors from \"../../../../../Components/GlobalData/AxiosInterceptors\";\r\nimport ApiHeader from \"../../../../../Components/ApiList/ApiHeader\";\r\nimport AdvtListTablePagination from \"../../../AdvtListTablePagination\";\r\n// import ErrorPage from \"../../../ErrorPage\";\r\n\r\n\r\nfunction ViewAllHoardingUnpaidList() {\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const { api_getHoardingUnpaidApplicationList, api_getHoardingApplicationDetailForPayment } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState([])\r\n    const [applicationIdDetail, setapplicationIdDetail] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    // const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const [tableStatus, settableStatus] = useState(false);\r\n\r\n    ///testing pagination\r\n    const [readymadeListData, setreadymadeListData] = useState(false);\r\n    const [readymadeListStatus, setreadymadeListStatus] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    // table related states\r\n    const [totalDataCount, settotalDataCount] = useState(0);\r\n    const [currentPageIndex, setcurrentPageIndex] = useState(1);\r\n    const [lastPageIndex, setlastPageIndex] = useState(0);\r\n    const [pageLength, setpageLength] = useState(10);\r\n    const [searchValue, setsearchValue] = useState('');\r\n    const [refreshStatus, setrefreshStatus] = useState(false);\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date\",\r\n            accessor: \"application_date\",\r\n        },\r\n        {\r\n            Header: \"Payment Amount\",\r\n            accessor: \"payment_amount\",\r\n        },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700\r\n                    hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handlePayment(cell.row.values.id)}\r\n                        className=\"bg-indigo-500 ml-4 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700\r\n                 hover:text-white text-white\"\r\n                    >\r\n                        Pay\r\n                    </button>\r\n\r\n                </>\r\n            ),\r\n        },\r\n\r\n    ];\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    const handlePayment = (appId) => {\r\n        let applicationId = appId\r\n        const requestBody = {\r\n            applicationId: applicationId\r\n        }\r\n        AxiosInterceptors.post(`${api_getHoardingApplicationDetailForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application detail for payment 1', response)\r\n                setapplicationIdDetail(response.data.data)\r\n                setOpenPaymentModal(prev => prev + 1)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchInboxList(currentPageIndex, pageLength, searchValue)\r\n    }, [currentPageIndex, searchValue, pageLength])\r\n\r\n    const fetchInboxList = (page, perPage, key = '') => {\r\n        // console.log('at inbox list fetch')\r\n        setrefreshStatus(true)\r\n        setisLoading(true)\r\n\r\n        AxiosInterceptors.post(api_getHoardingUnpaidApplicationList, { page: page, perPage: perPage, key: key }, ApiHeader())\r\n            .then((res) => {\r\n                // console.log('inbox list response...', res?.data?.data?.data)\r\n                setreadymadeListData(res.data?.data?.data)\r\n                setreadymadeListStatus(true)\r\n                setisLoading(false)\r\n\r\n                settotalDataCount(res.data?.data?.total);\r\n                setlastPageIndex(res.data?.data?.last_page)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error while fetching Filter Data\", err)\r\n                setreadymadeListStatus(false)\r\n                setisLoading(false)\r\n\r\n            });\r\n\r\n        setTimeout(() => {\r\n            setrefreshStatus(false)\r\n        }, [500])\r\n    }\r\n\r\n\r\n    const values = {\r\n        totalDataCount: totalDataCount,\r\n        currentPageIndex: currentPageIndex,\r\n        setcurrentPageIndex: setcurrentPageIndex,\r\n        pageLength: pageLength,\r\n        setpageLength: setpageLength,\r\n        lastPageIndex: lastPageIndex,\r\n        setlastPageIndex: setlastPageIndex,\r\n        fetchInboxList: fetchInboxList,\r\n        searchValue: searchValue,\r\n        setsearchValue: setsearchValue,\r\n        refreshStatus: refreshStatus\r\n    }\r\n\r\n    // const getApplicationList = () => {\r\n    //     seterroState(false)\r\n    //     setisLoading(true)\r\n    //     AxiosInterceptors.post(api_getHoardingUnpaidApplicationList, {}, ApiHeaderAdvrt())\r\n    //         .then((res) => {\r\n    //             console.log(\"res\", res.data);\r\n    //             if (res.data.status) {\r\n    //                 setapplicationDetail(res.data.data);\r\n    //                 settableStatus(true);\r\n    //                 setisLoading(false)\r\n\r\n    //             } else {\r\n\r\n    //             }\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //             seterroState(true)\r\n    //             setisLoading(false)\r\n    //         })\r\n    // }\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     getApplicationList()\r\n    // }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"unpaid application full list\", applicationDetail?.data)\r\n\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n\r\n                <div>\r\n                    <HoardingPaymentModal openPaymentModal={openPaymentModal} applicationDetails={applicationIdDetail} />\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING UNPAID APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.length != null &&  */}\r\n                        {/* {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        } */}\r\n\r\n                        {readymadeListStatus && readymadeListData?.length != 0 &&\r\n                            // <ListTable assessmentType={false} columns={columnSchema} dataList={readymadeListData} />\r\n                            <AdvtListTablePagination  columns={COLUMNS} dataList={readymadeListData} values={values} />\r\n                        }\r\n                        {\r\n                            readymadeListStatus && readymadeListData?.length == 0 &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">Data Not Found</div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            // style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewAllHoardingUnpaidList\r\n"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","background","border","props","_props$applicationDet2","_props$applicationDet3","_props$applicationDet4","_props$applicationDet5","_props$applicationDet6","_props$applicationDet7","_React$useState","React","_React$useState2","_slicedToArray","modalIsOpen","setIsOpen","api_getHoardingOrderIdForPayment","AdvertisementApiList","_useState","useState","_useState2","setorderId","navigate","useNavigate","closeModal","useEffect","openPaymentModal","console","log","applicationDetails","notify","toastData","type","toast","dreturn","data","_props$applicationDet","status","concat","razorpay_payment_id","workflow_id","_jsx","className","children","Modal","isOpen","onAfterOpen","onRequestClose","style","contentLabel","_jsxs","application_no","application_date","approve_date","payment_amount","onClick","e","target","id","requestBody","AxiosInterceptors","ApiHeaderAdvrt","then","response","RazorpayPaymentScreen","catch","error","alert","src","applicationType","setapplicationType","_useState3","_useState4","applicationNo","setapplicationNo","_AdvertisementApiList","api_getHoardingUnpaidApplicationList","api_getHoardingApplicationDetailForPayment","_useState5","_useState6","applicationDetail","_useState7","_useState8","applicationIdDetail","setapplicationIdDetail","_useState9","_useState10","setshow","_useState11","_useState12","_useState13","_useState14","erroState","_useState15","_useState16","setOpenPaymentModal","_useState17","_useState18","_useState19","_useState20","readymadeListData","setreadymadeListData","_useState21","_useState22","readymadeListStatus","setreadymadeListStatus","_useState23","_useState24","isLoading","setisLoading","_useState25","_useState26","totalDataCount","settotalDataCount","_useState27","_useState28","currentPageIndex","setcurrentPageIndex","_useState29","_useState30","lastPageIndex","setlastPageIndex","_useState31","_useState32","pageLength","setpageLength","_useState33","_useState34","searchValue","setsearchValue","_useState35","_useState36","refreshStatus","setrefreshStatus","COLUMNS","Header","Cell","_ref","row","index","accessor","_ref2","cell","_Fragment","modalAction","values","handlePayment","applicationId","appId","prev","fetchInboxList","page","perPage","key","arguments","length","undefined","ApiHeader","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","total","last_page","err","setTimeout","BrandLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","HoardingPaymentModal","AdvtListTablePagination","columns","dataList","class","HoardingApplicationFullDetail","showLoader","val"],"sourceRoot":""}