{"version":3,"file":"static/js/985.4797caf0.chunk.js","mappings":"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","sources":["../node_modules/classnames/index.js","../node_modules/react-tooltip/src/utils/debounce.ts","../node_modules/react-tooltip/src/components/TooltipProvider/TooltipProvider.tsx","../node_modules/react-tooltip/src/components/TooltipProvider/TooltipWrapper.tsx","../node_modules/react-tooltip/src/utils/use-isomorphic-layout-effect.ts","../node_modules/react-tooltip/src/utils/compute-positions.ts","../node_modules/react-tooltip/src/components/Tooltip/Tooltip.tsx","../node_modules/react-tooltip/src/components/TooltipContent/TooltipContent.tsx","../node_modules/react-tooltip/src/components/TooltipController/TooltipController.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { computeTooltipPosition } from '../../utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n  }\n\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      return\n    }\n    handleShow(false)\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${anchorSelect}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < renderContent or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    renderedContent = (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode}\n      </div>\n    )\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","f","e","t","r","o","_this","_len","l","_key","n","this","setTimeout","clearTimeout","h","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","y","getTooltipData","A","undefined","_","window","c","b","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref3","_ref3$elementReferenc","_ref3$tooltipReferenc","_ref3$tooltipArrowRef","_ref3$place","_ref3$offset","_ref3$strategy","_ref3$middlewares","a","wrap","_context","prev","next","elementReference","tooltipReference","tooltipArrowReference","place","offset","strategy","middlewares","p","Number","v","m","padding","abrupt","tooltipStyles","tooltipArrowStyles","u","element","d","placement","middleware","then","_ref5","x","middlewareData","left","concat","top","_ref6","arrow","_defineProperty","right","bottom","split","_ref7","stop","_x","g","tooltip","fixed","noArrow","clickable","show","dark","light","success","warning","error","info","E","_ref8","_s","id","className","classNameArrow","_ref8$variant","variant","anchorId","anchorSelect","_ref8$place","_ref8$offset","_ref8$events","events","_ref8$openOnClick","openOnClick","_ref8$positionStrateg","positionStrategy","w","wrapper","_ref8$delayShow","delayShow","S","_ref8$delayHide","delayHide","_ref8$float","float","T","_ref8$noArrow","O","_ref8$clickable","k","_ref8$closeOnEsc","closeOnEsc","L","N","style","position","R","afterShow","I","afterHide","$","content","D","contentWrapperRef","H","isOpen","j","setIsOpen","q","C","W","F","P","U","_r5","_r6","_slicedToArray","M","B","_r7","_r8","K","X","_r9","_r10","z","J","_r11","_r12","Y","Z","_r13","_r14","G","Q","V","ee","_A2","te","re","oe","_r15","_r16","le","ne","ae","ce","ie","se","ue","currentTarget","target","isConnected","de","pe","_ref9","getBoundingClientRect","width","height","keys","ve","clientX","clientY","me","fe","document","querySelector","_toConsumableArray","some","contains","he","ye","we","forEach","add","addEventListener","event","listener","_ref10","removeEventListener","_ref11","MutationObserver","type","attributeName","getAttribute","removedNodes","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","observe","body","childList","subtree","attributes","attributeFilter","disconnect","Ae","ResizeObserver","from","Se","role","s","_objectSpread","ref","_ref12","dangerouslySetInnerHTML","__html","_ref13","html","render","_ref13$variant","_ref13$place","_ref13$offset","_ref13$wrapper","_ref13$children","children","_ref13$events","_ref13$openOnClick","_ref13$positionStrate","_ref13$delayShow","_ref13$delayHide","_ref13$float","_ref13$noArrow","_ref13$clickable","_ref13$closeOnEsc","_r17","_r18","_r19","_r20","_r21","_r22","_r23","_r24","_r25","_r26","_r27","_r28","_r29","_r30","_r31","_r32","_r33","_r34","_r35","_r36","_r37","_r38","_r39","_r40","_A3","getAttributeNames","reduce","startsWith","replace","values","entries","_ref14","_ref15","console","warn","size"],"sourceRoot":""}