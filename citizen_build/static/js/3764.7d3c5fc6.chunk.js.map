{"version":3,"file":"static/js/3764.7d3c5fc6.chunk.js","mappings":"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","sources":["Components/OtpScreenLinkConnectPage.js"],"sourcesContent":["//////////////////{*****}//////////////////////////////////////////\r\n// >Author - swati sharma\r\n// >Version - 1.0\r\n// >Date - 18 oct 2022\r\n// >Revision - 1\r\n// >Project - JUIDCO\r\n// >Component  - OtpScreenLinkConnectPage\r\n// >DESCRIPTION - OtpScreenLinkConnectPage Component\r\n//////////////////{*****}//////////////////////////////////////////\r\n\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction OtpScreenLinkConnectPage(props) {\r\n\r\n\r\n    /////////{***âœ…btn id***}///////\r\n    const { id } = useParams()\r\n    console.log(\"param\", id)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [showFormOne, setshowFormOne] = useState('')\r\n    const [showForm2, setshowForm2] = useState('hidden')\r\n    const [otpText, setotpText] = useState()\r\n    const [InputOtp, setInputOtp] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    // const [MobileNo, setMobileNo] = useState()\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            width: '800',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            backgroundColor: 'white',\r\n            border: 'none'\r\n            \r\n        },\r\n    };\r\n\r\n    // ==============for clerical objection==================\r\n    useEffect(() => {\r\n        props?.openOtpScreen == true && openModal()\r\n    },[props?.openOtpScreen])\r\n    // =============for clerical objection end================\r\n\r\n    useEffect(() => {\r\n        id != undefined && openModal()\r\n    },[id])\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // ===for clerical==========\r\n        props?.closeOtpScreen()\r\n    }\r\n\r\n\r\n    const confirmSubmit = () => {\r\n        if (InputOtp == otpText) {\r\n            // alert('Mobile number verified');\r\n            setshowForm2('hidden');\r\n            setshowFormOne('');\r\n            console.log('after verification calling submit form')\r\n            // navigate(`/appicationList`)\r\n            // navigate(`/allTranscationList`)\r\n            if (id == 1) {\r\n                navigate(`/appicationList`)\r\n            }\r\n            else if (id == 2) {\r\n                navigate(`/allTranscationList`)\r\n            }\r\n            else {  }\r\n\r\n            // ======for clerical objection=========\r\n            if ( props?.id == 3 ) { \r\n                closeModal()\r\n                props?.verifyFun()\r\n             }\r\n             // ======for clerical objection end=========\r\n\r\n\r\n        } else {\r\n            alert('check OTP')\r\n        }\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setotpText(Math.floor(Math.random() * (9999 - 1000 + 1)));\r\n        setshowForm2('');\r\n        setshowFormOne('hidden');\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                // shouldCloseOnOverlayClick={false}\r\n\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"rounded-lg  shadow-xl pt-4 text-white text-center bg z-20  mx-auto\" style={{ 'width': '50vw', 'height': '70vh' }}>\r\n\r\n\r\n                    <div className='grid grid-col-1 lg:grid grid-cols-6 md:grid grid-cols-6 gap-2 mx-auto'>\r\n                        <div className='col-span-3 '>\r\n                            <img src='https://img.freepik.com/free-vector/two-factor-authentication-concept-illustration_114360-5488.jpg?w=740&t=st=1669023049~exp=1669023649~hmac=40cad9816374be9c1321686b44fd28816051fad89f95f2a3010382a82a720f81' className='h-96 opacity-95 hue-rotate-[40deg]' />\r\n                        </div>\r\n                        <div className='col-span-2'>\r\n                            <div className='w-80 h-96 border-2 border-gray-400 rounded-t-xl rounded-b-xl p-4'>\r\n                                {/* <Link to='/dashboardEntry'> */}\r\n                                    <button className='text-red-800 rounded-sm  shadow-md float-right text-xs bg-red-300 px-1' onClick={closeModal}>Cancel</button>\r\n                                {/* </Link> */}\r\n                                <div className=''>\r\n                                    <img src='https://cdn-icons-png.flaticon.com/512/1773/1773239.png' className='h-10 mx-auto mt-8 hue-rotate-[40deg]' />\r\n                                </div>\r\n                                <h1 className='text-center text-sm text-gray-600 p-4 font-semibold'>Mobile Number</h1>\r\n                                <h1 className='text-center text-xs text-gray-500 '>We need to send otp to authenticate your number</h1>\r\n                                <div className=' p-6 '>\r\n                                    <form onSubmit={handleSubmit} className={showFormOne}>\r\n\r\n                                        <div>\r\n                                            <input type=\"number\" maxLength={10} name='mobile' placeholder='Enter your mobile no' className='px-3 py-1 rounded-md shadow-md text-gray-500' />\r\n                                            <br /><br />\r\n                                            <button type='submit' className='w-44 py-1 rounded-md shadow-sm bg-indigo-500 hover:bg-indigo-600 text-gray-50 text-sm'> NEXT</button>\r\n                                        </div>\r\n                                    </form>\r\n                                    <form className={showForm2}>\r\n                                        <p htmlFor=\"forMobile\">Enter OTP</p>\r\n                                        <h5 className='text-green-600 text-md '> YOUR OTP IS {otpText} </h5> <br />\r\n\r\n                                        <div>\r\n                                            <input type=\"number\" maxLength={10} name='otp' placeholder='Enter your OTP' className='px-3 py-1 rounded-md shadow-md text-gray-500' onChange={(e) => setInputOtp(e.target.value)} />\r\n                                            <br /><br />\r\n                                            <button type='button' className='w-44 py-1 rounded-md shadow-sm bg-indigo-500 hover:bg-indigo-600 text-gray-50 text-sm' onClick={confirmSubmit}>CONFIRM</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtpScreenLinkConnectPage"],"names":["props","id","useParams","console","log","navigate","useNavigate","useState","showFormOne","setshowFormOne","showForm2","setshowForm2","otpText","setotpText","InputOtp","setInputOtp","modalIsOpen","setIsOpen","openModal","closeModal","closeOtpScreen","useEffect","openOtpScreen","undefined","isOpen","onAfterOpen","onRequestClose","style","content","top","left","right","bottom","width","marginRight","transform","backgroundColor","border","contentLabel","className","src","onClick","onSubmit","e","Math","floor","random","preventDefault","type","maxLength","name","placeholder","htmlFor","onChange","target","value","verifyFun","alert"],"sourceRoot":""}