{"version":3,"file":"static/js/4161.fa619704.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/AdvrtSuccessScreen.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingInformationScreen.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingForm1.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingDocTable.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingFormDoc.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingReview.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingIndex.jsx","Pages/AdvertisementModule/Advertisement/DocumentUploadSteps.jsx","Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction AdvrtSuccessScreen(props) {\r\n    const navigate = useNavigate\r\n\r\n    console.log(\"data in response screen\", props?.responseScreenData)\r\n    return (\r\n        <div>\r\n            <div className='grid grid-cols-1 md:grid-cols-6 lg:grid-cols-6 mt-6'>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n                <div className='col-span-2 bg-white shadow-lg mt-4'>\r\n                    <div className='p-2'>\r\n                        <img src='https://img.freepik.com/free-vector/mail-sent-concept-illustration_114360-96.jpg?w=740&t=st=1672636866~exp=1672637466~hmac=5f164187014737ee6e91346184ade8b9590a40d01e247f97d5dba6f313d4c474' className='h-64 mx-auto' />\r\n                    </div>\r\n                    <div className='ml-44 -mt-16'>\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/5610/5610944.png' className='h-20 -mt-4 mx-auto opacity-75' />\r\n                        {/* <img src='https://cdn-icons-png.flaticon.com/512/753/753344.png' className='h-12 mx-auto opacity-75' /> */}\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-3xl p-8 text-gray-600'>Application Submitted Successfully</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-xl text-gray-600 font-bold uppercase'> Application No. :- {props?.responseScreenData?.ApplicationNo}</h1>\r\n                    </div>\r\n                    <div className='text-center p-8'>\r\n                        <Link to='/advertisement-dashboard'>\r\n                            <button class=\"w-32 text-xs p-3 mt-10 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-indigo-500 rounded-md hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\">\r\n                                Ok\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvrtSuccessScreen","import axios from 'axios'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport AxiosInterceptors from '../../../../../Components/GlobalData/AxiosInterceptors'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\n\r\nfunction HoardingInformationScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    const { getHoardingCategory } = AdvertisementApiList()\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        // showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        AxiosInterceptors.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                {hoardingCategory?.map((data) => (\r\n                    <div className={`${divStyle}flex mt-3`}>\r\n                        <span className={`${tittleStyle} flex-1 `}>{data?.subtype}</span>\r\n\r\n                        <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                    </div>\r\n                ))}\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingInformationScreen","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingForm1\r\n//    DESCRIPTION - HoardingForm1 Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport { allowFloatInput, allowNumberInput, getCurrentDate } from '../../../FunctionComponent/ValidationFunction';\r\nimport HoardingInformationScreen from './HoardingInformationScreen';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport AxiosInterceptors from '../../../../../Components/GlobalData/AxiosInterceptors';\r\n\r\nfunction HoardingForm1(props) {\r\n\r\n    const { api_getAdvertMasterData, api_getWardList, api_getDistrictList, getHoardingCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, id, existingApplicationDetails, type } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600 font-bold\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const [masterData, setmasterData] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [districtList, setdistrictList] = useState()\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        hoardingCategory: yup.string().required('This field is Required'),\r\n        location: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('This field is Required'),\r\n        // latitude: yup.string().required('This field is Required'),\r\n        zone: yup.string().required('This field is Required'),\r\n        lengthOfHoarding: yup.number().required('This field is Required'),\r\n        widthOfHoarding: yup.number().required('This field is Required'),\r\n        areaOfBoard: yup.number().required('This field is Required'),\r\n        landmark: yup.string().required('This field is Required'),\r\n        propertyType: yup.string().required('This field is Required'),\r\n        facing: yup.string().required('This field is Required'),\r\n        materialType: yup.string().required('This field is Required'),\r\n        illumination: yup.string().required('This field is Required'),\r\n        // ownerName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        // ownerAddress: yup.string().required('This field is Required'),\r\n        // ownerCity: yup.string().required('This field is Required'),\r\n        // ownerPhone: yup.number().required('Enter mobile no.'),\r\n        // ownerWhatsappNo: yup.number().required('Enter mobile no.'),\r\n\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        lisenseYear: '',\r\n        hoardingCategory: '',\r\n        location: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        lengthOfHoarding: '',\r\n        widthOfHoarding: '',\r\n        areaOfBoard: '',\r\n        landmark: '',\r\n        propertyType: '',\r\n        ownerName: '',\r\n        ownerAddress: '',\r\n        ownerCity: '',\r\n        ownerPhone: '',\r\n        ownerWhatsappNo: '',\r\n        facing: '',\r\n        materialType: '',\r\n        illumination: '',\r\n        zone: '',\r\n\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            console.log(\"hoarding1...1\", values, reviewIdName)\r\n            // props.collectFormDataFun('hoarding1', values, reviewIdName)\r\n            collectFormDataFun('hoarding1', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getMasterDataFun(value) }\r\n        // { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n        { name == 'ownerPhone' && formik.setFieldValue(\"ownerPhone\", allowNumberInput(value, formik.values.ownerPhone, 10)) }\r\n        { name == 'ownerWhatsappNo' && formik.setFieldValue(\"ownerWhatsappNo\", allowNumberInput(value, formik.values.ownerWhatsappNo, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'lengthOfHoarding' && formik.setFieldValue(\"lengthOfHoarding\", allowFloatInput(value, formik.values.lengthOfHoarding, 6)) }\r\n        { name == 'widthOfHoarding' && formik.setFieldValue(\"widthOfHoarding\", allowFloatInput(value, formik.values.widthOfHoarding, 6)) }\r\n        { name == 'areaOfBoard' && formik.setFieldValue(\"areaOfBoard\", allowFloatInput(value, formik.values.areaOfBoard, 6)) }\r\n\r\n    }\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    const getMasterDataFun = (ulbId) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            // // ulbId: ulbId,\r\n            // ulbId: 1,\r\n        }\r\n        AxiosInterceptors.post(`${api_getAdvertMasterData}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for hoarding', response)\r\n                setmasterData(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        AxiosInterceptors.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    useEffect(() => {\r\n        getWardListFun()\r\n    }, [])\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        AxiosInterceptors.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ward list', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('hoardingCategory', existingApplicationDetails?.typology_id)\r\n        formik.setFieldValue('location', existingApplicationDetails?.location)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('lengthOfHoarding', existingApplicationDetails?.length)\r\n        formik.setFieldValue('widthOfHoarding', existingApplicationDetails?.width)\r\n        formik.setFieldValue('areaOfBoard', existingApplicationDetails?.area)\r\n        formik.setFieldValue('landmark', existingApplicationDetails?.landmark)\r\n        formik.setFieldValue('propertyType', existingApplicationDetails?.property_type)\r\n        formik.setFieldValue('ownerName', existingApplicationDetails?.property_owner_name)\r\n        formik.setFieldValue('ownerAddress', existingApplicationDetails?.property_owner_address)\r\n        formik.setFieldValue('ownerCity', existingApplicationDetails?.property_owner_city)\r\n        formik.setFieldValue('ownerPhone', existingApplicationDetails?.property_owner_mobile_no)\r\n        formik.setFieldValue('ownerWhatsappNo', existingApplicationDetails?.property_owner_whatsapp_no)\r\n        formik.setFieldValue('facing', existingApplicationDetails?.facing)\r\n        formik.setFieldValue('materialType', existingApplicationDetails?.material)\r\n        formik.setFieldValue('illumination', existingApplicationDetails?.illumination_id)\r\n        formik.setFieldValue('zone', existingApplicationDetails?.zone_id)\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\"existing application detail\", existingApplicationDetails)\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"ward master data...1\", wardList)\r\n    console.log(\"district list\", districtList?.Jharkhand)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 '>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto '>\r\n                        <div className='col-span-8'>\r\n                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto pb-8 p-2 mt-3'>\r\n                                {/* DETAILS */}\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}> License Year <span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('lisenseYear')} className={`${inputStyle} bg-white`} >\r\n                                                <option value=''>select </option>\r\n                                                <option value={118}>2022-23 </option>\r\n                                                <option value={119}>2023-24 </option>\r\n\r\n                                            </select>\r\n                                            {/* <input type=\"text\" name='lisenseYear' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lisenseYear}\r\n                                            /> */}\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lisenseYear && formik.errors.lisenseYear ? formik.errors.lisenseYear : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}>Hoarding Category<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('hoardingCategory')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                {hoardingCategory?.map((items) => (\r\n                                                    <option value={items?.id}>{items?.subtype}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hoardingCategory && formik.errors.hoardingCategory ? formik.errors.hoardingCategory : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Location<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='location' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.location}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.location && formik.errors.location ? formik.errors.location : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Longitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.longitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.latitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Length of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='lengthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lengthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lengthOfHoarding && formik.errors.lengthOfHoarding ? formik.errors.lengthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Width of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='widthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.widthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.widthOfHoarding && formik.errors.widthOfHoarding ? formik.errors.widthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Area of Board(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='areaOfBoard' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.areaOfBoard}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.areaOfBoard && formik.errors.areaOfBoard ? formik.errors.areaOfBoard : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Landmark<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='landmark' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.landmark}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landmark && formik.errors.landmark ? formik.errors.landmark : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Facing<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='facing' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.facing}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='north'>North</option>\r\n                                                <option value='south'>South</option>\r\n                                                <option value='east'>East</option>\r\n                                                <option value='west'>West</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.facing && formik.errors.facing ? formik.errors.facing : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Property Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='propertyType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.propertyType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='public'>Public</option>\r\n                                                <option value='private'>Private</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.propertyType && formik.errors.propertyType ? formik.errors.propertyType : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Zone<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n\r\n                                            <select {...formik.getFieldProps('zone')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                <option value={1}>Zone A</option>\r\n                                                <option value={2}>Zone B</option>\r\n                                                <option value={3}>Zone C</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.zone && formik.errors.zone ? formik.errors.zone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerName' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerName}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerName && formik.errors.ownerName ? formik.errors.ownerName : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerAddress' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerAddress}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerAddress && formik.errors.ownerAddress ? formik.errors.ownerAddress : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner City(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerCity' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerCity}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerCity && formik.errors.ownerCity ? formik.errors.ownerCity : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerPhone' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerPhone}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerPhone && formik.errors.ownerPhone ? formik.errors.ownerPhone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerWhatsappNo' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerWhatsappNo}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerWhatsappNo && formik.errors.ownerWhatsappNo ? formik.errors.ownerWhatsappNo : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Material Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='materialType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.materialType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='metal'>Metal</option>\r\n                                                <option value='wood'>Wood</option>\r\n                                                <option value='others'>Others</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.materialType && formik.errors.materialType ? formik.errors.materialType : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Illumination<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='illumination' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.illumination}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='0'>No</option>\r\n                                                <option value='1'>Yes</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.illumination && formik.errors.illumination ? formik.errors.illumination : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='float-right p-2'>\r\n                                <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-span-4 hidden lg:block md:block'>\r\n                            <div className='-mt-14'>\r\n                                <HoardingInformationScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingForm1\r\n","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingDocTable\r\n//    DESCRIPTION - HoardingDocTable Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600 font-bold\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState(null)\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: '',\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props?.setinitialIndexFun();\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default HoardingDocTable","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingFormDoc\r\n//    DESCRIPTION - HoardingFormDoc Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../../DocumentUploadSteps';\r\nimport HoardingDocTable from './HoardingDocTable';\r\nimport { toast } from 'react-toastify';\r\nimport AxiosInterceptors from '../../../../../Components/GlobalData/AxiosInterceptors';\r\n\r\n\r\nfunction HoardingFormDoc(props) {\r\n\r\n  const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n  const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n  const [collectDoc, setcollectDoc] = useState([]);\r\n  const [docList, setdocList] = useState()\r\n  const [renewDocList, setrenewDocList] = useState()\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [initialIndex, setinitialIndex] = useState(0);\r\n\r\n  const notify = (toastData, type) => {\r\n    toast.dismiss();\r\n    if (type == 'success') {\r\n      toast.success(toastData)\r\n    }\r\n    if (type == 'error') {\r\n      toast.error(toastData)\r\n    }\r\n  };\r\n\r\n  const setinitialIndexFun = () => {\r\n    setinitialIndex((prev) => prev + 1);\r\n  }\r\n\r\n  const collectAllData = (key, formData) => {\r\n    console.log(\"prev data in document\", collectDoc);\r\n    // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n    if (collectDoc[key] !== undefined) {\r\n      console.log('inside index match...')\r\n      collectDoc[key] = formData\r\n      return\r\n    }\r\n    setcollectDoc([...collectDoc, formData]);\r\n  };\r\n  console.log(\"all data doc\", collectDoc)\r\n\r\n  const handleDocument = () => {\r\n    if (docList?.AGENCY_HORDING_LICENSE?.length == collectDoc.length) {\r\n      collectFormDataFun('hoardingDoc', collectDoc)\r\n      setFormIndex(3)\r\n    }\r\n    else {\r\n      notify(\"Upload All Document\", \"error\")\r\n    }\r\n\r\n  }\r\n\r\n  ///////////{*** GET DOCUMENT LIST***}/////////\r\n  useEffect(() => {\r\n    getDocumentList()\r\n  }, [])\r\n  const getDocumentList = () => {\r\n    const requestBody = {\r\n      // deviceId: \"agency\",\r\n    }\r\n    AxiosInterceptors.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('hoarding document list', response.data)\r\n        if (type == 'renew') {\r\n          setrenewDocList(response.data)\r\n        }\r\n        else {\r\n          setdocList(response.data)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n\r\n  console.log(\"document list for hoarding...\", docList?.AgencyHordingLicense)\r\n  return (\r\n    <>\r\n\r\n      {/* upload document */}\r\n      <div className='absolute w-full top-0 ml-4 '>\r\n        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2'>\r\n          <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n            <div className=\"p-1\">\r\n              <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                <div>\r\n                  <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                </div>\r\n              </div>\r\n              <div className='mt-2'>\r\n                {docList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <div className={`${(index == initialIndex || index <= initialIndex) ? '' : 'hidden'}`}>\r\n                    <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} setinitialIndexFun={setinitialIndexFun} />\r\n                  </div>\r\n                ))}\r\n                {renewDocList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <div className={`${(index == initialIndex || index <= initialIndex) ? '' : 'hidden'}`}>\r\n                    <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} setinitialIndexFun={setinitialIndexFun} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3\">\r\n              <div className='md:pl-0 col-span-6'>\r\n                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>Back</button>\r\n              </div>\r\n              {(docList?.AGENCY_HORDING_LICENSE?.length == collectDoc.length) &&\r\n                <div className='col-span-6'>\r\n                  <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                </div>\r\n              }\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n              <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-span-4'>\r\n            <div className='-mt-20'>\r\n              <DocumentUploadSteps />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HoardingFormDoc","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingReview\r\n//    DESCRIPTION - HoardingReview Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React from 'react'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction HoardingReview(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-md text-gray-600  font-bold\"\r\n    let inputStyle = \"mt-6 -ml-7 text-sm text-gray-600\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.reviewIdNameData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-4 ml-4 pb-24'>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Application Details</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lisenseYear || props?.reviewIdNameData?.hoarding1?.license_year)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hoarding Category </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.hoardingCategory || props?.reviewIdNameData?.hoarding1?.typology_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.longitude || props?.reviewIdNameData?.hoarding1?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.latitude || props?.reviewIdNameData?.hoarding1?.latitude)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Location </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.location || props?.reviewIdNameData?.hoarding1?.location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Length of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lengthOfHoarding || props?.reviewIdNameData?.hoarding1?.length)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Width of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.widthOfHoarding || props?.reviewIdNameData?.hoarding1?.width)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Area of Board</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.areaOfBoard || props?.reviewIdNameData?.hoarding1?.area)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Landmark</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.landmark || props?.reviewIdNameData?.hoarding1?.landmark)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Facing </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.facing || props?.reviewIdNameData?.hoarding1?.facing)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Property Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.propertyType || props?.reviewIdNameData?.hoarding1?.property_type)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Zone </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.zone || props?.reviewIdNameData?.hoarding1?.zone_id)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerName || props?.reviewIdNameData?.hoarding1?.property_owner_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerAddress || props?.reviewIdNameData?.hoarding1?.property_owner_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner City(If property type is private) </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerCity || props?.reviewIdNameData?.hoarding1?.property_owner_city)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerPhone || props?.reviewIdNameData?.hoarding1?.property_owner_mobile_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerWhatsappNo || props?.reviewIdNameData?.hoarding1?.property_owner_whatsapp_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Material Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.materialType || props?.reviewIdNameData?.hoarding1?.material)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Illumination  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.illumination || props?.reviewIdNameData?.hoarding1?.illumination_name)}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Documents Uploaded</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.hoardingDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} </p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>Back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingReview","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingIndex\r\n//    DESCRIPTION - HoardingIndex Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../../AdvrtSuccessScreen'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport HoardingForm1 from './HoardingForm1'\r\nimport HoardingFormDoc from './HoardingFormDoc'\r\nimport HoardingReview from './HoardingReview'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\nimport AxiosInterceptors from '../../../../../Components/GlobalData/AxiosInterceptors'\r\nfunction HoardingIndex() {\r\n\r\n    const { ulbId, applicationId, type } = useParams();\r\n\r\n    console.log(\"ulbid in param\", ulbId)\r\n    console.log(\"application id in param\", applicationId)\r\n    console.log(\"type in param\", type)\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState({})\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postHoardingApplication, api_renewHoarding_license, api_getHoardingApplicationDetailsToRenew } = AdvertisementApiList()\r\n\r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'hoarding1') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc)\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitHoardingApplication()\r\n    }\r\n\r\n    const submitHoardingApplication = () => {\r\n        setisLoading(true)\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postHoardingApplication  //new apply\r\n            requestBody = {\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewHoarding_license  //new apply\r\n            requestBody = {\r\n                applicationId: applicationId,\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n\r\n        }\r\n\r\n        console.log('request body...', requestBody)\r\n        AxiosInterceptors.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify('submitted successfully', 'success')\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify('failed to submit', 'error')\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        id: ulbId,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        AxiosInterceptors.post(`${api_getHoardingApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Hoarding Registration</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            {/* You Can Get License To Advertise Your Business Name On Your Shop */}\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600'>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/1684/1684121.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm1 values={values} /></div>\r\n                {/* <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm2 values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingForm3 values={values} /></div> */}\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingFormDoc values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingReview values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingIndex","import React from 'react'\r\n\r\nfunction DocumentUploadSteps() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-xl'>How To Uplaod Document ?</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 1 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >Choose a file which you want to uplaod </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 2 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To upload image click on upload button</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 3 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on preview to view uploaded image </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 4 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on Save & Next button to proceed with the application</span>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div> */}\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/image-upload-concept-illustration_114360-798.jpg?w=826&t=st=1675677630~exp=1675678230~hmac=3ce8cef91d846d7436a3f83357381af891a8e1e3c51eeef330e620448f1420c8' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentUploadSteps","\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n"],"names":["props","_props$responseScreen","useNavigate","console","log","responseScreenData","_jsx","children","_jsxs","className","src","ApplicationNo","Link","to","class","getHoardingCategory","AdvertisementApiList","_useState","useState","_useState2","_slicedToArray","hoardingCategory","sethoardingCategory","useEffect","getHoardingCategoryList","AxiosInterceptors","concat","ApiHeaderAdvrt","then","response","data","catch","error","_Fragment","xmlns","fill","viewBox","stroke","d","map","subtype","descriptions","_AdvertisementApiList","api_getAdvertMasterData","api_getWardList","api_getDistrictList","_CitizenApplyApiList","CitizenApplyApiList","api_wardByUlb","api_getAllUlb","_props$values","values","setFormIndex","showLoader","collectFormDataFun","existingApplicationDetails","toastFun","id","type","labelStyle","inputStyle","setmasterData","_useState3","_useState4","wardList","setwardList","_useState5","_useState6","districtList","_useState7","_useState8","setstoreUlbValue","_useState9","_useState10","reviewIdName","setreviewIdName","_useState11","_useState12","_useState13","_useState14","isLoading","setisLoading","_useState15","_useState16","erroState","seterroState","validationSchema","yup","required","location","zone","lengthOfHoarding","widthOfHoarding","areaOfBoard","landmark","propertyType","facing","materialType","illumination","formik","useFormik","initialValues","lisenseYear","longitude","latitude","ownerName","ownerAddress","ownerCity","ownerPhone","ownerWhatsappNo","onSubmit","getMasterDataFun","ulbId","setTimeout","getWardListFun","feedApplicationData","setFieldValue","typology_id","length","width","area","property_type","property_owner_name","property_owner_address","property_owner_city","property_owner_mobile_no","property_owner_whatsapp_no","material","illumination_id","zone_id","BarLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","Jharkhand","handleSubmit","onChange","e","name","target","value","_objectSpread","_defineProperty","selectedIndex","text","allowNumberInput","allowFloatInput","getFieldProps","touched","errors","items","placeholder","handleChange","HoardingInformationScreen","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","_props$data","_props$data2","_props$data3","_imgPath$image","_imgPath$image2","_imgPath$image3","_imgPath$image4","_imgPath$image4$name","_imgPath$image5","_imgPath$image5$name","_imgPath$image6","_imgPath$image6$name","_imgPath$image7","_imgPath$image7$name","_imgPath$image8","_imgPath$image8$name","_imgPath$image9","_imgPath$image9$name","_imgPath$image10","_imgPath$image10$name","_imgPath$image11","_imgPath$image11$name","imgPath","setimgPath","DocUrl","setDocUrl","modalIsOpen","setIsOpen","imageFile","setimageFile","modalAction","url","image","docCode","ownerDtlId","setinitialIndexFun","collectAllDataFun","mykey","handleFile","file","reader","FileReader","onloadend","result","readAsDataURL","files","encType","document_name","docType","undefined","alt","split","pop","onClick","Tooltip","accept","webkitdirectory","isOpen","onAfterOpen","onRequestClose","style","contentLabel","frameborder","_docList$AGENCY_HORDI2","_renewDocList$AGENCY_","_docList$AGENCY_HORDI3","api_getSelfAdvertDocList","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","initialIndex","setinitialIndex","prev","collectAllData","key","formData","_toConsumableArray","getDocumentList","AgencyHordingLicense","AGENCY_HORDING_LICENSE","index","HoardingDocTable","_docList$AGENCY_HORDI","toastData","toast","notify","DocumentUploadSteps","_props$reviewIdNameDa","_props$reviewIdNameDa2","_props$reviewIdNameDa3","_props$reviewIdNameDa4","_props$reviewIdNameDa5","_props$reviewIdNameDa6","_props$reviewIdNameDa7","_props$reviewIdNameDa8","_props$reviewIdNameDa9","_props$reviewIdNameDa10","_props$reviewIdNameDa11","_props$reviewIdNameDa12","_props$reviewIdNameDa13","_props$reviewIdNameDa14","_props$reviewIdNameDa15","_props$reviewIdNameDa16","_props$reviewIdNameDa17","_props$reviewIdNameDa18","_props$reviewIdNameDa19","_props$reviewIdNameDa20","_props$reviewIdNameDa21","_props$reviewIdNameDa22","_props$reviewIdNameDa23","_props$reviewIdNameDa24","_props$reviewIdNameDa25","_props$reviewIdNameDa26","_props$reviewIdNameDa27","_props$reviewIdNameDa28","_props$reviewIdNameDa29","_props$reviewIdNameDa30","_props$reviewIdNameDa31","_props$reviewIdNameDa32","_props$reviewIdNameDa33","_props$reviewIdNameDa34","_props$reviewIdNameDa35","_props$reviewIdNameDa36","_props$reviewIdNameDa37","_props$reviewIdNameDa38","_props$reviewIdNameDa39","_props$reviewIdNameDa40","_props$reviewIdNameDa41","_props$reviewIdNameDa42","_props$reviewIdNameDa43","_props$reviewIdNameDa44","_props$reviewIdNameDa45","_props$reviewIdNameDa46","_props$reviewIdNameDa47","_props$reviewIdNameDa48","_props$reviewIdNameDa49","_props$reviewIdNameDa50","_props$reviewIdNameDa51","_props$reviewIdNameDa52","_props$reviewIdNameDa53","_props$reviewIdNameDa54","_props$reviewIdNameDa55","_props$reviewIdNameDa56","_props$reviewIdNameDa57","_props$reviewIdNameDa58","_props$reviewIdNameDa59","_props$reviewIdNameDa60","_props$reviewIdNameDa61","_props$reviewIdNameDa62","_props$reviewIdNameDa63","_props$reviewIdNameDa64","_props$reviewIdNameDa65","_props$reviewIdNameDa66","_props$reviewIdNameDa67","_props$reviewIdNameDa68","_props$reviewIdNameDa69","_props$reviewIdNameDa70","_props$reviewIdNameDa71","_props$reviewIdNameDa72","_props$reviewIdNameDa73","_props$reviewIdNameDa74","_props$reviewIdNameDa75","_props$reviewIdNameDa76","_props$reviewIdNameDa77","_props$reviewIdNameDa78","reviewIdNameData","nullToNA","hoarding1","license_year","typology_name","illumination_name","hoardingDoc","_data$image","submitFun","_useParams","useParams","applicationId","formIndex","allFormData","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setshow","setexistingApplicationDetails","setapplicationType","_useState17","_useState18","api_postHoardingApplication","api_renewHoarding_license","api_getHoardingApplicationDetailsToRenew","selfAdvertisementDoc","submitHoardingApplication","requestBody","_allFormData$hoarding","_allFormData$hoarding2","_allFormData$hoarding3","_allFormData$hoarding4","_allFormData$hoarding5","_allFormData$hoarding6","_allFormData$hoarding7","_allFormData$hoarding8","_allFormData$hoarding9","_allFormData$hoarding10","_allFormData$hoarding11","_allFormData$hoarding12","_allFormData$hoarding13","_allFormData$hoarding14","_allFormData$hoarding15","_allFormData$hoarding16","_allFormData$hoarding17","_allFormData$hoarding18","_allFormData$hoarding19","_allFormData$hoarding20","_allFormData$hoarding21","_allFormData$hoarding22","_allFormData$hoarding23","_allFormData$hoarding24","_allFormData$hoarding25","_allFormData$hoarding26","_allFormData$hoarding27","_allFormData$hoarding28","_allFormData$hoarding29","_allFormData$hoarding30","_allFormData$hoarding31","_allFormData$hoarding32","_allFormData$hoarding33","_allFormData$hoarding34","_allFormData$hoarding35","_allFormData$hoarding36","_allFormData$hoarding37","_allFormData$hoarding38","zoneId","licenseYear","HordingType","displayLocation","displayArea","indicateFacing","displayLandMark","propertyOwnerName","propertyOwnerAddress","propertyOwnerCity","propertyOwnerWhatsappNo","propertyOwnerMobileNo","documents","val","fetchApplicationDetails","status","AdvrtSuccessScreen","BrandLoader","ToastContainer","position","autoClose","HoardingForm1","HoardingFormDoc","HoardingReview","tittleStyle","divStyle","currentValue","oldValue","max","arguments","test","allowCharacterNumberInput","allowCharacterNumberForwardInput","allowMailInput"],"sourceRoot":""}