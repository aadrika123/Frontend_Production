{"version":3,"file":"static/js/5916.72a64169.chunk.js","mappings":"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","sources":["Components/ApiList/BackendUrlAdvt.js","Components/GlobalData/UseSetTitle.js","Pages/AdvertisementModule/AdvertisementApiList.jsx","Pages/AdvertisementModule/Advertisement/AdvrtSuccessScreen.jsx","Pages/AdvertisementModule/Advertisement/DocumentUploadSteps.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocTable.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/AdvtCategoryScreen.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementForm1.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/ReviewSelfAdvertForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementIndexForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen.jsx","Pages/AdvertisementModule/ApiHeaderAdvrt.jsx","Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx","Pages/AdvertisementModule/ServerErrorCard.js"],"sourcesContent":["// DEVELOPMENT SERVER\r\n// const BackendUrlAdvt = 'http://192.168.0.189:8000' // only for advertisement case\r\n\r\n// TEST SERVER\r\nconst BackendUrlAdvt = 'http://203.129.217.246:8001' // only for advertisement case\r\n\r\nexport default BackendUrlAdvt\r\n\r\n","import React,{useEffect} from 'react'\r\nimport { contextVar } from '../ContextVar'\r\n\r\nfunction useSetTitle({title, status}) {\r\n\r\n    const { settitleText, settitleStatus } = React.useContext(contextVar)\r\n    useEffect(() => {\r\n        settitleText(title)\r\n        settitleStatus(status)\r\n    }, [])\r\n\r\n\r\n}\r\n\r\nexport default useSetTitle","import BackendUrlAdvt from \"../../Components/ApiList/BackendUrlAdvt\"\r\n\r\nexport default function AdvertisementApiList() {\r\n    // let baseUrl = \"http://192.168.0.127:8000\"\r\n    let baseUrl = BackendUrlAdvt\r\n\r\n    let apiList = {\r\n        api_getTradeLicenseByHolding: `${baseUrl}/api/advertisement/self-advert/get-license-by-holding-no`, //trade license for holding\r\n        api_getTradeLicenseByUserId: `${baseUrl}/api/advertisement/self-advert/get-license-by-userid`, //trade license list by userId\r\n        api_getTradeLicenseDetails: `${baseUrl}/api/advertisement/self-advert/get-details-by-license-no`, //list of ulb\r\n        api_getUlbList: `${baseUrl}/api/get-all-ulb`, //list of ulb\r\n        api_getWardList: `${baseUrl}/api/workflow/getWardByUlb`, //list of ward\r\n        api_getAdvertMasterData: `${baseUrl}/api/crud/param-strings`, //master data for advertisement\r\n\r\n\r\n\r\n        // api_getSelfAdvertDocList: `${baseUrl}/api/advertisements/crud/v1/document-mstrs`, //master document for advertisement\r\n        api_getSelfAdvertDocList: `${baseUrl}/api/advertisements/crud/v1/list-document`, //master document for advertisement\r\n\r\n        //razor pay api\r\n        verifyPaymentStatus: `${baseUrl}/api/payment/verify-payment-status`, //POST // use to store the data if payment failed or success=> \r\n        getTypologyList: `${baseUrl}/api/advert/hording/list-typology`, //POST // use to store the data if payment failed or success=> \r\n        getHoardingCategory: `${baseUrl}/api/advert/hording/get-hording-category`, //hoarding category \r\n        getPaymentsuccessDetails: `${baseUrl}/api/advertisements/get-payment-details`, //payment details \r\n        getApprovalLetterDetails: `${baseUrl}/api/advertisements/get-approval-letter`, //approval letter details \r\n\r\n\r\n\r\n        // Self Advertisement api //\r\n        api_postSelfAdvertApplication: `${baseUrl}/api/advert/self/add-new`, //applying for self advertisement\r\n        api_getAppliedApplicationList: `${baseUrl}/api/advert/self/list-applied-applications`, //pending Application list\r\n        api_getAppliedApplicationDetail: `${baseUrl}/api/advert/self/get-details-by-id `, //application details by id\r\n        api_getAppliedDocumentList: `${baseUrl}/api/advert/self/view-advert-document`, //applied document list\r\n        api_getApprovedApplicationList: `${baseUrl}/api/advert/self/list-approved`, //approved Application list\r\n        api_getRejectedApplicationList: `${baseUrl}/api/advert/self/list-rejected`, //rejected Application list\r\n        api_getOrderIdForPayment: `${baseUrl}/api/advert/self/generate-payment-order-id`,//order if for payment\r\n        api_getApplicationDetailForPayment: `${baseUrl}/api/advert/self/get-application-details-for-payment`,//application details for payment\r\n        api_getAdvertisementCategory: `${baseUrl}/api/advert/self/list-self-advt-category`,//advertisement category\r\n        api_getAdvertisementReuploadDoc: `${baseUrl}/api/advert/self/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postAdvertisementReuploadedDocument: `${baseUrl}/api/advert/self/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewSelfAdvt_license: `${baseUrl}/api/advert/self/renewal-selfAdvt`,\r\n        api_getApplicationDetailsToRenew: `${baseUrl}/api/advert/self/get-application-details-for-renew `,\r\n\r\n        // Movable api //\r\n        api_postMovableVehicleApplication: `${baseUrl}/api/advert/vehicle/add-new`, //applying for Movable vehicle\r\n        api_getMovableAppliedApplicationList: `${baseUrl}/api/advert/vehicle/list-applied-applications`, //pending Application list\r\n        api_getMovableAppliedApplicationDetail: `${baseUrl}/api/advert/vehicle/get-details-by-id `, //application details by id\r\n        api_getMovableAppliedDocumentList: `${baseUrl}/api/advert/vehicle/view-vehicle-documents`, //applied document list\r\n        api_getMovableApprovedApplicationList: `${baseUrl}/api/advert/vehicle/list-approved`, //approved Application list\r\n        api_getMovableRejectedApplicationList: `${baseUrl}/api/advert/vehicle/list-rejected`, //rejected Application list\r\n        api_getMovableVehicleOrderIdForPayment: `${baseUrl}/api/advert/vehicle/generate-payment-order-id`,//order if for payment\r\n        api_getMovableVehicleApplicationDetailForPayment: `${baseUrl}/api/advert/vehicle/get-application-details-for-payment`,//application details for payment\r\n        api_getMovableVehicleReuploadDoc: `${baseUrl}/api/advert/vehicle/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postMovableVehicleReuploadedDocument: `${baseUrl}/api/advert/vehicle/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewMovableVehicle_license: `${baseUrl}/api/advert/vehicle/renewal-application`,\r\n        api_getMovableApplicationDetailsToRenew: `${baseUrl}/api/advert/vehicle/get-application-details-for-renew`,\r\n\r\n        // Private land api //\r\n        api_postPrivateLandApplication: `${baseUrl}/api/advert/pvt-land/add-new\t`, //applying for private land\r\n        api_getPrivateLandAppliedApplicationList: `${baseUrl}/api/advert/pvt-land/list-applied-applications`, //pending Application list\r\n        api_getPrivateLandAppliedApplicationDetail: `${baseUrl}/api/advert/pvt-land/get-details-by-id `, //application details by id\r\n        api_getPrivateLandAppliedDocumentList: `${baseUrl}/api/advert/pvt-land/view-pvt-land-documents`, //applied document list\r\n        api_getPrivateLandApprovedApplicationList: `${baseUrl}/api/advert/pvt-land/list-approved`, //approved Application list\r\n        api_getPrivateLandRejectedApplicationList: `${baseUrl}/api/advert/pvt-land/list-rejected  `, //rejected Application list\r\n        api_getPrivateLandOrderIdForPayment: `${baseUrl}/api/advert/pvt-land/generate-payment-order-id`,//order if for payment\r\n        api_getPrivateLandApplicationDetailForPayment: `${baseUrl}/api/advert/pvt-land/get-application-details-for-payment`,//application details for payment\r\n        api_getPrivateLandReuploadDoc: `${baseUrl}/api/advert/pvt-land/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postPrivateLandReuploadedDocument: `${baseUrl}/api/advert/pvt-land/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewPrivateLand_license: `${baseUrl}/api/advert/pvt-land/renewal-application`,\r\n        api_getPrivateApplicationDetailsToRenew: `${baseUrl}/api/advert/pvt-land/get-application-details-for-renew `,\r\n\r\n        // Agency api //\r\n        api_postAgencyApplication: `${baseUrl}/api/advert/agency/add-new`, //applying for agency\r\n        api_getAgencyApprovedApplicationList: `${baseUrl}/api/advert/agency/list-approved `, //approved Application list\r\n        api_getAgencyRejectedApplicationList: `${baseUrl}/api/advert/agency/list-rejected `, //rejected Application list\r\n        api_getAgencyAppliedApplicationList: `${baseUrl}/api/advert/agency/list-applied-applications`, //pending Application list\r\n        api_getAgencyApplicationFullDetail: `${baseUrl}/api/advert/agency/get-details-by-id`, //application details by id\r\n        api_getAgencyAppliedDocumentList: `${baseUrl}/api/advert/agency/view-agency-documents`,//applied document list\r\n        api_getAgencyOrderIdForPayment: `${baseUrl}/api/advert/agency/generate-payment-order-id `,//order if for payment\r\n        api_getAgencyApplicationDetailForPayment: `${baseUrl}/api/advert/agency/get-application-details-for-payment`,//application details for payment\r\n        api_postRedirectToAgencyDashboard: `${baseUrl}/api/advert/agency/is-agency`,//redirect to agency dashboard\r\n        api_getAgencyDashboardData: `${baseUrl}/api/advert/agency/get-agency-dashboard`,//data in agency dashboard \r\n        api_getAgencyDetails: `${baseUrl}/api/advert/agency/get-agency-details`,//agerncy details after login\r\n        api_renew_license: `${baseUrl}/api/advert/agency/renewal-agency`,\r\n        api_getAgencyReuploadDoc: `${baseUrl}/api/advert/agency/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postAgencyReuploadedDocument: `${baseUrl}/api/advert/agency/reupload-document`,//rejected documents list to be reuploaded\r\n\r\n        // Hoarding api //\r\n\r\n        api_getDistrictList: `${baseUrl}/api/crud/district-mstrs`, //district list\r\n        api_postHoardingApplication: `${baseUrl}/api/advert/hording/add-new`, //applying for hoarding\r\n        api_getHoardingPendingApplicationList: `${baseUrl}/api/advert/hording/list-applied-applications`, //pending Application list\r\n        api_getHoardingApprovedApplicationList: `${baseUrl}/api/advert/hording/list-approved`, //approved Application list\r\n        api_getHoardingRejectedApplicationList: `${baseUrl}/api/advert/hording/list-rejected`, //rejected Application list\r\n        api_getHoardingUnpaidApplicationList: `${baseUrl}/api/advert/hording/list-unpaid`, //unpaid Application list\r\n        api_getHoardingTypologyList: `${baseUrl}/api/advert/hording/list-typology`, //topology list\r\n        api_getHoardingApplicationFullDetail: `${baseUrl}/api/advert/hording/get-details-by-id`, //application details by id\r\n        api_getHoardingAppliedDocumentList: `${baseUrl}/api/advert/hording/view-hoarding-documents`,//applied document list\r\n        api_getHoardingOrderIdForPayment: `${baseUrl}/api/advert/hording/generate-payment-order-id`,//order if for payment\r\n        api_getHoardingApplicationDetailForPayment: `${baseUrl}/api/advert/hording/get-application-details-for-payment`,//application details for payment\r\n        api_getHoardingReuploadDoc: `${baseUrl}/api/advert/hording/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postHoardingReuploadedDocument: `${baseUrl}/api/advert/hording/reupload-document`,//rejected documents list to be reuploaded\r\n        api_postHoardingRenewList: `${baseUrl}/api/advert/hording/get-renew-active-applications`,//rejected documents list to be reuploaded\r\n        api_renewHoarding_license: `${baseUrl}/api/advert/hording/renewal-hording`,\r\n        api_getHoardingApplicationDetailsToRenew: `${baseUrl}/api/advert/hording/get-hording-details-for-renew`,\r\n        api_getHoardingArchivedList: `${baseUrl}/api/advert/hording/list-hording-archived`, //hoarding archived in list\r\n        api_getHoardingBlacklistedList: `${baseUrl}/api/advert/hording/list-hording-blacklist`, //hoarding archived in list\r\n        api_archivedApplication: `${baseUrl}/api/advert/hording/archived-hording `, //hoarding archived in list\r\n        api_blacklistedApplication: `${baseUrl}/api/advert/hording/blacklist-hording  `, //hoarding blacklisted application\r\n\r\n        // marketing //\r\n\r\n        // Dharamshala //\r\n        api_postDharamshalaApplication: `${baseUrl}/api/market/dharamshala/add-new`, //applying for self advertisement\r\n        api_getDharamshalaAppliedApplicationList: `${baseUrl}/api/market/dharamshala/list-applied-applications`, //pending Application list\r\n        api_getDharamshalaAppliedApplicationDetail: `${baseUrl}/api/market/dharamshala/get-details-by-id `, //application details by id\r\n        api_getDharamshalaAppliedDocumentList: `${baseUrl}/api/market/dharamshala/view-dharamshala-documents`, //applied document list\r\n        api_getDharamshalaApprovedApplicationList: `${baseUrl}/api/market/dharamshala/list-approved`, //approved Application list\r\n        api_getDharamshalaRejectedApplicationList: `${baseUrl}/api/market/dharamshala/list-rejected`, //rejected Application list\r\n        api_getDharamshalaOrderIdForPayment: `${baseUrl}/api/market/dharamshala/generate-payment-order-id`,//order if for payment\r\n        api_getDharamshalaApplicationDetailForPayment: `${baseUrl}/api/market/dharamshala/get-application-details-for-payment`,//application details for payment\r\n        api_getDharamshalaReuploadDoc: `${baseUrl}/api/market/dharamshala/view-active-document`,//list of rejected and verified document\r\n        api_postDharamshalaReuploadedDocument: `${baseUrl}/api/market/dharamshala/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewDharamshala_license: `${baseUrl}/api/market/dharamshala/renew-application`,\r\n        api_getDharamshalaApplicationDetailsToRenew: `${baseUrl}/api/market/dharamshala/get-renew-application-details`,\r\n\r\n        // Banquet/marriage hall //\r\n        api_postBanquetApplication: `${baseUrl}/api/market/bm-hall/add-new`, //applying for self advertisement\r\n        api_getBanquetAppliedApplicationList: `${baseUrl}/api/market/bm-hall/list-applied-applications`, //pending Application list\r\n        api_getBanquetAppliedApplicationDetail: `${baseUrl}/api/market/bm-hall/get-details-by-id `, //application details by id\r\n        api_getBanquetAppliedDocumentList: `${baseUrl}/api/market/bm-hall/view-bm-hall-documents`, //applied document list\r\n        api_getBanquetApprovedApplicationList: `${baseUrl}/api/market/bm-hall/list-approved`, //approved Application list\r\n        api_getBanquetRejectedApplicationList: `${baseUrl}/api/market/bm-hall/list-rejected`, //rejected Application list\r\n        api_getBanquetOrderIdForPayment: `${baseUrl}/api/market/bm-hall/generate-payment-order-id`,//order if for payment\r\n        api_getBanquetApplicationDetailForPayment: `${baseUrl}/api/market/bm-hall/get-application-details-for-payment`,//application details for payment\r\n        api_getBanquetReuploadDoc: `${baseUrl}/api/market/bm-hall/view-active-document`,//list of rejected and verified document\r\n        api_postBanquetReuploadedDocument: `${baseUrl}/api/market/bm-hall/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewBanquet_license: `${baseUrl}/api/market/bm-hall/renew-application`,\r\n        api_getBanquetApplicationDetailsToRenew: `${baseUrl}/api/market/bm-hall/get-renew-application-details`,\r\n\r\n        // Hostel //\r\n        api_postHostelApplication: `${baseUrl}/api/market/hostel/add-new`, //applying for self advertisement\r\n        api_getHostelAppliedApplicationList: `${baseUrl}/api/market/hostel/list-applied-applications`, //pending Application list\r\n        api_getHostelAppliedApplicationDetail: `${baseUrl}/api/market/hostel/get-details-by-id `, //application details by id\r\n        api_getHostelAppliedDocumentList: `${baseUrl}/api/market/hostel/view-hostel-documents`, //applied document list\r\n        api_getHostelApprovedApplicationList: `${baseUrl}/api/market/hostel/list-approved`, //approved Application list\r\n        api_getHostelRejectedApplicationList: `${baseUrl}/api/market/hostel/list-rejected`, //rejected Application list\r\n        api_getHostelOrderIdForPayment: `${baseUrl}/api/market/hostel/generate-payment-order-id`,//order if for payment\r\n        api_getHostelApplicationDetailForPayment: `${baseUrl}/api/market/hostel/get-application-details-for-payment`,//application details for payment\r\n        api_getHostelReuploadDoc: `${baseUrl}/api/market/hostel/view-active-document`,//list of rejected and verified document\r\n        api_postHostelReuploadedDocument: `${baseUrl}/api/market/hostel/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewHostel_license: `${baseUrl}/api/market/hostel/renew-application`,\r\n        api_getHostelApplicationDetailsToRenew: `${baseUrl}/api/market/hostel/get-renew-application-details`,\r\n\r\n        // Lodge //\r\n        api_postLodgeApplication: `${baseUrl}/api/market/lodge/add-new`, //applying for self advertisement\r\n        api_getLodgeAppliedApplicationList: `${baseUrl}/api/market/lodge/list-applied-applications`, //pending Application list\r\n        api_getLodgeAppliedApplicationDetail: `${baseUrl}/api/market/lodge/get-details-by-id `, //application details by id\r\n        api_getLodgeAppliedDocumentList: `${baseUrl}/api/market/lodge/view-lodge-documents`, //applied document list\r\n        api_getLodgeApprovedApplicationList: `${baseUrl}/api/market/lodge/list-approved`, //approved Application list\r\n        api_getLodgeRejectedApplicationList: `${baseUrl}/api/market/lodge/list-rejected`, //rejected Application list\r\n        api_getLodgeOrderIdForPayment: `${baseUrl}/api/market/lodge/generate-payment-order-id`,//order if for payment\r\n        api_getLodgeApplicationDetailForPayment: `${baseUrl}/api/market/lodge/get-application-details-for-payment`,//application details for payment\r\n        api_getLodgeReuploadDoc: `${baseUrl}/api/market/lodge/view-active-document`,//list of rejected and verified document\r\n        api_postLodgeReuploadedDocument: `${baseUrl}/api/market/lodge/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewLodge_license: `${baseUrl}/api/market/lodge/renew-application`,\r\n        api_getLodgeApplicationDetailsToRenew: `${baseUrl}/api/market/lodge/get-renew-application-details`,\r\n    }\r\n\r\n    return apiList\r\n}","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction AdvrtSuccessScreen(props) {\r\n    const navigate = useNavigate\r\n\r\n    console.log(\"data in response screen\", props?.responseScreenData)\r\n    return (\r\n        <div>\r\n            <div className='grid grid-cols-1 md:grid-cols-6 lg:grid-cols-6 mt-6'>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n                <div className='col-span-2 bg-white shadow-lg mt-4'>\r\n                    <div className='p-2'>\r\n                        <img src='https://img.freepik.com/free-vector/mail-sent-concept-illustration_114360-96.jpg?w=740&t=st=1672636866~exp=1672637466~hmac=5f164187014737ee6e91346184ade8b9590a40d01e247f97d5dba6f313d4c474' className='h-64 mx-auto' />\r\n                    </div>\r\n                    <div className='ml-44 -mt-16'>\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/5610/5610944.png' className='h-20 -mt-4 mx-auto opacity-75' />\r\n                        {/* <img src='https://cdn-icons-png.flaticon.com/512/753/753344.png' className='h-12 mx-auto opacity-75' /> */}\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-3xl p-8 text-gray-600'>Application Submitted Successfully</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-xl text-gray-600 font-bold uppercase'> Application No. :- {props?.responseScreenData?.ApplicationNo}</h1>\r\n                    </div>\r\n                    <div className='text-center p-8'>\r\n                        <Link to='/advertisement-dashboard'>\r\n                            <button class=\"w-32 text-xs p-3 mt-10 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-indigo-500 rounded-md hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\">\r\n\r\n                                {/* onClick={() => navigate(`/selfAdvrt`)} */}\r\n\r\n                                back\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvrtSuccessScreen","import React from 'react'\r\n\r\nfunction DocumentUploadSteps() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-xl'>How To Uplaod Document ?</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 1 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >Choose a file which you want to uplaod </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 2 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To upload image click on upload button</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 3 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on preview to view uploaded image </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 4 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on Save & Next button to proceed with the application</span>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div> */}\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/image-upload-concept-illustration_114360-798.jpg?w=826&t=st=1675677630~exp=1675678230~hmac=3ce8cef91d846d7436a3f83357381af891a8e1e3c51eeef330e620448f1420c8' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentUploadSteps","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementDocTable(props) {\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props?.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    console.log(\"mykey\", props.mykey)\r\n    console.log(\"image path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' &&\r\n                        <div className='px-1'>\r\n                            <h1>click </h1>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocTable","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementDocForm\r\n//    DESCRIPTION - SelfAdvertisementDocForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\nimport SelfAdvertisementDocTable from './SelfAdvertisementDocTable';\r\n\r\n\r\nfunction SelfAdvertisementDocForm(props) {\r\n\r\n    const { setFormIndex, collectFormDataFun, type } = props?.values\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n\r\n    console.log(\"all data doc inside document view\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('selfAdvertisementDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                \r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocForm","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport axios from 'axios'\r\n\r\nfunction AdvtCategoryScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n\r\n    const { api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n\r\n    ///////////{***get advertisement category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        axios.post(`${api_getAdvertisementCategory}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                setadvtCategory(response.data.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"advertisement category screen\", advtCategory)\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6 '>\r\n                <div className='h-[42rem] overflow-y-auto'>\r\n                    <div className='flex flex-row'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                        </svg>\r\n                        <h1 className='ml-2 text-lg'>Typology Category</h1>\r\n                    </div>\r\n                    {advtCategory?.map((data) => (\r\n                        <div className={`${divStyle}flex mt-3 `}>\r\n                            <span className={`${tittleStyle} flex-1 `}>{data?.type}</span>\r\n\r\n                            <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdvtCategoryScreen","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementForm1\r\n//    DESCRIPTION - SelfAdvertisementForm1 Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from './SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport AdvtCategoryScreen from './AdvtCategoryScreen';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport useSetTitle from '../../../../Components/GlobalData/UseSetTitle';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementForm1(props) {\r\n\r\n    const { setFormIndex, collectFormDataFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails, api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n    // const [confirmUlb, setconfirmUlb] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.number().required('Enter mobile no.'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        entityName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        installationLocation: yup.string().required('This field is Required'),\r\n        brandDisplayName: yup.string().required('This field is Required'),\r\n        // holdingNo: yup.string().required('This field is Required'),\r\n        // tradeLicenseNo: yup.string().required('This field is Required'),\r\n        gstNo: yup.string().required('This field is Required'),\r\n        displayArea: yup.string().required('Enter Number'),\r\n        displayType: yup.string().required('This field is Required'),\r\n    })\r\n\r\n    const initialValues = {\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        aadharNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        installationLocation: '',\r\n        brandDisplayName: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        gstNo: '',\r\n        displayArea: '',\r\n        displayType: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        advrtCategory: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            console.log(\"self Advertisement values \", values)\r\n            collectFormDataFun('selfAdvertisement', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n    useSetTitle('', false)\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // { name == 'ulb' && handleUlb(value) }\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one')\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        else\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n        { name == 'displayArea' && formik.setFieldValue(\"displayArea\", allowFloatInput(value, formik.values.displayArea, 4)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n\r\n    // const handleUlb = (ulbId) => {\r\n    //     setstoreUlbValue(ulbId)\r\n    // }\r\n\r\n    console.log(\"storeUlbValue\", storeUlbValue)\r\n    // console.log(\"ulb is confirmed\", confirmUlb)\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n    // console.log(\"ulb value...\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        console.log(\"ulb id in request body\", requestBody)\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list..16', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ward list', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n                // setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** ADVERTISEMENT CATEGORY***}/////////\r\n    useEffect(() => {\r\n        getCategoryList()\r\n    }, [])\r\n    const getCategoryList = () => {\r\n        axios.post(`${api_getAdvertisementCategory}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('advertisement category', response.data.data)\r\n                setadvtCategory(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residence_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_no)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('installationLocation', existingApplicationDetails?.installation_location)\r\n        formik.setFieldValue('brandDisplayName', existingApplicationDetails?.brand_display_name)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('displayArea', existingApplicationDetails?.display_area)\r\n        formik.setFieldValue('displayType', existingApplicationDetails?.display_type)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('advrtCategory', existingApplicationDetails?.advt_category)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"existing application details\", existingApplicationDetails)\r\n    console.log(\"advertisement category..2\", advtCategory)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute top-2 ml-4 w-full'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                       \r\n                        {/* {setFormIndex != 1 && */}\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12 '>\r\n                                    {storeUlbValue == undefined ?\r\n                                        <>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-12'>\r\n                                                Registration of a <span className='text-gray-700 font-bold'>Self Advertisement</span> is mendatory under the urban local body it falls in.\r\n                                                If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-6 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                            <option>select </option>\r\n                                                            {ulbList?.map((items) => (\r\n                                                                <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    {/* <div className='text-center bg-indigo-500 px-2 py-1 text-xs text-white rounded leading-5 mt-6'>\r\n                                                        <button className='' onClick={handleUlb}>Confirm</button>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                <div className='animate-wiggle'>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24' />\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        <div className='flex flex-row mt-4 space-x-2  '>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg>\r\n\r\n                                            <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* } */}\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value={existingApplicationDetails?.ward_id}>{existingApplicationDetails?.ward_name}</option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value={existingApplicationDetails?.permanent_ward_id}>{existingApplicationDetails?.permanent_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled >\r\n                                                                <option value={existingApplicationDetails?.entity_ward_id}>{existingApplicationDetails?.entity_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Display Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude  </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16 '>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementForm1","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - ReviewSelfAdvertForm\r\n//    DESCRIPTION - ReviewSelfAdvertForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewSelfAdvertForm(props) {\r\n\r\n    const { setFormIndex } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 -ml-7 text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form document...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.license_year_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.applicantName  || props?.reviewIdNameData?.selfAdvertisement?.applicant)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.fatherName  || props?.reviewIdNameData?.selfAdvertisement?.father)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.email  || props?.reviewIdNameData?.selfAdvertisement?.email)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceAddress || props?.reviewIdNameData?.selfAdvertisement?.residence_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceWardNo || props?.reviewIdNameData?.selfAdvertisement?.ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentAddress || props?.reviewIdNameData?.selfAdvertisement?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentWardNo || props?.reviewIdNameData?.selfAdvertisement?.permanent_ward_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.mobileNo || props?.reviewIdNameData?.selfAdvertisement?.mobile_no)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.aadharNo || props?.reviewIdNameData?.selfAdvertisement?.aadhar_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityName || props?.reviewIdNameData?.selfAdvertisement?.entity_name)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityAddress || props?.reviewIdNameData?.selfAdvertisement?.entity_address)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityWardNo || props?.reviewIdNameData?.selfAdvertisement?.entity_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Installation Location</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.installationLocation || props?.reviewIdNameData?.selfAdvertisement?.installation_location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Brand Display Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.brandDisplayName || props?.reviewIdNameData?.selfAdvertisement?.brand_display_name)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.holdingNo || props?.reviewIdNameData?.selfAdvertisement?.holding_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.tradeLicenseNo || props?.reviewIdNameData?.selfAdvertisement?.trade_license_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>GST No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.gstNo || props?.reviewIdNameData?.selfAdvertisement?.gst_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Display Area</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayArea || props?.reviewIdNameData?.selfAdvertisement?.display_area)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Display Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayType || props?.reviewIdNameData?.selfAdvertisement?.display_type)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Advertisement Category</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.advrtCategory || props?.reviewIdNameData?.selfAdvertisement?.advt_category_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.longitude || props?.reviewIdNameData?.selfAdvertisement?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.latitude || props?.reviewIdNameData?.selfAdvertisement?.latitude)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.selfAdvertisementDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewSelfAdvertForm","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementIndexForm\r\n//    DESCRIPTION - SelfAdvertisementIndexForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport SelfAdvertisementDocForm from './SelfAdvertisementDocForm'\r\nimport SelfAdvertisementForm1 from './SelfAdvertisementForm1'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport ReviewSelfAdvertForm from './ReviewSelfAdvertForm'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport { useParams } from 'react-router-dom';\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\n\r\nfunction SelfAdvertisementIndexForm() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n   \r\n\r\n    const { api_postSelfAdvertApplication, api_renewSelfAdvt_license, api_getApplicationDetailsToRenew } = AdvertisementApiList();\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'selfAdvertisement') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"review data...\", reviewData)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitSelfAdvertForm()\r\n    }\r\n\r\n    const submitSelfAdvertForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postSelfAdvertApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewSelfAdvt_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        console.log('request body...', requestBody)\r\n\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n          \r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip bg-violet-50 p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Self Advertisement</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle '>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementForm1 values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewSelfAdvertForm values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementIndexForm","import { Info } from '@mui/icons-material'\r\nimport React from 'react'\r\n\r\nfunction SelfAdvrtInformationScreen() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your address where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div>\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto'/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvrtInformationScreen","export default function ApiHeaderAdvrt() {\r\n    let token = window.localStorage.getItem(\"citizen_token\");\r\n    const header = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n    };\r\n    return header;\r\n  }\r\n  ","\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Component  - ServerErrorCard\r\n// DESCRIPTION - This component is rendered when there is some error in hitting the api to show text like server is busy..\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineReload } from 'react-icons/ai'\r\n\r\nfunction ServerErrorCard(props) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div class=\"items-center justify-center p-10 bg-white shadow-xl\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex rounded-full bg-red-100 p-4\">\r\n            <div class=\"rounded-full stroke-red-600 bg-red-200 p-4\">\r\n              <svg class=\"w-16 h-16\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 8H6.01M6 16H6.01M6 12H18C20.2091 12 22 10.2091 22 8C22 5.79086 20.2091 4 18 4H6C3.79086 4 2 5.79086 2 8C2 10.2091 3.79086 12 6 12ZM6 12C3.79086 12 2 13.7909 2 16C2 18.2091 3.79086 20 6 20H14\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M17 16L22 21M22 16L17 21\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" p-10\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">{props?.title}</div>\r\n            <p class=\"text-slate-600 mt-1 lg:text-lg\">{props?.desc}</p>\r\n            <div className=\"text-center mt-10\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => window.location.reload()}><AiOutlineReload className=\"inline mr-2\" />Reload</button>\r\n              <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(props?.buttonUrl)}>{props?.buttonText}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServerErrorCard"],"names":["title","status","React","contextVar","settitleText","settitleStatus","useEffect","AdvertisementApiList","baseUrl","BackendUrlAdvt","api_getTradeLicenseByHolding","api_getTradeLicenseByUserId","api_getTradeLicenseDetails","api_getUlbList","api_getWardList","api_getAdvertMasterData","api_getSelfAdvertDocList","verifyPaymentStatus","getTypologyList","getHoardingCategory","getPaymentsuccessDetails","getApprovalLetterDetails","api_postSelfAdvertApplication","api_getAppliedApplicationList","api_getAppliedApplicationDetail","api_getAppliedDocumentList","api_getApprovedApplicationList","api_getRejectedApplicationList","api_getOrderIdForPayment","api_getApplicationDetailForPayment","api_getAdvertisementCategory","api_getAdvertisementReuploadDoc","api_postAdvertisementReuploadedDocument","api_renewSelfAdvt_license","api_getApplicationDetailsToRenew","api_postMovableVehicleApplication","api_getMovableAppliedApplicationList","api_getMovableAppliedApplicationDetail","api_getMovableAppliedDocumentList","api_getMovableApprovedApplicationList","api_getMovableRejectedApplicationList","api_getMovableVehicleOrderIdForPayment","api_getMovableVehicleApplicationDetailForPayment","api_getMovableVehicleReuploadDoc","api_postMovableVehicleReuploadedDocument","api_renewMovableVehicle_license","api_getMovableApplicationDetailsToRenew","api_postPrivateLandApplication","api_getPrivateLandAppliedApplicationList","api_getPrivateLandAppliedApplicationDetail","api_getPrivateLandAppliedDocumentList","api_getPrivateLandApprovedApplicationList","api_getPrivateLandRejectedApplicationList","api_getPrivateLandOrderIdForPayment","api_getPrivateLandApplicationDetailForPayment","api_getPrivateLandReuploadDoc","api_postPrivateLandReuploadedDocument","api_renewPrivateLand_license","api_getPrivateApplicationDetailsToRenew","api_postAgencyApplication","api_getAgencyApprovedApplicationList","api_getAgencyRejectedApplicationList","api_getAgencyAppliedApplicationList","api_getAgencyApplicationFullDetail","api_getAgencyAppliedDocumentList","api_getAgencyOrderIdForPayment","api_getAgencyApplicationDetailForPayment","api_postRedirectToAgencyDashboard","api_getAgencyDashboardData","api_getAgencyDetails","api_renew_license","api_getAgencyReuploadDoc","api_postAgencyReuploadedDocument","api_getDistrictList","api_postHoardingApplication","api_getHoardingPendingApplicationList","api_getHoardingApprovedApplicationList","api_getHoardingRejectedApplicationList","api_getHoardingUnpaidApplicationList","api_getHoardingTypologyList","api_getHoardingApplicationFullDetail","api_getHoardingAppliedDocumentList","api_getHoardingOrderIdForPayment","api_getHoardingApplicationDetailForPayment","api_getHoardingReuploadDoc","api_postHoardingReuploadedDocument","api_postHoardingRenewList","api_renewHoarding_license","api_getHoardingApplicationDetailsToRenew","api_getHoardingArchivedList","api_getHoardingBlacklistedList","api_archivedApplication","api_blacklistedApplication","api_postDharamshalaApplication","api_getDharamshalaAppliedApplicationList","api_getDharamshalaAppliedApplicationDetail","api_getDharamshalaAppliedDocumentList","api_getDharamshalaApprovedApplicationList","api_getDharamshalaRejectedApplicationList","api_getDharamshalaOrderIdForPayment","api_getDharamshalaApplicationDetailForPayment","api_getDharamshalaReuploadDoc","api_postDharamshalaReuploadedDocument","api_renewDharamshala_license","api_getDharamshalaApplicationDetailsToRenew","api_postBanquetApplication","api_getBanquetAppliedApplicationList","api_getBanquetAppliedApplicationDetail","api_getBanquetAppliedDocumentList","api_getBanquetApprovedApplicationList","api_getBanquetRejectedApplicationList","api_getBanquetOrderIdForPayment","api_getBanquetApplicationDetailForPayment","api_getBanquetReuploadDoc","api_postBanquetReuploadedDocument","api_renewBanquet_license","api_getBanquetApplicationDetailsToRenew","api_postHostelApplication","api_getHostelAppliedApplicationList","api_getHostelAppliedApplicationDetail","api_getHostelAppliedDocumentList","api_getHostelApprovedApplicationList","api_getHostelRejectedApplicationList","api_getHostelOrderIdForPayment","api_getHostelApplicationDetailForPayment","api_getHostelReuploadDoc","api_postHostelReuploadedDocument","api_renewHostel_license","api_getHostelApplicationDetailsToRenew","api_postLodgeApplication","api_getLodgeAppliedApplicationList","api_getLodgeAppliedApplicationDetail","api_getLodgeAppliedDocumentList","api_getLodgeApprovedApplicationList","api_getLodgeRejectedApplicationList","api_getLodgeOrderIdForPayment","api_getLodgeApplicationDetailForPayment","api_getLodgeReuploadDoc","api_postLodgeReuploadedDocument","api_renewLodge_license","api_getLodgeApplicationDetailsToRenew","props","useNavigate","console","log","responseScreenData","className","src","ApplicationNo","to","class","tittleStyle","labelStyle","divStyle","xmlns","fill","viewBox","stroke","d","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","useState","imgPath","setimgPath","DocUrl","setDocUrl","modalIsOpen","setIsOpen","imageFile","setimageFile","modalAction","url","initialValues","image","docCode","data","ownerDtlId","formik","useFormik","onSubmit","values","collectAllDataFun","mykey","handleFile","file","setFieldValue","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","onChange","e","name","target","value","files","encType","document_name","docType","undefined","alt","split","pop","onClick","Tooltip","type","accept","handleChange","isOpen","onAfterOpen","onRequestClose","style","contentLabel","frameborder","setFormIndex","collectFormDataFun","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","collectAllData","key","formData","getDocumentList","axios","deviceId","ApiHeaderAdvrt","then","response","catch","error","SELF_ADVERT","map","items","index","DocumentUploadSteps","advtCategory","setadvtCategory","getHoardingCategoryList","descriptions","existingApplicationDetails","CitizenApplyApiList","api_getAllUlb","api_wardByUlb","masterData","setmasterData","ulbList","setulbList","wardList","setwardList","reviewIdName","setreviewIdName","storeUlbValue","setstoreUlbValue","liceneData","liceneDetails","tabIndex","settabIndex","isLoading","setisLoading","erroState","seterroState","inputStyle","validationSchema","yup","ulb","required","licenseYear","applicantName","max","fatherName","email","residenceAddress","residenceWardNo","permanentAddress","permanentWardNo","mobileNo","aadharNo","min","entityName","entityAddress","entityWardNo","installationLocation","brandDisplayName","gstNo","displayArea","displayType","holdingNo","tradeLicenseNo","longitude","latitude","advrtCategory","enableReinitialize","useSetTitle","showLoader","getUlbListData","getWardListFun","ulbId","requestBody","ApiHeader","getMasterDataFun","getCategoryList","feedApplicationData","ulb_id","license_year","applicant","father","residence_address","ward_id","permanent_address","permanent_ward_id","mobile_no","aadhar_no","entity_name","entity_address","entity_ward_id","installation_location","brand_display_name","trade_license_no","gst_no","holding_no","display_area","display_type","advt_category","BarLoader","CommonModal","ServerErrorCard","desc","buttonText","buttonUrl","licenseDataById","selectedIndex","text","allowNumberInput","allowCharacterNumberInput","allowFloatInput","allowMailInput","getFieldProps","id","ulb_name","paramCategories","LicenseYear","string_parameter","touched","errors","placeholder","disabled","ward_name","permanent_ward_name","entity_ward_name","selected","InstallationLocation","DisplayType","SelfAdvrtInformationScreen","allFormData","reviewIdNameData","nullToNA","selfAdvertisement","license_year_name","advt_category_name","selfAdvertisementDoc","submitFun","formIndex","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setexistingApplicationDetails","setapplicationType","useParams","notify","toastData","toast","submitSelfAdvertForm","wardId","permanentWardId","entityWardId","documents","applicationId","toastFun","fetchApplicationDetails","AdvrtSuccessScreen","BrandLoader","position","autoClose","token","window","localStorage","getItem","headers","Authorization","Accept","currentValue","oldValue","length","re","test","allowCharacterNumberForwardInput","navigate","location","reload"],"sourceRoot":""}