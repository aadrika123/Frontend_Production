{"version":3,"file":"static/js/4161.9574da8b.chunk.js","mappings":"kUAoEA,MA7DA,WACI,IAGQA,GAAwBC,EAAAA,EAAAA,KAAxBD,oBACR,GAAgDE,EAAAA,EAAAA,YAAU,eAAnDC,EAAgB,KAAEC,EAAmB,MAE5CC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,IACH,IAAMA,EAA0B,WAK5BC,EAAAA,GAAAA,KAAW,GAAD,OAAIP,GAHM,CAChB,GAE8CQ,EAAAA,EAAAA,MAC7CC,MAAK,SAAUC,GACZC,QAAQC,IAAI,eAAgBF,GAC5BN,EAAoBM,EAASG,KAAKA,KAItC,IACCC,OAAM,SAAUC,GACbJ,QAAQC,IAAI,eAAgBG,EAKhC,GACR,EAEA,OADAJ,QAAQC,IAAI,2BAA4BT,IAEpC,+BACI,iBAAKa,UAAU,kEAAiE,WAC5E,iBAAKA,UAAU,gBAAe,WAC1B,gBAAKC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAY,eAAa,MAAMC,OAAO,eAAeC,MAAM,0BAAyB,UAC5I,iBAAM,iBAAe,QAAQ,kBAAgB,QAAQC,EAAE,0JAE3D,eAAIN,UAAU,eAAc,4BAEf,OAAhBb,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,KAAI,SAACV,GAAI,OACxB,iBAAKG,UAAS,UAvCf,2BAuC4B,aAAY,WACnC,iBAAMA,UAAS,UA1CjB,kCA0CiC,YAAW,SAAM,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMW,WAElD,iBAAMR,UAAS,UA3ClB,mCA2CiC,YAAW,SAAM,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMY,iBAC/C,KAOV,0BACI,gBAAKC,IAAI,4LAA4LV,UAAU,kCAKnO,E,iCCieA,MA1gBA,SAAuBW,GAEnB,OAA+F1B,EAAAA,EAAAA,KAAvF2B,EAAuB,EAAvBA,wBAA+D5B,GAAvB,EAAf6B,gBAAoC,EAAnBC,oBAAwC,EAAnB9B,qBACvE,GAA0C+B,EAAAA,EAAAA,KAAnBC,GAAF,EAAbC,cAA4B,EAAbD,eAEvB,EAA8G,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOO,OAAxGC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAAYC,EAAkB,EAAlBA,mBAAkCC,GAAN,EAARC,SAAY,EAAFC,GAA8B,EAA1BF,4BAA4BG,EAAI,EAAJA,KAE5FC,EAAa,mCACbC,EAAa,2EAEjB,GAAoCzC,EAAAA,EAAAA,YAAU,eAA3B0C,GAAF,KAAe,MAChC,GAAgC1C,EAAAA,EAAAA,YAAU,eAAnC2C,EAAQ,KAAEC,EAAW,KAC5B,GAAwC5C,EAAAA,EAAAA,YAAU,eAA3C6C,EAAY,KACnB,GADoC,MACM7C,EAAAA,EAAAA,aAAU,eAA9B8C,GAAF,KAAkB,MACtC,GAAwC9C,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7C+C,EAAY,KAAEC,EAAe,KACpC,GAAgDhD,EAAAA,EAAAA,YAAU,eAAnDC,EAAgB,KAAEC,EAAmB,KAC5C,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CiD,EAAS,KAAEC,GAAY,KAC9B,IAAkClD,EAAAA,EAAAA,WAAS,GAAM,iBAA1CmD,GAAS,MAAEC,GAAY,MAExBC,GAAmBC,EAAAA,GAAW,CAEhCrD,iBAAkBqD,EAAAA,KAAaC,SAAS,0BACxCC,SAAUF,EAAAA,KAAaC,SAAS,0BAGhCE,KAAMH,EAAAA,KAAaC,SAAS,0BAC5BG,iBAAkBJ,EAAAA,KAAaC,SAAS,0BACxCI,gBAAiBL,EAAAA,KAAaC,SAAS,0BACvCK,YAAaN,EAAAA,KAAaC,SAAS,0BACnCM,SAAUP,EAAAA,KAAaC,SAAS,0BAChCO,aAAcR,EAAAA,KAAaC,SAAS,0BACpCQ,OAAQT,EAAAA,KAAaC,SAAS,0BAC9BS,aAAcV,EAAAA,KAAaC,SAAS,0BACpCU,aAAcX,EAAAA,KAAaC,SAAS,4BAiClCW,IAASC,EAAAA,EAAAA,IAAU,CACrBC,cAxBkB,CAClBC,YAAa,GACbpE,iBAAkB,GAClBuD,SAAU,GACVc,UAAW,GACXC,SAAU,GACVb,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,SAAU,GACVC,aAAc,GACdU,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,gBAAiB,GACjBb,OAAQ,GACRC,aAAc,GACdC,aAAc,GACdR,KAAM,IAMNoB,SAAU,SAAA7C,GAENvB,QAAQC,IAAI,gBAAiBsB,EAAQe,GAErCZ,EAAmB,YAAaH,EAAQe,GACxCd,EAAa,EACjB,EACAoB,iBAAAA,KA0BEyB,GAAmB,SAACC,GACtB3B,IAAa,GACbF,IAAa,GAKb7C,EAAAA,GAAAA,KAAW,GAAD,OAAIqB,GAJM,CAEhBqD,MAAO,IAE2CzE,EAAAA,EAAAA,MACjDC,MAAK,SAAUC,GACZC,QAAQC,IAAI,2BAA4BF,GACxCkC,EAAclC,EAASG,KAAKA,MAC5BuC,IAAa,EACjB,IACCtC,OAAM,SAAUC,GACbJ,QAAQC,IAAI,eAAgBG,GAC5BuC,IAAa,GACbF,IAAa,EACjB,GACR,GAIA/C,EAAAA,EAAAA,YAAU,WACNC,IACJ,GAAG,IACH,IAAMA,GAA0B,WAC5B8B,GAAW,GAIX7B,EAAAA,GAAAA,KAAW,GAAD,OAAIP,GAHM,CAChB,GAE8CQ,EAAAA,EAAAA,MAC7CC,MAAK,SAAUC,GACZC,QAAQC,IAAI,eAAgBF,GAC5BN,EAAoBM,EAASG,KAAKA,MAClCqE,YAAW,WACP9C,GAAW,EACf,GAAG,IACP,IACCtB,OAAM,SAAUC,GACbJ,QAAQC,IAAI,eAAgBG,GAC5BmE,YAAW,WACP9C,GAAW,EACf,GAAG,IAEP,GACR,EACAzB,QAAQC,IAAI,2BAA4BT,IAGxCE,EAAAA,EAAAA,YAAU,WACN8E,IACJ,GAAG,IACH,IAAMA,GAAiB,SAACF,GAKpB1E,EAAAA,GAAAA,KAAW,GAAD,OAAIyB,GAJM,CAEhBiD,MAAO,IAEiCzE,EAAAA,EAAAA,MACvCC,MAAK,SAAUC,GACZC,QAAQC,IAAI,YAAaF,GACzBoC,EAAYpC,EAASG,KAAKA,KAC9B,IACCC,OAAM,SAAUC,GACbJ,QAAQC,IAAI,eAAgBG,EAChC,GACR,GAEAV,EAAAA,EAAAA,YAAU,WAEM,SAARoC,IACA2C,KACAlC,EAAgBZ,GAExB,GAAG,CAACA,IACJ,IAAM8C,GAAsB,WAExBhB,GAAOiB,cAAc,mBAA8C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BgD,aACrElB,GAAOiB,cAAc,WAAsC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BoB,UAC7DU,GAAOiB,cAAc,YAAuC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BkC,WAC9DJ,GAAOiB,cAAc,WAAsC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BmC,UAC7DL,GAAOiB,cAAc,mBAA8C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiD,QACrEnB,GAAOiB,cAAc,kBAA6C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BkD,OACpEpB,GAAOiB,cAAc,cAAyC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BmD,MAChErB,GAAOiB,cAAc,WAAsC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByB,UAC7DK,GAAOiB,cAAc,eAA0C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BoD,eACjEtB,GAAOiB,cAAc,YAAuC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BqD,qBAC9DvB,GAAOiB,cAAc,eAA0C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BsD,wBACjExB,GAAOiB,cAAc,YAAuC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BuD,qBAC9DzB,GAAOiB,cAAc,aAAwC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BwD,0BAC/D1B,GAAOiB,cAAc,kBAA6C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByD,4BACpE3B,GAAOiB,cAAc,SAAoC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B2B,QAC3DG,GAAOiB,cAAc,eAA0C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B0D,UACjE5B,GAAOiB,cAAc,eAA0C,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B2D,iBACjE7B,GAAOiB,cAAc,OAAkC,OAA1B/C,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B4D,QAC7D,EAGA,OAAI/C,GAEI,+BACI,SAACgD,EAAA,EAAS,MAIlB9C,IAEI,SAAC+C,EAAA,EAAW,WACR,SAACC,EAAA,EAAe,CAACC,MAAM,iBAAiBC,KAAK,yDAAyDC,WAAW,iBAAiBC,UAAU,gCAIxJ9F,QAAQC,IAAI,8BAA+B0B,GAC3C3B,QAAQC,IAAI,4BAA6BqC,GACzCtC,QAAQC,IAAI,uBAAwBiC,GACpClC,QAAQC,IAAI,gBAA6B,OAAZmC,QAAY,IAAZA,OAAY,EAAZA,EAAc2D,YAIvC,+BACI,gBAAK1F,UAAU,8BAA6B,UACxC,iBAAM+D,SAAUX,GAAOuC,aAAcC,SA/I5B,SAACC,GAClB,IAAIC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEX,OAARF,GAAiB9B,GAAiBgC,GAE1B,OAARF,GAAiB9D,EAAiBgE,GAGf,cAAjBH,EAAEE,OAAOtE,KACTS,GAAgB,kBAAKD,GAAY,cAAG6D,EAAOD,EAAEE,OAAOF,EAAEE,OAAOE,eAAeC,QAG5EhE,GAAgB,kBAAKD,GAAY,cAAG6D,EAAOE,KAErC,cAARF,GAAwB1C,GAAOiB,cAAc,cAAc8B,EAAAA,EAAAA,IAAiBH,EAAO5C,GAAOlC,OAAO2C,WAAY,KACrG,mBAARiC,GAA6B1C,GAAOiB,cAAc,mBAAmB8B,EAAAA,EAAAA,IAAiBH,EAAO5C,GAAOlC,OAAO4C,gBAAiB,KACpH,aAARgC,GAAuB1C,GAAOiB,cAAc,aAAa+B,EAAAA,EAAAA,IAAgBJ,EAAO5C,GAAOlC,OAAOsC,UAAW,KACjG,YAARsC,GAAsB1C,GAAOiB,cAAc,YAAY+B,EAAAA,EAAAA,IAAgBJ,EAAO5C,GAAOlC,OAAOuC,SAAU,IAE5G,EA2HwE,UACxD,iBAAKzD,UAAU,6EAA4E,WACvF,iBAAKA,UAAU,aAAY,WACvB,iBAAKA,UAAU,4FAA2F,WAEtG,iBAAKA,UAAU,+DAA8D,WACzE,iBAAKA,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,EAAU,KAAI,4BAAe,iBAAM1B,UAAU,eAAc,sBAEhF,iBAAKA,UAAU,kBAAiB,WAC5B,sCAAYoD,GAAOiD,cAAc,gBAAc,IAAErG,UAAS,UAAK2B,EAAU,aAAY,WACjF,mBAAQqE,MAAM,GAAE,sBAChB,mBAAQA,MAAO,IAAI,uBACnB,mBAAQA,MAAO,IAAI,2BAOvB,cAAGhG,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ/C,aAAeH,GAAOmD,OAAOhD,YAAcH,GAAOmD,OAAOhD,YAAc,cAI5I,iBAAKvD,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,EAAU,KAAI,+BAAkB,iBAAM1B,UAAU,eAAc,sBAEnF,iBAAKA,UAAU,kBAAiB,WAC5B,sCAAYoD,GAAOiD,cAAc,qBAAmB,IAAErG,UAAS,UAAK2B,EAAU,aAAY,WACtF,wCACiB,OAAhBxC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,KAAI,SAACiG,GAAK,OACzB,mBAAQR,MAAY,OAALQ,QAAK,IAALA,OAAK,EAALA,EAAOhF,GAAG,SAAO,OAALgF,QAAK,IAALA,OAAK,EAALA,EAAOhG,SAAiB,SAG3D,cAAGR,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQnH,kBAAoBiE,GAAOmD,OAAOpH,iBAAmBiE,GAAOmD,OAAOpH,iBAAmB,cAI3J,iBAAKa,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,sBAAS,iBAAM1B,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,WAAWW,YAAY,GAAGzG,UAAS,UAAK2B,GAC5DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOwB,YAEzB,cAAG1C,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ5D,UAAYU,GAAOmD,OAAO7D,SAAWU,GAAOmD,OAAO7D,SAAW,cAInI,iBAAK1C,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,0BAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,YAAYW,YAAY,GAAGzG,UAAS,UAAK2B,GAC7DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOsC,aAEzB,cAAGxD,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ9C,WAAaJ,GAAOmD,OAAO/C,UAAYJ,GAAOmD,OAAO/C,UAAY,cAItI,iBAAKxD,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,yBAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,WAAWW,YAAY,GAAGzG,UAAS,UAAK2B,GAC5DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOuC,YAEzB,cAAGzD,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ7C,UAAYL,GAAOmD,OAAO9C,SAAWL,GAAOmD,OAAO9C,SAAW,cAInI,iBAAKzD,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,uCAA0B,iBAAM1B,UAAU,eAAc,sBAE1F,iBAAKA,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,mBAAmBW,YAAY,GAAGzG,UAAS,UAAK2B,GACpEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO0B,oBAEzB,cAAG5C,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ1D,kBAAoBQ,GAAOmD,OAAO3D,iBAAmBQ,GAAOmD,OAAO3D,iBAAmB,cAI3J,iBAAK5C,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,sCAAyB,iBAAM1B,UAAU,eAAc,sBAEzF,iBAAKA,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,kBAAkBW,YAAY,GAAGzG,UAAS,UAAK2B,GACnEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO2B,mBAEzB,cAAG7C,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQzD,iBAAmBO,GAAOmD,OAAO1D,gBAAkBO,GAAOmD,OAAO1D,gBAAkB,cAIxJ,iBAAK7C,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,kCAAqB,iBAAM1B,UAAU,eAAc,sBAErF,iBAAKA,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,cAAcW,YAAY,GAAGzG,UAAS,UAAK2B,GAC/DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO4B,eAEzB,cAAG9C,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQxD,aAAeM,GAAOmD,OAAOzD,YAAcM,GAAOmD,OAAOzD,YAAc,cAI5I,iBAAK9C,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,sBAAS,iBAAM1B,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,WAAWW,YAAY,GAAGzG,UAAS,UAAK2B,GAC5DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO6B,YAEzB,cAAG/C,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQvD,UAAYK,GAAOmD,OAAOxD,SAAWK,GAAOmD,OAAOxD,SAAW,cAInI,iBAAK/C,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,oBAAO,iBAAM1B,UAAU,eAAc,sBAEvE,iBAAKA,UAAU,kBAAiB,WAC5B,oBAAQyB,KAAK,OAAOqE,KAAK,SAASW,YAAY,GAAGzG,UAAS,UAAK2B,GAC3DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO+B,OAAO,WAE5B,mBAAQ+C,MAAM,GAAE,qBAChB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,OAAM,mBACpB,mBAAQA,MAAM,OAAM,sBAExB,cAAGhG,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQrD,QAAUG,GAAOmD,OAAOtD,OAASG,GAAOmD,OAAOtD,OAAS,iBAKjI,iBAAKjD,UAAU,+DAA8D,WACzE,iBAAKA,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,2BAAc,iBAAM1B,UAAU,eAAc,sBAE9E,iBAAKA,UAAU,kBAAiB,WAC5B,oBAAQyB,KAAK,OAAOqE,KAAK,eAAeW,YAAY,GAAGzG,UAAS,UAAK2B,GACjEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO8B,aAAa,WAElC,mBAAQgD,MAAM,GAAE,qBAChB,mBAAQA,MAAM,SAAQ,qBACtB,mBAAQA,MAAM,UAAS,yBAE3B,cAAGhG,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQtD,cAAgBI,GAAOmD,OAAOvD,aAAeI,GAAOmD,OAAOvD,aAAe,cAI/I,iBAAKhD,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,kBAAK,iBAAM1B,UAAU,eAAc,sBAErE,iBAAKA,UAAU,kBAAiB,WAE5B,sCAAYoD,GAAOiD,cAAc,SAAO,IAAErG,UAAS,UAAK2B,EAAU,aAAY,WAC1E,yCACA,mBAAQqE,MAAO,EAAE,qBACjB,mBAAQA,MAAO,EAAE,qBACjB,mBAAQA,MAAO,EAAE,yBAErB,cAAGhG,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ3D,MAAQS,GAAOmD,OAAO5D,KAAOS,GAAOmD,OAAO5D,KAAO,cAIvH,iBAAK3C,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,wDAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,YAAYW,YAAY,GAAGzG,UAAS,UAAK2B,GAC7DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOwC,aAEzB,cAAG1D,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ5C,WAAaN,GAAOmD,OAAO7C,UAAYN,GAAOmD,OAAO7C,UAAY,cAItI,iBAAK1D,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,2DAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,eAAeW,YAAY,GAAGzG,UAAS,UAAK2B,GAChEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOyC,gBAEzB,cAAG3D,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ3C,cAAgBP,GAAOmD,OAAO5C,aAAeP,GAAOmD,OAAO5C,aAAe,cAI/I,iBAAK3D,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,wDAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,YAAYW,YAAY,GAAGzG,UAAS,UAAK2B,GAC7DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO0C,aAEzB,cAAG5D,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQ1C,WAAaR,GAAOmD,OAAO3C,UAAYR,GAAOmD,OAAO3C,UAAY,cAItI,iBAAK5D,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,yDAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,aAAaW,YAAY,GAAGzG,UAAS,UAAK2B,GAC9DiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO2C,cAEzB,cAAG7D,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQzC,YAAcT,GAAOmD,OAAO1C,WAAaT,GAAOmD,OAAO1C,WAAa,cAIzI,iBAAK7D,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK0B,GAAa,gEAElC,iBAAK1B,UAAU,kBAAiB,WAC5B,kBAAOyB,KAAK,OAAOqE,KAAK,kBAAkBW,YAAY,GAAGzG,UAAS,UAAK2B,GACnEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAO4C,mBAEzB,cAAG9D,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQxC,iBAAmBV,GAAOmD,OAAOzC,gBAAkBV,GAAOmD,OAAOzC,gBAAkB,cAIxJ,iBAAK9D,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,2BAAc,iBAAM1B,UAAU,eAAc,sBAE9E,iBAAKA,UAAU,kBAAiB,WAC5B,oBAAQyB,KAAK,OAAOqE,KAAK,eAAeW,YAAY,GAAGzG,UAAS,UAAK2B,GACjEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOgC,aAAa,WAElC,mBAAQ8C,MAAM,GAAE,qBAChB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,OAAM,mBACpB,mBAAQA,MAAM,SAAQ,wBAE1B,cAAGhG,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQpD,cAAgBE,GAAOmD,OAAOrD,aAAeE,GAAOmD,OAAOrD,aAAe,cAG/I,iBAAKlD,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK0B,GAAa,0BAAa,iBAAM1B,UAAU,eAAc,sBAE7E,iBAAKA,UAAU,kBAAiB,WAC5B,oBAAQyB,KAAK,OAAOqE,KAAK,eAAeW,YAAY,GAAGzG,UAAS,UAAK2B,GACjEiE,SAAUxC,GAAOsD,aACjBV,MAAO5C,GAAOlC,OAAOiC,aAAa,WAElC,mBAAQ6C,MAAM,GAAE,qBAChB,mBAAQA,MAAM,IAAG,iBACjB,mBAAQA,MAAM,IAAG,qBAErB,cAAGhG,UAAU,gCAA+B,SAAEoD,GAAOkD,QAAQnD,cAAgBC,GAAOmD,OAAOpD,aAAeC,GAAOmD,OAAOpD,aAAe,oBAKvJ,gBAAKnD,UAAU,kBAAiB,UAC5B,mBAAQyB,KAAK,SAASpB,MAAM,yQAAwQ,+BAG5S,gBAAKL,UAAU,sCAAqC,UAChD,gBAAKA,UAAU,SAAQ,UACnB,SAAC,EAAyB,iBAQ1D,E,qDC/gBM2G,EAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,gBAAiB,OACjBC,OAAQ,SAGhBC,IAAAA,cAAoB,SAiKpB,MA/JA,SAA0B1G,GAAQ,IAAD,0CAGzBe,EAAa,0BAGjB,GAA8BxC,EAAAA,EAAAA,YAAU,eAAjCoI,EAAO,KAAEC,EAAU,KAC1B,GAA4BrI,EAAAA,EAAAA,UAAS,IAAG,eAAjCsI,EAAM,KAAEC,EAAS,KACxB,GAAiCvI,EAAAA,EAAAA,WAAS,GAAM,eAAzCwI,EAAW,KAAEC,EAAS,KAC7B,GAAkCzI,EAAAA,EAAAA,YAAU,eAArC0I,EAAS,KAAEC,EAAY,KAOxBC,EAAc,SAACC,GACjBN,EAAUM,GANUJ,GAAU,EAQlC,EAEMrE,EAAgB,CAClB0E,MAAO,GACPC,QAAc,OAALtH,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOd,YAAI,WAAN,EAAL,EAAaoI,QACtBC,WAAY,IAGV9E,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAeA,EACfS,SAAU,SAAC7C,GACPvB,QAAQC,IAAI,SAAUsB,GACtBqG,EAAWrG,GACXP,EAAMwH,kBAAkBxH,EAAMyH,MAAO,CAAEJ,MAAOJ,EAAWK,QAAS/G,EAAO+G,QAASC,WAAYhH,EAAOgH,YACzG,IAcEG,EAAa,SAACC,GAChBlF,EAAOiB,cAAc,QAASiE,GAC9B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACfhB,EAAUc,EAAOG,OACrB,EACAH,EAAOI,cAAcL,GAErB3I,QAAQC,IAAI,gBAAiB4H,EACjC,EAIA,OAFA7H,QAAQC,IAAI,MAAO4H,GACnB7H,QAAQC,IAAI,OAAQ0H,IAEhB,4BACI,iBAAMvD,SAAUX,EAAOuC,aACnBC,SA3BW,SAACC,GACpB,IAAIC,EAAOD,EAAEE,OAAOD,KAEhBwC,GADQzC,EAAEE,OAAOC,MACVH,EAAEE,OAAO6C,MAAM,IAE1Bf,EAAaS,GACb3I,QAAQC,IAAI,aAAcgI,GAEhB,SAAR9B,GAAmBuC,EAAWC,EACpC,EAmBYO,QAAQ,sBAAqB,UAE7B,iBAAKxI,MAAM,wDAAuD,WAC9D,gBAAKL,UAAU,OAAM,UACjB,gBAAKA,UAAU,GAAE,UAIb,iBAAMA,UAAS,UAAK0B,GAAa,SAAQ,OAALf,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOd,YAAI,WAAN,EAAL,EAAaiJ,qBAIzD,gBAAK9I,UAAU,OAAM,UACjB,gBAAKA,UAAU,yDAAwD,SAC1C,OAAjB,OAAPsH,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,WAAP,EAAP,EAAgBlC,YAAwCiD,IAAjB,OAAPzB,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,WAAP,EAAP,EAAgBlC,OAA6C,KAAjB,OAAPwB,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,WAAP,EAAP,EAAgBlC,OAAa,gBAAKpF,IAAI,0DAA0DsI,IAAI,gBAAgBhJ,UAAS,UAAK0B,EAAU,WAC9M,8BAC+C,QAAnC,OAAP4F,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,QAA4D,QAAnC,OAAP5B,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,QAA4D,SAAnC,OAAP5B,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,QAA6D,QAAnC,OAAP5B,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,QAExL,iBAAKC,QAAS,kBAAMrB,EAAYN,EAAO,EAAC,UACO,QAAnC,OAAPF,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,SAAkB,gBAAKxI,IAAI,0DAA0DsI,IAAI,gBAAgBhJ,UAAS,UAAK0B,EAAU,UACxH,QAAnC,OAAP4F,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,SAAkB,gBAAKxI,IAAI,0DAA0DsI,IAAI,gBAAgBhJ,UAAS,UAAK0B,EAAU,UACxH,SAAnC,OAAP4F,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,SAAmB,gBAAKxI,IAAI,0DAA0DsI,IAAI,gBAAgBhJ,UAAS,UAAK0B,EAAU,UACzH,QAAnC,OAAP4F,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASU,aAAK,OAAM,QAAN,EAAd,EAAgBlC,YAAI,WAAb,EAAP,EAAsBmD,MAAM,KAAKC,SAAkB,gBAAKxI,IAAI,0DAA0DsI,IAAI,gBAAgBhJ,UAAS,UAAK0B,EAAU,cAGvK,+BACI,SAAC,EAAA0H,QAAO,CAACpJ,UAAU,iCAAiC4G,QAAQ,uCAAsC,UAC9F,0BACI,gBAAKlG,IAAI,0DAA0DV,UAAS,UAAK0B,EAAU,+BAU3H,gBAAK1B,UAAU,OAAM,UACjB,gBAAKA,UAAU,yDAAwD,UACnE,gBAAKA,UAAU,8CAA6C,UACxD,kBAAOyB,KAAK,OAAO4H,OAAO,0BAA0BvD,KAAK,QAAQ9F,UAAU,sSAAsSsJ,iBAAe,EAAC1D,SAAUxC,EAAOsD,sBAM9Z,gBAAK1G,UAAU,OAAM,UACjB,gBAAKA,UAAU,yDAAwD,UACnE,gBAAKA,UAAU,8CAA6C,SACrC,OAAX,OAAPsH,QAAO,IAAPA,OAAO,EAAPA,EAASU,aAAmCe,IAAX,OAAPzB,QAAO,IAAPA,OAAO,EAAPA,EAASU,QAAwC,KAAX,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASU,QAC/D,mBAASvG,KAAK,SAASzB,UAAU,iRAAgR,UAC7S,iBAAMA,UAAU,UAAS,uBAE7B,iCACI,cAAGA,UAAU,iDAAgD,2BAC7D,mBAASyB,KAAK,SAASzB,UAAU,iRAAgR,UAC7S,iBAAMA,UAAU,UAAS,wCAYzD,SAAC,IAAK,CACFuJ,OAAQ7B,EACR8B,YA1HW,WAAQ,EA2HnBC,eA5HO,WAAH,OAAS9B,GAAU,EAAM,EA6H7B+B,MAAO/C,EACPgD,aAAa,gBAAe,UAG5B,gBAAKtJ,MAAM,6DAA6DqJ,MAAO,CAAE,MAAS,OAAQ,OAAU,QAAS,UACjH,mBAAQ1J,UAAU,gBAAgBU,IAAK8G,EAAQoC,YAAY,IAAG,UAE1D,gBAAK5J,UAAU,GAAGU,IAAK8G,YAa/C,EClEA,MAxGA,SAAyB7G,GAAQ,IAAD,IAE9B,EAA8E,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOO,OAAxEC,EAAY,EAAZA,aAA0BE,GAAF,EAAVD,WAA8B,EAAlBC,oBAA8BI,GAAF,EAARF,SAAc,EAAJE,MACxDoI,GAA6B5K,EAAAA,EAAAA,KAA7B4K,yBACR,GAAoC3K,EAAAA,EAAAA,UAAS,IAAG,eAAzC4K,EAAU,KAAEC,EAAa,KAChC,GAA8B7K,EAAAA,EAAAA,YAAU,eAAjC8K,EAAO,KAAEC,EAAU,KAC1B,GAAwC/K,EAAAA,EAAAA,YAAU,eAA3CgL,EAAY,KAAEC,EAAe,KACpC,GAAkCjL,EAAAA,EAAAA,WAAS,GAAM,eAE3CkL,GAFU,KAAc,KAEP,SAACC,EAAKC,GAG3B,GAFA3K,QAAQC,IAAI,wBAAyBkK,QAEbf,IAApBe,EAAWO,GAGb,OAFA1K,QAAQC,IAAI,8BACZkK,EAAWO,GAAOC,GAGpBP,EAAc,GAAD,eAAKD,GAAU,CAAEQ,IAChC,GACA3K,QAAQC,IAAI,eAAgBkK,IAQ5BzK,EAAAA,EAAAA,YAAU,WACRkL,GACF,GAAG,IACH,IAAMA,EAAkB,WAItBhL,EAAAA,GAAAA,KAAW,GAAD,OAAIsK,GAHM,CAClB,GAEqDrK,EAAAA,EAAAA,MACpDC,MAAK,SAAUC,GACdC,QAAQC,IAAI,yBAA0BF,EAASG,MACnC,SAAR4B,EACF0I,EAAgBzK,EAASG,MAGzBoK,EAAWvK,EAASG,KAExB,IACCC,OAAM,SAAUC,GACfJ,QAAQC,IAAI,eAAgBG,EAC9B,GACJ,EAGA,OADAJ,QAAQC,IAAI,gCAAwC,OAAPoK,QAAO,IAAPA,OAAO,EAAPA,EAASQ,uBAEpD,+BAGE,gBAAKxK,UAAU,8BAA6B,UAC1C,iBAAKA,UAAU,sFAAqF,WAClG,iBAAKA,UAAU,wDAAuD,WACpE,iBAAKA,UAAU,MAAK,WAClB,iBAAKK,MAAM,oEAAmE,WAC5E,0BACE,eAAIL,UAAU,kEAAiE,yBAEjF,0BACE,eAAIA,UAAU,iEAAgE,wBAEhF,0BACE,eAAIA,UAAU,iEAAgE,uBAEhF,0BACE,eAAIA,UAAU,iEAAgE,0BAGlF,iBAAKA,UAAU,OAAM,UACX,OAAPgK,QAAO,IAAPA,GAA+B,QAAxB,EAAPA,EAASS,8BAAsB,WAAxB,EAAP,EAAiClK,KAAI,SAACiG,EAAOkE,GAAK,OACjD,SAAC,EAAgB,CAAC7K,KAAM2G,EAAO2B,kBAAmBiC,EAAgBhC,MAAOsC,GAAS,IAEvE,OAAZR,QAAY,IAAZA,GAAoC,QAAxB,EAAZA,EAAcO,8BAAsB,WAAxB,EAAZ,EAAsClK,KAAI,SAACiG,EAAOkE,GAAK,OACtD,SAAC,EAAgB,CAAC7K,KAAM2G,EAAO2B,kBAAmBiC,EAAgBhC,MAAOsC,GAAS,WAIxF,iBAAK1K,UAAU,+BAA8B,WAC3C,gBAAKA,UAAU,qBAAoB,UACjC,mBAAQyB,KAAK,SAASpB,MAAM,+QAA+Q8I,QAAS,kBAAMhI,EAAa,EAAE,EAAC,qBAE5U,gBAAKnB,UAAU,aAAY,UACzB,mBAAQyB,KAAK,SAASzB,UAAU,qRAAqRmJ,QAjE5S,WACrB9H,EAAmB,cAAeyI,GAClC3I,EAAa,EACf,EA8D2V,+BAGjV,gBAAKnB,UAAU,mBAAkB,UAC/B,iBAAMA,UAAU,sDAAqD,uFAGzE,gBAAKA,UAAU,aAAY,UACzB,gBAAKA,UAAU,SAAQ,UACrB,SAAC2K,EAAA,EAAmB,cAOlC,E,WCmCA,MA/IA,SAAwBhK,GAAQ,IAAD,uLAE3B,GAAwE,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOO,OAAlEC,GAAY,GAAZA,aAEJO,IAF4B,GAAVN,WAA8B,GAAlBC,mBAA4B,GAARE,SAErC,8BACbI,GAAa,uCAQjB,OAHAhC,QAAQC,IAAI,yBAA+B,OAALe,QAAK,IAALA,OAAK,EAALA,EAAOiK,kBAC7CjL,QAAQC,IAAI,mCAAyC,OAALe,QAAK,IAALA,OAAK,EAALA,EAAOiK,mBAGnD,+BACI,iBAAK5K,UAAU,8BAA6B,WACxC,iBAAKA,UAAU,6EAA4E,WACvF,iBAAKA,UAAU,qDAAoD,WAC/D,eAAIA,UAAU,sEAAqE,kCACnF,iBAAKA,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,2BAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCvH,eAAoB,OAAL5C,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCC,qBAEvI,iBAAK/K,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,iCAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC3L,oBAAyB,OAALwB,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCE,sBAE5I,iBAAKhL,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,yBAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCtH,aAAkB,OAAL7C,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCtH,kBAErI,iBAAKxD,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,wBAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCrH,YAAiB,OAAL9C,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCrH,oBAGxI,iBAAKzD,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,wBAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCpI,YAAiB,OAAL/B,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCpI,iBAEpI,iBAAK1C,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,iCAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoClI,oBAAyB,OAALjC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCvG,eAE5I,iBAAKvE,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,gCAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCjI,mBAAwB,OAALlC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCtG,cAE3I,iBAAKxE,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,4BAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoChI,eAAoB,OAALnC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCrG,gBAG3I,iBAAKzE,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,uBAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC/H,YAAiB,OAALpC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC/H,iBAEpI,iBAAK/C,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,sBAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC7H,UAAe,OAALtC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC7H,eAGlI,iBAAKjD,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,4BAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC9H,gBAAqB,OAALrC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCpG,sBAExI,iBAAK1E,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,oBAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCnI,QAAa,OAALhC,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoC5F,mBAGpI,iBAAKlF,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,sDAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,EAAvB,EAAyBE,iBAAS,WAA7B,EAAL,EAAoCpH,aAAkB,OAAL/C,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOiK,wBAAgB,OAAW,QAAX,GAAvB,EAAyBE,iBAAS,YAA7B,EAAL,GAAoCnG,4BAErI,iBAAK3E,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,yDAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoCnH,gBAAqB,OAALhD,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoClG,+BAExI,iBAAK5E,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,uDAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoClH,aAAkB,OAALjD,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoCjG,+BAGzI,iBAAK7E,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,uDAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoCjH,cAAmB,OAALlD,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoChG,iCAChI,iBAAK9E,UAAU,GAAE,WACnB,cAAGA,UAAS,UAAK0B,IAAa,8DAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoChH,mBAAwB,OAALnD,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoC/F,mCAE3I,iBAAK/E,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,6BAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoC5H,gBAAqB,OAALvC,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoC9F,oBAG5I,gBAAKhF,UAAU,2DAA0D,UACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK0B,IAAa,6BAC9B,iBAAM1B,UAAS,UAAK2B,IAAa,UAAEkJ,EAAAA,EAAAA,KAAc,OAALlK,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoC3H,gBAAqB,OAALxC,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAW,QAAX,GAAvB,GAAyBE,iBAAS,YAA7B,EAAL,GAAoCG,+BAMhJ,iBAAKjL,UAAU,qDAAoD,WAC/D,eAAIA,UAAU,uEAAsE,iCAEpF,gBAAKA,UAAU,2DAA0D,SAC/D,OAALW,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOiK,wBAAgB,QAAa,QAAb,GAAvB,GAAyBM,mBAAW,YAA/B,EAAL,GAAsC3K,KAAI,SAACV,EAAM6K,GAAK,aACnD,gBAAK1K,UAAU,GAAE,UACb,iCACI,eAAGA,UAAS,UAAK0B,IAAa,UAAM,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAMoI,QAAO,gBAC7C,iBAAKjI,UAAU,aAAY,WACvB,iBAAMA,UAAS,UAAK2B,GAAU,WAAU,SAAM,OAAJ9B,QAAI,IAAJA,GAAW,QAAP,EAAJA,EAAMmI,aAAK,WAAP,EAAJ,EAAalC,QACvD,iBAAM9F,UAAS,2BAA6B,UAAC,gBAAKU,IAAI,0DAA0DsI,IAAI,gBAAgBhJ,UAAS,kBAGnJ,aAOtB,iBAAKA,UAAU,+BAA8B,WACzC,gBAAKA,UAAU,qBAAoB,UAC/B,mBAAQyB,KAAK,SAASpB,MAAM,+QAA+Q8I,QAAS,kBAAMhI,GAAa,EAAE,EAAC,qBAE9U,gBAAKnB,UAAU,aAAY,UACvB,mBAAQyB,KAAK,SAASpB,MAAM,qRAAqR8I,QAhIlT,WACfxI,EAAMwK,WACV,EA8HyV,6BAM7V,E,sBCiGA,MApOA,WAEI,OAAuCC,EAAAA,EAAAA,MAA/BnH,EAAK,EAALA,MAAOoH,EAAa,EAAbA,cAAe5J,EAAI,EAAJA,KAE9B9B,QAAQC,IAAI,iBAAkBqE,GAC9BtE,QAAQC,IAAI,0BAA2ByL,GACvC1L,QAAQC,IAAI,gBAAiB6B,GAC7B,OAAkCvC,EAAAA,EAAAA,UAAS,GAAE,eAAtCoM,EAAS,KAAEnK,EAAY,KAC9B,GAAsCjC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA3CqM,EAAW,KAAEC,EAAc,KAClC,GAA4CtM,EAAAA,EAAAA,YAAU,eAA/CuM,EAAc,KAAEC,EAAiB,KACxC,GAAoCxM,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAzCyM,EAAU,KAAEC,EAAa,KAChC,GAAwB1M,EAAAA,EAAAA,WAAS,GAAM,eAA1B2M,GAAF,KAAS,MACpB,GAAoE3M,EAAAA,EAAAA,YAAU,eAAvEoC,EAA0B,KAAEwK,EAA6B,KAChE,GAA8C5M,EAAAA,EAAAA,YAAU,eAAhC6M,GAAF,KAAoB,MAC1C,GAAkC7M,EAAAA,EAAAA,WAAS,GAAM,eAA1CiD,EAAS,KAAEC,EAAY,KAC9B,GAAkClD,EAAAA,EAAAA,WAAS,GAAM,eAA1CmD,EAAS,KAAEC,GAAY,KAO9B,IAA6GrD,EAAAA,EAAAA,KAArG+M,GAA2B,GAA3BA,4BAA6BC,GAAyB,GAAzBA,0BAA2BC,GAAwC,GAAxCA,yCAG1DC,GAAS,SAACC,EAAW3K,GACvB4K,EAAAA,GAAAA,UACY,WAAR5K,GACA4K,EAAAA,GAAAA,QAAcD,GAEN,SAAR3K,GACA4K,EAAAA,GAAAA,MAAYD,EAEpB,EAgBAzM,QAAQC,IAAI,yBAA0B2L,GACtC5L,QAAQC,IAAI,iCAA6C,OAAX2L,QAAW,IAAXA,OAAW,EAAXA,EAAae,sBAG3D,IAKMC,GAA4B,WAE9B,IAAIxE,EACAyE,EACoB,sCA0BH,uCA7BrBpK,GAAa,GAGD,YAARX,KACAsG,EAAMiE,GACNQ,EAAc,CACVvI,MAAOA,EACPwI,OAAmB,OAAXlB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBnI,KAChC+J,YAAwB,OAAXnB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBvH,YACrCoJ,YAAwB,OAAXpB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB3L,iBACrCyN,gBAA4B,OAAXrB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBpI,SACzC8B,MAAkB,OAAX+G,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBjI,gBAC/B0B,OAAmB,OAAXgH,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBlI,iBAChCiK,YAAwB,OAAXtB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBhI,YACrCU,UAAsB,OAAX+H,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBtH,UACnCC,SAAqB,OAAX8H,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBrH,SAClCuB,SAAqB,OAAXuG,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB5H,aAClCC,aAAyB,OAAXoI,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB3H,aACtC2J,eAA2B,OAAXvB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB7H,OACxCD,aAAyB,OAAXuI,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB9H,aACtC+J,gBAA4B,OAAXxB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB/H,SACzCiK,kBAA8B,OAAXzB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBpH,UAC3CuJ,qBAAiC,OAAX1B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBnH,aAC9CuJ,kBAA8B,OAAX3B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBlH,UAC3CuJ,wBAAoC,OAAX5B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBhH,gBACjDsJ,sBAAkC,OAAX7B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBjH,WAC/CwJ,UAAsB,OAAX9B,QAAW,IAAXA,OAAW,EAAXA,EAAaL,cAGpB,SAARzJ,IACAsG,EAAMkE,GACNO,EAAc,CACVnB,cAAeA,EACfpH,MAAOA,EACPwI,OAAmB,OAAXlB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBnI,KAChC+J,YAAwB,OAAXnB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBvH,YACrCoJ,YAAwB,OAAXpB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB3L,iBACrCyN,gBAA4B,OAAXrB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBpI,SACzC8B,MAAkB,OAAX+G,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBjI,gBAC/B0B,OAAmB,OAAXgH,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBlI,iBAChCiK,YAAwB,OAAXtB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBhI,YACrCU,UAAsB,OAAX+H,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBtH,UACnCC,SAAqB,OAAX8H,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBrH,SAClCuB,SAAqB,OAAXuG,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB5H,aAClCC,aAAyB,OAAXoI,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB3H,aACtC2J,eAA2B,OAAXvB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB7H,OACxCD,aAAyB,OAAXuI,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB9H,aACtC+J,gBAA4B,OAAXxB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwB/H,SACzCiK,kBAA8B,OAAXzB,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBpH,UAC3CuJ,qBAAiC,OAAX1B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBnH,aAC9CuJ,kBAA8B,OAAX3B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBlH,UAC3CuJ,wBAAoC,OAAX5B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBhH,gBACjDsJ,sBAAkC,OAAX7B,QAAW,IAAXA,GAAsB,QAAX,EAAXA,EAAaT,iBAAS,WAAX,EAAX,EAAwBjH,WAC/CwJ,UAAsB,OAAX9B,QAAW,IAAXA,OAAW,EAAXA,EAAaL,cAKhCvL,QAAQC,IAAI,kBAAmB4M,GAC/BjN,EAAAA,GAAAA,KAAW,GAAD,OAAIwI,GAAOyE,GAAahN,EAAAA,EAAAA,MAC7BC,MAAK,SAAUC,GACZC,QAAQC,IAAI,gCAAiCF,EAASG,KAAKA,MAC3D6L,EAAkBhM,EAASG,KAAKA,MAChCuC,GAAa,GACb+J,GAAO,yBAA0B,UACrC,IACCrM,OAAM,SAAUC,GACbJ,QAAQC,IAAI,eAAgBG,GAC5BqC,GAAa,GACb+J,GAAO,mBAAoB,QAC/B,GACR,EAGMjL,GAAS,CACXC,aAAcA,EACdC,WArHe,SAACkM,GAChBzB,EAAQyB,EACZ,EAoHIjM,mBArGuB,SAACgJ,EAAKC,EAAUrI,GACvCtC,QAAQC,IAAI,mBAAoB2L,GAChC5L,QAAQC,IAAI,gCAAiCqC,GAC7CuJ,GAAe,kBAAKD,GAAW,cAAGlB,EAAMC,KAE7B,aAAPD,GACA1K,QAAQC,IAAI,yBAA0ByK,EAAK,WAAYC,EAAU,aAAcrI,GAC/E2J,GAAc,kBAAKD,GAAU,cAAGtB,EAAMpI,OAGtCtC,QAAQC,IAAI,yBAA0ByK,EAAK,MAAOC,EAAU,aAAcrI,GAC1E2J,GAAc,kBAAKD,GAAU,cAAGtB,EAAMC,KAE9C,EAyFI/I,SAAU4K,GACV3K,GAAIyC,EACJxC,KAAMA,EACNH,2BAA4BA,IAEhCjC,EAAAA,EAAAA,YAAU,WACN0M,EAAmBtK,GACP,SAARA,GACA8L,IAER,GAAG,IACH,IAAMA,GAA0B,WAC5BjL,IAAa,GACbF,GAAa,GACb,IAAIoK,EAAc,CACdnB,cAAeA,GAGnB1L,QAAQC,IAAI,uBAAwB4M,GACpCjN,EAAAA,GAAAA,KAAW,GAAD,OAAI2M,IAA4CM,GAAahN,EAAAA,EAAAA,MAClEC,MAAK,SAAUC,GACZC,QAAQC,IAAI,wDAAyDF,EAASG,KAAKA,MACnFiM,EAA8BpM,EAASG,KAAKA,MAC5CuC,GAAa,EACjB,IACCtC,OAAM,SAAUC,GACbJ,QAAQC,IAAI,6BAA8BG,GAC1CqC,GAAa,EACjB,GACR,EAKA,OAHAzC,QAAQC,IAAI,gCAAiC0B,GAE7C3B,QAAQC,IAAI,kBAAmB6L,GACD,IAAZ,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgB+B,SAEZ,+BACI,SAACC,EAAA,EAAkB,CAACC,mBAAoBjC,MAIhDtJ,GAEI,iCACI,SAACwL,EAAA,EAAW,KACZ,gBAAK3N,UAAU,oBAIvBqC,GAEI,SAAC+C,EAAA,EAAW,WACR,SAACC,EAAA,EAAe,CAACC,MAAM,iBAAiBC,KAAK,yDAAyDC,WAAW,iBAAiBC,UAAU,gCAMpJ,iCAEI,SAAC,KAAc,CAACmI,SAAS,YACrBC,UAAW,OACf,iBAAK7N,UAAU,uDAAsD,WACjE,iBAAKA,UAAU,uGAAsG,WACjH,iBAAKA,UAAU,GAAE,WACb,gBAAKA,UAAU,iBAAgB,UAC3B,eAAIA,UAAU,sDAAqD,sCAEvE,eAAIA,UAAU,iDAIlB,0BACI,iBAAKA,UAAU,iCAAgC,WAC3C,kBAAMA,UAAU,0FAAyF,qBAAQ,mBAAQA,UAAU,2BAA0B,SAAE,EAAIsL,IAC1J,mBACT,gBAAK5K,IAAI,0DAA0DV,UAAU,qDAIzF,gBAAKA,UAAS,UAAkB,GAAbsL,EAAiB,gBAAkB,mBAAkB,mBAAkB,UAAC,SAAC,EAAa,CAACpK,OAAQA,QAGlH,gBAAKlB,UAAS,UAAkB,GAAbsL,EAAiB,gBAAkB,mBAAkB,oBAAmB,UAAC,SAAC,EAAe,CAACpK,OAAQA,QACrH,gBAAKlB,UAAS,UAAkB,GAAbsL,EAAiB,gBAAkB,mBAAkB,oBAAmB,UAAC,SAAC,EAAc,CAACpK,OAAQA,GAAQ0J,iBAAkBe,EAAYJ,YAAaA,EAAaJ,UAxKrK,WACvBxL,QAAQC,IAAI,gCAAiC2L,GAC7CgB,IACJ,WA0KJ,C","sources":["Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingInformationScreen.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingForm1.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingDocTable.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingFormDoc.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingReview.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingIndex.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\n\r\nfunction HoardingInformationScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    const { getHoardingCategory } = AdvertisementApiList()\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        // showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                {hoardingCategory?.map((data) => (\r\n                    <div className={`${divStyle}flex mt-3`}>\r\n                        <span className={`${tittleStyle} flex-1 `}>{data?.subtype}</span>\r\n\r\n                        <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                    </div>\r\n                ))}\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingInformationScreen","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingForm1\r\n//    DESCRIPTION - HoardingForm1 Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport { allowFloatInput, allowNumberInput, getCurrentDate } from '../../../FunctionComponent/ValidationFunction';\r\nimport HoardingInformationScreen from './HoardingInformationScreen';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\n\r\nfunction HoardingForm1(props) {\r\n\r\n    const { api_getAdvertMasterData, api_getWardList, api_getDistrictList, getHoardingCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, id, existingApplicationDetails, type } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const [masterData, setmasterData] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [districtList, setdistrictList] = useState()\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        hoardingCategory: yup.string().required('This field is Required'),\r\n        location: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('This field is Required'),\r\n        // latitude: yup.string().required('This field is Required'),\r\n        zone: yup.string().required('This field is Required'),\r\n        lengthOfHoarding: yup.string().required('This field is Required'),\r\n        widthOfHoarding: yup.string().required('This field is Required'),\r\n        areaOfBoard: yup.string().required('This field is Required'),\r\n        landmark: yup.string().required('This field is Required'),\r\n        propertyType: yup.string().required('This field is Required'),\r\n        facing: yup.string().required('This field is Required'),\r\n        materialType: yup.string().required('This field is Required'),\r\n        illumination: yup.string().required('This field is Required'),\r\n        // ownerName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        // ownerAddress: yup.string().required('This field is Required'),\r\n        // ownerCity: yup.string().required('This field is Required'),\r\n        // ownerPhone: yup.number().required('Enter mobile no.'),\r\n        // ownerWhatsappNo: yup.number().required('Enter mobile no.'),\r\n\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        lisenseYear: '',\r\n        hoardingCategory: '',\r\n        location: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        lengthOfHoarding: '',\r\n        widthOfHoarding: '',\r\n        areaOfBoard: '',\r\n        landmark: '',\r\n        propertyType: '',\r\n        ownerName: '',\r\n        ownerAddress: '',\r\n        ownerCity: '',\r\n        ownerPhone: '',\r\n        ownerWhatsappNo: '',\r\n        facing: '',\r\n        materialType: '',\r\n        illumination: '',\r\n        zone: '',\r\n\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            console.log(\"hoarding1...1\", values, reviewIdName)\r\n            // props.collectFormDataFun('hoarding1', values, reviewIdName)\r\n            collectFormDataFun('hoarding1', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getMasterDataFun(value) }\r\n        // { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n        { name == 'ownerPhone' && formik.setFieldValue(\"ownerPhone\", allowNumberInput(value, formik.values.ownerPhone, 10)) }\r\n        { name == 'ownerWhatsappNo' && formik.setFieldValue(\"ownerWhatsappNo\", allowNumberInput(value, formik.values.ownerWhatsappNo, 12)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n\r\n    }\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    const getMasterDataFun = (ulbId) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            // // ulbId: ulbId,\r\n            ulbId: 1,\r\n        }\r\n        axios.post(`${api_getAdvertMasterData}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for hoarding', response)\r\n                setmasterData(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    useEffect(() => {\r\n        getWardListFun()\r\n    }, [])\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ward list', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('hoardingCategory', existingApplicationDetails?.typology_id)\r\n        formik.setFieldValue('location', existingApplicationDetails?.location)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('lengthOfHoarding', existingApplicationDetails?.length)\r\n        formik.setFieldValue('widthOfHoarding', existingApplicationDetails?.width)\r\n        formik.setFieldValue('areaOfBoard', existingApplicationDetails?.area)\r\n        formik.setFieldValue('landmark', existingApplicationDetails?.landmark)\r\n        formik.setFieldValue('propertyType', existingApplicationDetails?.property_type)\r\n        formik.setFieldValue('ownerName', existingApplicationDetails?.property_owner_name)\r\n        formik.setFieldValue('ownerAddress', existingApplicationDetails?.property_owner_address)\r\n        formik.setFieldValue('ownerCity', existingApplicationDetails?.property_owner_city)\r\n        formik.setFieldValue('ownerPhone', existingApplicationDetails?.property_owner_mobile_no)\r\n        formik.setFieldValue('ownerWhatsappNo', existingApplicationDetails?.property_owner_whatsapp_no)\r\n        formik.setFieldValue('facing', existingApplicationDetails?.facing)\r\n        formik.setFieldValue('materialType', existingApplicationDetails?.material)\r\n        formik.setFieldValue('illumination', existingApplicationDetails?.illumination_id)\r\n        formik.setFieldValue('zone', existingApplicationDetails?.zone_id)\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\"existing application detail\", existingApplicationDetails)\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"ward master data...1\", wardList)\r\n    console.log(\"district list\", districtList?.Jharkhand)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 '>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto '>\r\n                        <div className='col-span-8'>\r\n                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto pb-8 p-2 mt-3'>\r\n                                {/* DETAILS */}\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}> License Year <span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('lisenseYear')} className={`${inputStyle} bg-white`} >\r\n                                                <option value=''>select </option>\r\n                                                <option value={118}>2022-23 </option>\r\n                                                <option value={119}>2023-24 </option>\r\n\r\n                                            </select>\r\n                                            {/* <input type=\"text\" name='lisenseYear' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lisenseYear}\r\n                                            /> */}\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lisenseYear && formik.errors.lisenseYear ? formik.errors.lisenseYear : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}>Hoarding Category<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('hoardingCategory')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                {hoardingCategory?.map((items) => (\r\n                                                    <option value={items?.id}>{items?.subtype}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hoardingCategory && formik.errors.hoardingCategory ? formik.errors.hoardingCategory : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Location<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='location' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.location}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.location && formik.errors.location ? formik.errors.location : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Longitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.longitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.latitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Length of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='lengthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lengthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lengthOfHoarding && formik.errors.lengthOfHoarding ? formik.errors.lengthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Width of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='widthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.widthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.widthOfHoarding && formik.errors.widthOfHoarding ? formik.errors.widthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Area of Board(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='areaOfBoard' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.areaOfBoard}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.areaOfBoard && formik.errors.areaOfBoard ? formik.errors.areaOfBoard : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Landmark<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='landmark' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.landmark}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landmark && formik.errors.landmark ? formik.errors.landmark : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Facing<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='facing' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.facing}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='north'>North</option>\r\n                                                <option value='south'>South</option>\r\n                                                <option value='east'>East</option>\r\n                                                <option value='west'>West</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.facing && formik.errors.facing ? formik.errors.facing : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Property Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='propertyType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.propertyType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='public'>Public</option>\r\n                                                <option value='private'>Private</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.propertyType && formik.errors.propertyType ? formik.errors.propertyType : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Zone<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n\r\n                                            <select {...formik.getFieldProps('zone')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                <option value={1}>Zone A</option>\r\n                                                <option value={2}>Zone B</option>\r\n                                                <option value={3}>Zone C</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.zone && formik.errors.zone ? formik.errors.zone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerName' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerName}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerName && formik.errors.ownerName ? formik.errors.ownerName : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerAddress' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerAddress}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerAddress && formik.errors.ownerAddress ? formik.errors.ownerAddress : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner City(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerCity' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerCity}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerCity && formik.errors.ownerCity ? formik.errors.ownerCity : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerPhone' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerPhone}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerPhone && formik.errors.ownerPhone ? formik.errors.ownerPhone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerWhatsappNo' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerWhatsappNo}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerWhatsappNo && formik.errors.ownerWhatsappNo ? formik.errors.ownerWhatsappNo : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Material Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='materialType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.materialType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='metal'>Metal</option>\r\n                                                <option value='wood'>Wood</option>\r\n                                                <option value='others'>Others</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.materialType && formik.errors.materialType ? formik.errors.materialType : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Illumination<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='illumination' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.illumination}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='0'>No</option>\r\n                                                <option value='1'>Yes</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.illumination && formik.errors.illumination ? formik.errors.illumination : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='float-right p-2'>\r\n                                <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-span-4 hidden lg:block md:block'>\r\n                            <div className='-mt-14'>\r\n                                <HoardingInformationScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingForm1\r\n","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingDocTable\r\n//    DESCRIPTION - HoardingDocTable Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: '',\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >{props?.data?.document_name}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default HoardingDocTable","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingFormDoc\r\n//    DESCRIPTION - HoardingFormDoc Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../../DocumentUploadSteps';\r\nimport HoardingDocTable from './HoardingDocTable';\r\n\r\n\r\nfunction HoardingFormDoc(props) {\r\n\r\n  const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n  const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n  const [collectDoc, setcollectDoc] = useState([]);\r\n  const [docList, setdocList] = useState()\r\n  const [renewDocList, setrenewDocList] = useState()\r\n  const [isLoading, setisLoading] = useState(false);\r\n\r\n  const collectAllData = (key, formData) => {\r\n    console.log(\"prev data in document\", collectDoc);\r\n    // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n    if (collectDoc[key] !== undefined) {\r\n      console.log('inside index match...')\r\n      collectDoc[key] = formData\r\n      return\r\n    }\r\n    setcollectDoc([...collectDoc, formData]);\r\n  };\r\n  console.log(\"all data doc\", collectDoc)\r\n\r\n  const handleDocument = () => {\r\n    collectFormDataFun('hoardingDoc', collectDoc)\r\n    setFormIndex(3)\r\n  }\r\n\r\n  ///////////{*** GET DOCUMENT LIST***}/////////\r\n  useEffect(() => {\r\n    getDocumentList()\r\n  }, [])\r\n  const getDocumentList = () => {\r\n    const requestBody = {\r\n      // deviceId: \"agency\",\r\n    }\r\n    axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('hoarding document list', response.data)\r\n        if (type == 'renew') {\r\n          setrenewDocList(response.data)\r\n        }\r\n        else {\r\n          setdocList(response.data)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n\r\n  console.log(\"document list for hoarding...\", docList?.AgencyHordingLicense)\r\n  return (\r\n    <>\r\n\r\n      {/* upload document */}\r\n      <div className='absolute w-full top-0 ml-4 '>\r\n        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2'>\r\n          <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n            <div className=\"p-1\">\r\n              <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                <div>\r\n                  <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                </div>\r\n              </div>\r\n              <div className='mt-2'>\r\n                {docList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n                {renewDocList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3\">\r\n              <div className='md:pl-0 col-span-6'>\r\n                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n              </div>\r\n              <div className='col-span-6'>\r\n                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n              <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-span-4'>\r\n            <div className='-mt-20'>\r\n              <DocumentUploadSteps />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HoardingFormDoc","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingReview\r\n//    DESCRIPTION - HoardingReview Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React from 'react'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction HoardingReview(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.reviewIdNameData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lisenseYear || props?.reviewIdNameData?.hoarding1?.license_year)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hoarding Category </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.hoardingCategory || props?.reviewIdNameData?.hoarding1?.typology_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.longitude || props?.reviewIdNameData?.hoarding1?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.latitude || props?.reviewIdNameData?.hoarding1?.latitude)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Location </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.location || props?.reviewIdNameData?.hoarding1?.location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Length of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lengthOfHoarding || props?.reviewIdNameData?.hoarding1?.length)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Width of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.widthOfHoarding || props?.reviewIdNameData?.hoarding1?.width)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Area of Board</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.areaOfBoard || props?.reviewIdNameData?.hoarding1?.area)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Landmark</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.landmark || props?.reviewIdNameData?.hoarding1?.landmark)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Facing </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.facing || props?.reviewIdNameData?.hoarding1?.facing)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Property Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.propertyType || props?.reviewIdNameData?.hoarding1?.property_type)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Zone </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.zone || props?.reviewIdNameData?.hoarding1?.zone_id)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerName || props?.reviewIdNameData?.hoarding1?.property_owner_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerAddress || props?.reviewIdNameData?.hoarding1?.property_owner_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner City(If property type is private) </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerCity || props?.reviewIdNameData?.hoarding1?.property_owner_city)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerPhone || props?.reviewIdNameData?.hoarding1?.property_owner_mobile_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerWhatsappNo || props?.reviewIdNameData?.hoarding1?.property_owner_whatsapp_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Material Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.materialType || props?.reviewIdNameData?.hoarding1?.material)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Illumination  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.illumination || props?.reviewIdNameData?.hoarding1?.illumination_name)}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.hoardingDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingReview","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingIndex\r\n//    DESCRIPTION - HoardingIndex Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../../AdvrtSuccessScreen'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport HoardingForm1 from './HoardingForm1'\r\nimport HoardingFormDoc from './HoardingFormDoc'\r\nimport HoardingReview from './HoardingReview'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\nfunction HoardingIndex() {\r\n\r\n    const { ulbId, applicationId, type } = useParams();\r\n\r\n    console.log(\"ulbid in param\", ulbId)\r\n    console.log(\"application id in param\", applicationId)\r\n    console.log(\"type in param\", type)\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState({})\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postHoardingApplication, api_renewHoarding_license, api_getHoardingApplicationDetailsToRenew } = AdvertisementApiList()\r\n\r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'hoarding1') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc)\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitHoardingApplication()\r\n    }\r\n\r\n    const submitHoardingApplication = () => {\r\n        setisLoading(true)\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postHoardingApplication  //new apply\r\n            requestBody = {\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewHoarding_license  //new apply\r\n            requestBody = {\r\n                applicationId: applicationId,\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n\r\n        }\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify('submitted successfully', 'success')\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify('failed to submit', 'error')\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        id: ulbId,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getHoardingApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Hoarding Registration</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            {/* You Can Get License To Advertise Your Business Name On Your Shop */}\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600'>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/1684/1684121.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm1 values={values} /></div>\r\n                {/* <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm2 values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingForm3 values={values} /></div> */}\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingFormDoc values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingReview values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingIndex"],"names":["getHoardingCategory","AdvertisementApiList","useState","hoardingCategory","sethoardingCategory","useEffect","getHoardingCategoryList","axios","ApiHeaderAdvrt","then","response","console","log","data","catch","error","className","xmlns","fill","viewBox","stroke","class","d","map","subtype","descriptions","src","props","api_getAdvertMasterData","api_getWardList","api_getDistrictList","CitizenApplyApiList","api_wardByUlb","api_getAllUlb","values","setFormIndex","showLoader","collectFormDataFun","existingApplicationDetails","toastFun","id","type","labelStyle","inputStyle","setmasterData","wardList","setwardList","districtList","setstoreUlbValue","reviewIdName","setreviewIdName","isLoading","setisLoading","erroState","seterroState","validationSchema","yup","required","location","zone","lengthOfHoarding","widthOfHoarding","areaOfBoard","landmark","propertyType","facing","materialType","illumination","formik","useFormik","initialValues","lisenseYear","longitude","latitude","ownerName","ownerAddress","ownerCity","ownerPhone","ownerWhatsappNo","onSubmit","getMasterDataFun","ulbId","setTimeout","getWardListFun","feedApplicationData","setFieldValue","typology_id","length","width","area","property_type","property_owner_name","property_owner_address","property_owner_city","property_owner_mobile_no","property_owner_whatsapp_no","material","illumination_id","zone_id","BarLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","Jharkhand","handleSubmit","onChange","e","name","target","value","selectedIndex","text","allowNumberInput","allowFloatInput","getFieldProps","touched","errors","items","placeholder","handleChange","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","imgPath","setimgPath","DocUrl","setDocUrl","modalIsOpen","setIsOpen","imageFile","setimageFile","modalAction","url","image","docCode","ownerDtlId","collectAllDataFun","mykey","handleFile","file","reader","FileReader","onloadend","result","readAsDataURL","files","encType","document_name","undefined","alt","split","pop","onClick","Tooltip","accept","webkitdirectory","isOpen","onAfterOpen","onRequestClose","style","contentLabel","frameborder","api_getSelfAdvertDocList","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","collectAllData","key","formData","getDocumentList","AgencyHordingLicense","AGENCY_HORDING_LICENSE","index","DocumentUploadSteps","reviewIdNameData","nullToNA","hoarding1","license_year","typology_name","illumination_name","hoardingDoc","submitFun","useParams","applicationId","formIndex","allFormData","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setshow","setexistingApplicationDetails","setapplicationType","api_postHoardingApplication","api_renewHoarding_license","api_getHoardingApplicationDetailsToRenew","notify","toastData","toast","selfAdvertisementDoc","submitHoardingApplication","requestBody","zoneId","licenseYear","HordingType","displayLocation","displayArea","indicateFacing","displayLandMark","propertyOwnerName","propertyOwnerAddress","propertyOwnerCity","propertyOwnerWhatsappNo","propertyOwnerMobileNo","documents","val","fetchApplicationDetails","status","AdvrtSuccessScreen","responseScreenData","BrandLoader","position","autoClose"],"sourceRoot":""}