{"version":3,"file":"static/js/7440.fdd7f74c.chunk.js","mappings":"sMACMA,EAAmB,0CACrB,WAAYC,GAAQ,IAAD,EAEgB,OAFhB,gBACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAAQ,CACnC,CAKC,OALA,8BAYD,WAC4B,IAAD,EAAzB,OAAIC,KAAKF,MAAMC,UAEN,eAAIE,UAAU,qCAAoC,SAAY,QAAZ,EAAED,KAAKH,aAAK,aAAV,EAAYK,WAGlEF,KAAKH,MAAMM,QACpB,IAAC,uCAjBD,SAAgCC,GAE9B,MAAO,CAAEL,UAAU,EACrB,KAAC,EAToB,CAASM,EAAAA,WAyBhC,W","sources":["Components/Common/CustomErrorBoundary.js"],"sourcesContent":["import React from 'react'\r\nclass CustomErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    // componentDidCatch(error, errorInfo) {\r\n    //   // You can also log the error to an error reporting service\r\n    //   logErrorToMyService(error, errorInfo);\r\n    // }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1 className='text-red-600 text-lg font-semibold'>{this.props?.errorMsg}</h1>;\r\n      }\r\n  \r\n      return this.props.children;\r\n    }\r\n  }\r\n  export default CustomErrorBoundary\r\n  "],"names":["CustomErrorBoundary","props","state","hasError","this","className","errorMsg","children","error","React"],"sourceRoot":""}