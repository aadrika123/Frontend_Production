{"version":3,"file":"static/js/5485.559c2253.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingArchivedList.jsx","Pages/AdvertisementModule/GlobalFilterSearch.jsx","Pages/AdvertisementModule/ListTableAdvert.jsx","../node_modules/react-query/es/core/utils.js","../node_modules/react-query/es/core/notifyManager.js","../node_modules/react-query/es/react/reactBatchedUpdates.js","../node_modules/react-query/es/react/setBatchUpdatesFn.js","../node_modules/react-query/es/core/logger.js","../node_modules/react-query/es/react/logger.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingArchivedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingArchivedList } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [show, setshow] = useState(false)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <div>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingArchivedList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"archived list\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">ARCHIVED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {tableStatus && tableStatus?.data != null &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingArchivedList;","import React from 'react'\r\n\r\nfunction GlobalFilterSearch({ filter, setFilter }) {\r\n  return (\r\n    <div className=\"px-1\">\r\n    Search : {' '}\r\n    <input className='border border-gray-300 px-2  bg-gray-50 shadow-lg rounded leading-5 py-1.5 ' type=\"text\" value={filter || ''} onChange={e => setFilter(e.target.value)} />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default GlobalFilterSearch","\r\nimport React, { useMemo, useState, useEffect } from 'react'\r\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table'\r\nimport { AiOutlineArrowDown } from 'react-icons/ai'\r\nimport { CSVLink } from \"react-csv\";\r\nimport { format } from 'date-fns'\r\n// import axios from 'axios'\r\nimport { AiOutlineDoubleRight, AiOutlineDoubleLeft } from 'react-icons/ai'\r\nimport GlobalFilterSearch from './GlobalFilterSearch';\r\n\r\n\r\nfunction ListTableAdvert(props) {\r\n\r\n    const [bounce, setbounce] = useState('hidden')\r\n    const columns = useMemo(() => props.columns, [])\r\n    const data = useMemo(() => props.dataList, [props.dataList])\r\n    // console.log('lll ',data.length)\r\n    useEffect(() => {\r\n        setPageSize(5)\r\n    }, [])\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        // rows,//since used pagination\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        prepareRow,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0 }\r\n    }, useGlobalFilter, useSortBy, usePagination)\r\n\r\n    const { globalFilter, pageIndex, pageSize } = state\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex mb-2 pb-2\">\r\n                <div className='flex-initial'><GlobalFilterSearch filter={globalFilter} setFilter={setGlobalFilter} /></div>\r\n                <div className='flex-initial ml-2'><button className='bg-sky-400 px-3 pr-3  shadow-lg rounded py-1 text-white hover:shadow-2xl hover:bg-green-600 text-center relative' onMouseEnter={() => setbounce('')} onMouseLeave={() => setbounce('hidden')}><CSVLink data={props.dataList}>Export</CSVLink><div className={bounce + ' absolute h-full top-3 text-sm left-0 text-center animate-bounce'}><AiOutlineArrowDown /></div></button></div>\r\n                <div className='flex-1'>{props.children}</div>\r\n\r\n            </div>\r\n            <div className=\"overflow-x-auto bg-white\">\r\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden bg-white\">\r\n                    <table {...getTableBodyProps} className=\"min-w-full leading-normal\">\r\n                        <thead className='font-bold text-left text-sm bg-violet-100 hover:bg-violet-100'>\r\n                            {\r\n                                headerGroups?.map((headerGroup) => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {\r\n                                            headerGroup.headers.map((column) => (\r\n                                                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"px-2 py-3 border-b border-gray-200 text-gray-800  text-left text-xs uppercase text-left\">{column.render('Header')}\r\n                                                    <span>{column.isSorted ? (column.isSortedDesc ? '⬆️' : '⬇️') : ''}</span></th>\r\n\r\n                                            ))\r\n                                        }\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n\r\n                        </thead>\r\n                        <tbody {...getTableBodyProps()} className=\"text-sm\">\r\n                            {/* {rows.map((row) => { */} {/**since used pagination */}\r\n                            {page?.map((row) => {\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()} className=\"bg-white shadow-md border border-slate-100 hover:bg-slate-50 \">\r\n                                        {row?.cells?.map((cell) => {\r\n                                            return <td {...cell.getCellProps()} className=\"px-2 py-2 text-sm text-left\">{cell.render('Cell')}</td>\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className='mt-3 grid grid-cols-12'>\r\n                        <div className='col-span-2 ml-2'>  <select className=\"h-10 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" value={pageSize} onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                            {[5, 10, 25, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    show {pageSize}\r\n                                </option>\r\n                            ))}\r\n\r\n                        </select></div>\r\n                        <div className='col-span-4 text-center col-start-5'>   <span >\r\n                            page {''}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{''}\r\n                        </span></div>\r\n\r\n                        <div className='col-span-4 text-right'><button className='cursor-pointer hover:bg-sky-300 p-2 hover:text-white' onClick={() => gotoPage(0)} disabled={!canPreviousPage}><AiOutlineDoubleLeft /> </button>\r\n                            <button className={(!canPreviousPage ? 'opacity-50' : 'opacity-100') + ' text-xl hover:bg-sky-300 hover:text-white'} onClick={() => previousPage()} disabled={!canPreviousPage}>⬅️</button>\r\n                            <button className={(!canNextPage ? 'opacity-50' : 'opacity-100') + ' text-xl hover:bg-sky-300 hover:text-white'} onClick={() => nextPage()} disabled={!canNextPage}>➡️</button>\r\n                            <button className='cursor-pointer hover:bg-sky-300 p-2 hover:text-white' onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>  <AiOutlineDoubleRight /></button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTableAdvert\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TYPES\n// UTILS\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nexport function replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return _extends({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return _extends({}, arg2, {\n    queryKey: arg1\n  });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nexport function parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? _extends({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nexport function mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nexport function matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nexport function hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nexport function stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nexport function getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}","import { scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    var result;\n    this.transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      this.transactions--;\n\n      if (!this.transactions) {\n        this.flush();\n      }\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      scheduleMicrotask(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import { notifyManager } from '../core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);","// TYPES\n// FUNCTIONS\nvar logger = console;\nexport function getLogger() {\n  return logger;\n}\nexport function setLogger(newLogger) {\n  logger = newLogger;\n}","export var logger = console;"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","useState","api_getHoardingArchivedList","AdvertisementApiList","applicationDetail","setapplicationDetail","tableStatus","settableStatus","applicationType","setapplicationType","applicationNo","setapplicationNo","isLoading","setisLoading","erroState","seterroState","setshow","modalIsOpen","setIsOpen","closeModal","id","useParams","console","log","useNavigate","COLUMNS","Header","Cell","row","className","index","accessor","cell","onClick","modalAction","values","applicationId","useEffect","axios","ApiHeaderAdvrt","then","res","data","status","catch","err","title","desc","buttonText","buttonUrl","src","assessmentType","columns","dataList","isOpen","onAfterOpen","onRequestClose","style","contentLabel","class","showLoader","val","filter","setFilter","type","value","onChange","e","target","bounce","setbounce","useMemo","setPageSize","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableBodyProps","getTableProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","prepareRow","pageOptions","gotoPage","pageCount","state","setGlobalFilter","globalFilter","pageSize","onMouseEnter","onMouseLeave","CSVLink","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","getCellProps","Number","length","disabled","scheduleMicrotask","callback","Promise","resolve","error","setTimeout","NotifyManager","this","queue","transactions","notifyFn","batchNotifyFn","_proto","prototype","batch","result","flush","schedule","_this","push","batchCalls","_this2","_len","arguments","args","Array","_key","apply","_this3","forEach","setNotifyFunction","fn","setBatchNotifyFunction","notifyManager","unstable_batchedUpdates","ReactDOM","logger"],"sourceRoot":""}