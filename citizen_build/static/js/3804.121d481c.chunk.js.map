{"version":3,"file":"static/js/3804.121d481c.chunk.js","mappings":"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","sources":["Pages/Water/Modals/ViewUploadedDoc.js","Pages/Water/Modals/WaterDocumentModal.js","Pages/Water/Modals/WaterDocumentModalForOwner.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - \r\n//    DESCRIPTION - \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport RazorpayPaymentScreen from \"../../../Components/RazorpayPaymentScreen\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport axios from \"axios\";\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList';\r\n// import { Document, Page, pdfjs } from 'react-pdf';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'transparent',\r\n        border: 'none',\r\n        zIndex: \"1000\",\r\n    },\r\n    overlay: { zIndex: 1000 }\r\n\r\n};\r\n\r\nconst customStyles1 = {\r\n    content: {\r\n        position: \"fixed\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        top: \"5%\",\r\n        left: \"25%\",\r\n        width: \"50%\",\r\n        height: \"95%\",\r\n        background: \"#9be7fa\",\r\n        // zindex: \"1000\",\r\n        overflowY: \"auto\"\r\n    },\r\n    overlay: { zIndex: 1000 }\r\n};\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction ViewUploadedDoc(props) {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [transData, setTransData] = useState()\r\n\r\n    const { api_rzpWaterOrderId, api_getTranNo } = WaterApiList();\r\n\r\n    useEffect(() => {\r\n        if (props.openDocviewModal > 0) setIsOpen(true);\r\n    }, [props.openDocviewModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    console.log(\"DOCUMENT URL :\", props?.documentUrl)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div style={{ 'width': '71.5vw', 'height': '90vh' }}>\r\n                    <div className=\"bg-indigo-200 shadow-2xl border border-sky-200 p-3 rounded-md z-50\" >\r\n                        <div onClick={closeModal} className=\"absolute cursor-pointer bg-green-100 hover:bg-gray-300 p-1 rounded-md\"><GrClose /> </div>\r\n                        <div className='py-2 pl-3 font-semibold text-center text-2xl text-gray-800'> Uploaded Document</div>\r\n                        <div className=\"scroll-auto\">\r\n\r\n                            {props?.documentUrl?.split('.').pop() == \"pdf\" ?\r\n                                <iframe style={{ 'width': '70vw', 'height': '50vh' }} src={props?.documentUrl} frameborder=\"0\"></iframe>\r\n                                : <div className=\"flex justify-center\">\r\n                                    < img src={props?.documentUrl} className=\"rounded-md\" alt=\"Uploaded Image\" srcset=\"\" />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* {props?.documentUrl} */}\r\n                        <div className='flex justify-center mt-5'>\r\n                            <button onClick={closeModal} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm rounded-sm shadow-xl'>Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default ViewUploadedDoc;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FiUpload } from 'react-icons/fi';\r\nimport axios from \"axios\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport WaterApiList from \"../../../Components/ApiList/WaterApiList\";\r\nimport { contextVar } from \"../../../Components/ContextVar\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaterDocumentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [docType, setDocType] = useState()\r\n    const [errorMessage, setErrorMessage] = useState()\r\n    const [docPath, setDocPath] = useState()\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n\r\n    console.log(\"Doc type is\", docType)\r\n\r\n\r\n    const { api_getDocList, api_waterUploadDoc, header } = WaterApiList();\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    const data = props?.payloadData;\r\n\r\n    useEffect(() => {\r\n        if (props.openDocumentModal > 0) setIsOpen(true);\r\n        setErrorMessage()\r\n    }, [props.openDocumentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setDocType()\r\n        setDocPath()\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const docUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        // if (props?.payloadData?.applicationId == \"\" || docPath || docType) {\r\n        //     return setErrorMessage(\"Please Select Correct File and Type\")\r\n        // }\r\n\r\n        if (docType == undefined || docType == \"\" || docPath == undefined || docPath == \"\") {\r\n            return setErrorMessage(\"Please Select Correct File and Type\")\r\n        }\r\n\r\n        let formData = new FormData();\r\n\r\n        formData.append('applicationId', props?.payloadData?.applicationId);\r\n        formData.append('document', docPath);  //doucment master id\r\n        formData.append('docCode', docType);            //Btn name\r\n        formData.append('docCategory', data?.refDocName);            //Btn name\r\n\r\n\r\n        // formData.append('docMstrId', docType);            //Btn name\r\n        // formData.append('docRefName', props?.payloadData?.docName);            //File information\r\n        // formData.append('ownerId', props.ownerId);   //ownerID\r\n\r\n\r\n        console.log(\"Complate Payload\", formData);\r\n        // return\r\n        setIsUploading(true)\r\n        axios.post(api_waterUploadDoc, formData, header)\r\n            .then((res) => {\r\n                if (res.data.status == true) {\r\n                    notify('Document Uploaded Successfully', 'success')\r\n                    console.log(\"Data Uploaded\", res)\r\n                    setIsUploading(false)\r\n                    closeModal()\r\n                    props.refetch()\r\n                } else {\r\n                    setIsUploading(false)\r\n                    notify('Failed to Upload Document', 'error')\r\n                    setErrorMessage(\"Error : Failed to upload file. Please Select Proper File.\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setIsUploading(false)\r\n                notify('Something went wrong', 'error')\r\n                setErrorMessage(\"Exception : Failed to upload file. Please Select Proper File.\")\r\n                console.log(\"Expection...\", err)\r\n            })\r\n\r\n        // setFileSelected(e.target.files[0]);\r\n    };\r\n\r\n\r\n    console.log(\" ====props?.payloadData=========\", data)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <form encType=\"multipart/form\" onSubmit={docUpload} >\r\n                    <div className=\"bg-indigo-200 shadow-2xl border border-sky-200 p-2 rounded-md\">\r\n                        <div className=\"my-2 mx-3\">\r\n                            <div onClick={closeModal} className=\"float-right cursor-pointer hover:bg-gray-300 rounded-sm p-1\"> <GrClose /></div>\r\n                            <h1 className=\"font-semibold text-gray-700\">Upload Document {props?.payloadData?.docName}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"md:inline-block min-w-full overflow-hidden hidden p-4\">\r\n                            <table className=\"min-w-full leading-normal border\">\r\n                                <thead className='bg-sky-100'>\r\n                                    <tr className='font-semibold '>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Type\r\n                                        </th>\r\n\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Upload\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Submit\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        // documentList?.filter(e => e.docName == props?.payloadData?.docName).map((e, i = 1) => (\r\n                                        // data?.map((e, i = 1) => (\r\n                                        <tr>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {1}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {data?.docName}|| {data?.refDocName}\r\n                                                    {/* {e?.isMadatory && <span className=\"text-red-500 font-semibold mx-1\">*</span>} */}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    <select onChange={(e) => setDocType(e.target.selectedOptions[0].text)} className=' outline-blue-600 border border-gray-400 w-40'>\r\n                                                        <option>Select Document</option>\r\n                                                        {\r\n                                                            data?.docVal?.map((item) => (\r\n                                                                <option value={item.id}>{item.doc_name}</option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n                                                </p>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 border-b border-gray-200 bg-white text-sm\">\r\n                                                <span className=\"relative inline-block \">\r\n                                                    <span aria-hidden=\"true\" className=\"absolute inset-0 \"></span>\r\n                                                    <span className=\"relative \">\r\n                                                        <input\r\n                                                            name=\"docPath\"\r\n                                                            type=\"file\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"contained-button-file\"\r\n                                                            onChange={(e) => setDocPath(e.target.files[0])}\r\n                                                        // onChange={() => importFile(e.docName)}\r\n                                                        />\r\n                                                        <label className='bg-blue-500 hover:bg-blue-600 hover:ring-1 hover:ring-blue-800 rounded-sm hover:rounded-md hover:shadow-2xl shadow-lg cursor-pointer flex pl-4 pr-5 py-2  text-white font-medium' htmlFor=\"contained-button-file\"><FiUpload size={16} className='mt-0 ml-0 mr-2 font-medium' />Browse File</label>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <button disabled={isUploading} type=\"submit\" className=\"border disabled:bg-green-300 disabled:text-gray-500 bg-green-600 rounded-md text-white px-4 py-2\">Submit</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                        // ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className='my-2 flex justify-center font-semibold text-red-600 relative'>\r\n                                <p className=\"absolute\">\r\n                                    {errorMessage && errorMessage}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterDocumentModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrFormClose } from \"react-icons/gr\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FiUpload } from 'react-icons/fi';\r\nimport axios from \"axios\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport WaterApiList from \"../../../Components/ApiList/WaterApiList\";\r\nimport { contextVar } from \"../../../Components/ContextVar\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaterDocumentModalForOwner(props) {\r\n    const [errorMessage, setErrorMessage] = useState()\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [docType, setDocType] = useState()\r\n    const [ownerId, setOwnerId] = useState()\r\n    const [docPath, setDocPath] = useState()\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    const { api_getDocList, api_waterUploadDoc, header } = WaterApiList();\r\n\r\n    const data = props?.payloadData;\r\n\r\n    useEffect(() => {\r\n        if (props.openDocumentModal > 0) setIsOpen(true);\r\n    }, [props.openDocumentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setDocType()\r\n        setDocPath()\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    console.log(\"Props in water doc upload\", props)\r\n\r\n\r\n    const docUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (docType == undefined || docType == \"\" || docPath == undefined || docPath == \"\") {\r\n            return setErrorMessage(\"Please Select Correct File and Type\")\r\n        }\r\n\r\n        console.log(\"Owner Doc Path\", docPath)\r\n        console.log(\"Owner ID\", ownerId)\r\n\r\n        let formData = new FormData();\r\n\r\n        formData.append('applicationId', props?.payloadData?.applicationId);\r\n        formData.append('document', docPath);  //doucment master id\r\n        formData.append('docCode', docType);            //Btn name\r\n        // formData.append('docMstrId', docType);            //Btn name\r\n        // formData.append('docRefName', props?.payloadData?.docName);            //File information\r\n        formData.append('ownerId', props?.payloadData?.ownerId);   //ownerID\r\n\r\n\r\n        console.log(\"Owner Document Complate Payload\", formData);\r\n        setIsUploading(true)\r\n        axios.post(api_waterUploadDoc, formData, header)\r\n            .then((res) => {\r\n                // console.log(\"Data Uploaded\", res)\r\n                // closeModal()\r\n                // props.refetch()\r\n                if (res.data.status == true) {\r\n                    notify('Document Uploaded Successfully', 'success')\r\n                    console.log(\"Data Uploaded\", res)\r\n                    setIsUploading(false)\r\n                    closeModal()\r\n                    props.refetch()\r\n                } else {\r\n                    setIsUploading(false)\r\n                    notify('Failed to Upload Document', 'error')\r\n                    setErrorMessage(\"Error : Failed to upload file. Please Select Proper File.\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setIsUploading(false)\r\n                notify('Something went wrong', 'error')\r\n                setErrorMessage(\"Exception : Failed to upload file. Please Select Proper File.\")\r\n                console.log(\"Expection...\", err)\r\n            })\r\n\r\n\r\n        // setFileSelected(e.target.files[0]);\r\n    };\r\n\r\n\r\n    // useEffect(() => {\r\n    //     axios.post(api_getDocList, { \"applicationId\": props?.payloadData?.applicationId }, HEADER())\r\n    //         .then((res) => {\r\n    //             console.log(\"Llist of document to upload\", res)\r\n    //             if (res.data.status == true) {\r\n    //                 // setDocumentList(res.data.data.documentsList)\r\n    //                 setOwnerDocList(res.data.data.ownersDocList)\r\n    //             }\r\n    //         })\r\n    //         .catch((err) => console.log(\"Error in Document upload list\", err))\r\n    // }, [props?.payloadData?.applicationId])\r\n\r\n\r\n    console.log(\"Paylidadd data in owner details\", data)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <form encType=\"multipart/form\" onSubmit={docUpload} >\r\n                <div className=\"bg-indigo-200 shadow-2xl border border-sky-200 p-2 rounded-md\">\r\n                        <div className=\"my-2 mx-3\">\r\n                            <div onClick={closeModal} className=\"float-right cursor-pointer hover:bg-gray-300 rounded-sm p-1\"> <GrClose /></div>\r\n                            <h1 className=\"font-semibold text-gray-700\">Upload Document {props?.payloadData?.docName}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"md:inline-block min-w-full overflow-hidden hidden p-4\">\r\n                            <table className=\"min-w-full leading-normal border\">\r\n                                <thead className='bg-sky-100'>\r\n                                    <tr className='font-semibold '>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Owner Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Type\r\n                                        </th>\r\n\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Upload\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Submit\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        // ownerDocList?.filter(e => e.docName == props?.payloadData?.docName).map((e, i = 1) => (\r\n                                        <tr>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {1}\r\n                                                </p>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {/* {e?.docName}{e?.isMadatory && <span className=\"text-red-500 font-semibold mx-1\">*</span>} */}\r\n                                                    {data?.docName}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {data?.ownerName}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    <select onChange={(e) => setDocType(e.target.selectedOptions[0].text)} className=' outline-blue-600 border border-gray-400 w-40'>\r\n                                                        <option>Select Documet</option>\r\n                                                        {\r\n                                                            data?.docVal?.map((item) => (\r\n                                                                <option value={item.id}>{item.doc_name}</option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n                                                </p>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 border-b border-gray-200 bg-white text-sm\">\r\n                                                <span className=\"relative inline-block \">\r\n                                                    <span aria-hidden=\"true\" className=\"absolute inset-0 \"></span>\r\n                                                    <span className=\"relative \">\r\n                                                        <input\r\n                                                            name=\"docPath\"\r\n                                                            type=\"file\"\r\n                                                            // accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"contained-button-file\"\r\n                                                            onChange={(e) => setDocPath(e.target.files[0])}\r\n                                                        // onChange={() => importFile(e.docName)}\r\n                                                        />\r\n                                                        <label className='bg-blue-500 hover:bg-blue-600 hover:ring-1 hover:ring-blue-800 rounded-sm hover:rounded-md hover:shadow-2xl shadow-lg cursor-pointer flex pl-4 pr-5 py-2  text-white font-medium' htmlFor=\"contained-button-file\"><FiUpload size={16} className='mt-0 ml-0 mr-2 font-medium' />Browse File</label>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <button disabled={isUploading} type=\"submit\" className=\"border disabled:bg-green-300 disabled:text-gray-500 bg-green-600 rounded-md text-white px-4 py-2\">Submit</button>\r\n                                                {/* <button type=\"submit\" className=\"border bg-green-600 rounded-md text-white px-4 py-2\">Submit</button> */}\r\n                                                {/* <button onClick={()=>setOwnerId(e?.ownerId)} type=\"submit\" className=\"border bg-green-600 rounded-md text-white px-4 py-2\">Submit</button> */}\r\n                                            </td>\r\n                                        </tr>\r\n                                        // ))\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className='my-2 flex justify-center font-semibold text-red-600 relative'>\r\n                                <p className=\"absolute\">\r\n                                    {errorMessage && errorMessage}\r\n                                </p>\r\n                            </div>\r\n\r\n                            {/* <div className='my-5 flex justify-center'>\r\n                            <div className='mx-2'><button onClick={closeModal} className='bg-red-400 hover:bg-red-500 px-5 py-2 shadow-xl rounded-md text-black text-base'>Cancel</button></div>\r\n                            <div className='mx-2'><button className='bg-green-400 hover:bg-green-500 px-5 py-2 shadow-xl rounded-md text-black text-base float-right'>Submit</button></div>\r\n                        </div> */}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterDocumentModalForOwner;\r\n"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","zIndex","overlay","Modal","props","useState","React","modalIsOpen","setIsOpen","WaterApiList","closeModal","api_rzpWaterOrderId","api_getTranNo","useEffect","openDocviewModal","console","log","documentUrl","className","isOpen","onAfterOpen","onRequestClose","style","contentLabel","onClick","split","pop","src","frameborder","alt","srcset","background","docType","setDocType","errorMessage","setErrorMessage","docPath","setDocPath","isUploading","setIsUploading","api_waterUploadDoc","api_getDocList","header","notify","useContext","contextVar","data","payloadData","openDocumentModal","encType","onSubmit","e","preventDefault","undefined","formData","FormData","append","applicationId","refDocName","axios","then","res","status","refetch","catch","err","docName","scope","onChange","target","selectedOptions","text","docVal","map","item","value","id","doc_name","name","type","display","files","htmlFor","size","disabled","ownerId","ownerName"],"sourceRoot":""}