{"version":3,"file":"static/js/3873.0c9ea62d.chunk.js","mappings":"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","sources":["Pages/PetRegistration/Form/PetPaymentModal.js","Pages/PetRegistration/Form/PetDocumentAndPayment.js","Pages/PetRegistration/Form/PetRegistrationFormIndex.js","Pages/PetRegistration/PetRegistrationIndex.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - \r\n//    DESCRIPTION - \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport RazorpayPaymentScreen from \"../../../Components/RazorpayPaymentScreen\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport axios from \"axios\";\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList';\r\nimport imgSucess from '../../Water/success.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AxiosInterceptors from \"../../../Components/GlobalData/AxiosInterceptors\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction PetPaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [paymentStatus, setPaymentStatus] = useState(false)\r\n    const [transData, setTransData] = useState()\r\n\r\n    const { api_rzpWaterOrderId, api_getTranNo } = WaterApiList();\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const paymentData = props.paymentData;\r\n    console.log(\"paymentData======\", paymentData)\r\n\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setPaymentStatus(false);\r\n    }\r\n\r\n\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        props?.refechList()\r\n        if (data.status == true) {\r\n            setPaymentStatus(true)\r\n            const payload = {\r\n                \"orderId\": data.data.razorpay_order_id,\r\n                \"paymentId\": data.data.razorpay_payment_id\r\n            }\r\n\r\n            AxiosInterceptors.post(api_getTranNo, payload, HEADER())\r\n                .then((res) => {\r\n                    console.log(\"Data after payment success by OrderId and PaymetnID\", res)\r\n                    if (res.data.status == true) {\r\n                        setTransData(res.data.data)\r\n                    }\r\n                })\r\n                .catch((err) => console.log(\"Exception/Error while fetching by OrderiD and Paymetn ID\", err))\r\n        }\r\n    }\r\n\r\n\r\n    const payNow = () => {\r\n\r\n        setPaymentStatus(true)\r\n\r\n        return\r\n        \r\n        const payload = {\r\n            \"id\": paymentData?.connectionCharges?.applicationId,\r\n            \"applycationType\": paymentData?.connectionCharges?.type\r\n        }\r\n        console.log(\"Payment Button Clicked..\", payload)\r\n\r\n        AxiosInterceptors.post(api_rzpWaterOrderId, payload, HEADER())\r\n            .then((res) => {\r\n                console.log(\"Oder ID Generated\", res)\r\n\r\n                if (res.data.status == true) {\r\n                    RazorpayPaymentScreen(res.data.data, dreturn)\r\n                }\r\n            })\r\n            .catch((err) => console.log(\"Error genrating order id\", err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div >\r\n                    {paymentStatus ?\r\n                        <div className=\"bg-green-200 shadow-2xl border border-sky-200 p-5 m-5 rounded-md\">\r\n                            <div onClick={closeModal} className=\"absolute cursor-pointer bg-green-100 hover:bg-gray-300 p-1 rounded-md\"><GrClose /> </div>\r\n                            <div className=\"flex justify-center\">\r\n                                <img src={imgSucess} className=\"h-20\" alt=\"\" srcset=\"\" />\r\n                            </div>\r\n                            <div className='py-1 pl-3 font-semibold text-center text-2xl text-gray-800'> Payment Completed Successfully </div>\r\n                            <p className=\"text-center\"><span className=\"text-base\"> Payment Transaction No</span> <span className=\"font-bold text-blue-700 text-xl\">{transData?.transectionNo}</span></p>\r\n                            <p className=\"border-b border-gray-300 mx-10 py-1\"></p>\r\n                            <div className='grid grid-cols-12 px-8 py-3 leading-8 space-x-8 text-sm'>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6 font-semibold'>\r\n                                            <p>Application No</p>\r\n                                            <p>Connection Type</p>\r\n                                        </div>\r\n                                        <div className='col-span-6 ml-3'>\r\n                                            <p>{transData?.applicationNo}</p>\r\n                                            <p>{transData?.tranType}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6 font-semibold'>\r\n                                            <p>Amount</p>\r\n                                            <p>Payment Date</p>\r\n                                        </div>\r\n                                        <div className='col-span-6'>\r\n                                            <p>{transData?.amount}</p>\r\n                                            <p>{transData?.transectionDate}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-span-12 md:mt-4 mt-10'>\r\n                                    <div className='flex justify-center'>\r\n                                        <button onClick={closeModal} className='mx-2 bg-sky-600 hover:bg-sky-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm rounded-sm shadow-xl'>Dashboard</button>\r\n                                        <button onClick={() => navigate(`/waterConnReceipt/${transData?.transectionNo}`)} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-4 py-2 text-sm  rounded-sm shadow-xl'>View Receipt</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"bg-sky-200 shadow-2xl border border-red-200 p-5 m-5 rounded-md\">\r\n                            <div className=' border-b-2 py-1 pl-3 font-semibold border-red-400 flex'><HiCurrencyRupee size={20} className='mt-0.5 mr-1' />Make Payment </div>\r\n                            <div className='grid grid-cols-12 px-8 py-3 text-sm'>\r\n\r\n                                <div className='mr-2 md:col-span-7 col-span-12'>\r\n                                    <div className=\"border border-gray-500 p-2 rounded shadow-md bg-lime-100 space-y-0\">\r\n                                        <p>Application No.</p>\r\n                                        <p className=\"font-semibold text-2xl\">{paymentData?.connectionCharges?.applicationNo}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='ml-2 md:col-span-5 col-span-12'>\r\n                                    <div className=\"border border-gray-500 p-2 rounded shadow-md bg-lime-100\">\r\n                                        <p>Amount</p>\r\n                                        <p className=\"font-semibold\"> <span className=\"text-lg\">₹</span> <span className=\"text-2xl text-center\">{paymentData?.connectionCharges?.amount || \"N/A\"}</span></p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-12 col-span-12 mt-5'>\r\n                                    <div className=\"text-center border border-gray-300 bg-indigo-100 px-2 rounded\">\r\n                                        <p>Amount Breakup</p>\r\n                                        <div className=\"text-left\">\r\n                                            <p>Payment For : {paymentData?.connectionCharges?.charge_category}</p>\r\n                                            <p>Connection Fee : ₹ {paymentData?.connectionCharges?.conn_fee}</p>\r\n                                            <p>Penalty : ₹ {paymentData?.connectionCharges?.penalty}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-12 col-span-12 mt-5'>\r\n                                    <div className=\"text-center border border-gray-300 bg-indigo-100 px-2 rounded\">\r\n                                        <p>Note : You can pay using Card / UPI / Netbanking / Wallet etc.</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='col-span-12 md:mt-4 mt-10'>\r\n                                    <div className='flex justify-center'>\r\n                                        <button onClick={closeModal} className='mx-3 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-2 text-sm rounded-sm shadow-xl'>Cancel</button>\r\n                                        <button onClick={payNow} className='mx-3 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-5 py-2 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default PetPaymentModal;\r\n","import React, { useContext, useState } from 'react'\r\nimport { contextVar } from '../../../Components/ContextVar'\r\nimport PetPaymentModal from './PetPaymentModal'\r\n\r\nconst PetDocumentAndPayment = (props) => {\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const { notify } = useContext(contextVar)\r\n\r\n\r\n    const showMessage = () => {\r\n        notify('Service Under Development', 'info')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <PetPaymentModal openPaymentModal={openPaymentModal} /> */}\r\n            <div className='m-5'>\r\n                <table className='w-full text-left text-gray-900'>\r\n                    <thead className='text-lg bg-gray-300 border-b-2'>\r\n                        <tr className=''>\r\n                            <th className='px-3 py-2'>Sl.</th>\r\n                            <th className='px-3 py-2'>Document Name</th>\r\n                            <th className='px-3 py-2'>Status</th>\r\n                            <th className='px-3 py-2'>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=''>\r\n\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>1.</td>\r\n                            <td className='px-3 py-2'>Rabies Vaccination certificate</td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>2.</td>\r\n                            <td className='px-3 py-2'>Vaccination certificate of Leptospirosis </td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>3.</td>\r\n                            <td className='px-3 py-2'>Address proof </td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>4.</td>\r\n                            <td className='px-3 py-2'>Rent Agreement</td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>5.</td>\r\n                            <td className='px-3 py-2'>NOC from the owner</td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n                <button onClick={() => (showMessage(), setOpenPaymentModal(prev => prev + 1))} type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded font-sans font-semibold shadow'>Pay ₹ 1000 /-</button>\r\n            </div>\r\n\r\n            <div className='flex justify-center my-10 space-x-5'>\r\n                <button type='button' onClick={() => props.screen(1)} className='bg-red-500 px-8 py-2 text-white rounded shadow'>Back</button>\r\n                <button onClick={showMessage} type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded shadow'>Submit</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PetDocumentAndPayment","import React from 'react'\r\nimport { useFormik, Formik, Form, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\nconst PetRegistrationFormIndex = (props) => {\r\n\r\n  const validationSchema = yup.object({\r\n    ulb: yup.string().required('Require'),\r\n    applicantName: yup.string().required('Require'),\r\n  })\r\n  const initialValues = {\r\n    ulb: '',\r\n    applicantName: '',\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    enableReinitialize: true,\r\n    onSubmit: (values, resetForm) => {\r\n      console.log(\"Value.....\", values)\r\n      // props.data(values)\r\n      props.screen(2)\r\n    },\r\n    validationSchema\r\n  })\r\n  const handleChange = (event) => {\r\n    let name = event.target.name\r\n    let value = event.target.value\r\n    // { name === 'propertyType' && ((value == '1') ? setpropertyTypeStatusToggle(true) : setpropertyTypeStatusToggle(false)) }\r\n    // { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n  };\r\n\r\n\r\n  const style = {\r\n    required: 'text-red-700 font-semibold',\r\n    label: 'text-sm'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n        <div className='overflow-y-auto'>\r\n\r\n          <div className='col-span-12 my-5 m-3'>\r\n            <div className='text-2xl text-center text-gray-600 font-semibold'>Property Details</div>\r\n            <p className='border-b border-gray-500'></p>\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-5 '>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"ulb\">Select ULB <span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('ulb')} name='ulb' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">ULB 1</option>\r\n                <option value=\"2\">ULB 2</option>\r\n                <option value=\"3\">ULB 3</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.ulb && formik.errors.ulb ? formik.errors.ulb : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"applyThrough\">Apply Through<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('applyThrough')} name='applyThrough' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"holdingApply\">Holding </option>\r\n                <option value=\"safApply\">SAF </option>\r\n                <option value=\"ownerApply\">Other</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.applyThrough && formik.errors.applyThrough ? formik.errors.applyThrough : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"holdingNo\">Holding / SAF No.<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('holdingNo')} type=\"text\" name='holdingNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"categoryApplication\">Category of Application<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('categoryApplication')} name='categoryApplication' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"owner\">Owner</option>\r\n                <option value=\"tenanted\">Tenanted</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.categoryApplication && formik.errors.categoryApplication ? formik.errors.categoryApplication : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"ward\">Ward Number<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('ward')} name='ward' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">Ward 1</option>\r\n                <option value=\"2\">Ward 2</option>\r\n                <option value=\"3\">Ward 3</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-span-12 my-5 m-3'>\r\n            <div className='text-2xl text-center text-gray-600 font-semibold'>Applicant Details</div>\r\n            <p className='border-b border-gray-500'></p>\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-4'>\r\n\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"applicantName\">Name of Applicant<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('applicantName')} type=\"text\" name='applicantName' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"mobileNo\">Mobile No<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('mobileNo')} type=\"text\" name='mobileNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"email\">Email<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('email')} type=\"email\" name='email' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"panNo\">PAN No.<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('panNo')} type=\"text\" name='panNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n            </div>\r\n            {/* <div className='m-3'>\r\n               <label className={style?.label} htmlFor=\"aadharNo\">Aadhar No.<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('aadharNo')} type=\"text\" name='aadharNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n            </div> */}\r\n\r\n          </div>\r\n\r\n          <div className='m-3'>\r\n            <label className={style?.label} htmlFor=\"address\">Address<span className={style?.required}>*</span></label>\r\n            <textarea {...formik.getFieldProps('address')} name='address' rows=\"3\" className='block w-full border px-2 border-gray-600 rounded shadow' ></textarea>\r\n            <p className='text-red-500 text-xs'>{formik.touched.address && formik.errors.address ? formik.errors.address : null}</p>\r\n          </div>\r\n\r\n          <div className='col-span-12 my-5 m-3'>\r\n            <div className='text-2xl text-center text-gray-600 font-semibold'>Pet Details</div>\r\n            <p className='border-b border-gray-500 mt-3'></p>\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-4'>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petType\">Pet Type<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('petType')} type=\"text\" name='petType' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">Dog</option>\r\n                <option value=\"2\">Cat</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petType && formik.errors.petType ? formik.errors.petType : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petName\">Name of Pet<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('petName')} type=\"text\" name='petName' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petName && formik.errors.petName ? formik.errors.petName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petGender\">Gender<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('petGender')} type=\"text\" name='petGender' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petGender && formik.errors.petGender ? formik.errors.petGender : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petBirthDate\">Date of Birth<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('petBirthDate')} type=\"date\" name='petBirthDate' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petBirthDate && formik.errors.petBirthDate ? formik.errors.petBirthDate : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petIdentity\">Identity MarK<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('petIdentity')} type=\"text\" name='petIdentity' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petIdentity && formik.errors.petIdentity ? formik.errors.petIdentity : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"breed\">Breed<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('breed')} type=\"text\" name='breed' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.breed && formik.errors.breed ? formik.errors.breed : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"color\">Color<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('color')} type=\"text\" name='color' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.color && formik.errors.color ? formik.errors.color : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"doctorName\">Veterinary Doctor Name<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('doctorName')} type=\"text\" name='doctorName' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.doctorName && formik.errors.doctorName ? formik.errors.doctorName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"doctorRegNo\">Doctor’s MSVC/VCI number <span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('doctorRegNo')} type=\"text\" name='doctorRegNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.doctorRegNo && formik.errors.doctorRegNo ? formik.errors.doctorRegNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"dateOfRabies\">Date of Rabies<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('dateOfRabies')} type=\"date\" name='dateOfRabies' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dateOfRabies && formik.errors.dateOfRabies ? formik.errors.dateOfRabies : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"dateOfLepVaccine\">Leptospirosis Vaccination Date<span className={style?.required}>*</span></label>\r\n              <input {...formik.getFieldProps('dateOfLepVaccine')} type=\"date\" name='dateOfLepVaccine' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dateOfLepVaccine && formik.errors.dateOfLepVaccine ? formik.errors.dateOfLepVaccine : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label className={style?.label} htmlFor=\"petFrom\">Pet From<span className={style?.required}>*</span></label>\r\n              <select {...formik.getFieldProps('petFrom')} type=\"text\" name='petFrom' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"transferred\">Pet being transferred</option>\r\n                <option value=\"bought\">Pet being bought?</option>\r\n                <option value=\"Adopted\">Stray Pet Adopted</option>\r\n                <option value=\"outside\">Pet brought from outside Jharkhand</option>\r\n                <option value=\"owners\">Puppy born to owners Pet</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petFrom && formik.errors.petFrom ? formik.errors.petFrom : null}</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className='flex justify-center my-10'>\r\n          <button type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded shadow'>Next</button>\r\n        </div>\r\n      </form>\r\n\r\n\r\n      {/* <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-4\">\r\n                    <div className=\"col-span-4 grid grid-cols-1 md:grid-cols-4\">\r\n                        <div className={`${inputContainerStyle}`}>\r\n                             <label className={style?.label} className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Email address</label>\r\n                            <input type=\"text\" {...formik.getFieldProps('email')} className={`${inputStyle}`} />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                        </div>\r\n                        <div className={`${inputContainerStyle}`}>\r\n                             <label className={style?.label} className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Password Through</label>\r\n                            <input type=\"password\" {...formik.getFieldProps('password')} className={`${inputStyle}`} />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.password && formik.errors.password ? formik.errors.password : null}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetRegistrationFormIndex\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { contextVar } from '../../Components/ContextVar'\r\nimport { PetAccordionPage } from './Form/PetAccordionPage'\r\nimport PetDocumentAndPayment from './Form/PetDocumentAndPayment'\r\nimport PetRegistrationFormIndex from './Form/PetRegistrationFormIndex'\r\n\r\nconst PetRegistrationIndex = () => {\r\n  const [currentScreen, setCurrentScreen] = useState(1)\r\n\r\n  const { setBreadCrumbData } = useContext(contextVar)\r\n  useEffect(() => {\r\n    setBreadCrumbData([\"Apply Pet Registration\"])\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-9 space-x-6 my-2 mx-8\">\r\n        <div className='col-span-9 border border-gray-400 rounded'>\r\n          <p className=\"border-b border-indigo-300 bg-indigo-200 p-1 text-center text-xl shadow-md\">You are applying for <span className='font-semibold'> Pet Registration </span></p>\r\n          <div className='p-5'>\r\n            <p className={`${currentScreen == 1 ? 'block' : 'hidden'}`}> <PetRegistrationFormIndex screen={setCurrentScreen} /> </p>\r\n            <p className={`${currentScreen == 2 ? 'block' : 'hidden'}`}> <PetDocumentAndPayment screen={setCurrentScreen} /></p>\r\n          </div>\r\n        </div>\r\n        {/* <div className='col-span-3 border border-gray-400 rounded p-3'>\r\n          <p className=\"border-2 border-indigo-400 p-2 text-center bg-white text-xl shadow-md\"> Frequently Asked Questions </p>\r\n          <PetAccordionPage />\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetRegistrationIndex"],"names":["props","_useState","useState","_useState2","_slicedToArray","setOpenPaymentModal","notify","useContext","contextVar","showMessage","_jsxs","_Fragment","children","_jsx","className","onClick","prev","type","screen","validationSchema","yup","ulb","required","applicantName","formik","useFormik","initialValues","enableReinitialize","onSubmit","values","resetForm","console","log","style","label","handleSubmit","onChange","event","target","name","value","htmlFor","_objectSpread","getFieldProps","touched","errors","applyThrough","holdingNo","categoryApplication","mobileNo","email","panNo","rows","address","petType","petName","petGender","petBirthDate","petIdentity","breed","color","doctorName","doctorRegNo","dateOfRabies","dateOfLepVaccine","petFrom","currentScreen","setCurrentScreen","setBreadCrumbData","useEffect","concat","PetRegistrationFormIndex","PetDocumentAndPayment"],"sourceRoot":""}