{"version":3,"file":"static/js/3873.ea913e55.chunk.js","mappings":"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","sources":["Components/ApiList/ApiHeader.js","Components/ApiList/BackendUrl.js","Components/ApiList/WaterApiList.js","Components/CitizenApplyApiList.js","Components/RazorpayPaymentScreen.js","Pages/PetRegistration/Form/PetAccordionPage.js","Pages/PetRegistration/Form/PetPaymentModal.js","Pages/PetRegistration/Form/PetDocumentAndPayment.js","Pages/PetRegistration/Form/PetRegistrationFormIndex.js","Pages/PetRegistration/PetRegistrationIndex.js","Pages/Trade/tradeComponent/TradeApiListFile.js"],"sourcesContent":["\r\nexport default function ApiHeader() {\r\n    let token = window.localStorage.getItem('citizen_token')\r\n    const header = {\r\n        // timeout: 1,\r\n        timeout: 60000,\r\n        headers:\r\n        {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: 'application/json',\r\n        }\r\n    }\r\n    return header\r\n}\r\n\r\n","// DEVELOPMENT SERVER\r\n// const BackendUrl = 'http://192.168.0.16:8000'\r\n// const BackendUrl = 'http://192.168.0.15:8000'\r\n\r\n// TEST SERVER\r\nconst BackendUrl = 'http://203.129.217.246:8000'\r\n\r\nexport default BackendUrl","import BackendUrl from \"./BackendUrl\"\r\n\r\nexport default function WaterApiList() {\r\n    let baseUrl = BackendUrl;\r\n\r\n    let token = window.localStorage.getItem('citizen_token')\r\n    const header = {\r\n        headers:\r\n        {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: 'application/json',\r\n        }\r\n    }\r\n\r\n    // window.sessionStorage.setItem(\"name\", \"Raja Ram Mohan Malvia\")\r\n\r\n    let apiList = {\r\n        header: header,\r\n\r\n        api_ulbList: `${baseUrl}/api/get-all-ulb`, //GET\r\n        api_wardList: `${baseUrl}/api/get-all-ulb-wards`,\r\n        api_userProfileDetails: `${baseUrl}/api/my-profile-details`,\r\n\r\n        api_NewWaterConnection: `${baseUrl}/api/water/application/apply-new-connection`,\r\n\r\n        api_getSafHoldingDetails: `${baseUrl}/api/water/search-holding-saf`,\r\n\r\n        api_citizenApplications: `${baseUrl}/api/water/citizenApplications`, // Method => Post | Fetch all applied list of water connection\r\n        api_citizenApprovedApplications: `${baseUrl}/api/water/consumer/get-listed-details`, // \r\n\r\n        api_rzpWaterOrderId: `${baseUrl}/api/water/Razorpay-Orderid`, // Method => POST | generate Razorpay order id for  water payment\r\n        api_getTranNo: `${baseUrl}/api/water/getTranNo`, // Method => POST | Fetch Data by OrderId and PaymentId\r\n\r\n        api_paymentReceipt: `${baseUrl}/api/water/generate-payment-receipt`, // Method => POST | Fetch Data for generate payment receipt\r\n        api_waterConsumerPaymentReceipt: `${baseUrl}/api/water/consumer/demand/generate-payment-receipt`, // Method => POST | Fetch Data for Water Demand Payment\r\n\r\n        api_waterApplicationDelete: `${baseUrl}/api/water/application/delete `, // Method => POST \r\n        api_waterViewPendingApplication: `${baseUrl}/api/water/application/get-by-id `, // Method => POST \r\n\r\n        api_waterViewDocumetTobeuploaded: `${baseUrl}/api/water/citizen/get-doc-list`, // Method => POST \r\n        api_waterUploadDoc: `${baseUrl}/api/water/upload-document`, // Method => POST \r\n\r\n        // api_waterFinalFormSubmit: `${baseUrl}/api/water/final-submit-application`, // Method => POST \r\n\r\n        api_waterApprovedApplicationDetails: `${baseUrl}/api/water/consumer/get-listed-details`,\r\n        api_waterConsumerPaymentHistory: `${baseUrl}/api/water/consumer/get-payment-history`,\r\n        api_waterListDemand: `${baseUrl}/api/water/consumer/list-demand`,\r\n        api_getHoldingSafOfLogin: `${baseUrl}/api/property/citizen-holding-saf`,\r\n\r\n        api_waterDemandCalculation: `${baseUrl}/api/water/consumer/calculate-month-demand`,\r\n        api_waterDemandPayment: `${baseUrl}/api/water/consumer/offline-demand-payment`,\r\n\r\n    }\r\n\r\n    return apiList\r\n}","import BackendUrl from \"./ApiList/BackendUrl\"\r\nexport default function CitizenApplyApiList() {\r\n    console.log('backend url imported at citizen apply apilist...', BackendUrl)\r\n    let baseUrl = BackendUrl\r\n    let apiList = {\r\n        //1\r\n        api_safInboxList: `${baseUrl}/api/saf/inbox`,\r\n        //2\r\n        api_getSafDetailsById: `${baseUrl}/api/saf/details`,\r\n        //3\r\n        api_getMasterData: `${baseUrl}/api/property/saf/master-saf`,\r\n        //4\r\n        api_postNewAssessment: `${baseUrl}/api/property/saf/apply`,\r\n        //4\r\n        api_getLocationByUlb: `${baseUrl}/api/city/state/ulb-id`,\r\n        //5\r\n        api_getProfileDetails: `${baseUrl}/api/citizen-profile-details`,\r\n        //6\r\n        api_EditMyProfile: `${baseUrl}/api/edit-my-profile`,\r\n        api_editCitizenProfile: `${baseUrl}/api/edit-citizen-profile`,\r\n        //7\r\n        api_getAllUlb: `${baseUrl}/api/get-all-ulb`,\r\n        //login\r\n        api_citizenLogin: `${baseUrl}/api/login`,\r\n        //7\r\n        api_citizenRegister: `${baseUrl}/api/citizen-register`,\r\n        // 8\r\n        api_deleteSaf: `${baseUrl}/api/property/saf/delete-citizen-saf`,  //POST\r\n\r\n        //application list by module\r\n        api_applicationListByModule: `${baseUrl}/api/citizens/applied-applications`,\r\n        //application list by module\r\n        api_getAllApplicationList: `${baseUrl}/api/citizens/applied-applications`,\r\n        //application list by module\r\n        api_safindependentComment: `${baseUrl}/api/property/saf/independent-comment`,\r\n\r\n        //transcation history by module\r\n        api_getTranscationHistory: `${baseUrl}/api/property/saf/prop-transactions`,\r\n\r\n        //transcation history for specific holding only\r\n        api_getSpecificHoldingTranscationHistory: `${baseUrl}/api/property/prop-payment-history`,\r\n\r\n        //applicaton full detail\r\n        api_getAppicationFullDetail: `${baseUrl}/api/property/saf-details`,\r\n\r\n        //holding verification\r\n        api_getHoldingDetails: `${baseUrl}/api/property/saf/get-prop-byholding`,\r\n\r\n        // water harvesting document code\r\n        api_postWaterHarvestindDocCode: `${baseUrl}/api/property/harvesting/citizen-doc-list`,\r\n        //water harvesting master data\r\n        api_getMasterDataWaterHarvesting: `${baseUrl}/api/property/get-wardmaster-data`,\r\n        //water harvesting post data\r\n        api_postWaterHarvestingData: `${baseUrl}/api/property/water-harvesting-application`,\r\n\r\n        //all transcation history \r\n        api_getAllModuleTranscation: `${baseUrl}/api/payment/all-module-transaction`,\r\n\r\n\r\n        //razor pay api\r\n        verifyPaymentStatus: `${baseUrl}/api/payment/verify-payment-status`, //POST // use to store the data if payment failed or success=> \r\n\r\n        // get Order Id\r\n        propertyGenerateOrderId: `${baseUrl}/api/property/saf/generate-order-id`, //POST\r\n        // get Order Id\r\n        propertyGenerateOrderIdDirect: `${baseUrl}/api/property/independent/generate-prop-orderid`, //POST\r\n        // get Order Id\r\n        propertyGenerateHoldingOrderId: `${baseUrl}/api/property/generate-prop-orderid`, //POST\r\n\r\n        //application demand detail in demand screen\r\n        api_DemandDetailById: `${baseUrl}/api/property/saf/calculate-by-saf-id`,\r\n\r\n        //application holding property demand\r\n        api_getsafDemandById: `${baseUrl}/api/property/saf/get-demand-by-id`, //POST\r\n\r\n        //application list of property generated holding\r\n        api_getPropertyApplicationList: `${baseUrl}/api/property/saf/get-prop-byholding`, //POST\r\n\r\n        //safdocument\r\n        // api_uploadSafDocument: `${baseUrl}/api/property/upload-document`, //POST\r\n\r\n        //safdocument list\r\n        api_listSafDocument: `${baseUrl}/api/property/saf/get-doc-list`, //POST\r\n        api_uploadSafDocument: `${baseUrl}/api/property/saf/document-upload`,\r\n\r\n\r\n        //safPayment Api\r\n        api_getPaymentData: `${baseUrl}/api/property/saf/payment-receipt`,\r\n        //concession Api\r\n        get_ConcessionDetailsById: `${baseUrl}/api/property/concession/details`,\r\n        //harvesting Api\r\n        get_HarvestingDetailsById: `${baseUrl}/api/property/harvesting/details-by-id`,\r\n        //objection Api\r\n        get_ObjectionDetailsById: `${baseUrl}/api/property/objection/details`,\r\n        api_getHoldingDemandById: `${baseUrl}/api/property/get-holding-dues`,\r\n        // GET DEMAND LIST OF PROPERTY WITHOUT LOGIN\r\n        api_getDirectHoldingDemandById: `${baseUrl}/api/property/independent/get-holding-dues`,\r\n        api_wardByUlb: `${baseUrl}/api/workflow/getWardByUlb`,\r\n        api_newWardByOldWard: `${baseUrl}/api/get-newward-by-oldward`,\r\n        api_zoneByUlb: `${baseUrl}/api/property/get-zone-byUlb`,\r\n\r\n        api_citizenLogin2: `${baseUrl}/api/citizen-login`,\r\n        api_reviewCalculation: `${baseUrl}/api/property/review-calculation`,\r\n        api_getTransactionNoForReceipt: `${baseUrl}/api/payment/get-tran-by-orderid`,\r\n        api_getHoldingReceiptUrl: `${baseUrl}/api/property/prop-payment-receipt`,\r\n        api_getStaticSafDetails: `${baseUrl}/api/property/saf/static-saf-dtls`,\r\n\r\n        // change password\r\n        api_changePassword: `${baseUrl}/api/change-citizen-pass`,\r\n        api_forgotPassword : `${baseUrl}/api/change-citizen-pass`,\r\n\r\n        // services doc upload when btc\r\n        get_ConcessionDocumentsToUpload: `${baseUrl}/api/property/concession/doc-list`,\r\n        post_ConcessionDocumentUpload: `${baseUrl}/api/property/concession/upload-document`,\r\n\r\n        get_ObjectionDocumentsToUpload: `${baseUrl}/api/property/objection/doc-list`,\r\n        post_ObjectionDocumentUpload: `${baseUrl}/api/property/objection/upload-document`,\r\n\r\n        get_HarvestingDocumentsToUpload: `${baseUrl}/api/property/harvesting/get-doc-list`,\r\n        post_HarvestingDocumentUpload: `${baseUrl}/api/property/harvesting/upload-document`,\r\n        api_postPropertyPayment: `${baseUrl}/api/property/payment-holding`,\r\n        api_postSafPayment: `${baseUrl}/api/property/saf/saf-payment`,\r\n        // API TO VERIFY HOLDING NO EXISTENCEF\r\n        api_verifyHolding: `${baseUrl}/api/property/saf/verify-holding`,\r\n        // API TO VERIFY MOBILE NO (*not yet developed)\r\n        api_verifyMobile: `${baseUrl}/api/property/saf/verify-mobile`,\r\n        // API TO EDIT CITIZEN SAF APPLICATION\r\n        api_editCitizenSaf: `${baseUrl}/api/property/saf/edit-citizen-saf`,\r\n        // API TO GET STATIC SAF DETAILS FOR CITIZEN EDIT\r\n        api_getStaticSafDetails: `${baseUrl}/api/property/saf/static-saf-dtls`,\r\n        // API TO GET APARTMENT LIST BY WARD NO AND ULB\r\n        api_getApartmentListByWard: `${baseUrl}/api/property/saf/list-apartment`,\r\n        // API TO SEND OTP TO MOBILE NO \r\n        api_sendMobileOtp: `${baseUrl}/api/user/send-otp`,\r\n        // API TO SEND OTP TO MOBILE NO \r\n        api_sendMobileOtpAttachment: `${baseUrl}/api/property/caretaker-otp`,\r\n        // API TO VERIFY OTP TO MOBILE NO \r\n        api_verifyMobileOtp: `${baseUrl}/api/user/verify-otp`,\r\n        // API TO ATTACH CARETAKER PROPERTY\r\n        api_attachProperty: `${baseUrl}/api/property/caretaker-property-tagging`,\r\n\r\n    }\r\n\r\n    return apiList\r\n}\r\n\r\n","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - \r\n//    Revision - 1\r\n//    Component  - Logout.js\r\n//    Date : 27/02/2023 => Update => Name and Logo\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from \"axios\";\r\nimport CitizenApplyApiList from \"./CitizenApplyApiList\";\r\nimport Logo from './../Components/Media/logo1.png'\r\nimport WaterApiList from \"./ApiList/WaterApiList\";\r\n\r\nconst { verifyPaymentStatus } = CitizenApplyApiList();\r\nconst {header} = WaterApiList();\r\n\r\nexport default async function RazorpayPaymentScreen(generatedData, dreturn) {\r\n\r\n\r\n\r\n    let returnData\r\n    var options = {\r\n        // key: \"rzp_test_3MPOKRI8WOd54p\",\r\n        // amount: generatedData.amount,\r\n        currency: \"INR\",\r\n        image: Logo,\r\n        name: \"UD&HD\",\r\n        description: \"This is used for Testing Purpose\",\r\n        order_id: generatedData.orderId,\r\n        handler: async function (response) {\r\n            callApiLog(response)  // This function send the data to direct database => backend will verify the data\r\n            console.log(\"All response\", response)\r\n            console.log(\"Payment ID\", response.razorpay_payment_id);\r\n            returnData = 'data from handle: payment success'\r\n            dreturn({ status: true, message: 'Payment Success', data: response })\r\n        },\r\n\r\n        prefill: {\r\n            name: generatedData.name,\r\n            email: generatedData.email,\r\n            contact: generatedData.mobile\r\n        },\r\n        \"modal\": {\r\n            \"ondismiss\": function (response) {\r\n                console.log(\"Payment Cancel BY user\", response);\r\n            },\r\n            \"onfailed\": function (response) {\r\n                console.log(\"Payment Failed Response modal\", response);\r\n            }\r\n        },\r\n        notes: {\r\n            ulbId: generatedData.ulbId || 0,\r\n            departmentId: generatedData.departmentId || 0,\r\n            applicationId: generatedData.applicationId || 0,\r\n            workflowId: generatedData.workflowId || 0,\r\n            userId: generatedData.userId || 0,\r\n            name: generatedData.name || 0,\r\n            email: generatedData.email || 0,\r\n            contact: generatedData.mobile || 0,\r\n        },\r\n        theme: {\r\n            color: \"#3399cc\"\r\n        }\r\n    };\r\n    var pay = new window.Razorpay(options);\r\n\r\n    pay.on('payment.failed', function (response) {\r\n        console.log(\"Failed Response\", response)\r\n        callApiLogFailed(response)  // This functin called when payment got failed. and data log will saved in bacend => using api 2\r\n        dreturn({ status: false, message: 'Payment Failed', data: response })\r\n    });\r\n\r\n    pay.open();\r\n\r\n    return returnData\r\n}\r\n\r\n\r\n//API 2 - when payment success we will keep the log in backend\r\nconst callApiLog = (response) => {\r\n\r\n    const sendPayload = {\r\n        \"razorpayOrderId\": response.razorpay_order_id,\r\n        \"razorpayPaymentId\": response.razorpay_payment_id,\r\n        \"razorpaySignature\": response.razorpay_signature\r\n    }\r\n\r\n    axios.post(verifyPaymentStatus, sendPayload, header) /// This API Will save the data. When response come after payment Sucess -> Not Nessesary\r\n        .then((res) => {\r\n            console.log(\"2nd API Data saved \", res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"Error when inserting 2 api data \", err)\r\n        })\r\n}\r\n\r\n//API 2 - when payment failed we will keep the log in backend\r\nconst callApiLogFailed = (response) => {\r\n\r\n    const sendPayload = {\r\n        \"razorpayOrderId\": response.error.metadata.order_id,\r\n        \"razorpayPaymentId\": response.error.metadata.payment_id,\r\n        \"reason\": response.error.reason,\r\n        \"source\": response.error.source,\r\n        \"step\": response.error.step,\r\n        \"code\": response.error.code,\r\n        \"description\": response.error.description,\r\n    }\r\n\r\n    axios.post(verifyPaymentStatus, sendPayload, header) /// This API Will save the data. When response come after payment FAILED -> Not Nessesary\r\n        .then((res) => {\r\n            console.log(\"2nd API Filed Data saved \", res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"Error when inserting 2 api Failed data \", err)\r\n        })\r\n    // }\r\n\r\n\r\n    return RazorpayPaymentScreen\r\n}","import React from 'react';\r\n\r\nexport const PetAccordionPage = () => {\r\n    return (\r\n        <Accordion>\r\n            <AccordionItem toggle=\"panel-1\" className=\"bg-indigo-500 text-white\">\r\n                How to Apply ?\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-1\">\r\n                <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n                    minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n                    aliquip ex ea commodo consequat.\r\n                </p>\r\n                <p>\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n                    accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae\r\n                    ab illo inventore veritatis et quasi architecto beatae vitae dicta\r\n                    sunt explicabo.\r\n                </p>\r\n            </AccordionPanel>\r\n            <AccordionItem toggle=\"panel-2\" className=\"bg-indigo-500 text-white\">\r\n                Which documents need to submit ?\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-2\">\r\n                <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec\r\n                    odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla\r\n                    quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent\r\n                    mauris. Fusce nec tellus sed augue semper porta.\r\n                </p>\r\n                <p>\r\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui\r\n                    blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\r\n                    et quas molestias excepturi sint occaecati cupiditate non provident,\r\n                    similique sunt in culpa qui officia deserunt mollitia animi.\r\n                </p>\r\n            </AccordionPanel>\r\n            <AccordionItem toggle=\"panel-3\" className=\"bg-indigo-500 text-white\">\r\n                Accordion Group Item #3\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-3\">\r\n                <p className=\"mb-4\">\r\n                    dales ligula in libero. Sed dignissim lacinia nunc. Curabitur tortor.\r\n                    Pellentesque nibh. Aenean quam. In scelerisque sem at dolor. Maecenas\r\n                    mattis. Sed convallis tristique sem. Proin ut ligula vel nunc egestas\r\n                    porttitor. Morbi lectus risus, iaculis.\r\n                </p>\r\n                <p>\r\n                    Nulla metus metus, ullamcorper vel, tincidunt sed, euismod in, nibh.\r\n                    Quisque volutpat condimentum velit. Class aptent taciti sociosqu ad\r\n                    litora torquent per conubia nostra, per inceptos himenaeos. Nam nec\r\n                    ante.\r\n                </p>\r\n            </AccordionPanel>\r\n        </Accordion>\r\n    );\r\n};\r\n\r\n/* Logic */\r\n\r\nconst Context = React.createContext({});\r\n\r\nfunction Accordion({ children }) {\r\n    const [selected, setSelected] = React.useState();\r\n\r\n    const toggleItem = React.useCallback(\r\n        (id) => () => {\r\n            setSelected((prevState) => (prevState !== id ? id : ''));\r\n        },\r\n        [],\r\n    );\r\n    return (\r\n        <Context.Provider value={{ selected, toggleItem }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\n//custom hook to consume all accordion values\r\nconst useAccordion = () => React.useContext(Context);\r\n\r\nconst style = {\r\n    item: `block focus:outline-none border-b my-2 p-3`,\r\n    panel: `overflow-hidden md:overflow-x-hidden transition-height ease duration-300 text-gray-600`,\r\n};\r\n\r\nfunction AccordionItem({ toggle, children, className }) {\r\n    const { selected, toggleItem } = useAccordion();\r\n    return (\r\n        <div\r\n            role=\"button\"\r\n            onClick={toggleItem(toggle)}\r\n            className={`${style.item} ${className}`}\r\n        >\r\n            {children}\r\n            <span className=\"float-right\">\r\n                {selected === toggle ? <AngleUpIcon /> : <AngleDownIcon />}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AccordionPanel({ children, id }) {\r\n    const { selected } = useAccordion();\r\n    const ref = React.useRef();\r\n    const inlineStyle =\r\n        selected === id ? { height: ref.current?.scrollHeight } : { height: 0 };\r\n\r\n    return (\r\n        <div ref={ref} id={id} className={style.panel} style={inlineStyle}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AngleUpIcon = () => (\r\n    <svg\r\n        fill=\"white\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 320 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"mt-1 h-4\"\r\n    >\r\n        <path d=\"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\" />\r\n    </svg>\r\n);\r\n\r\nconst AngleDownIcon = () => (\r\n    <svg\r\n        stroke=\"currentColor\"\r\n        fill=\"white\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 320 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"mt-1 h-4\"\r\n    >\r\n        <path d=\"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\" />\r\n    </svg>\r\n);","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - \r\n//    DESCRIPTION - \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport RazorpayPaymentScreen from \"../../../Components/RazorpayPaymentScreen\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport axios from \"axios\";\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList';\r\nimport imgSucess from '../../Water/success.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction PetPaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [paymentStatus, setPaymentStatus] = useState(false)\r\n    const [transData, setTransData] = useState()\r\n\r\n    const { api_rzpWaterOrderId, api_getTranNo } = WaterApiList();\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const paymentData = props.paymentData;\r\n    console.log(\"paymentData======\", paymentData)\r\n\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setPaymentStatus(false);\r\n    }\r\n\r\n\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        props?.refechList()\r\n        if (data.status == true) {\r\n            setPaymentStatus(true)\r\n            const payload = {\r\n                \"orderId\": data.data.razorpay_order_id,\r\n                \"paymentId\": data.data.razorpay_payment_id\r\n            }\r\n\r\n            axios.post(api_getTranNo, payload, HEADER())\r\n                .then((res) => {\r\n                    console.log(\"Data after payment success by OrderId and PaymetnID\", res)\r\n                    if (res.data.status == true) {\r\n                        setTransData(res.data.data)\r\n                    }\r\n                })\r\n                .catch((err) => console.log(\"Exception/Error while fetching by OrderiD and Paymetn ID\", err))\r\n        }\r\n    }\r\n\r\n\r\n    const payNow = () => {\r\n\r\n        setPaymentStatus(true)\r\n\r\n        return\r\n        \r\n        const payload = {\r\n            \"id\": paymentData?.connectionCharges?.applicationId,\r\n            \"applycationType\": paymentData?.connectionCharges?.type\r\n        }\r\n        console.log(\"Payment Button Clicked..\", payload)\r\n\r\n        axios.post(api_rzpWaterOrderId, payload, HEADER())\r\n            .then((res) => {\r\n                console.log(\"Oder ID Generated\", res)\r\n\r\n                if (res.data.status == true) {\r\n                    RazorpayPaymentScreen(res.data.data, dreturn)\r\n                }\r\n            })\r\n            .catch((err) => console.log(\"Error genrating order id\", err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div >\r\n                    {paymentStatus ?\r\n                        <div className=\"bg-green-200 shadow-2xl border border-sky-200 p-5 m-5 rounded-md\">\r\n                            <div onClick={closeModal} className=\"absolute cursor-pointer bg-green-100 hover:bg-gray-300 p-1 rounded-md\"><GrClose /> </div>\r\n                            <div className=\"flex justify-center\">\r\n                                <img src={imgSucess} className=\"h-20\" alt=\"\" srcset=\"\" />\r\n                            </div>\r\n                            <div className='py-1 pl-3 font-semibold text-center text-2xl text-gray-800'> Payment Completed Successfully </div>\r\n                            <p className=\"text-center\"><span className=\"text-base\"> Payment Transaction No</span> <span className=\"font-bold text-blue-700 text-xl\">{transData?.transectionNo}</span></p>\r\n                            <p className=\"border-b border-gray-300 mx-10 py-1\"></p>\r\n                            <div className='grid grid-cols-12 px-8 py-3 leading-8 space-x-8 text-sm'>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6 font-semibold'>\r\n                                            <p>Application No</p>\r\n                                            <p>Connection Type</p>\r\n                                        </div>\r\n                                        <div className='col-span-6 ml-3'>\r\n                                            <p>{transData?.applicationNo}</p>\r\n                                            <p>{transData?.tranType}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6 font-semibold'>\r\n                                            <p>Amount</p>\r\n                                            <p>Payment Date</p>\r\n                                        </div>\r\n                                        <div className='col-span-6'>\r\n                                            <p>{transData?.amount}</p>\r\n                                            <p>{transData?.transectionDate}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-span-12 md:mt-4 mt-10'>\r\n                                    <div className='flex justify-center'>\r\n                                        <button onClick={closeModal} className='mx-2 bg-sky-600 hover:bg-sky-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm rounded-sm shadow-xl'>Dashboard</button>\r\n                                        <button onClick={() => navigate(`/waterConnReceipt/${transData?.transectionNo}`)} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-4 py-2 text-sm  rounded-sm shadow-xl'>View Receipt</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"bg-sky-200 shadow-2xl border border-red-200 p-5 m-5 rounded-md\">\r\n                            <div className=' border-b-2 py-1 pl-3 font-semibold border-red-400 flex'><HiCurrencyRupee size={20} className='mt-0.5 mr-1' />Make Payment </div>\r\n                            <div className='grid grid-cols-12 px-8 py-3 text-sm'>\r\n\r\n                                <div className='mr-2 md:col-span-7 col-span-12'>\r\n                                    <div className=\"border border-gray-500 p-2 rounded shadow-md bg-lime-100 space-y-0\">\r\n                                        <p>Application No.</p>\r\n                                        <p className=\"font-semibold text-2xl\">{paymentData?.connectionCharges?.applicationNo}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='ml-2 md:col-span-5 col-span-12'>\r\n                                    <div className=\"border border-gray-500 p-2 rounded shadow-md bg-lime-100\">\r\n                                        <p>Amount</p>\r\n                                        <p className=\"font-semibold\"> <span className=\"text-lg\">₹</span> <span className=\"text-2xl text-center\">{paymentData?.connectionCharges?.amount || \"N/A\"}</span></p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-12 col-span-12 mt-5'>\r\n                                    <div className=\"text-center border border-gray-300 bg-indigo-100 px-2 rounded\">\r\n                                        <p>Amount Breakup</p>\r\n                                        <div className=\"text-left\">\r\n                                            <p>Payment For : {paymentData?.connectionCharges?.charge_category}</p>\r\n                                            <p>Connection Fee : ₹ {paymentData?.connectionCharges?.conn_fee}</p>\r\n                                            <p>Penalty : ₹ {paymentData?.connectionCharges?.penalty}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-12 col-span-12 mt-5'>\r\n                                    <div className=\"text-center border border-gray-300 bg-indigo-100 px-2 rounded\">\r\n                                        <p>Note : You can pay using Card / UPI / Netbanking / Wallet etc.</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='col-span-12 md:mt-4 mt-10'>\r\n                                    <div className='flex justify-center'>\r\n                                        <button onClick={closeModal} className='mx-3 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-2 text-sm rounded-sm shadow-xl'>Cancel</button>\r\n                                        <button onClick={payNow} className='mx-3 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-5 py-2 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default PetPaymentModal;\r\n","import React, { useState } from 'react'\r\nimport PetPaymentModal from './PetPaymentModal'\r\n\r\nconst PetDocumentAndPayment = (props) => {\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n\r\n    return (\r\n        <>\r\n            <PetPaymentModal openPaymentModal={openPaymentModal} />\r\n            <div className='m-5'>\r\n                <table className='w-full text-left text-gray-900'>\r\n                    <thead className='text-lg bg-gray-300 border-b-2'>\r\n                        <tr className=''>\r\n                            <th className='px-3 py-2'>Sl.</th>\r\n                            <th className='px-3 py-2'>Document Name</th>\r\n                            <th className='px-3 py-2'>Status</th>\r\n                            <th className='px-3 py-2'>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=''>\r\n\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>1.</td>\r\n                            <td className='px-3 py-2'>Rabies Vaccination certificate</td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>2.</td>\r\n                            <td className='px-3 py-2'>Vaccination certificate of Leptospirosis </td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>3.</td>\r\n                            <td className='px-3 py-2'>Address proof </td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>4.</td>\r\n                            <td className='px-3 py-2'>Rent Agreement</td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                        <tr className='hover:bg-sky-100 border-b'>\r\n                            <td className='px-3 py-2'>5.</td>\r\n                            <td className='px-3 py-2'>NOC from the owner</td>\r\n                            <td className='px-3 py-2'>Not Upload</td>\r\n                            <td className='px-3 py-2'><button className='px-2 py-1 border border-indigo-600 rounded shadow hover:bg-indigo-600 text-black hover:text-white'>Upload</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n                <button onClick={() => setOpenPaymentModal(prev => prev + 1)} type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded font-sans font-semibold shadow'>Pay ₹ 1000 /-</button>\r\n            </div>\r\n\r\n            <div className='flex justify-center my-10 space-x-5'>\r\n                <button type='button' onClick={() => props.screen(1)} className='bg-red-500 px-8 py-2 text-white rounded shadow'>Back</button>\r\n                <button type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded shadow'>Submit</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PetDocumentAndPayment","import React from 'react'\r\nimport { useFormik, Formik, Form, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\nconst PetRegistrationFormIndex = (props) => {\r\n\r\n  const validationSchema = yup.object({\r\n    ulb: yup.string().required('Require'),\r\n    applicantName: yup.string().required('Require'),\r\n  })\r\n  const initialValues = {\r\n    ulb: '',\r\n    applicantName: '',\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    enableReinitialize: true,\r\n    onSubmit: (values, resetForm) => {\r\n      console.log(\"Value.....\", values)\r\n      // props.data(values)\r\n      props.screen(2)\r\n    },\r\n    validationSchema\r\n  })\r\n  const handleChange = (event) => {\r\n    let name = event.target.name\r\n    let value = event.target.value\r\n    // { name === 'propertyType' && ((value == '1') ? setpropertyTypeStatusToggle(true) : setpropertyTypeStatusToggle(false)) }\r\n    // { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n        <div className=''>\r\n\r\n          <div className='col-span-12 my-5 m-3'>\r\n            <div className='text-2xl text-center text-gray-600 font-semibold'>Property Details</div>\r\n            <p className='border-b border-gray-500'></p>\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-5 '>\r\n\r\n            <div className='m-3'>\r\n              <label htmlFor=\"ulb\">Select ULB <span className='text-red-700 font-semibold'>*</span></label>\r\n              <select {...formik.getFieldProps('ulb')} name='ulb' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">ULB 1</option>\r\n                <option value=\"2\">ULB 2</option>\r\n                <option value=\"3\">ULB 3</option>\r\n              </select>\r\n              <p className='text-red-500 absolute text-xs'>{formik.touched.ulb && formik.errors.ulb ? formik.errors.ulb : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label htmlFor=\"applyThrough\">Apply Through<span className='text-red-700 font-semibold'>*</span></label>\r\n              <select {...formik.getFieldProps('applyThrough')} name='applyThrough' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"holdingApply\">Holding </option>\r\n                <option value=\"safApply\">SAF </option>\r\n                <option value=\"ownerApply\">Other</option>\r\n              </select>\r\n              <p className='text-red-500 absolute text-xs'>{formik.touched.applyThrough && formik.errors.applyThrough ? formik.errors.applyThrough : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label htmlFor=\"holdingNo\">Holding / SAF No.<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('holdingNo')} type=\"text\" name='holdingNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 absolute text-xs'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"categoryApplication\">Category of Application<span className='text-red-700 font-semibold'>*</span></label>\r\n              <select {...formik.getFieldProps('categoryApplication')} name='categoryApplication' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"owner\">Owner</option>\r\n                <option value=\"tenanted\">Tenanted</option>\r\n              </select>\r\n              <p className='text-red-500 absolute text-xs'>{formik.touched.categoryApplication && formik.errors.categoryApplication ? formik.errors.categoryApplication : null}</p>\r\n            </div>\r\n\r\n            <div className='m-3'>\r\n              <label htmlFor=\"ward\">Ward Number<span className='text-red-700 font-semibold'>*</span></label>\r\n              <select {...formik.getFieldProps('ward')} name='ward' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">Ward 1</option>\r\n                <option value=\"2\">Ward 2</option>\r\n                <option value=\"3\">Ward 3</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-span-12 my-5 m-3'>\r\n            <div className='text-2xl text-center text-gray-600 font-semibold'>Applicant Details</div>\r\n            <p className='border-b border-gray-500'></p>\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-4'>\r\n\r\n            <div className='m-3'>\r\n              <label htmlFor=\"applicantName\">Name of Applicant<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('applicantName')} type=\"text\" name='applicantName' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"mobileNo\">Mobile No<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('mobileNo')} type=\"text\" name='mobileNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"email\">Email<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('email')} type=\"email\" name='email' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"panNo\">PAN No.<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('panNo')} type=\"text\" name='panNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n            </div>\r\n            {/* <div className='m-3'>\r\n              <label htmlFor=\"aadharNo\">Aadhar No.<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('aadharNo')} type=\"text\" name='aadharNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n            </div> */}\r\n\r\n          </div>\r\n\r\n          <div className='m-3'>\r\n            <label htmlFor=\"address\">Address<span className='text-red-700 font-semibold'>*</span></label>\r\n            <textarea {...formik.getFieldProps('address')} name='address' rows=\"3\" className='block w-full border px-2 border-gray-600 rounded shadow' ></textarea>\r\n            <p className='text-red-500 text-xs'>{formik.touched.address && formik.errors.address ? formik.errors.address : null}</p>\r\n          </div>\r\n\r\n          <div className='col-span-12 my-5 m-3'>\r\n            <div className='text-2xl text-center text-gray-600 font-semibold'>Dog Details</div>\r\n            <p className='border-b border-gray-500 mt-3'></p>\r\n          </div>\r\n\r\n          <div className='grid grid-cols-1 md:grid-cols-4'>\r\n\r\n            <div className='m-3'>\r\n              <label htmlFor=\"petName\">Name of Dog<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('petName')} type=\"text\" name='petName' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.petName && formik.errors.petName ? formik.errors.petName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"petGender\">Gender<span className='text-red-700 font-semibold'>*</span></label>\r\n              <select {...formik.getFieldProps('petGender')} type=\"text\" name='petGender' className='block w-full h-9 border px-2 border-gray-600 rounded shadow'>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.petGender && formik.errors.petGender ? formik.errors.petGender : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"dogBirthDate\">Date of Birth<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('dogBirthDate')} type=\"date\" name='dogBirthDate' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dogBirthDate && formik.errors.dogBirthDate ? formik.errors.dogBirthDate : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"dogIdentity\">Identity Mart<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('dogIdentity')} type=\"text\" name='dogIdentity' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dogIdentity && formik.errors.dogIdentity ? formik.errors.dogIdentity : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"breed\">Breed<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('breed')} type=\"text\" name='breed' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.breed && formik.errors.breed ? formik.errors.breed : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"color\">Color<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('color')} type=\"text\" name='color' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.color && formik.errors.color ? formik.errors.color : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"doctorName\">Veterinary Doctor Name<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('doctorName')} type=\"text\" name='doctorName' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.doctorName && formik.errors.doctorName ? formik.errors.doctorName : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"doctorRegNo\">Doctor’s MSVC/VCI registration number <span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('doctorRegNo')} type=\"text\" name='doctorRegNo' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.doctorRegNo && formik.errors.doctorRegNo ? formik.errors.doctorRegNo : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"dateOfRabies\">Date of Rabies<span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('dateOfRabies')} type=\"date\" name='dateOfRabies' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dateOfRabies && formik.errors.dateOfRabies ? formik.errors.dateOfRabies : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"dateOfLepVaccine\">Date of Leptospirosis Vaccination <span className='text-red-700 font-semibold'>*</span></label>\r\n              <input {...formik.getFieldProps('dateOfLepVaccine')} type=\"text\" name='dateOfLepVaccine' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' />\r\n              <p className='text-red-500 text-xs'>{formik.touched.dateOfLepVaccine && formik.errors.dateOfLepVaccine ? formik.errors.dateOfLepVaccine : null}</p>\r\n            </div>\r\n            <div className='m-3'>\r\n              <label htmlFor=\"dogFrom\">Dog From<span className='text-red-700 font-semibold'>*</span></label>\r\n              <select {...formik.getFieldProps('dogFrom')} type=\"text\" name='dogFrom' className='block w-full h-9 border px-2 border-gray-600 rounded shadow' >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"transferred\">Dog being transferred</option>\r\n              <option value=\"bought\">Dog being bought?</option>\r\n              <option value=\"Adopted\">Stray Dog Adopted</option>\r\n              <option value=\"outside\">Dog brought from outside Jharkhand</option>\r\n              <option value=\"owners\">Puppy born to owners Dog</option>\r\n              </select>\r\n              <p className='text-red-500 text-xs'>{formik.touched.dogFrom && formik.errors.dogFrom ? formik.errors.dogFrom : null}</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className='flex justify-center my-10'>\r\n          <button type='submit' className='bg-indigo-700 px-8 py-2 text-white rounded shadow'>Next</button>\r\n        </div>\r\n      </form>\r\n\r\n\r\n      {/* <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-4\">\r\n                    <div className=\"col-span-4 grid grid-cols-1 md:grid-cols-4\">\r\n                        <div className={`${inputContainerStyle}`}>\r\n                            <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Email address</label>\r\n                            <input type=\"text\" {...formik.getFieldProps('email')} className={`${inputStyle}`} />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                        </div>\r\n                        <div className={`${inputContainerStyle}`}>\r\n                            <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Password Through</label>\r\n                            <input type=\"password\" {...formik.getFieldProps('password')} className={`${inputStyle}`} />\r\n                            <p className='text-red-500 text-xs'>{formik.touched.password && formik.errors.password ? formik.errors.password : null}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetRegistrationFormIndex\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { PetAccordionPage } from './Form/PetAccordionPage'\r\nimport PetDocumentAndPayment from './Form/PetDocumentAndPayment'\r\nimport PetRegistrationFormIndex from './Form/PetRegistrationFormIndex'\r\n\r\nconst PetRegistrationIndex = () => {\r\n  const [currentScreen, setCurrentScreen] = useState(1)\r\n\r\n  console.log(\"currentScreen\", currentScreen)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-12 space-x-10 my-10 mx-8\">\r\n        <div className='col-span-9 border border-gray-400 rounded p-5'>\r\n          <p className=\"border-2 border-indigo-400 bg-indigo-200 p-2 text-center text-xl shadow-md\">You are applying <span className='font-semibold'> Pet Registration </span></p>\r\n          <p className={`${currentScreen == 1 ? 'block' : 'hidden'}`}> <PetRegistrationFormIndex screen={setCurrentScreen} /> </p>\r\n          <p className={`${currentScreen == 2 ? 'block' : 'hidden'}`}> <PetDocumentAndPayment screen={setCurrentScreen} /></p>\r\n        </div>\r\n        <div className='col-span-3 border border-gray-400 p-3'>\r\n          <p className=\"border-2 border-indigo-400 p-2 text-center bg-white text-xl shadow-md\"> Frequently Asked Questions </p>\r\n          <PetAccordionPage />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetRegistrationIndex","\r\nimport React from \"react\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport BackendUrl from \"../../../Components/ApiList/BackendUrl\";\r\nexport const MydocUrl = \"http://192.168.0.15:8000/\";\r\n\r\nconst baseUrl = \"http://192.168.0.15:8000/\";\r\n// const baseUrl = BackendUrl + '/';\r\nexport const TRADE = {\r\n  UPDATE_API_LIST: baseUrl + \"api/edit-api/\", //requires an id param at the end\r\n  GET_API_BY_ID: baseUrl + \"api/get-api-by-id/\", //requires an id param at the end\r\n  SAVE_API_LIST: baseUrl + \"api/save-api\",\r\n  GET_API_LIST: baseUrl + \"api/get-all-apis\",\r\n  MASTER_DATA_API: baseUrl + \"api/trade/getApplyData/\", //requires an posst data as application type and licencId submission\r\n  POST_MASTER_DATA_API: baseUrl + \"api/trade/apply/\", //requires an STRING param at the end /post method will perform application submission\r\n  VALIDATE_HOLDING: baseUrl + \"api/trade/property/by-holding\", //request payload is holding no\r\n  GET_CHARGE: baseUrl + \"api/trade/application/get-demand\", //request payload is applicationType, areaSqft, natureOfBusiness[id],tocStatus,\r\n  SEARCH_LICENSE_FOR_APPLY: baseUrl + \"api/trade/searchLicense\", //provide license number as the post data with application type\r\n  GET_DENIAL_DETAILS: baseUrl + \"api/trade/notice/details\", // taken notice no as (post data) in it's required parameter\r\n  GET_APPLICATION_LIST: baseUrl + \"api/trade/inbox\", // in get method return all application List INBOX\r\n  GET_APPLICATION_LIST_OUTBOX: baseUrl + \"api/trade/outbox\", // in get method return all application List OUTBOX\r\n  GET_LICENSE_DTL_BY_ID: baseUrl + \"api/trade/getLicenceDtl\", //returns license details of a particular application....send id in parameter;\r\n  GET_LICENSE_DTL_BY_ANYTHING: baseUrl + \"api/trade/getApplicationList/\", //returns application list. Takes post data as entity_name && entity_value\r\n  POST_LICENSE_TO_LEVEL: baseUrl + \"api/trade/postNext/\", // forward or backward or BTC application on workflow ... post data {licenceId,btn,comment}\r\n  POST_MASTER_DATA_API: baseUrl + \"api/trade/apply/\", // forward or backward or BTC application on workflow ... post data {licenceId,btn,comment}\r\n  DEPENDENT_WARD_CITIZEN: baseUrl + \"api/get-newward-by-oldward\", // forward or backward or BTC application on workflow ... post data {licenceId,btn,comment}\r\n\r\n  POST_APPLY_APPLICATION_FOR_CITIZEN: baseUrl + \"api/trade/application/citizen-add\", // post method for citizen application\r\n  POST_GETLICENSE_DETAIL_BY_ID_FOR_BO:\r\n    baseUrl + \"api/trade/updateApplicationById/\", // gets license data with master data for back office\r\n  POST_UPDATE_LICENSE_DTL: baseUrl + \"api/trade/updateBasicDtl/\", // gets license data with master data for back office\r\n\r\n  // DOCUMENT_REQUIREMENT: baseUrl + \"api/trade/documentUpload/\",             // GET + POST method for requirement and fulfilment of the documents\r\n  DOCUMENT_REQUIREMENT: baseUrl + \"api/trade/application/doc-list/\",             // GET + POST method for requirement and fulfilment of the documents\r\n  DOCUMENT_UPLOAD: baseUrl + \"api/trade/application/upload-document\",\r\n  GET_UPLOADED_DOCUMENTS: baseUrl + \"api/trade/appliction/documents\",             // GET method for getting uploaded document list the documents\r\n  GET_DOCUMENT_FOR_VERIFICATION: baseUrl + \"api/workflows/document/verify-reject\",             // GET method for getting uploaded document list the documents\r\n\r\n  GET_PAYMENT_DATA: baseUrl + \"api/trade/payment-receipt/\",             // GET method for getting payment information\r\n  PAY_ONLINE: baseUrl + \"api/trade/application/pay-razorpay-charge\",             // GET method for getting payment information\r\n  CONFIRM_TRADE_ONLINE_PAYMENT: baseUrl + \"api/trade/application/conform-razorpay-tran\",\r\n\r\n  SEND_INDEPENDENT_COMMENT: baseUrl + \"api/trade/postComment/\",             // POST method for sending idependent comment  params is licenceId and comments \r\n  GET_PROVISIONAL_DATA: baseUrl + \"api/trade/provisional-certificate/\",             // GET method for getting payment information\r\n  GET_TRADE_LICENSE_DATA: baseUrl + \"api/trade/license-certificate/\",             // GET method for getting payment information\r\n\r\n  ESCALATE_APPLICATION: baseUrl + \"api/trade/escalate/\",             // POST method for sending idependent comment  params is licenceId and comments\r\n  GET_ROLE_BY_WORKFLOW: baseUrl + \"api/workflow/getRoleByWorkflow\",\r\n  GET_ULB_LIST: baseUrl + \"api/get-all-ulb\",                         //POST method for getting ulb list \r\n  GET_CITIZEN_APPLICATION_LIST: baseUrl + \"api/trade/application/citizen-application\",                          //POST method for getting ulb list\r\n  GET_CITIZEN_APPLICATION_BY_ID: baseUrl + \"api/trade/application/citizen-by-id\",                        //POST method for getting ulb list\r\n\r\n  GET_RENEWABLE_LICENSE_LIST: baseUrl + \"api/trade/application/renewable-list\",                           //POST method for getting ulb list\r\n  GET_AMENDABLE_LICENSE_LIST: baseUrl + \"api/trade/application/amendable-list\",                           //POST method for getting ulb list\r\n  GET_SURRENDERABLE_LICENSE_LIST: baseUrl + \"api/trade/application/surrenderable-list\"                           //POST method for getting ulb list\r\n\r\n}\r\n\r\nexport const PROPERTY = {\r\n  POST_SEARCH_HOLDING_FOR_DEACTIVATION:\r\n    baseUrl + \"api/property/searchByHoldingNo/\", // post data is holding No\r\n  POST_GETHOLDING_DETAIL_BY_ID: baseUrl + \"api/property/deactivationRequest/\", // GET METHOD for getting holding data by prop id and POST METHOD when submitting deactivation request\r\n  POST_DEACTIVATION_INBOX_LIST: baseUrl + \"api/property/inboxDeactivation/\", // GET METHOD for getting holding data by prop id and POST METHOD when submitting deactivation request\r\n\r\n  POST_DEACTIVATION_DETAILS_BY_REQUEST_ID:\r\n    baseUrl + \"api/property/getDeactivationDtls\", // POST method for getting property data in deactivation workflow\r\n  POST_DEACTIVATION_TO_LEVEL: baseUrl + \"api/property/postNextDeactivation\", // POST method for getting property data in deactivation workflow\r\n\r\n  POST_GET_BIFURCATION: baseUrl + \"api/property/applyBifurcation/\", // POST+ GET method for getting property data by id in bifuraction request\r\n  GET_BIFURCATION_MASTER_DATA: baseUrl + \"api/property/saf/master-saf\", // POST method for getting property data in deactivation workflow\r\n};\r\n\r\nexport const HEADER = () => {\r\n  // let token = JSON.parse(window.localStorage.getItem(\"token\"));\r\n  // let HEADER = {\r\n  //   headers: {\r\n  //     Authorization: `Bearer ${token}`,\r\n  //     Accept: \"application/json\",\r\n  //   },\r\n  // };\r\n\r\n  return ApiHeader();\r\n};\r\n\r\n// console.log(\"testing\", HEADER());\r\n"],"names":["ApiHeader","token","window","localStorage","getItem","timeout","headers","Authorization","Accept","WaterApiList","baseUrl","BackendUrl","header","api_ulbList","api_wardList","api_userProfileDetails","api_NewWaterConnection","api_getSafHoldingDetails","api_citizenApplications","api_citizenApprovedApplications","api_rzpWaterOrderId","api_getTranNo","api_paymentReceipt","api_waterConsumerPaymentReceipt","api_waterApplicationDelete","api_waterViewPendingApplication","api_waterViewDocumetTobeuploaded","api_waterUploadDoc","api_waterApprovedApplicationDetails","api_waterConsumerPaymentHistory","api_waterListDemand","api_getHoldingSafOfLogin","api_waterDemandCalculation","api_waterDemandPayment","CitizenApplyApiList","console","log","api_safInboxList","api_getSafDetailsById","api_getMasterData","api_postNewAssessment","api_getLocationByUlb","api_getProfileDetails","api_EditMyProfile","api_editCitizenProfile","api_getAllUlb","api_citizenLogin","api_citizenRegister","api_deleteSaf","api_applicationListByModule","api_getAllApplicationList","api_safindependentComment","api_getTranscationHistory","api_getSpecificHoldingTranscationHistory","api_getAppicationFullDetail","api_getHoldingDetails","api_postWaterHarvestindDocCode","api_getMasterDataWaterHarvesting","api_postWaterHarvestingData","api_getAllModuleTranscation","verifyPaymentStatus","propertyGenerateOrderId","propertyGenerateOrderIdDirect","propertyGenerateHoldingOrderId","api_DemandDetailById","api_getsafDemandById","api_getPropertyApplicationList","api_listSafDocument","api_uploadSafDocument","api_getPaymentData","get_ConcessionDetailsById","get_HarvestingDetailsById","get_ObjectionDetailsById","api_getHoldingDemandById","api_getDirectHoldingDemandById","api_wardByUlb","api_newWardByOldWard","api_zoneByUlb","api_citizenLogin2","api_reviewCalculation","api_getTransactionNoForReceipt","api_getHoldingReceiptUrl","api_getStaticSafDetails","api_changePassword","api_forgotPassword","get_ConcessionDocumentsToUpload","post_ConcessionDocumentUpload","get_ObjectionDocumentsToUpload","post_ObjectionDocumentUpload","get_HarvestingDocumentsToUpload","post_HarvestingDocumentUpload","api_postPropertyPayment","api_postSafPayment","api_verifyHolding","api_verifyMobile","api_editCitizenSaf","RazorpayPaymentScreen","generatedData","dreturn","options","currency","image","Logo","name","description","order_id","orderId","handler","response","callApiLog","razorpay_payment_id","returnData","status","message","data","prefill","email","contact","mobile","notes","ulbId","departmentId","applicationId","workflowId","userId","theme","color","pay","Razorpay","on","callApiLogFailed","open","sendPayload","razorpay_order_id","razorpay_signature","axios","then","res","catch","err","error","metadata","payment_id","reason","source","step","code","PetAccordionPage","Accordion","AccordionItem","toggle","className","AccordionPanel","id","Context","React","children","selected","setSelected","toggleItem","prevState","Provider","value","useAccordion","style","role","onClick","AngleUpIcon","AngleDownIcon","ref","inlineStyle","height","current","scrollHeight","fill","strokeWidth","viewBox","xmlns","d","stroke","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","props","modalIsOpen","setIsOpen","useState","paymentStatus","setPaymentStatus","transData","navigate","useNavigate","paymentData","closeModal","useEffect","openPaymentModal","isOpen","onAfterOpen","onRequestClose","contentLabel","src","imgSucess","alt","srcset","transectionNo","applicationNo","tranType","amount","transectionDate","size","connectionCharges","charge_category","conn_fee","penalty","setOpenPaymentModal","prev","type","screen","validationSchema","yup","ulb","required","applicantName","formik","useFormik","initialValues","enableReinitialize","onSubmit","values","resetForm","handleSubmit","onChange","event","target","htmlFor","getFieldProps","touched","errors","applyThrough","holdingNo","categoryApplication","mobileNo","panNo","rows","address","petName","petGender","dogBirthDate","dogIdentity","breed","doctorName","doctorRegNo","dateOfRabies","dateOfLepVaccine","dogFrom","currentScreen","setCurrentScreen","MydocUrl","TRADE","UPDATE_API_LIST","GET_API_BY_ID","SAVE_API_LIST","GET_API_LIST","MASTER_DATA_API","POST_MASTER_DATA_API","VALIDATE_HOLDING","GET_CHARGE","SEARCH_LICENSE_FOR_APPLY","GET_DENIAL_DETAILS","GET_APPLICATION_LIST","GET_APPLICATION_LIST_OUTBOX","GET_LICENSE_DTL_BY_ID","GET_LICENSE_DTL_BY_ANYTHING","POST_LICENSE_TO_LEVEL","HEADER"],"sourceRoot":""}