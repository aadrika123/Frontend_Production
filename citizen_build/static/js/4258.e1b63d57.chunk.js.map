{"version":3,"file":"static/js/4258.e1b63d57.chunk.js","mappings":"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","sources":["Components/BackComponent.js","Pages/Contents/CitizenSafForm/FindHoldingNavigate.js","Pages/Contents/PropertyDashboard.js","Pages/Component/LoaderComponent.js","Pages/Contents/ParticularModuleApplication.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction BackComponent() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className='flex flex-row bg-sky-200 w-16 rounded-md shadow-sm shadow-sky-200 justify-between items-center py-1 float-right p-1 mb-2'>\r\n                    <h1 className='text-gray-700 font-semibold'>back</h1>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5 text-gray-700 -mt-2 \">\r\n                        <path fill-rule=\"evenodd\" d=\"M7.793 2.232a.75.75 0 01-.025 1.06L3.622 7.25h10.003a5.375 5.375 0 010 10.75H10.75a.75.75 0 010-1.5h2.875a3.875 3.875 0 000-7.75H3.622l4.146 3.957a.75.75 0 01-1.036 1.085l-5.5-5.25a.75.75 0 010-1.085l5.5-5.25a.75.75 0 011.06.025z\" clip-rule=\"evenodd\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BackComponent","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Swati Sharma\r\n//    Version - 1.0\r\n//    Date - 20 oct 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - CitizenSafEntryScreen\r\n//    DESCRIPTION - CitizenSafEntryScreen Component to find holding for mutataion in property\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { TbSearch } from 'react-icons/tb'\r\nimport { FcHome } from 'react-icons/fc'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport CitizenApplyApiList from '../../../Components/CitizenApplyApiList'\r\n\r\n\r\nfunction FindHoldingNavigate(props) {\r\n\r\n    const { api_getHoldingDetails } = CitizenApplyApiList()\r\n\r\n\r\n    const notify = (message) => {\r\n        toast.dismiss(message)\r\n        toast.info(message)\r\n    }\r\n\r\n    const [mutationStatus, setmutationStatus] = useState('col-span-12 md:col-span-4 py-6')// to maintain the hide show state of mutation\r\n    const [dataListStatus, setDataListStatus] = useState(false) //to toggle hide show of data list table after finding the holding data from search holding\r\n    const [holdingData, setholdingData] = useState() //to hold found holding data\r\n    const [asstypeStatus, setasstypeStatus] = useState('both') //to hold found holding data\r\n\r\n    const navigate = useNavigate()\r\n    //function to hide and show and animate assessment options\r\n    const assStatus = (type) => {\r\n        setasstypeStatus(type)\r\n\r\n        if (type == 'mu') {\r\n            setmutationStatus('col-span-12 md:col-span-12 py-0 block')\r\n        }\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        holdingNo: yup.string().required('Enter holding no.')\r\n    })\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            holdingNo: ''\r\n        },\r\n\r\n        onSubmit: (values, resetForm) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            console.log('propertyaddressdetails ', values)\r\n            findHolding(values)\r\n        }\r\n        , validationSchema\r\n    })\r\n\r\n    // let holdingNo = Hol / Ward / 001\r\n\r\n    //function to fetch holding data and set into data table\r\n    const findHolding = (values) => {\r\n        // let holdingNo = formik.holdingNo\r\n\r\n        let token = window.localStorage.getItem('token')\r\n        console.log('token at basic details is post method...', token)\r\n        const header = {\r\n            headers:\r\n            {\r\n                Authorization: `Bearer ${token}`,\r\n                Accept: 'application/json',\r\n            }\r\n        }\r\n        const requestBody = {\r\n            \"wardId\": 50,\r\n            \"holdingNo\": values.holdingNo\r\n\r\n        }\r\n        console.log('form request body....', requestBody)\r\n\r\n        // return\r\n        axios.post(`${api_getHoldingDetails}`, requestBody, header)\r\n            .then(function (response) {\r\n\r\n                console.log('verified holding no', response.data)\r\n                setholdingData(response.data)\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr....holding ', error);\r\n            })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.fun(false)\r\n    }\r\n\r\n    console.log(\"data for mutation ....\", holdingData)\r\n    return (\r\n        <>\r\n            <div className=''>\r\n                <div className=' overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 md:inset-0 h-modal md:h-full justify-center items-center bg-gray-600 opacity-95 '>\r\n\r\n                    <section className={`${(mutationStatus == 'col-span-12 md:col-span-12 py-0 block') ? 'block' : 'block'} w-11/12 md:w-9/12 mx-auto mt-0 md:mt-32 text-gray-600 bg-white  body-font overflow-hidden p-3   `}>\r\n                        <div className='flex'>\r\n                            <div className='flex-1'>\r\n                                <h1 className=\"text-gray-900 text-xl title-font font-medium mb-4 flex items-center\"><FcHome className=\"inline\" />\r\n                                    <p className='ml-3 '>Find Holding</p>\r\n                                </h1>\r\n                            </div>\r\n                            <div className='flex-1 '>\r\n                                <button className='float-right' onClick={handleClose}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 text-red-500\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z\" clip-rule=\"evenodd\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"  grid grid-cols-6\">\r\n                                <div className=\" flex-1 form-group mb-3 col-span-4 md:col-span-2\">\r\n                                    <label className=\"form-label inline-block mb-1 text-gray-900 text-sm font-semibold \"><small className=\"block mt-1 text-sm font-semibold text-red-600 inline  \">*</small>Holding no.</label>\r\n                                    <input {...formik.getFieldProps('holdingNo')} type=\"text\" className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        placeholder=\"Enter holding no.\" />\r\n                                    <span classNameName=\"text-red-600 absolute text-xs\">{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</span>\r\n                                </div>\r\n                                <div className=\"flex-1 form-group mb-2 col-span-1 md:col-span-1 align-bottom\">\r\n                                    <label className=\"form-label inline-block mb-1 text-gray-900 text-sm font-semibold invisible \"><small className=\"block mt-1 text-sm font-semibold text-red-600 inline  \">*</small>Enter Holding no.</label>\r\n                                    <div className='md:px-10 text-right'>\r\n                                        <button onClick={() => setDataListStatus(true)} type=\"submit\" className=\" px-6 py-2 bg-green-600 text-white font-medium text-xs leading-tight  rounded  hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out\"><TbSearch className=\"inline text-sm font-bold\" />Find</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n                        {/* found holding */}\r\n                        <ToastContainer />\r\n                        {\r\n                            dataListStatus && <div className=\"py-2 overflow-x-auto bg-white\">\r\n                                <div className=\"inline-block min-w-full rounded-lg overflow-hidden bg-white\">\r\n\r\n                                    <table className=\"min-w-full leading-normal\">\r\n                                        <thead className='font-bold text-left text-sm bg-sky-300'>\r\n                                            <tr >\r\n                                                <th className=\"px-2 py-3 border-b border-gray-200 text-gray-900  text-left text-xs uppercase text-left\">Holding No</th>\r\n                                                <th className=\"px-2 py-3 border-b border-gray-200 text-gray-900  text-left text-xs uppercase text-left\">Owner Name</th>\r\n                                                <th className=\"px-2 py-3 border-b border-gray-200 text-gray-900  text-left text-xs uppercase text-left\">Guardian Name</th>\r\n                                                <th className=\"px-2 py-3 border-b border-gray-200 text-gray-900  text-left text-xs uppercase text-left\">Address</th>\r\n                                                <th className=\"px-2 py-3 border-b border-gray-200 text-gray-900  text-left text-xs uppercase text-left\">Action</th>\r\n\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody className=\"text-sm\">\r\n                                            <tr className=\"bg-white shadow-lg border-b border-gray-200\">\r\n                                                <td className=\"px-2 py-2 text-sm text-left text-gray-900 font-bold\">{holdingData?.data?.holding_no}</td>\r\n                                                {holdingData?.data?.owners?.map((items) => (\r\n                                                    <>\r\n                                                        <td className=\"px-2 py-2 text-sm text-left text-gray-900 font-bold\">{items?.owner_name}</td>\r\n                                                        <td className=\"px-2 py-2 text-sm text-left text-gray-900 font-bold\">{items?.guardian_name}</td>\r\n\r\n                                                    </>\r\n                                                ))}\r\n                                                <td className=\"px-2 py-2 text-sm text-left text-gray-900 font-bold\">{holdingData?.data?.prop_address}</td>\r\n                                                <td className=\"px-2 py-2 text-sm text-left\" onClick={() => notify()}>\r\n                                                    {(asstypeStatus == 'mu' || asstypeStatus == 'both') && <button onClick={() => navigate(`/safform/mu/${holdingData?.data?.property_id}`)} type=\"button\" className=\"ml-2 px-2 py-1 bg-orange-300 text-black font-bold hover:text-white text-xs leading-tight  rounded  hover:bg-orange-700 hover:shadow-lg focus:bg-orange-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-orange-800 active:shadow-lg transition duration-150 ease-in-out\">Mutation</button>}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </section>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FindHoldingNavigate","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ThemeStyle from '../../Components/ThemeStyle'\r\nimport PropertySidebar from '../Component/ModuleWiseSidebar/PropertySidebar'\r\nimport axios from 'axios'\r\nimport CitizenApplyApiList from '../../../src/Components/CitizenApplyApiList'\r\nimport BackComponent from '../../Components/BackComponent'\r\n\r\nfunction PropertyDashboard(props) {\r\n\r\n\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [yourProperty, setyourProperty] = useState(false)\r\n\r\n\r\n\r\n\r\n    console.log(\"-----PROPS applicationListByModule PROPERTY----\", props.applicationList?.Property?.SAF)\r\n    console.log(\"---by holding property list--------\", props?.propertyApplicationList?.Holding?.applications)\r\n\r\n    let activePropertyApplicationList = props.applicationList?.Property?.SAF\r\n    let approvePropertyList = props.propertyApplicationList?.Holding?.applications\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='-mt-8 p-2 '>\r\n                <Link to='/dashboardEntry'>\r\n                    <BackComponent />\r\n                </Link>\r\n            </div>\r\n\r\n            {/* take a parent div ...style it as displayed below    ,....make it a grid with col-5 */}\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-2  w-full '>\r\n\r\n                {/* place module wise sidebar here ..it has a col-span of 1*/}\r\n                {/* <div className='w-full col-span-2'>\r\n                    <PropertySidebar />\r\n                </div> */}\r\n\r\n\r\n                {/* Rest of the component will go here ....it has a col-span of 4*/}\r\n                <div className='col-span-10 w-full bg-gray-50 rounded-lg '>\r\n\r\n                    {/* This message will change according to the information we want to display */}\r\n                    <h1 className='font-mono h-10 text-3xl text-center  text-sky-500 hover:bg-sky-50 py-1 px-4  m-4'>YOUR APPLICATION  !</h1>\r\n\r\n                    <div className='flex flex-row'>\r\n                        <div className='text-xs bg-slate-200 px-3 py-2 ml-8 shadow-md text-gray-700 font-bold'>\r\n                            <button>All</button>\r\n                        </div>\r\n                        <div className='text-xs bg-amber-300 px-3 py-2 ml-8 shadow-md text-gray-700  font-bold'>\r\n                            <button type='button' onClick={() => setyourProperty(!yourProperty)}>Your Property</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* application list*/}\r\n                    {yourProperty != true &&\r\n                        < div className={``}>\r\n\r\n                            {activePropertyApplicationList?.map((items) => (\r\n\r\n                                <div class=\"flex bg-white shadow-lg rounded-lg mx-4 md:mx-auto my-6 max-w-2xl md:max-w-4xl \">\r\n                                    <div class=\"flex items-start px-4 py-6\">\r\n                                        <img class=\"w-8 h-8  object-cover ml-4 shadow\" src=\"https://cdn-icons-png.flaticon.com/512/609/609803.png\" alt=\"avatar\"\r\n                                        />\r\n                                        <div className=''><button className='bg-amber-500 text-gray-50 text-sm py-0 px-3 mt-9  -ml-10 rounded-sm shadow-md' onClick={() => navigate('/propApplicationDetails/' + items.application_id)}>view</button></div>\r\n                                        <div class=\"pl-9\">\r\n                                            <>\r\n                                                <div class=\"flex items-center justify-between\">\r\n                                                    <h2 class=\"text-md font-semibold text-gray-900 -mt-1\">SAF NO : {items.saf_no} </h2>\r\n                                                    <small class=\"text-sm text-gray-700 ml-8 font-semibold\">STATUS : PENDING</small>\r\n\r\n                                                </div>\r\n                                            </>\r\n                                            <div className='flex flex-row mt-2 space-x-8'>\r\n\r\n                                                <h1 className={`text-sm text-gray-800 `}>WARD NO : 52/1</h1>\r\n                                                <h1 className={`text-sm text-gray-800 `}>ASSESSMENT TYPE : {items.assessment_type}</h1>\r\n                                                <p class=\"text-gray-700 text-sm\">APPLY DATE : {items.created_at} </p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n\r\n                    {/* Property list */}\r\n\r\n                    <div className={``}>\r\n\r\n                        {approvePropertyList?.map((items) => (\r\n\r\n                            <div class=\"flex bg-white shadow-lg rounded-lg mx-4 md:mx-auto my-6 max-w-2xl md:max-w-4xl \">\r\n                                <div class=\"flex items-start px-4 py-6\">\r\n                                    <img class=\"w-8 h-8  object-cover ml-4 shadow\" src=\"https://cdn-icons-png.flaticon.com/512/609/609803.png\" alt=\"avatar\"\r\n                                    />\r\n                                    <div className=''><button className='bg-amber-500 text-gray-50 text-sm py-0 px-3 mt-9  -ml-10 rounded-sm shadow-md'onClick={() => navigate(`/holdingPropertyDetails/${items.prop_id}`)}>view</button></div>\r\n                                    <div class=\"pl-9\">\r\n                                        <>\r\n                                            <div class=\"flex items-center justify-between\">\r\n                                                <h2 class=\"text-md font-semibold text-gray-900 -mt-1\">HOLDING NO : {items.new_holding_no}</h2>\r\n                                                <small class=\"text-sm text-gray-700 font-semibold\">STATUS: APPROVED</small>\r\n                                            </div>\r\n                                        </>\r\n                                        <div className='flex flex-row mt-2 space-x-8'>\r\n\r\n                                            <h1 className={`text-sm text-gray-800 `}>WARD NO : 52/1</h1>\r\n                                            <h1 className={`text-sm text-gray-800 `}>ASSESSMENT TYPE : {items.assessment_type}</h1>\r\n                                            <p class=\"text-gray-700 text-sm\">APPLY DATE : {items.created_at} </p>\r\n\r\n                                        </div>\r\n                                        {items.holding_no == \"\" ? '' :\r\n                                            <>\r\n\r\n                                                <div className='flex flex-row mt-2 space-x-4 '>\r\n                                                    <button className='text-xs bg-teal-500 text-gray-50 py-1 rounded-md px-3 shadow-lg ' onClick={() => navigate(`/safform/re/${items.prop_id}`)}>RE-ASSESSMENT</button>\r\n                                                    <button className='text-xs bg-teal-500 text-gray-50 py-1 rounded-md px-3 shadow-lg ' onClick={() => navigate(`/safform/waterHarvesting/${items.prop_id}`)}> WATER HARVESTING</button>\r\n\r\n                                                    <button className='text-xs bg-teal-500 text-gray-50 py-1 rounded-md px-3 shadow-lg ' onClick={() => navigate(`/con-form/${items.prop_id}`)}>CONCESSION</button>\r\n                                                    <button className='text-xs bg-teal-500 text-gray-50 py-1 rounded-md px-3 shadow-lg ' onClick={() => navigate(`/objection/${items.prop_id}`)}>OBJECTION</button>\r\n                                                </div>\r\n\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PropertyDashboard","import React, { useState } from 'react'\r\nimport { ColorRing, MutatingDots, Dna, CirclesWithBar } from 'react-loader-spinner';\r\n\r\nfunction LoaderComponent(props) {\r\n    // console.log('props loader ', props.show)\r\n    return (\r\n        <div className={`${props.show ? 'grid' : 'hidden'} bg-transparent bg z-20 absolute w-full h-screen`}>\r\n            <div className=\"h-24 w-24 mx-auto my-[15%]\">\r\n                <ColorRing\r\n                    visible={true}\r\n                    height=\"80\"\r\n                    width=\"80\"\r\n                    ariaLabel=\"blocks-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"blocks-wrapper\"\r\n                    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n                />\r\n                {/* <MutatingDots\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                    color=\"#4fa94d\"\r\n                    secondaryColor='yellow'\r\n                    radius='12.5'\r\n                    ariaLabel=\"mutating-dots-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"\"\r\n                    visible={true}\r\n                /> */}\r\n                {/* <Dna\r\n                    visible={true}\r\n                    height=\"80\"\r\n                    width=\"80\"\r\n                    ariaLabel=\"dna-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"dna-wrapper\"\r\n                /> */}\r\n                {/* <CirclesWithBar\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                    color=\"mediumturquoise  \"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"\"\r\n                    visible={true}\r\n                    outerCircleColor=\"cornflowerblue \"\r\n                    innerCircleColor=\"darkturquoise \"\r\n                    barColor=\"\"\r\n                    ariaLabel='circles-with-bar-loading'\r\n                /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoaderComponent","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport CitizenProfileComponent from '../CitizenDashboardPage/CitizenProfileComponent';\r\nimport PropertyDashboard from './PropertyDashboard';\r\nimport axios from 'axios'\r\nimport CitizenApplyApiList from '../../../src/Components/CitizenApplyApiList';\r\nimport LoaderComponent from '../Component/LoaderComponent';\r\n\r\n\r\nfunction ParticularModuleApplication() {\r\n\r\n    const { api_applicationListByModule } = CitizenApplyApiList()\r\n    const [applicationListByModule, setapplicationListByModule] = useState()\r\n    const [propertyApplicationList, setpropertyApplicationList] = useState()\r\n    const [show, setshow] = useState(false)\r\n\r\n    let module = useParams();\r\n    console.log(\"module...\", module.module)\r\n\r\n    let token = window.localStorage.getItem('token')\r\n \r\n    // const header = {\r\n    //     headers:\r\n    //     {\r\n    //         Authorization: `Bearer ${token}`,\r\n    //         Accept: 'application/json',\r\n    //     }\r\n    // }\r\n\r\n    //{////********ApplicationList*******//////}\r\n    const fetchApplicationList = () => {\r\n        showLoader(true)\r\n        axios.post(api_applicationListByModule,\r\n            {\r\n                module: module.module\r\n            },\r\n            {\r\n                headers:\r\n                {\r\n                    Authorization: `Bearer ${token}`,\r\n                    Accept: 'application/json',\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(\"apllication list holding of property----- \", response.data.data);\r\n                setapplicationListByModule(response.data.data)\r\n\r\n                setTimeout(()=>{\r\n                    showLoader(false)\r\n                },2000)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                showLoader(false)\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApplicationList();\r\n    }, [])\r\n\r\n\r\n     //{////********Property ApplicationList  by holding*******//////}\r\n     const fetchPropertyListByHolding = () => {\r\n        showLoader(true)\r\n        axios.post(api_applicationListByModule,\r\n            {\r\n                module: \"Holding\"\r\n            },\r\n            {\r\n                headers:\r\n                {\r\n                    Authorization: `Bearer ${token}`,\r\n                    Accept: 'application/json',\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(\"apllication list by holding 1----- \", response.data.data);\r\n                setpropertyApplicationList(response.data.data)\r\n\r\n                setTimeout(()=>{\r\n                    showLoader(false)\r\n                },2000)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                showLoader(false)\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPropertyListByHolding();\r\n    }, [])\r\n\r\n    const showLoader = (value) => {\r\n        setshow(value);\r\n    }\r\n\r\n\r\n    console.log(\"-----applicationListByModule PROPERTY----\", applicationListByModule)\r\n    console.log(\"-----property application list holding----\", propertyApplicationList)\r\n\r\n    return (\r\n        <>\r\n            <LoaderComponent show={show} />\r\n            <div className='w-full  rounded-lg  max-auto py-4 px-4'>\r\n                {module.module == 'Property' && <PropertyDashboard applicationList={applicationListByModule} propertyApplicationList={propertyApplicationList} showLoader={showLoader} />}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParticularModuleApplication"],"names":["className","xmlns","viewBox","fill","class","d","props","api_getHoldingDetails","CitizenApplyApiList","useState","dataListStatus","setDataListStatus","holdingData","setholdingData","asstypeStatus","navigate","useNavigate","validationSchema","yup","holdingNo","required","formik","useFormik","initialValues","onSubmit","values","resetForm","alert","JSON","stringify","console","log","findHolding","token","window","localStorage","getItem","header","headers","Authorization","Accept","requestBody","axios","then","response","data","catch","error","onClick","fun","handleSubmit","getFieldProps","type","placeholder","classNameName","touched","errors","holding_no","owners","map","items","owner_name","guardian_name","prop_address","toast","message","property_id","yourProperty","setyourProperty","applicationList","Property","SAF","propertyApplicationList","Holding","applications","activePropertyApplicationList","approvePropertyList","to","BackComponent","src","alt","application_id","saf_no","assessment_type","created_at","prop_id","new_holding_no","show","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","api_applicationListByModule","applicationListByModule","setapplicationListByModule","setpropertyApplicationList","setshow","module","useParams","useEffect","showLoader","setTimeout","value"],"sourceRoot":""}