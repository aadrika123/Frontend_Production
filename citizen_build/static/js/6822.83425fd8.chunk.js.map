{"version":3,"file":"static/js/6822.83425fd8.chunk.js","mappings":"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","sources":["Components/ApiList/ObjectionAssessmentApi.js","Pages/Contents/ObjectionEntryForm/ObjectionFloorTable.js","Pages/Contents/ObjectionEntryForm/ObjectionFloor.js","Pages/Contents/ObjectionEntryForm/ObjectionEntryForm.js","Pages/Contents/ObjectionEntryForm/ObjectionFormIndex.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionAssessmentApi\r\n// Description : Objection Assessment Error api list\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport BackendUrl from './BackendUrl'\r\n\r\nconst ObjectionAssessmentApi = () => {\r\n\r\n    const baseUrl = BackendUrl\r\n\r\n    const baseUrlT = 'http://192.168.0.105:8000'\r\n  \r\n    let apiLinks = {\r\n        \r\n                // to get id and type\r\n                getType : `${baseUrl}/api/property/objection/objection-type`,\r\n\r\n                // getAssessment : `${baseUrl}/assesment-details`,\r\n                getAssessment : `${baseUrl}/api/property/saf/get-prop-byholding`,\r\n                postClericalData : `${baseUrl}/api/property/objection/rectification`,\r\n                postAssessment : `${baseUrl}/api/property/objection/apply-objection`,\r\n        \r\n                // for list \r\n                getWardList: `${baseUrl}/api/property/saf/master-saf`,\r\n\r\n    }\r\n  \r\n    return apiLinks;\r\n\r\n}\r\n\r\nexport default ObjectionAssessmentApi\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\n// Export to : ObjectionRectification.js, ObjectionRectificationTable.js\r\n//////////////////////////////////////////////////////////////////////////","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport apiLinks from \"../../../Components/ApiList/ObjectionAssessmentApi\";\r\nimport axios from \"axios\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport './assets/fonts/Font.css'\r\n\r\nconst ObjectionFloorTable = (props) => {\r\n  const { usageTypeList, constructionTypeList, occupancyTypeList, getWardList } = apiLinks();\r\n\r\n  const [loader, setloader] = useState(false);\r\n  const [usageList, setusageList] = useState();\r\n  const [occupancyList, setoccupancyList] = useState();\r\n  const [constructionList, setconstructionList] = useState();\r\n  const [refresh, setrefresh] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setrefresh(refresh + 1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"working.......\");\r\n    setloader(true);\r\n    // getting usage type list\r\n    axios\r\n      .post(getWardList,{ulbId: props?.ulbId}, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"usage type list => \", res);\r\n        setusageList(res?.data?.data?.usage_type);\r\n        setoccupancyList(res?.data?.data?.occupancy_type)\r\n        setconstructionList(res?.data?.data?.construction_type)\r\n        setloader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"usage type error => \", err);\r\n        setloader(false);\r\n      });\r\n  }, [refresh]);\r\n\r\n  // useEffect(() => {\r\n  //   setloader(true);\r\n  //   //  getting occupancy type list\r\n  //   axios\r\n  //     .get(occupancyTypeList, ApiHeader())\r\n  //     .then((res) => {\r\n  //       console.log(\"occupancy type list => \", res);\r\n  //       setoccupancyList(res?.data);\r\n  //       setloader(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"occupancy type error => \", err);\r\n  //       setloader(false);\r\n  //     });\r\n  // }, [refresh]);\r\n\r\n  // useEffect(() => {\r\n  //   setloader(true);\r\n  //   //  getting construction type list\r\n  //   axios\r\n  //     .get(constructionTypeList, ApiHeader())\r\n  //     .then((res) => {\r\n  //       console.log(\"construction type list => \", res);\r\n  //       setconstructionList(res?.data);\r\n  //       setloader(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"construction type error => \", err);\r\n  //       setloader(false);\r\n  //     });\r\n  // }, [refresh]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      propFloorId : props?.floor?.id,\r\n      floorNo: props?.floor?.floor_mstr_id,\r\n      usageType: props?.floor?.usage_type_mstr_id,\r\n      occupancyType:  props?.floor?.occupancy_type_mstr_id,\r\n      constructionType:  props?.floor?.const_type_mstr_id,\r\n      buildupArea:  props?.floor?.builtup_area,\r\n      // dateFrom: props?.floor?.date_from,\r\n      // dateUpto: props?.floor?.date_upto,\r\n    },\r\n\r\n    enableReinitialize: true,\r\n    \r\n    onSubmit: (values) => {\r\n      console.log(\"floor values => \", values);\r\n      props.getfloor(values);\r\n      // props.updation()\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n     {loader && (\r\n        <div className=\"w-full z-10 absolute mx-auto text-center flex justify-center items-center top-1/2\">\r\n          <span className=\"inline\">\r\n            <ColorRing\r\n              visible={true}\r\n              height=\"120\"\r\n              width=\"120\"\r\n              ariaLabel=\"blocks-loading\"\r\n              wrapperStyle={{}}\r\n              wrapperClass=\"blocks-wrapper\"\r\n              colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\r\n            />\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      <tr className=\"bg-white shadow-lg border-b border-gray-200 poppins\">\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.floor_name}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.usage_type}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.occupancy_type}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">\r\n          {props?.floor?.construction_type}\r\n        </td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.builtup_area}</td>\r\n        {/* <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.date_from}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.date_upto}</td> */}\r\n      </tr>\r\n      <tr className=\"bg-white shadow-md  border-b border-gray-200 border-b border-gray-500 poppins\">\r\n        <td className=\"px-2 py-2 text-left font-semibold 2xl:text-sm text-xs poppins\">{props?.floor?.floor_name}</td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <select\r\n            {...formik.getFieldProps(\"usageType\")}\r\n            value={formik.values.usageType}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          >\r\n            <option selected disabled value=\"\">\r\n              --select--\r\n            </option>\r\n            {usageList?.map((elem) => (\r\n              <>\r\n                <option value={elem?.id}>{elem?.usage_type}</option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <select\r\n            {...formik.getFieldProps(\"occupancyType\")}\r\n            value={formik.values.occupancyType}\r\n            className=\"div-control block w-full px-3 py-1.5  2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          >\r\n            <option selected disabled value=\"\">\r\n              --select--\r\n            </option>\r\n            {occupancyList?.map((elem) => (\r\n              <>\r\n                <option value={elem?.id}>{elem?.occupancy_type}</option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <select\r\n            {...formik.getFieldProps(\"constructionType\")}\r\n            value={formik.values.constructionType}\r\n            className=\"div-control block w-full px-3 py-1.5  2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          >\r\n            <option selected disabled value=\"\">\r\n              --select--\r\n            </option>\r\n            {constructionList?.map((elem) => (\r\n              <>\r\n                <option value={elem?.id}>{elem?.construction_type}</option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <input\r\n            type=\"number\"\r\n            {...formik.getFieldProps(\"buildupArea\")}\r\n            value={formik.values.buildupArea}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          />\r\n        </td>\r\n        {/* <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <input\r\n            type=\"date\"\r\n            {...formik.getFieldProps(\"dateFrom\")}\r\n            value={formik.values.dateFrom}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          />\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <input\r\n            type=\"date\"\r\n            {...formik.getFieldProps(\"dateUpto\")}\r\n            value={formik.values.dateUpto}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          />\r\n        </td> */}\r\n        <td>\r\n          <button\r\n            onClick={formik.handleSubmit}\r\n            type=\"submit\"\r\n            className=\"bg-blue-200 hover:bg-blue-300 rounded-md shadow-md px-3 py-1.5\"\r\n          >\r\n            Post\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr> <td colSpan={8}>&nbsp;</td></tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectionFloorTable;\r\n","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentDate } from \"../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport ObjectionFloorTable from \"./ObjectionFloorTable\";\r\nimport './assets/fonts/Font.css'\r\n\r\nconst ObjectionFloor = (props) => {\r\n  const [floorData, setfloorData] = useState();\r\n  const [floorList, setfloorList] = useState([]);\r\n  const [update, setupdate] = useState(true)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      floorNo: \"\",\r\n      usageType: \"\",\r\n      occupancyType: \"\",\r\n      constructionType: \"\",\r\n      buildupArea: \"\",\r\n      // dateFrom: \"\",\r\n      // dateUpto: getCurrentDate(),\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      console.log(\"floor values => \", values);\r\n    },\r\n  });\r\n\r\n  const getfloor = (datas) => {\r\n    console.log(\"incoming datas => \", datas);\r\n    floorList?.map((elem) => {\r\n      if (elem?.propFloorId == datas?.propFloorId) {\r\n\r\n        return setupdate(false)\r\n      }\r\n    }\r\n\r\n    )\r\n\r\n    { update && console.log(\"===================found==================\", update) }\r\n\r\n    let tempFloorList = [...floorList, datas];\r\n    setfloorList([...floorList, datas]);\r\n    props?.getFloorData(tempFloorList);\r\n    toast.info(\"Posted...\");\r\n    console.log(\r\n      \"temp floor data => \",\r\n      tempFloorList,\r\n      \"\\n floor list data => \",\r\n      floorList\r\n    );\r\n  };\r\n\r\n  console.log(\"update boolean => \", update)\r\n\r\n  // console.log(\"props floor => \", props?.floor)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"col-span-4 overflow-x-auto\"\r\n        onChange={formik.handleChange}\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        <table className=\"min-w-full leading-normal\">\r\n          <thead className=\"font-semibold text-left 2xl:text-sm text-xs poppins bg-sky-50\">\r\n            <tr className=\"px-2 py-3 border-b border-gray-200 text-gray-800  text-left text-xs uppercase text-left\">\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Floor No.\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Usage Type\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Occupancy Type\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Construction Type\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Built Up Area\r\n                <small className=\"block mt-1 text-xs text-gray-600 inline \">\r\n                  <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  (in Sq. Ft)\r\n                </small>\r\n              </th>\r\n              {/* <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                From Date\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                Upto Date\r\n                <small className=\"block mt-1 text-xs text-gray-700 inline poppins font-normal\">\r\n                  (Leave blank for current date)\r\n                </small>\r\n              </th> */}\r\n              <th className=\"py-2 px-2 poppins\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-xs\">\r\n            {props?.floor?.length < 1 && <tr><td colSpan={8}><div className=\"italic bg-red-200 px-4 py-2 text-center\">No Floor List Found !!</div></td></tr>}\r\n            {props?.floor?.map((floor) => (\r\n              <>\r\n                <ObjectionFloorTable floor={floor} getfloor={getfloor} ulbId={props?.ulb}/>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ObjectionFloor;\r\n","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { RiBuilding2Fill } from \"react-icons/ri\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport { allowFloatInput, checkSizeValidation, nullToNA } from \"../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport axios from \"axios\";\r\nimport { GiFlatHammer } from \"react-icons/gi\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport apiLinks from \"../../../Components/ApiList/ObjectionAssessmentApi\";\r\nimport ObjectionFloor from \"./ObjectionFloor\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport BarLoader from \"../../../Components/Common/BarLoader\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport EmptyDetailsIllustration from './EmptyDetailsIllustration'\r\nimport ApiHeader2 from \"../../../Components/ApiList/ApiHeader2\";\r\nimport { FcDepartment } from 'react-icons/fc'\r\nimport BottomErrorCard from \"../../../Components/BottomErrorCard\";\r\nimport AxiosInterceptors from \"../../../Components/GlobalData/AxiosInterceptors\";\r\n\r\nfunction ObjectionEntryForm(props) {\r\n  const {\r\n    getAssessment,\r\n    postAssessment,\r\n    getType,\r\n    getWardList\r\n  } = apiLinks();\r\n\r\n  const id = props?.id\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [loader, setloader] = useState(false);\r\n  const [evidenceDoc, setevidenceDoc] = useState('');\r\n  const [refresh, setrefresh] = useState(0);\r\n  const [formDoc, setformDoc] = useState('');\r\n  const [propertyList, setpropertyList] = useState();\r\n  const [roadList, setroadList] = useState();\r\n  const [allfloor, setallfloor] = useState();\r\n  const [floor, setfloor] = useState();\r\n  const [tempData, settempData] = useState();\r\n  const [harvestingStatus, setHarvestingStatus] = useState(false);\r\n  const [roadWidthStatus, setroadWidthStatus] = useState(false);\r\n  const [propertyTypeStatus, setpropertyTypeStatus] = useState(false);\r\n  const [plotAreaStatus, setplotAreaStatus] = useState(false);\r\n  const [mobileTowerStatus, setmobileTowerStatus] = useState(false);\r\n  const [hoardingStatus, sethoardingStatus] = useState(false);\r\n  const [floorStatus, setfloorStatus] = useState(false);\r\n  const [status, setstatus] = useState(true)\r\n  const [erroState, seterroState] = useState(false);\r\n  const [erroMessage, seterroMessage] = useState(null);\r\n\r\n\r\n  const validationSchema = yup.object({\r\n    harvestingToggleStatus: yup.boolean(),\r\n    roadWidthToggleStatus: yup.boolean(),\r\n    propertyTypeToggleStatus: yup.boolean(),\r\n    plotAreaToggleStatus: yup.boolean(),\r\n    mobileTowerToggleStatus: yup.boolean(),\r\n    hoardingToggleStatus: yup.boolean(),\r\n    floorToggleStatus: yup.boolean(),\r\n\r\n    isWaterHarvesting: yup.string().when(\"harvestingToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    roadType: yup.string().when(\"roadWidthToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    propertyType: yup.string().when(\"propertyTypeToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    areaOfPlot: yup.string().when(\"plotAreaToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    isMobileTower: yup.string().when(\"mobileTowerToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    isHoarding: yup.string().when(\"hoardingToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    objEvidenceDoc : yup.mixed().required(\"Evidence document is required\")\r\n\r\n    // isWaterHarvesting: yup.string().required('Enter ACC no'),\r\n    // roadType: yup.string().required('Enter ACC no'),\r\n    // propertyType: yup.string().required('Enter bind/book no.'),\r\n    // areaOfPlot: yup.string().required('Enter building plan approval no.'),\r\n    // isMobileTower: yup.string().required('Select building plan approval date'),\r\n    // isHoarding: yup.string().required('Enter water consumer no.'),\r\n\r\n    // objFormDoc: yup.mixed().required('Enter water consumer no.'),\r\n    // objEvidenceDoc: yup.mixed().required('Enter water consumer no.'),\r\n    // objRemarks: yup.string().required(\"Enter water consumer no.\"),\r\n  });\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      harvestingToggleStatus: false,\r\n      roadWidthToggleStatus: false,\r\n      propertyTypeToggleStatus: false,\r\n      plotAreaToggleStatus: false,\r\n      mobileTowerToggleStatus: false,\r\n      hoardingToggleStatus: false,\r\n      floorToggleStatus: false,\r\n\r\n      propId: id,\r\n      isWaterHarvesting: tempData?.is_water_harvesting ? 1 : 0,\r\n      roadType: tempData?.road_type_mstr_id,\r\n      propertyType: tempData?.prop_type_mstr_id,\r\n      areaOfPlot: tempData?.area_of_plot,\r\n      isMobileTower: tempData?.is_mobile_tower ? 1 : 0,\r\n      mobileArea: tempData?.tower_area,\r\n      mobileDate: tempData?.tower_installation_date,\r\n      isHoarding: tempData?.is_hoarding_board ? 1 : 0,\r\n      hoardingArea: tempData?.hoarding_area,\r\n      hoardingDate: tempData?.hoarding_installation_date,\r\n\r\n      // objFormDoc: \"\",\r\n      objEvidenceDoc: \"\",\r\n      objRemarks: \"\",\r\n      floor: [],\r\n    },\r\n\r\n    // enableReinitialize: true,\r\n\r\n    onSubmit: (values) => {\r\n      console.log(\"electricity \", values);\r\n      // formik.setFieldValue('floor', allfloor)\r\n      if (!checkSizeValidation(evidenceDoc)) {\r\n        formik.setFieldValue('objEvidenceDoc', '').then(() => {\r\n          activateBottomErrorCard(true, 'Check your file size')\r\n        })\r\n        return true\r\n      }\r\n      submitFun(values);\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const handleChangeImage = (e) => {\r\n    if (e.target.name == \"objFormDoc\") {\r\n      let file = e.target.files[0];\r\n      setformDoc(e.target.files[0]);\r\n      console.log(\"--1-- objFormDoc file on change..\", file);\r\n    } \r\n    if (e.target.name == \"objEvidenceDoc\") {\r\n      let file = e.target.files[0];\r\n      setevidenceDoc(e.target.files[0]);\r\n      console.log(\"--3-- objEvidenceDoc file on change..\", file);\r\n    }\r\n  };\r\n\r\n  const getAllList = (val) => {\r\n    // getting ward List \r\n    // =========================================\r\n\r\n    console.log(\"getting master list with body => \", val)\r\n    AxiosInterceptors.post(getWardList,{ulbId: val}, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"getting ward list => \", res)\r\n        setpropertyList(res?.data?.data?.property_type)\r\n        setroadList(res?.data?.data?.road_type);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"getting ward list error => \", err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"Entering getting details function............\", id);\r\n    setloader(true);\r\n    setTimeout(() => {\r\n      setloader(false)\r\n    }, 10000);\r\n    axios\r\n      .post(getAssessment, { \"propertyId\": id }, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"get assessment details => \", res);\r\n        settempData(res?.data?.data);\r\n        setfloor(res?.data?.data?.floors);\r\n        setrefresh(refresh + 1);\r\n        setloader(false);\r\n        setstatus(res?.data?.status)\r\n        getAllList(res?.data?.data?.ulb_id)\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error getting assessment details => \", err);\r\n        toast(\"Something went wrong !!\");\r\n        setloader(false);\r\n      });\r\n  }, []);\r\n\r\n\r\n    \r\n  // useEffect(() => {\r\n  //   //  getting road type list\r\n  //   setloader(true);\r\n  //   axios\r\n  //     .get(roadTypeList, ApiHeader())\r\n  //     .then((res) => {\r\n  //       console.log(\"road type list => \", res);\r\n  //       setroadList(res?.data?.data);\r\n  //       setloader(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"road type error => \", err);\r\n  //       setloader(false);\r\n  //     });\r\n  // }, [refresh]);\r\n\r\n  const getFloorData = (data) => {\r\n    console.log(\"all floor data => \", data);\r\n    setallfloor(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formik.setFieldValue(\"floor\", allfloor);\r\n  }, [allfloor]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(getType, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"getting type and id => \", res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error getting type and id => \", err);\r\n      });\r\n  }, []);\r\n\r\n  const submitFun = (values) => {\r\n    // console.log(\"Entering submit function with values => \", values)\r\n\r\n    // let assessData = [\r\n    //   harvestingStatus && {\r\n    //     id: 2,\r\n    //     value: values?.isWaterHarvesting,\r\n    //   },\r\n    //  roadWidthStatus && {\r\n    //     id: 3,\r\n    //     value: values?.roadType,\r\n    //   },\r\n    //  propertyTypeStatus && {\r\n    //     id: 4,\r\n    //     value: values?.propertyType,\r\n    //   },\r\n    //   plotAreaStatus &&{\r\n    //     id: 5,\r\n    //     value: values?.areaOfPlot,\r\n    //   },\r\n    //   // {\r\n    //   //   id: 6,\r\n    //   //   value: values?.isMobileTower,\r\n    //   //   area: values?.mobileArea,\r\n    //   //   date: values?.mobileDate\r\n    //   // },\r\n    //   // {\r\n    //   //   id: 7,\r\n    //   //   value: values?.isHoarding,\r\n    //   //   area: values?.hoardingArea,\r\n    //   //   date: values?.hoardingDate\r\n    //   // },\r\n    // ]\r\n\r\n    let assessData = []\r\n\r\n    if (harvestingStatus) {\r\n      assessData.push({\r\n        id: 2,\r\n        value: values?.isWaterHarvesting,\r\n      });\r\n    }\r\n\r\n    if (roadWidthStatus) {\r\n      assessData.push({\r\n        id: 3,\r\n        value: values?.roadType,\r\n      });\r\n    }\r\n\r\n    if (propertyTypeStatus) {\r\n      assessData.push({\r\n        id: 4,\r\n        value: values?.propertyType,\r\n      });\r\n    }\r\n\r\n    if (plotAreaStatus) {\r\n      assessData.push({\r\n        id: 5,\r\n        value: values?.areaOfPlot,\r\n      });\r\n    }\r\n\r\n    if (assessData?.length == 0 && !floorStatus) {\r\n      props?.toastFun('You have not selected any type for objection !!!', 'info')\r\n      return\r\n    }\r\n\r\n    // setloader(true);\r\n\r\n\r\n    let requestBody = {\r\n      objectionFor: \"Assessment Error\",\r\n      propId: id,\r\n\r\n      assessmentData: [\r\n        {\r\n          id: 2,\r\n          value: values?.isWaterHarvesting,\r\n        },\r\n        {\r\n          id: 3,\r\n          value: values?.roadType,\r\n        },\r\n        {\r\n          id: 4,\r\n          value: values?.propertyType,\r\n        },\r\n        {\r\n          id: 5,\r\n          value: values?.areaOfPlot,\r\n        },\r\n        {\r\n          id: 6,\r\n          value: values?.isMobileTower,\r\n        },\r\n        {\r\n          id: 7,\r\n          value: values?.isHoarding,\r\n        },\r\n      ],\r\n\r\n      floorData: allfloor,\r\n\r\n    };\r\n\r\n    setTimeout(() => {\r\n      setloader(false)\r\n    }, 10000);\r\n\r\n    console.log(\"body of assessData => \", assessData, '\\n and floor data => ', allfloor)\r\n\r\n    let fd = new FormData();\r\n    fd.append(\"propId\", id);\r\n    fd.append(\"ulbId\", tempData?.ulb_id)\r\n    fd.append(\"objectionFor\", \"Assessment Error\");\r\n    // assessData?.length > 0 && fd.append(\"assessmentData\", JSON.stringify(assessData));\r\n    // floorStatus && fd.append(\"floorData\", JSON.stringify(allfloor));\r\n    evidenceDoc != '' && fd.append(\"document\", evidenceDoc);\r\n    evidenceDoc != '' && fd.append('docCode', 'OBJECTION_EVIDENCE_DOC')\r\n\r\n    assessData?.length > 0 && assessData?.forEach((obj, index) => {\r\n      fd.append(`assessmentData[${index}][id]`, obj?.id)\r\n      fd.append(`assessmentData[${index}][value]`, obj?.value)\r\n    })\r\n\r\n    floorStatus && allfloor?.forEach((obj, index) => {\r\n      fd.append(`floorData[${index}][floorNo]`, obj?.floorNo)\r\n      fd.append(`floorData[${index}][buildupArea]`, obj?.buildupArea)\r\n      fd.append(`floorData[${index}][constructionType]`, obj?.constructionType)\r\n      fd.append(`floorData[${index}][occupancyType]`, obj?.occupancyType)\r\n      fd.append(`floorData[${index}][propFloorId]`, obj?.propFloorId)\r\n      fd.append(`floorData[${index}][usageType]`, obj?.usageType)\r\n    })\r\n\r\n    axios\r\n      .post(postAssessment, fd, ApiHeader2())\r\n      .then((res) => {\r\n        if (res?.data?.status == true) {\r\n          console.log(\"Submitted assessment => \", res);\r\n          toast.success(\"Assessment Objection Applied Successfully...\");\r\n          props.submitForm(res?.data?.data);\r\n        } else {\r\n          activateBottomErrorCard(true, 'Error occurred in submitting objection application. Please try again later.')\r\n        }\r\n        setloader(false)\r\n      })\r\n      .catch((err) => {\r\n        activateBottomErrorCard(true, 'Error occurred in submitting objection application. Please try again later.')\r\n        setloader(false)\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let checkValue = e.target.checked;\r\n    let value = e.target.value;\r\n    console.log(\"switched is clicked \", e.target.name);\r\n\r\n    //toggling the visibility of specific objection sections\r\n    {\r\n      name === \"harvestingToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setHarvestingStatus(true)\r\n          : setHarvestingStatus(false));\r\n    }\r\n    {\r\n      name === \"roadWidthToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setroadWidthStatus(true)\r\n          : setroadWidthStatus(false));\r\n    }\r\n    {\r\n      name === \"propertyTypeToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setpropertyTypeStatus(true)\r\n          : setpropertyTypeStatus(false));\r\n    }\r\n    {\r\n      name === \"plotAreaToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setplotAreaStatus(true)\r\n          : setplotAreaStatus(false));\r\n    }\r\n    {\r\n      name === \"floorToggleStatus\" &&\r\n        (checkValue === true ? setfloorStatus(true) : setfloorStatus(false));\r\n    }\r\n    {\r\n      name === \"hoardingToggleStatus\" &&\r\n        (checkValue === true\r\n          ? sethoardingStatus(true)\r\n          : sethoardingStatus(false));\r\n    }\r\n    {\r\n      name === \"mobileTowerToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setmobileTowerStatus(true)\r\n          : setmobileTowerStatus(false));\r\n    }\r\n\r\n    //input restrict validation\r\n    {\r\n      name == \"builtupArea\" &&\r\n        formik.setFieldValue(\r\n          \"builtupArea\",\r\n          allowFloatInput(value, formik.values.builtupArea, 20)\r\n        );\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    props.closePopUp();\r\n  }\r\n\r\n  const activateBottomErrorCard = (state, msg) => {\r\n    seterroMessage(msg)\r\n    seterroState(state)\r\n\r\n  }\r\n  return (\r\n    <>\r\n      {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n      {/* <ToastContainer position=\"top-right\" autoClose={2000} /> */}\r\n\r\n      {/* <h1 className='mt-6 mb-2 font-serif font-semibold  text-gray-800'><GiFlatHammer className=\"inline mr-2\" />Assessment Error</h1> */}\r\n\r\n      {/* <h1 className=\"mt-6 mb-2 font-serif font-semibold  text-gray-600\">\r\n        <RiBuilding2Fill className=\"inline mr-2\" />\r\n        Assessment Objection\r\n      </h1> */}\r\n\r\n      {/* <div className=\"flex flex-row md:justify-evenly items-center space-x-2 px-4 w-full md:w-max uppercase text-xs poppins 2xl:text-base poppins mb-4 bg-white shadow-md py-2 rounded-md\">\r\n            <span className=\"font-extrabold text-[25px] text-gray-800\"><RiBuilding2Fill/></span>\r\n            <span className=\"font-semibold poppins text-xl\">Assessment Objection</span>\r\n      </div> */}\r\n\r\n      <div className=\"2xl:mt-6 mt-3 bg-indigo-500 text-white flex flex-row md:justify-evenly items-center justify-center uppercase text-xs poppins 2xl:text-base poppins mb-4 shadow-md py-2 rounded-md\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"font-extrabold text-[30px]\">\r\n            <FcDepartment />\r\n          </span>\r\n          <span className=\"font-semibold poppins 2xl:text-xl text-lg\">\r\n            Assessment Objection\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poppins my-2 2xl:font-base text-sm poppins\">\r\n      Citizens are able to file objections to assessments using this objection form in accordance with Section 167 of the Jharkhand Municipal Act 2011. The objections that can be filed include the following:\r\n      </div>\r\n\r\n      {loader && <BarLoader />}\r\n\r\n      {(status && !loader) &&\r\n        <div className=\" px-4 w-full md:py-6 rounded-lg shadow-lg bg-white mt-6 \">\r\n          <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 h-max\">\r\n              <FormGroup className=\"col-span-4 grid grid-cols-4 h-max\">\r\n                {/* harvesting objection content */}\r\n                <div className=\"col-span-4 grid grid-cols-4 gap-2\">\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Rain Water Harvesting\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={harvestingStatus}\r\n                            // name=\"harvestingSwitch\"\r\n                            // onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"harvestingToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${harvestingStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:2xl:text-sm text-xs poppins text-xs poppins font-semibold\">\r\n                        Objection On: Rainwater Harvesting\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {tempData?.is_water_harvesting ? <>Yes</> : <>No</>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <select\r\n                        {...formik.getFieldProps(\"isWaterHarvesting\")}\r\n                        value={formik.values.isWaterHarvesting}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      >\r\n                        <option value=\"0\" >\r\n                          No\r\n                        </option>\r\n                        <option value=\"1\">Yes</option>\r\n                      </select>\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.isWaterHarvesting &&\r\n                          formik.errors.isWaterHarvesting\r\n                          ? formik.errors.isWaterHarvesting\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* roadWidth objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Road Width\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={roadWidthStatus}\r\n                            // name=\"roadWidthSwitch\"\r\n                            // onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"roadWidthToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${roadWidthStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Road Width (in sq.ft.)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {nullToNA(tempData?.road_type)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <select\r\n                        {...formik.getFieldProps(\"roadType\")}\r\n                        value={formik.values.roadType}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          --select--\r\n                        </option>\r\n                        {roadList?.map((elem) => (\r\n                          <>\r\n                            <option value={elem?.id}>{elem?.road_type}</option>\r\n                          </>\r\n                        ))}\r\n                      </select>\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.roadType && formik.errors.roadType\r\n                          ? formik.errors.roadType\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* propertyType objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Property Type\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={propertyTypeStatus}\r\n                            // name=\"propertyTypeSwitch\"\r\n                            // onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"propertyTypeToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${propertyTypeStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Property Type\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {nullToNA(tempData?.property_type)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <select\r\n                        {...formik.getFieldProps(\"propertyType\")}\r\n                        value={formik.values.propertyType}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          --select--\r\n                        </option>\r\n                        {propertyList?.map((elem) => (\r\n                          <>\r\n                            <option value={elem?.id}>{elem?.property_type}</option>\r\n                          </>\r\n                        ))}\r\n                      </select>\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.propertyType && formik.errors.propertyType\r\n                          ? formik.errors.propertyType\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* area of plot objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Area of Plot\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={plotAreaStatus} name=\"areaPlotSwitch\"\r\n                            //     onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"plotAreaToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${plotAreaStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Area of plot (in sq.ft.)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {nullToNA(tempData?.area_of_plot)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"areaOfPlot\")}\r\n                        type=\"number\"\r\n                        value={formik.values.areaOfPlot}\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.areaOfPlot && formik.errors.areaOfPlot\r\n                          ? formik.errors.areaOfPlot\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-span-4 grid grid-cols-4\">\r\n                  mobile tower objection content\r\n                  <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                    <label className=\" text-gray-800 pr-2\">\r\n                      \r\n                      <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Mobile Tower\r\n                      </span>\r\n                    </label>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={mobileTowerStatus} name=\"mobileTowerSwitch\"\r\n                              onChange={switchHandleChange}\r\n                          {...formik.getFieldProps(\"mobileTowerToggleStatus\")}\r\n                          inputProps={{ \"aria-label\": \"controlled\" }}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </div>\r\n                </div> */}\r\n\r\n                  {/* <div\r\n                  className={`col-span-4 ${\r\n                    mobileTowerStatus ? \"grid\" : \"hidden\"\r\n                  } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                >\r\n                  <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                      Objection On: Mobile Tower\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      As Per Assessment\r\n                    </label>\r\n                    <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                      {tempData?.is_mobile_tower ? <>Yes</> : <>No</>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      As Per Applicant\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"isMobileTower\")}\r\n                      value={formik.values.isMobileTower}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    >\r\n                      <option value=\"0\" >\r\n                        No\r\n                      </option>\r\n                      <option value=\"1\">Yes</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {\r\n                    formik.values.isMobileTower == 1 && <>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Total Area Covered\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"mobileArea\")}\r\n                      type=\"number\"\r\n                      value={formik.values.mobileArea}\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Date of Installation\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"mobileDate\")}\r\n                      value={formik.values.mobileDate}\r\n                      type=\"date\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                    </>\r\n                  }\r\n\r\n                </div> */}\r\n                  {/* hoarding objection content */}\r\n                  {/* <div className=\"col-span-4 grid grid-cols-4\">\r\n                  <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                    <label className=\" text-gray-800 pr-2\">\r\n                      \r\n                      <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Hoarding Board\r\n                      </span>\r\n                    </label>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          // checked={hoardingStatus} name=\"hoardingSwitch\"\r\n                          //     onChange={switchHandleChange}\r\n                          {...formik.getFieldProps(\"hoardingToggleStatus\")}\r\n                          inputProps={{ \"aria-label\": \"controlled\" }}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </div>\r\n\r\n                </div> */}\r\n\r\n                  {/* <div\r\n                  className={`col-span-4 ${\r\n                    hoardingStatus ? \"grid\" : \"hidden\"\r\n                  } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                >\r\n                  <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                      Objection On: Hording Board\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      As Per Assessment\r\n                    </label>\r\n                    <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                      {tempData?.is_hoarding_board ? <>Yes</> : <>No</>}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      As Per Applicant\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"isHoarding\")}\r\n                      value={formik.values.isHoarding}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    >\r\n                      <option value=\"0\" >\r\n                        No\r\n                      </option>\r\n                      <option value=\"1\">Yes</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isHoarding && formik.errors.isHoarding\r\n                        ? formik.errors.isHoarding\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  {\r\n                    formik.values.isHoarding == 1 && <>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Total Area Covered\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"hoardingArea\")}\r\n                      value={formik.values.hoardingArea}\r\n                      type=\"number\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Date of Installation\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"hoardingDate\")}\r\n                      value={formik.values.hoardingDate}\r\n                      type=\"date\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                    </>\r\n                  }\r\n                </div> */}\r\n                  {/* floor objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Floor Detail\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={floorStatus} name=\"floorSwitch\"\r\n                            //     onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"floorToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`col-span-4 ${floorStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Floor Details\r\n                      </label>\r\n                    </div>\r\n\r\n                    <ObjectionFloor floor={floor} getFloorData={getFloorData} ulb={tempData?.ulb_id} />\r\n                  </div>\r\n                </div>\r\n              </FormGroup>\r\n\r\n              {/* ==========Documents=============== */}\r\n              <div\r\n                className={`col-span-4 grid grid-cols-1 md:grid-cols-4 h-max mt-10 border`}\r\n              >\r\n                <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-green-100 shadow-md\">\r\n                  <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold poppins\">\r\n                    Documents\r\n                  </label>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\" onChange={formik.handleChange}>\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                  <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  Objection Form\r\n                </label>\r\n                <input\r\n                  {...formik.getFieldProps(\"objFormDoc\")}\r\n                  type=\"file\"\r\n                  onChange={handleChangeImage}\r\n                  accept=\".pdf,.jpg,.jpeg\"\r\n                  className=\"form-control block w-full px-3 py-1 text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                />\r\n                <span className=\"text-red-600 absolute text-xs\">\r\n                  {formik.touched.objFormDoc && formik.errors.objFormDoc\r\n                    ? formik.errors.objFormDoc\r\n                    : null}\r\n                </span>\r\n              </div> */}\r\n\r\n                <div className=\"form-group mb-6 col-span-4 md:col-span-1 md:px-4\" onChange={formik.handleChange}>\r\n                  <label className=\"form-label inline-block mb-1 text-gray-600 2xl:2xl:text-sm text-xs poppins text-xs font-semibold poppins\">\r\n                    <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                      *\r\n                    </small>\r\n                    Evidence Document\r\n                  </label>\r\n                  <input\r\n                    {...formik.getFieldProps(\"objEvidenceDoc\")}\r\n                    onChange={handleChangeImage}\r\n                    accept=\".pdf,.jpg,.jpeg\"\r\n                    type=\"file\"\r\n                    className=\"form-control block w-full px-3 py-1 text-xs poppins font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                  />\r\n                  <span className=\"text-red-600 absolute text-xs\">\r\n                    {formik.touched.objEvidenceDoc && formik.errors.objEvidenceDoc\r\n                      ? formik.errors.objEvidenceDoc\r\n                      : null}\r\n                  </span>\r\n                </div>\r\n                {/* <div className=\"form-group mb-6 col-span-4 md:col-span-4 md:px-4\">\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 2xl:2xl:text-sm text-xs poppins text-xs font-semibold poppins\">\r\n                  <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  Remarks\r\n                </label>\r\n                <input\r\n                  {...formik.getFieldProps(\"objRemarks\")}\r\n                  type=\"text\"\r\n                  className=\"form-control block w-full px-3 py-1.5 2xl text-xs poppins:2xl:text-base text-xs poppins font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                />\r\n                <span className=\"text-red-600 absolute text-xs\">\r\n                  {formik.touched.objRemarks && formik.errors.objRemarks\r\n                    ? formik.errors.objRemarks\r\n                    : null}\r\n                </span>\r\n              </div> */}\r\n              </div>\r\n\r\n              <div className=\"col-span-4 flex flex-row flex-wrap justify-between items-center w-[full] h-max mt-4\">\r\n                <div\r\n                  onClick={closeModal}\r\n                  className=\"cursor-pointer px-3 py-1.5 2xl:px-6 2xl:py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out poppins\"\r\n                >\r\n                  Close\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\" poppins px-3 py-1.5 2xl:px-6 2xl:py-2.5 bg-green-600 text-white font-medium text-xs leading-tight rounded shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out\"\r\n                  >\r\n\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>}\r\n\r\n      {!status && <>\r\n        <EmptyDetailsIllustration title={\"Oops !! No Assessment Details Found !!\"} location={closeModal} />\r\n      </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ObjectionEntryForm","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ImUpload2 } from 'react-icons/im'\r\nimport { TbWebhook } from 'react-icons/tb'\r\nimport ObjectionEntryForm from './ObjectionEntryForm.js'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction ObjectionFormIndex(props) {\r\n  \r\n    const [formIndex, setFormIndex] = useState(1); //formindex specifies type of form like basicdetails at index 1 ...\r\n    // const [animateform1, setAnimateform1] = useState(\"translate-x-0\"); //slide animation control state for BasicDetails form\r\n    const [submitStatus, setSubmitStatus] = useState(false); //checking full form filled status to toggle final submit button\r\n    const [allFormData, setAllFormData] = useState({});\r\n    const [responseScreenStatus, setResponseScreenStatus] = useState(\"\");\r\n  \r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n      toast.dismiss();\r\n      toast[type](toastData);\r\n\r\n    };\r\n  \r\n    //\r\n    const submitButtonToggle = () => {\r\n      setSubmitStatus(true);\r\n    };\r\n\r\n    const submitObForm = (id) => {\r\n      props.submitForm(id)\r\n    }\r\n  \r\n    const collectAllFormData = (key, formData) => {\r\n      console.log(\"prev Data\", allFormData);\r\n      // setAllFormData({...allFormData,formData}) //this is going to replace upcoming data since has same formData key all the time\r\n      setAllFormData({ ...allFormData, [key]: formData });\r\n    };\r\n    if (responseScreenStatus == \"success\") {\r\n      return <>{/* <FormSubmitResponse/> */} Done</>;\r\n    }\r\n    return (\r\n      <>\r\n        {/* <ToastContainer position=\"top-right\" autoClose={2000} /> */}\r\n        {/* <div className=\"text-right absoltue top-0 animate__animated animate__fadeInDown\">\r\n          <span className=\"bg-sky-100 border-l border-b border-white text-black col-span-12 sm:col-span-2 sm:col-start-11 pl-4 rounded-l shadow-lg font-semibold pr-4\">\r\n            <TbWebhook className=\"inline\" /> Objection\r\n          </span>\r\n        </div> */}\r\n  \r\n        <div className={`relative`}>\r\n          <ObjectionEntryForm\r\n          //   id={id}\r\n            collectFormDataFun={collectAllFormData}\r\n            submitFun={submitButtonToggle}\r\n            toastFun={notify}\r\n            id={props?.id}\r\n            closePopUp={props?.closePopUp}\r\n            submitForm={submitObForm}\r\n          />\r\n        </div>\r\n        {/* collectDataFun to receive form data on every save&next */}\r\n        {/* submitFun to activate final submit button when all forms are filled */}\r\n        {/* toastFun to activate toast notification via receiving toast message */}\r\n        {/* backFun to go back from any specific form level */}\r\n        {/* nextFun to go next from any specific form level */}\r\n  \r\n        {submitStatus && (\r\n          <div\r\n            onClick={() => setResponseScreenStatus(\"success\")}\r\n            className=\"flex items-center justify-center\"\r\n          >\r\n            <button\r\n              type=\"submit\"\r\n              className=\"absolute bottom-40 mx-auto px-6 py-2.5 bg-green-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-xl hover:bg-blue-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out\"\r\n            >\r\n              Submit Form <ImUpload2 className=\"inline text-xl\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ObjectionFormIndex"],"names":["baseUrl","BackendUrl","getType","concat","getAssessment","postClericalData","postAssessment","getWardList","props","_props$floor","_props$floor2","_props$floor3","_props$floor4","_props$floor5","_props$floor6","_props$floor7","_props$floor8","_props$floor9","_props$floor10","_props$floor11","_props$floor12","_apiLinks","apiLinks","usageTypeList","constructionTypeList","occupancyTypeList","_useState","useState","_useState2","_slicedToArray","loader","setloader","_useState3","_useState4","usageList","setusageList","_useState5","_useState6","occupancyList","setoccupancyList","_useState7","_useState8","constructionList","setconstructionList","_useState9","_useState10","refresh","setrefresh","useEffect","console","log","axios","ulbId","ApiHeader","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","data","usage_type","occupancy_type","construction_type","catch","err","formik","useFormik","initialValues","propFloorId","floor","id","floorNo","floor_mstr_id","usageType","usage_type_mstr_id","occupancyType","occupancy_type_mstr_id","constructionType","const_type_mstr_id","buildupArea","builtup_area","enableReinitialize","onSubmit","values","getfloor","_jsxs","_Fragment","children","_jsx","className","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","floor_name","_objectSpread","getFieldProps","value","selected","disabled","map","elem","type","onClick","handleSubmit","colSpan","floorList","setfloorList","update","setupdate","datas","tempFloorList","_toConsumableArray","getFloorData","toast","onChange","handleChange","length","ObjectionFloorTable","ulb","useNavigate","evidenceDoc","setevidenceDoc","setformDoc","propertyList","setpropertyList","_useState11","_useState12","roadList","setroadList","_useState13","_useState14","allfloor","setallfloor","_useState15","_useState16","setfloor","_useState17","_useState18","tempData","settempData","_useState19","_useState20","harvestingStatus","setHarvestingStatus","_useState21","_useState22","roadWidthStatus","setroadWidthStatus","_useState23","_useState24","propertyTypeStatus","setpropertyTypeStatus","_useState25","_useState26","plotAreaStatus","setplotAreaStatus","_useState27","_useState28","setmobileTowerStatus","_useState29","_useState30","sethoardingStatus","_useState31","_useState32","floorStatus","setfloorStatus","_useState33","_useState34","status","setstatus","_useState35","_useState36","erroState","seterroState","_useState37","_useState38","erroMessage","seterroMessage","validationSchema","yup","harvestingToggleStatus","roadWidthToggleStatus","propertyTypeToggleStatus","plotAreaToggleStatus","mobileTowerToggleStatus","hoardingToggleStatus","floorToggleStatus","isWaterHarvesting","when","is","required","roadType","propertyType","areaOfPlot","isMobileTower","isHoarding","objEvidenceDoc","propId","is_water_harvesting","road_type_mstr_id","prop_type_mstr_id","area_of_plot","is_mobile_tower","mobileArea","tower_area","mobileDate","tower_installation_date","is_hoarding_board","hoardingArea","hoarding_area","hoardingDate","hoarding_installation_date","objRemarks","checkSizeValidation","setFieldValue","activateBottomErrorCard","submitFun","setTimeout","_res$data4","_res$data4$data","_res$data5","_res$data6","_res$data6$data","val","floors","ulb_id","AxiosInterceptors","property_type","road_type","assessData","push","fd","FormData","append","forEach","obj","index","ApiHeader2","_res$data7","_res$data8","submitForm","toastFun","closeModal","closePopUp","state","msg","BottomErrorCard","errorTitle","FcDepartment","BarLoader","e","name","target","checkValue","checked","allowFloatInput","builtupArea","FormGroup","FormControlLabel","control","Switch","inputProps","label","touched","errors","nullToNA","ObjectionFloor","file","files","accept","EmptyDetailsIllustration","title","location","submitStatus","setSubmitStatus","allFormData","setAllFormData","responseScreenStatus","setResponseScreenStatus","ObjectionEntryForm","collectFormDataFun","key","formData","_defineProperty","toastData","ImUpload2"],"sourceRoot":""}