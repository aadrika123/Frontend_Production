{"version":3,"file":"static/js/2903.60156269.chunk.js","mappings":"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","sources":["Pages/Trade/Modals/TradeDocumentModal.js","Pages/Trade/Modals/TradePaymentModal.js","Pages/Trade/tradeComponent/TradeNonBlockingLoader.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Modal from \"react-modal\";\r\n// import { GrFormClose } from \"react-icons/gr\";\r\n// import { HiCurrencyRupee } from \"react-icons/hi\";\r\n// import { FiUpload } from 'react-icons/fi';\r\n\r\n\r\n// const customStyles = {\r\n//     content: {\r\n//         top: \"50%\",\r\n//         left: \"50%\",\r\n//         right: \"auto\",\r\n//         bottom: \"auto\",\r\n//         marginRight: \"-50%\",\r\n//         transform: \"translate(-50%, -50%)\",\r\n//         background: \"transparent\",\r\n//         border: \"none\",\r\n//     },\r\n// };\r\n\r\n// function TradeDocumentModal(props) {\r\n//     // Modal.setAppElement('#yourAppElement');\r\n//     const [modalIsOpen, setIsOpen] = React.useState(props.openDocumentModal);\r\n\r\n\r\n//     const handleDelete = (id) => {\r\n//         console.log(\"ID to be deleted\", id);\r\n//     };\r\n\r\n//     // useEffect(() => {\r\n//     //     if (props.openDocumentModal > 0) setIsOpen(true);\r\n//     // }, [props.openDocumentModal]);\r\n\r\n//     function afterOpenModal() { }\r\n\r\n//     function closeModal() {\r\n//         setIsOpen(false);\r\n//         // props.refetchListOfRoles();\r\n//     }\r\n\r\n//     const saveFileSelected = (e) => {\r\n//         console.log(\"Updated\", e.target.files[0]);\r\n//         // setFileSelected(e.target.files[0]);\r\n//     };\r\n\r\n//     const docList = [\r\n//         { 'docid': 1, 'docName': 'Permanent Address Proof', 'docUrl': '/dd', 'docStatus': 'Not Uploaded' },\r\n//         { 'docid': 2, 'docName': 'Local Address Proof', 'docUrl': '/dd', 'docStatus': 'Uploaded' },\r\n//         // { 'docid': 3, 'docName': 'Specially Abled Proof', 'docUrl': '/dd', 'docStatus': 'Uploaded' },\r\n//         // { 'docid': 4, 'docName': 'Armed Force Document', 'docUrl': '/dd', 'docStatus': 'Not Uploaded' },\r\n//     ]\r\n\r\n//     return (\r\n//         <div className=\"\">\r\n//             <Modal\r\n//                 isOpen={modalIsOpen}\r\n//                 onAfterOpen={afterOpenModal}\r\n//                 onRequestClose={closeModal}\r\n//                 style={customStyles}\r\n//                 contentLabel=\"Example Modal\"\r\n//             >\r\n//                 <div className=\"bg-white shadow-2xl border border-sky-200 p-5 m-2 rounded-md\">\r\n//                     <div className=\"md:inline-block min-w-full overflow-hidden hidden\">\r\n//                         <table className=\"min-w-full leading-normal border\">\r\n//                             <thead className='bg-sky-100'>\r\n//                                 <tr className='font-semibold '>\r\n//                                     <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n//                                         #\r\n//                                     </th>\r\n//                                     <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n//                                         Document Name\r\n//                                     </th>\r\n//                                     <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n//                                         Document Type\r\n//                                     </th>\r\n//                                     <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n//                                         View\r\n//                                     </th>\r\n//                                     <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800 text-center text-sm uppercase\">\r\n//                                         Status\r\n//                                     </th>\r\n//                                     <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n//                                         Upload\r\n//                                     </th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {\r\n//                                     docList.map((e, i = 1) => (\r\n//                                         <tr>\r\n//                                             <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n//                                                 <p className=\"text-gray-900 whitespace-no-wrap\">\r\n//                                                     {i + 1}\r\n//                                                 </p>\r\n//                                             </td>\r\n//                                             <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n//                                                 <p className=\"text-gray-900 whitespace-no-wrap\">\r\n//                                                     {e.docName}\r\n//                                                 </p>\r\n//                                             </td>\r\n//                                             <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n//                                                 <p className=\"text-gray-900 whitespace-no-wrap\">\r\n//                                                     <select className=' outline-blue-600 border border-gray-400'>\r\n//                                                         <option>Select Documet</option>\r\n//                                                         <option value=\"B\">Aadhar</option>\r\n//                                                         <option value=\"C\">PAN</option>\r\n//                                                         <option value=\"C\">Rasan Card</option>\r\n//                                                         <option value=\"C\">Kishan Credit Card</option>\r\n//                                                     </select>\r\n//                                                 </p>\r\n//                                             </td>\r\n//                                             <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\" > {/*onClick={() => props.openModal('http://192.168.0.16:822/RMCDMC/public/assets/img/pdf_logo.png')}*/}\r\n//                                                 <div className=\"flex items-center\">\r\n//                                                     <div className=\"flex-shrink-0\">\r\n//                                                         <a href=\"#\" className=\"block relative\">\r\n//                                                             <img alt=\"profil\" src=\"http://192.168.0.16:822/RMCDMC/public/assets/img/pdf_logo.png\" className=\"mx-auto object-cover rounded-none h-10 w-10 \" />\r\n//                                                         </a>\r\n//                                                     </div>\r\n//                                                 </div>\r\n//                                             </td>\r\n//                                             <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n//                                                 <p className=\"text-center text-black font-medium\">\r\n//                                                     {e.docStatus == \"Not Uploaded\" && <p className='bg-red-400 rounded-xl px-2 py-0.5'>{e.docStatus}</p>}\r\n//                                                     {e.docStatus == \"Uploaded\" && <p className='bg-green-400 rounded-xl py-0.5'>{e.docStatus}</p>}\r\n//                                                 </p>\r\n//                                             </td>\r\n\r\n//                                             <td className=\"px-5 border-b border-gray-200 bg-white text-sm\">\r\n//                                                 <span className=\"relative inline-block \">\r\n//                                                     <span aria-hidden=\"true\" className=\"absolute inset-0 \"></span>\r\n//                                                     <span className=\"relative \">\r\n//                                                         <input\r\n//                                                             type=\"file\"\r\n//                                                             accept=\"image/*\"\r\n//                                                             style={{ display: 'none' }}\r\n//                                                             id=\"contained-button-file\"\r\n//                                                             // onInput={()=>{saveFileSelected(); ()=>test(\"dipu\");}}\r\n//                                                             onInput={saveFileSelected}\r\n//                                                         // onChange={() => importFile(e.docName)}\r\n//                                                         />\r\n//                                                         <label className='bg-blue-500 hover:bg-blue-600 hover:ring-1 hover:ring-blue-800 rounded-sm hover:rounded-md hover:shadow-2xl shadow-lg cursor-pointer flex pl-4 pr-5 py-2  text-white font-semibold' htmlFor=\"contained-button-file\"><FiUpload size={16} className='mt-0 ml-0 mr-2 font-semibold' />Upload</label>\r\n//                                                     </span>\r\n//                                                 </span>\r\n//                                             </td>\r\n//                                         </tr>\r\n//                                     ))\r\n//                                 }\r\n\r\n//                             </tbody>\r\n//                         </table>\r\n//                         <div className='my-5 flex justify-center'>\r\n//                             <div className='mx-2'><button onClick={closeModal} className='bg-red-400 hover:bg-red-500 px-5 py-2 shadow-xl rounded-md text-black text-base'>Cancel</button></div>\r\n//                             <div className='mx-2'><button className='bg-green-400 hover:bg-green-500 px-5 py-2 shadow-xl rounded-md text-black text-base float-right'>Submit</button></div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </Modal>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// // ReactDOM.render(<App />, appElement);\r\n\r\n// export default TradeDocumentModal;\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Anshuman\r\n//    Version - 1.0\r\n//    Date - 04 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafDocumentView (closed)\r\n//    DESCRIPTION - PropertySafDocumentView Component\r\nimport { useState, useEffect } from 'react'\r\n// import TradeDocumentRow from \"./TradeDocumentRow\"\r\nimport Modal from 'react-modal';\r\n// import dummy from './dummy.pdf'\r\nimport axios from 'axios';\r\n// import { HEADER, TRADE } from 'Pages/Trade/tradeComponent/TradeApiListFile';\r\nimport TradeNonBlockingLoader from '../tradeComponent/TradeNonBlockingLoader'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { HEADER, TRADE } from '../tradeComponent/TradeApiListFile';\r\nimport { Close, CloseOutlined, FileOpen } from '@mui/icons-material';\r\nimport { Button } from '@mui/material';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction TradeDocumentUpload(props) {\r\n    const [docList, setDocList] = useState(\r\n        [\r\n            { docName: 'Property Document', docUrl: '/dd', docStatus: 'Rejected', docRemarks: 'Upload Proper Document' },\r\n        ]\r\n    )\r\n\r\n    console.log(\"prop data\", props.closeModalDoc)\r\n\r\n    const [ownerId, setownerId] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen2, setIsOpen2] = useState(false);\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    let subtitle;\r\n    const [show, setshow] = useState(false);\r\n    const [docVals, setdocVals] = useState([{ id: 1, docName: \"dummy doc\" }]);\r\n    const [docName, setdocName] = useState('...');\r\n    const [FileName, setFileName] = useState();\r\n    const [MyFile, setMyFile] = useState();\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const openModal2 = () => setIsOpen2(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const closeModal2 = () => setIsOpen2(false)\r\n    const afterOpenModal = () => { }\r\n    const afterOpenModal2 = () => { }\r\n\r\n    const modalAction = (incomingDocUrl) => {\r\n        // alert(incomingDocUrl)\r\n        setDocUrl(incomingDocUrl)\r\n        openModal()\r\n    }\r\n    useEffect(() => {\r\n        getRequiredDocuments()\r\n    }, [1])\r\n\r\n    const getRequiredDocuments = () => {\r\n        showLoader(true);\r\n        let id = props?.id;\r\n        axios.post(TRADE.DOCUMENT_REQUIREMENT, { applicationId: id }, HEADER())\r\n            .then(function (response) {\r\n                console.log(\"Required documents \", response.data.data);\r\n                if (response.data.status) {\r\n                    setDocList(response.data.data)\r\n\r\n                    setTimeout(() => {\r\n                        showLoader(false);\r\n                    }, 500);\r\n                } else {\r\n                    showLoader(false);\r\n\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                showLoader(false);\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    // console.log(\"trade document view\", props?.applicationData);\r\n\r\n    const showLoader = (status) => {\r\n        setshow(status);\r\n    }\r\n\r\n    const handleModel2 = (doc_name, values, ownerId) => {\r\n        setdocName(doc_name);\r\n        setdocVals(values);\r\n        setownerId(ownerId);\r\n        openModal2();\r\n    }\r\n\r\n\r\n\r\n    // const initialValue = {\r\n\r\n    // }\r\n\r\n    // const validationSchema\r\n    const handleUpload = (event) => {\r\n        // alert(\"hello\")\r\n        event.preventDefault();\r\n\r\n        let licenseid = props?.id\r\n        let formData = new FormData();\r\n        formData.append('docRefName', docName);  //document for name\r\n        formData.append('docMstrId', FileName);  // doucment master id\r\n        formData.append('btn_doc_path', 0);            // Btn name\r\n        formData.append('document', MyFile);            //File information\r\n        formData.append('ownerId', ownerId == undefined ? \"\" : ownerId);   //ownerID\r\n        formData.append('applicationId', licenseid);\r\n        const HEADER = () => {\r\n            let token = window.localStorage.getItem('token');\r\n            const header = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    Accept: 'application/json',\r\n                    'encType': 'multipart/form-data',\r\n                }\r\n            }\r\n            return header;\r\n\r\n        }\r\n        console.log(\"ownerId\", ownerId)\r\n\r\n        axios.post(TRADE.DOCUMENT_UPLOAD, formData, HEADER())\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.data.status) {\r\n\r\n                    showLoader(false)\r\n                    notify(\"File Uploaded Successfully\", \"success\");\r\n                    // props.fun(0);\r\n                    closeModal2()\r\n                    getRequiredDocuments()\r\n                } else {\r\n                    showLoader(false)\r\n                    notify(res.data.message, \"notice\")\r\n\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                showLoader(false);\r\n                notify(\"Something went wrong\", \"error\")\r\n            })\r\n    }\r\n\r\n    const notify = (toastData, actionFlag) => {\r\n        toast.dismiss();\r\n        { actionFlag == 'escalated' && toast.success(toastData) }\r\n        { actionFlag == 'success' && toast.success(toastData) }\r\n        { actionFlag == 'de-escalated' && toast.warn(toastData) }\r\n        { actionFlag == 'notice' && toast.warn(toastData) }\r\n        { actionFlag == 'error' && toast.error(toastData) }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mx-auto  ml-0  px-1 py-1 shadow-2xl shadow-sky-200 border-amber-100 rounded-lg bg-white\" style={{ width: \"70vw\", height: \"70vh\" }}>\r\n                <div className='flex justify-between bg-secondary'>\r\n                    <h1 className='font-medium text-xl uppercase font-mono text-white  flex justify-start pl-8 py-2 rounded px-2'>\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/3121/3121601.png\" alt=\"\" className='h-12 w-12' />\r\n                        <span className='pt-2'> &emsp;Upload Required documents </span>\r\n\r\n                    </h1>\r\n                    <div className='m-3'>\r\n                        <Button variant='contained' color='warning' className='rounded-full h-8 ' onClick={() => props.closeModalDoc()}><CloseOutlined /></Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"py-0 w-full\">\r\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-0 overflow-x-auto\">\r\n                        <div className=\"inline-block min-w-full rounded-lg overflow-hidden\">\r\n                            <h1 className='font-semibold uppercase font-mono text-light'>Owner documents : </h1>\r\n                            <table className=\"min-w-full leading-normal\">\r\n                                <thead className='bg-white'>\r\n                                    <tr className='font-semibold'>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Name\r\n                                        </th>\r\n\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Owner Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            View\r\n                                        </th>\r\n                                        {/* <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Status\r\n                                        </th> */}\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Remarks\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <TradeNonBlockingLoader show={show} />\r\n\r\n                                    {\r\n                                        docList?.ownersDocList?.map((items, index) => (\r\n                                            items?.map((data) => (\r\n                                                <>\r\n                                                    {/* <TradeDocumentRow openModal={modalAction} docList={data} index={index} key={index}/> */}\r\n                                                    <tr>\r\n\r\n                                                        <td className=\"px-5 py-2 border-b border-gray-200  text-sm\">\r\n                                                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                                {index + 1}\r\n                                                            </p>\r\n                                                        </td>\r\n                                                        <td className=\"px-5 py-2 border-b border-gray-200  text-sm\">\r\n                                                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                                {data?.docName}  <span className='text-red-500'>{data?.isMadatory == 0 ? \"\" : \"*\"}</span>\r\n                                                            </p>\r\n                                                        </td>\r\n                                                        <td className=\"px-5 py-2 border-b border-gray-200  text-sm\">\r\n                                                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                                {data?.ownerName}  <span className='text-red-500'></span>\r\n                                                            </p>\r\n                                                        </td>\r\n                                                        <td className=\"px-5 py-2 border-b border-gray-200  text-sm\" onClick={() => modalAction(data?.uploadDoc?.doc_path)}>\r\n                                                            <div className=\"flex items-center\">\r\n                                                                <div className=\"flex-shrink-0\">\r\n                                                                    {data?.uploadDoc != null &&\r\n\r\n                                                                        <a href=\"#\" className=\"block relative\">\r\n                                                                            <img alt=\"profil\" src=\"http://192.168.0.16:822/RMCDMC/public/assets/img/pdf_logo.png\" className=\"mx-auto object-cover rounded-full h-10 w-10 \" />\r\n                                                                        </a>\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        {/* <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-red-900 whitespace-no-wrap\">\r\n\r\n                                                            {props?.docList?.verify_status == 1 && \"Verified\"}\r\n                                                            {props?.docList?.verify_status == 2 && \"Rejected\"}\r\n                                                            {props?.docList?.verify_status == 0 && \"Pending\"}\r\n                                                            Pending\r\n                                                        </p>\r\n                                                    </td> */}\r\n                                                        <td className=\"px-5 py-2 border-b border-gray-200  text-sm\">\r\n                                                            <span className=\"relative inline-block px-3 py-1 font-semibold text-sky-900 leading-tight\">\r\n                                                                <span aria-hidden=\"true\" className=\"absolute inset-0 bg-slate-50 opacity-50 rounded-full\">\r\n                                                                </span>\r\n                                                                {data?.uploadDoc == null ?\r\n                                                                    <span className=\"relative\">\r\n                                                                        <button className='bg-sky-200 py-1.5 px-2' onClick={() => handleModel2(data?.docName, data?.docVal, data?.ownerId)}>Upload Fresh Document</button>\r\n                                                                    </span> : <>\r\n                                                                        <p className='font-mono text-emerald-500 opacity-50'> Document Uploaded Successfully... </p>\r\n                                                                        <span className=\"relative\">\r\n                                                                            <button className='bg-slate-200 py-1.5 px-2' onClick={() => handleModel2(data?.docName, data?.docVal, data?.ownerId)}>Re - Upload Document ?</button>\r\n                                                                        </span>\r\n                                                                    </>\r\n                                                                }\r\n                                                            </span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </>\r\n\r\n                                            ))\r\n                                        ))\r\n\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <h1 className='font-semibold uppercase font-mono text-gray-500'>Other documents : </h1>\r\n                            <table className=\"min-w-full leading-normal\">\r\n                                <thead className='bg-white'>\r\n                                    <tr className='font-semibold'>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            View\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Status\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Remarks\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <TradeNonBlockingLoader show={show} />\r\n\r\n                                    {\r\n                                        docList?.documentsList?.map((data, index) => (\r\n                                            <>\r\n                                                {/* <TradeDocumentRow openModal={modalAction} docList={data} index={index} key={index}/> */}\r\n                                                <tr>\r\n\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {index + 1}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {data?.docName}  <span className='text-red-500'>{data?.isMadatory == 0 ? \"\" : \"*\"}</span>\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\" onClick={() => modalAction(data?.uploadDoc?.doc_path)}>\r\n                                                        <div className=\"flex items-center\">\r\n                                                            <div className=\"flex-shrink-0\">\r\n                                                                {\r\n                                                                    data?.uploadDoc != null &&\r\n                                                                    <a href=\"#\" className=\"block relative\">\r\n                                                                        <img alt=\"profil\" src=\"http://192.168.0.16:822/RMCDMC/public/assets/img/pdf_logo.png\" className=\"mx-auto object-cover rounded-full h-10 w-10 \" />\r\n                                                                    </a>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-red-900 whitespace-no-wrap\">\r\n\r\n                                                            {/* {props?.docList?.verify_status == 1 && \"Verified\"}\r\n                                                            {props?.docList?.verify_status == 2 && \"Rejected\"}\r\n                                                            {props?.docList?.verify_status == 0 && \"Pending\"} */}\r\n                                                            Accepted\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-sky-900 leading-tight\">\r\n                                                            <span aria-hidden=\"true\" className=\"absolute inset-0 bg-slate-50 opacity-50 rounded-full\">\r\n                                                            </span>\r\n                                                            {data?.uploadDoc == null ?\r\n                                                                <span className=\"relative\">\r\n                                                                    <button className='bg-sky-200 py-1.5 px-2' onClick={() => handleModel2(data?.docName, data?.docVal)}>Upload Fresh Document</button>\r\n                                                                </span> : <>\r\n                                                                    <p className='font-mono text-emerald-500 opacity-50'> Document Uploaded Successfully... </p>\r\n                                                                    <span className=\"relative\">\r\n                                                                        <button className='bg-slate-200 py-1.5 px-2' onClick={() => handleModel2(data?.docName, data?.docVal)}>Re - Upload Document ?</button>\r\n                                                                    </span>\r\n                                                                </>\r\n                                                            }\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n\r\n                                        ))\r\n\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 ml-32 px-0\" style={{ 'width': '70vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\"></iframe>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen2}\r\n                onAfterOpen={afterOpenModal2}\r\n                onRequestClose={closeModal2}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal2\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 bg-slate-50  px-0\" style={{ 'width': '40vw', 'height': '20vh' }}>\r\n                    {/* <iframe className='w-full h-full' src={dummy} frameborder=\"0\"></iframe> */}\r\n                    {/* hello */}\r\n\r\n                    <form encType=\"multipart/form\" onSubmit={handleUpload} >\r\n                        <div className='text-center grid grid-cols-1 md:grid-cols-4 gap-1 p-1 font-mono text-xs md:text-[10px'>\r\n                            <label htmlFor=\"\" className=' col-span-1 font-bold text-center'>{docName} : </label>\r\n                            <select name={`${docName}`} id=\"owner_doc\" className='px-4 py-1.5 border rounded bg-white' onChange={(e) => setFileName(e.target.value)}>\r\n                                <option value=\"\">SELECT</option>\r\n                                {docVals?.map((item, index) => (\r\n                                    <option value={item?.id} key={index}>{item?.doc_name}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {/* <input type=\"hidden\" value={item?.id} name=\"\" /> */}\r\n                            <input type=\"file\" name='file' id='file' className='px-3 py-1.5 border rounded bg-white' onChange={(e) => setMyFile(e.target.files[0])} />\r\n\r\n                        </div>\r\n                        <button type='submit' className='px-3 py-1.5 float-right m-4 bg-fuchsia-500 text-slate-100 rounded-sm uppercase text-xs'>Upload document</button>\r\n                        <samll className='text-amber-600 text-xs mt-4 text-center capitalize hidden md:block'>You can upload any one of the document listed in the select box</samll>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TradeDocumentUpload\r\n/**\r\n * Exported to :\r\n * 1. PropertySafDetailsTabs Component\r\n * \r\n */","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrFormClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport axios from \"axios\";\r\nimport { HEADER, TRADE } from \"../tradeComponent/TradeApiListFile\";\r\nimport RazorpayPaymentScreen from \"../../../Components/RazorpayPaymentScreen\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction TradePaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    console.log(\"order data\", props?.OrderResponse)\r\n    const handleDelete = (id) => {\r\n        console.log(\"ID to be deleted\", id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data.data)\r\n        props.showLoader(true);\r\n\r\n        if (data.status) {\r\n            props.toast(data.message, \"success\");\r\n\r\n            setTimeout(() => {\r\n                confirmTradePayment(data.data);\r\n            }, 10000)\r\n        } else {\r\n            props.toast(data.message, \"error\")\r\n            props.showLoader(false);\r\n\r\n        }\r\n    }\r\n\r\n    const confirmTradePayment = (data) => {\r\n        console.log(\"data\", data);\r\n        axios.post(TRADE.CONFIRM_TRADE_ONLINE_PAYMENT, { orderId: data?.razorpay_order_id, paymentId: data?.razorpay_payment_id }, HEADER())\r\n            .then((response) => {\r\n                console.log(\"response for payment confirmation\", response);\r\n                // if (response.data.data.status) {\r\n                props.showLoader(false);\r\n                if (response.data.status) {\r\n                    navigate('/trade-payment-receipt/' + props?.id + \"/\" + response?.data?.data?.transectionId, { replace: true });\r\n                } else {\r\n                    props.toast(\"Payment is done but it has not updated in our servers yet...kindly wait for some time\", \"notice\");\r\n                    navigate('/trade-payment-receipt/' + props?.id + \"/\" + response?.data?.data?.transectionId, { replace: true });\r\n\r\n\r\n                }\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    const payNow = () => {\r\n        console.log(\"Clicked..\")\r\n        props.showLoader(true);\r\n        const payload = {\r\n            licenceId: props?.id\r\n        }\r\n\r\n        // axios.post('http://192.168.0.16:8000/api/trade/payOnline', payload, HEADER())\r\n        //     .then((res) => {\r\n        //         console.log(\"Oder ID Generated\", res)\r\n\r\n        //         if (res.data.status == true) {\r\n        let response = RazorpayPaymentScreen(props?.OrderResponse, dreturn)\r\n\r\n        const promise1 = Promise.resolve(response);\r\n\r\n        promise1.then((value) => {\r\n            console.log(\"payment response\", value);\r\n            // expected output: 123\r\n        });\r\n        // console.log(\"payment response\", response);\r\n        //     }\r\n        // })\r\n        // .catch((err) => console.log(\"Error genrating order id\", err))\r\n        setTimeout(() => {\r\n            closeModal();\r\n            props.showLoader(false);\r\n        }, 500);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-gradient-to-tr from-cyan-300 to-teal-600 text-slate-50 shadow-2xl border border-sky-200 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className=' border-b-2 py-1 pl-3 font-semibold border-red-400 flex'><HiCurrencyRupee size={20} className='mt-0.5 mr-1' />Make Payment For {props?.OrderResponse?.application_no}</div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6 font-semibold'>\r\n                                            <p>Firm Name</p>\r\n                                            <p>Ward No</p>\r\n                                            <p>Application Type</p>\r\n                                            <p>License For Years</p>\r\n                                            <p>Apply Date</p>\r\n                                        </div>\r\n                                        <div className='col-span-6'>\r\n                                            <p>{props?.OrderResponse?.firmName || <span className=\"text-red\"> John Doe</span>}</p>\r\n                                            <p>{props?.OrderResponse?.wardNo}</p>\r\n                                            <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6 font-semibold'>\r\n                                            <p>Name</p>\r\n                                            <p>New Ward No</p>\r\n                                        </div>\r\n                                        <div className='col-span-6'>\r\n                                            <p>{props?.OrderResponse?.name}</p>\r\n                                            <p>{props?.OrderResponse?.newWardNo}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='border-l text-center'>\r\n                                <div className=\"my-8\">\r\n                                    <h1 className=\"font-bold text-3xl\"> ₹{props?.OrderResponse?.amount}</h1>\r\n                                    <h1 className=\"font-bold text-sm \">Payable Amount</h1>\r\n                                </div>\r\n                                <div className='flex justify-center'>\r\n                                    <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-lg  rounded-sm shadow-xl'>Cancel</button>\r\n                                    <button onClick={payNow} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-3 py-1 text-lg  rounded-sm shadow-xl'>Pay Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default TradePaymentModal;\r\n","import React, { useState } from 'react'\r\nimport { ColorRing, MutatingDots, Dna, CirclesWithBar } from 'react-loader-spinner';\r\n\r\nfunction TradeNonBlockingLoader(props) {\r\n    // console.log('props loader ', props.show)\r\n    return (\r\n        <>\r\n            {/* // <div className={`${props.show ? 'grid' : 'hidden'} bg-transparent bg z-20 absolute w-full h-screen`}>\r\n        //     <div className=\"h-24 w-24 mx-auto my-[15%]\"> */}\r\n\r\n            <div className='w-56 h-56 absolute top-[26rem] left-1/2'>\r\n                <ColorRing\r\n                    visible={props.show}\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                    ariaLabel=\"blocks-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"blocks-wrapper\"\r\n                    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n                />\r\n                {/* <MutatingDots\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                    color=\"#4fa94d\"\r\n                    secondaryColor='yellow'\r\n                    radius='12.5'\r\n                    ariaLabel=\"mutating-dots-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"\"\r\n                    visible={true}\r\n                /> */}\r\n                {/* <Dna\r\n                    visible={true}\r\n                    height=\"80\"\r\n                    width=\"80\"\r\n                    ariaLabel=\"dna-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"dna-wrapper\"\r\n                /> */}\r\n                {/* <CirclesWithBar\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                    color=\"mediumturquoise  \"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"\"\r\n                    visible={true}\r\n                    outerCircleColor=\"cornflowerblue \"\r\n                    innerCircleColor=\"darkturquoise \"\r\n                    barColor=\"\"\r\n                    ariaLabel='circles-with-bar-loading'\r\n                /> */}\r\n                {/*      </div>\r\n         </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TradeNonBlockingLoader"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","useState","docName","docUrl","docStatus","docRemarks","docList","setDocList","console","log","closeModalDoc","ownerId","setownerId","modalIsOpen","setIsOpen","modalIsOpen2","setIsOpen2","DocUrl","setDocUrl","show","setshow","id","docVals","setdocVals","setdocName","FileName","setFileName","MyFile","setMyFile","closeModal2","modalAction","incomingDocUrl","useEffect","getRequiredDocuments","showLoader","axios","TRADE","applicationId","HEADER","then","response","data","status","setTimeout","catch","error","handleModel2","doc_name","values","notify","toastData","actionFlag","toast","className","style","width","height","src","alt","variant","color","onClick","scope","ownersDocList","map","items","index","isMadatory","ownerName","uploadDoc","doc_path","href","docVal","documentsList","isOpen","onAfterOpen","onRequestClose","contentLabel","class","frameborder","encType","onSubmit","event","preventDefault","licenseid","formData","FormData","append","undefined","token","window","localStorage","getItem","headers","Authorization","Accept","res","message","htmlFor","name","onChange","e","target","value","item","type","files","background","React","navigate","useNavigate","closeModal","OrderResponse","openPaymentModal","dreturn","confirmTradePayment","orderId","razorpay_order_id","paymentId","razorpay_payment_id","transectionId","replace","size","application_no","firmName","wardNo","applicationType","licenceForYears","applyDate","JSON","stringify","Date","slice","newWardNo","amount","RazorpayPaymentScreen","Promise","resolve","visible","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}