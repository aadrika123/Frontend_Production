{"version":3,"file":"static/js/5916.a9a39a48.chunk.js","mappings":"2UASMA,EAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,gBAAiB,OACjBC,OAAQ,SAGhBC,IAAAA,cAAoB,SAoKpB,MAlKA,SAAmCC,GAAQ,IAAD,kDAElCC,EAAa,oCAGjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KACxB,GAAiCJ,EAAAA,EAAAA,WAAS,GAAM,eAAzCK,EAAW,KAAEC,EAAS,KAC7B,GAAkCN,EAAAA,EAAAA,UAAS,IAAG,eAAvCO,EAAS,KAAEC,EAAY,KAMxBC,EAAc,SAACC,GACjBN,EAAUM,GALUJ,GAAU,EAOlC,EAEMK,EAAgB,CAClBC,MAAO,GACPC,QAAc,OAALf,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOgB,YAAI,WAAN,EAAL,EAAaD,QACtBE,WAAY,IAGVC,GAASC,EAAAA,EAAAA,IAAU,CACrBN,cAAeA,EACfO,SAAU,SAACC,GACPC,QAAQC,IAAI,aAAcF,GAC1BG,YAAW,WACPpB,EAAWiB,GACXrB,EAAMyB,kBAAuB,OAALzB,QAAK,IAALA,OAAK,EAALA,EAAO0B,MAAO,CAAEZ,MAAOL,EAAWM,QAASM,EAAON,QAASE,WAAYI,EAAOJ,YAC1G,GAAG,IACP,IAaEU,EAAa,SAACC,GAChBV,EAAOW,cAAc,QAASD,GAC9B,IAAME,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACf1B,EAAUwB,EAAOG,OACrB,EACAH,EAAOI,cAAcN,EACzB,EAIA,OAFAN,QAAQC,IAAI,QAASvB,EAAM0B,OAC3BJ,QAAQC,IAAI,aAAcpB,IAEtB,4BACI,iBAAMiB,SAAUF,EAAOiB,aACnBC,SAxBW,SAACC,GACpB,IAAIC,EAAOD,EAAEE,OAAOD,KAEhBV,GADQS,EAAEE,OAAOC,MACVH,EAAEE,OAAOE,MAAM,IAE1B/B,EAAakB,GACbN,QAAQC,IAAI,aAAcd,GAChB,SAAR6B,GAAmBX,EAAWC,EACpC,EAiBYc,QAAQ,sBAAqB,UAE7B,iBAAKC,MAAM,wDAAuD,WAC9D,gBAAKC,UAAU,OAAM,UACjB,gBAAKA,UAAU,GAAE,UAIb,kBAAMA,UAAS,UAAK3C,GAAa,UACvB,OAALD,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOgB,YAAI,WAAN,EAAL,EAAa6B,cACW,MAAnB,OAAL7C,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOgB,YAAI,WAAN,EAAL,EAAa8B,WACV,iBAAOF,UAAU,eAAc,wBAM/C,gBAAKA,UAAU,OAAM,UACjB,gBAAKA,UAAU,yDAAwD,SAC1C,OAAjB,OAAPzC,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,WAAP,EAAP,EAAgBwB,YAAwCS,IAAjB,OAAP5C,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,WAAP,EAAP,EAAgBwB,OAA6C,KAAjB,OAAPnC,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,WAAP,EAAP,EAAgBwB,OAAa,gBAAKU,IAAI,0DAA0DC,IAAI,gBAAgBL,UAAS,UAAK3C,EAAU,WAC9M,8BAC+C,QAAnC,OAAPE,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,QAA4D,QAAnC,OAAPhD,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,QAA4D,SAAnC,OAAPhD,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,QAA6D,QAAnC,OAAPhD,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,QAExL,iBAAKC,QAAS,kBAAMzC,EAAYN,EAAO,EAAC,UACO,QAAnC,OAAPF,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,SAAkB,gBAAKH,IAAI,0DAA0DC,IAAI,gBAAgBL,UAAS,UAAK3C,EAAU,UACxH,QAAnC,OAAPE,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,SAAkB,gBAAKH,IAAI,0DAA0DC,IAAI,gBAAgBL,UAAS,UAAK3C,EAAU,UACxH,SAAnC,OAAPE,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,SAAmB,gBAAKH,IAAI,0DAA0DC,IAAI,gBAAgBL,UAAS,UAAK3C,EAAU,UACzH,QAAnC,OAAPE,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,OAAM,QAAN,EAAd,EAAgBwB,YAAI,WAAb,EAAP,EAAsBY,MAAM,KAAKC,SAAkB,gBAAKH,IAAI,0DAA0DC,IAAI,gBAAgBL,UAAS,UAAK3C,EAAU,cAGvK,+BACI,SAAC,EAAAoD,QAAO,CAACT,UAAU,iCAAiCtD,QAAQ,uCAAsC,UAC9F,0BACI,gBAAK0D,IAAI,0DAA0DJ,UAAS,UAAK3C,EAAU,+BAW3H,gBAAK2C,UAAU,OAAM,UACjB,gBAAKA,UAAU,yDAAwD,UACnE,gBAAKA,UAAU,8CAA6C,UACxD,kBAAOU,KAAK,OAAOC,OAAO,0BAA0BjB,KAAK,QAAQM,UAAU,sSAAsSR,SAAUlB,EAAOsC,qBAKrX,OAAjB,OAAPrD,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,WAAP,EAAP,EAAgBwB,YAAwCS,IAAjB,OAAP5C,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,WAAP,EAAP,EAAgBwB,OAA6C,KAAjB,OAAPnC,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASW,aAAK,WAAP,EAAP,EAAgBwB,QAClF,gBAAKM,UAAU,OAAM,UACjB,sCAIR,gBAAKA,UAAU,OAAM,UACjB,gBAAKA,UAAU,yDAAwD,UACnE,gBAAKA,UAAU,8CAA6C,SACrC,OAAX,OAAPzC,QAAO,IAAPA,OAAO,EAAPA,EAASW,aAAmCiC,IAAX,OAAP5C,QAAO,IAAPA,OAAO,EAAPA,EAASW,QAAwC,KAAX,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASW,QAC/D,mBAASwC,KAAK,SAASV,UAAU,iRAAgR,UAC7S,iBAAMA,UAAU,UAAS,uBAE7B,iCACI,cAAGA,UAAU,iDAAgD,2BAC7D,mBAASU,KAAK,SAASV,UAAU,iRAAgR,UAC7S,iBAAMA,UAAU,UAAS,wCAYzD,SAAC,IAAK,CACFa,OAAQlD,EACRmD,YAnIW,WAAQ,EAoInBC,eArIO,WAAH,OAASnD,GAAU,EAAM,EAsI7BoD,MAAOvE,EACPwE,aAAa,gBAAe,UAG5B,gBAAKlB,MAAM,6DAA6DiB,MAAO,CAAE,MAAS,OAAQ,OAAU,QAAS,UACjH,mBAAQhB,UAAU,gBAAgBI,IAAK3C,EAAQyD,YAAY,IAAG,UAE1D,gBAAKlB,UAAU,GAAGI,IAAK3C,YAQ/C,E,WCtCA,MA9HA,SAAkCL,GAAQ,IAAD,MAErC,EAAwD,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOqB,OAAlD0C,EAAY,EAAZA,aAAcC,EAAkB,EAAlBA,mBAAoBV,EAAI,EAAJA,KAClCW,GAA6BC,EAAAA,EAAAA,KAA7BD,yBACR,GAAoC/D,EAAAA,EAAAA,UAAS,IAAG,eAAzCiE,EAAU,KAAEC,EAAa,KAChC,GAA8BlE,EAAAA,EAAAA,YAAU,eAAjCmE,EAAO,KAAEC,EAAU,KAC1B,GAAwCpE,EAAAA,EAAAA,YAAU,eAA3CqE,EAAY,KAAEC,EAAe,KAa9BC,EAAiB,SAACC,EAAKC,GAGzB,GAFArD,QAAQC,IAAI,wBAAyB4C,QAEbpB,IAApBoB,EAAWO,GAGX,OAFApD,QAAQC,IAAI,8BACZ4C,EAAWO,GAAOC,GAGtBP,EAAc,GAAD,eAAKD,GAAU,CAAEQ,IAClC,EAEArD,QAAQC,IAAI,oCAAqC4C,GAYjD7C,QAAQC,IAAI,cAAe4C,EAAWS,SAGtCC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,IACH,IAAMA,EAAkB,WAIpBC,EAAAA,GAAAA,KAAW,GAAD,OAAId,GAHM,CAChBe,SAAU,eAEyCC,EAAAA,EAAAA,MAClDC,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,mCAAoC4D,EAASnE,MAC7C,SAARsC,EACAkB,EAAgBW,EAASnE,MAGzBsD,EAAWa,EAASnE,KAG5B,IACCoE,OAAM,SAAUC,GACb/D,QAAQC,IAAI,eAAgB8D,EAChC,GACR,EAIA,OAFA/D,QAAQC,IAAI,kBAA0B,OAAP8C,QAAO,IAAPA,GAAoB,QAAb,EAAPA,EAASiB,mBAAW,WAAb,EAAP,EAAsBV,SAGjD,+BAEI,gBAAKhC,UAAU,8BAA6B,UACxC,iBAAKA,UAAU,uFAAsF,WACjG,iBAAKA,UAAU,wDAAuD,WAClE,iBAAKA,UAAU,MAAK,WAEhB,iBAAKD,MAAM,oEAAmE,WAC1E,0BACI,eAAIC,UAAU,kEAAiE,yBAEnF,0BACI,eAAIA,UAAU,iEAAgE,wBAElF,0BACI,eAAIA,UAAU,iEAAgE,uBAGlF,0BACI,eAAIA,UAAU,iEAAgE,0BAGtF,iBAAKA,UAAU,OAAM,UACT,OAAPyB,QAAO,IAAPA,GAAoB,QAAb,EAAPA,EAASiB,mBAAW,WAAb,EAAP,EAAsBC,KAAI,SAACC,EAAOC,GAAK,OACpC,SAAC,EAAyB,CAACzE,KAAMwE,EAAO/D,kBAAmBgD,EAAgB/C,MAAO+D,GAAS,IAElF,OAAZlB,QAAY,IAAZA,GAAyB,QAAb,EAAZA,EAAce,mBAAW,WAAb,EAAZ,EAA2BC,KAAI,SAACC,EAAOC,GAAK,OACzC,SAAC,EAAyB,CAACzE,KAAMwE,EAAO/D,kBAAmBgD,EAAgB/C,MAAO+D,GAAS,WAIvG,iBAAK7C,UAAU,+BAA8B,WACzC,gBAAKA,UAAU,qBAAoB,UAC/B,mBAAQU,KAAK,SAASX,MAAM,+QAA+QS,QAAS,kBAAMW,EAAa,EAAE,EAAC,qBAE9U,gBAAKnB,UAAU,aAAY,UACvB,mBAAQU,KAAK,SAASV,UAAU,qRAAqRQ,QA3E1T,WAAO,IAAD,GACd,OAAPiB,QAAO,IAAPA,GAAoB,QAAb,EAAPA,EAASiB,mBAAW,WAAb,EAAP,EAAsBV,SAAUT,EAAWS,QAC3CZ,EAAmB,uBAAwBG,GAC3CJ,EAAa,IA1BN,SAAC2B,EAAWpC,GACvBqC,EAAAA,GAAAA,UACY,WAARrC,GACAqC,EAAAA,GAAAA,QAAcD,GAEN,SAARpC,GACAqC,EAAAA,GAAAA,MAAYD,EAEpB,CAqBQE,CAAO,sBAAuB,QAEtC,EAmEyW,+BAGrV,gBAAKhD,UAAU,mBAAkB,UAC7B,iBAAMA,UAAU,sDAAqD,uFAI7E,gBAAKA,UAAU,aAAY,UACvB,gBAAKA,UAAU,SAAQ,UACnB,SAACiD,EAAA,EAAmB,cAOhD,E,uDCtFA,MAlDA,WACI,IAIQC,GAAiC5B,EAAAA,EAAAA,KAAjC4B,6BACR,GAAwC5F,EAAAA,EAAAA,YAAU,eAA3C6F,EAAY,KAAEC,EAAe,MAGpCnB,EAAAA,EAAAA,YAAU,WACNoB,GACJ,GAAG,IACH,IAAMA,EAA0B,WAC5BlB,EAAAA,GAAAA,KAAW,GAAD,OAAIe,IAAgCb,EAAAA,EAAAA,MACzCC,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,eAAgB4D,GAC5Ba,EAAgBb,EAASnE,KAAKA,KAClC,IACCoE,OAAM,SAAUC,GACb/D,QAAQC,IAAI,eAAgB8D,EAChC,GACR,EAGA,OAFA/D,QAAQC,IAAI,gCAAiCwE,IAGzC,+BACI,gBAAKnD,UAAU,mEAAkE,UAC7E,iBAAKA,UAAU,4BAA2B,WACtC,iBAAKA,UAAU,gBAAe,WAC1B,gBAAKsD,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAY,eAAa,MAAMC,OAAO,eAAe1D,MAAM,0BAAyB,UAC5I,iBAAM,iBAAe,QAAQ,kBAAgB,QAAQ2D,EAAE,0JAE3D,eAAI1D,UAAU,eAAc,kCAEnB,OAAZmD,QAAY,IAAZA,OAAY,EAAZA,EAAcR,KAAI,SAACvE,GAAI,OACpB,iBAAK4B,UAAS,UAhCnB,2BAgCgC,cAAa,WACpC,iBAAMA,UAAS,UAnCrB,kCAmCqC,YAAW,SAAM,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,QAElD,iBAAMV,UAAS,UApCtB,mCAoCqC,YAAW,SAAM,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAMuF,iBAC/C,UAS9B,E,iCCfAxG,IAAAA,cAAoB,SAi/BpB,MA/+BA,SAAgCC,GAAQ,IAAD,wBAEnC,EAAoF,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOqB,OAA9E0C,EAAY,EAAZA,aAAcC,EAAkB,EAAlBA,mBAAoBwC,EAA0B,EAA1BA,2BAA4BlD,EAAI,EAAJA,KAEtE,GAA+HY,EAAAA,EAAAA,KAAvHuC,EAAuB,EAAvBA,wBAAsFX,GAA/C,EAAdY,eAA+B,EAAfC,gBAA2C,EAA1BC,2BAAwD,EAA5Bd,8BAC9F,GAA0Ce,EAAAA,EAAAA,KAAlCC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cACvB,GAAoC7G,EAAAA,EAAAA,YAAU,eAAvC8G,EAAU,KAAEC,EAAa,KAChC,GAA8B/G,EAAAA,EAAAA,YAAU,eAAjCgH,EAAO,KAAEC,EAAU,KAC1B,GAAgCjH,EAAAA,EAAAA,YAAU,eAAnCkH,EAAQ,KAAEC,GAAW,KAC5B,IAAwCnH,EAAAA,EAAAA,UAAS,CAAC,GAAE,iBAA7CoH,GAAY,MAAEC,GAAe,MACpC,IAA0CrH,EAAAA,EAAAA,YAAU,iBAA7CsH,GAAa,MAAEC,GAAgB,MACtC,IAAwCvH,EAAAA,EAAAA,YAAU,iBAA3C6F,GAAY,MAAEC,GAAe,MACpC,IAAkC9F,EAAAA,EAAAA,YAAU,iBAC5C,IADgB,MAAc,OACOA,EAAAA,EAAAA,aAAU,iBAAxCwH,GAAU,MACjB,IADiC,OACUxH,EAAAA,EAAAA,aAAU,iBAA9CyH,GAAa,MACpB,IADuC,OACPzH,EAAAA,EAAAA,UAAS,IAAE,iBAApC0H,GAAQ,MAAEC,GAAW,MAC5B,IAAkC3H,EAAAA,EAAAA,WAAS,GAAM,iBAA1C4H,GAAS,MAAEC,GAAY,MAC9B,IAAkC7H,EAAAA,EAAAA,WAAS,GAAM,iBAA1C8H,GAAS,MAAEC,GAAY,MAG9B,IAAiC/H,EAAAA,EAAAA,WAAS,GAAK,iBAK3CD,IALc,MAAW,MAKZ,8CACbiI,GAAa,2EAEXC,GAAmBC,EAAAA,GAAW,CAChCC,IAAKD,EAAAA,KAAaE,SAAS,cAC3BC,YAAaH,EAAAA,KAAaE,SAAS,uBACnCE,cAAeJ,EAAAA,KAAaE,SAAS,oBAAoBG,IAAI,GAAI,+BACjEC,WAAYN,EAAAA,KAAaE,SAAS,oBAAoBG,IAAI,GAAI,+BAC9DE,MAAOP,EAAAA,KAAaO,MAAM,iBAAiBL,SAAS,qBACpDM,iBAAkBR,EAAAA,KAAaE,SAAS,0BACxCO,gBAAiBT,EAAAA,KAAaE,SAAS,0BACvCQ,iBAAkBV,EAAAA,KAAaE,SAAS,0BACxCS,gBAAiBX,EAAAA,KAAaE,SAAS,0BACvCU,SAAUZ,EAAAA,KAAaE,SAAS,oBAChCW,SAAUb,EAAAA,KAAaE,SAAS,gBAAgBY,IAAI,GAAI,yBAAyBT,IAAI,GAAI,yBACzFU,WAAYf,EAAAA,KAAaE,SAAS,oBAAoBG,IAAI,GAAI,+BAC9DW,cAAehB,EAAAA,KAAaE,SAAS,0BACrCe,aAAcjB,EAAAA,KAAaE,SAAS,0BACpCgB,qBAAsBlB,EAAAA,KAAaE,SAAS,0BAC5CiB,iBAAkBnB,EAAAA,KAAaE,SAAS,0BAGxCkB,MAAOpB,EAAAA,KAAaE,SAAS,0BAC7BmB,YAAarB,EAAAA,KAAaE,SAAS,gBACnCoB,YAAatB,EAAAA,KAAaE,SAAS,4BA8BjCpH,IAASC,EAAAA,EAAAA,IAAU,CACrBN,cA5BkB,CAClBwH,IAAK,GACLE,YAAa,GACbC,cAAe,GACfE,WAAY,GACZC,MAAO,GACPC,iBAAkB,GAClBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,SAAU,GACVC,SAAU,GACVE,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,qBAAsB,GACtBC,iBAAkB,GAClBI,UAAW,GACXC,eAAgB,GAChBJ,MAAO,GACPC,YAAa,GACbC,YAAa,GACbG,UAAW,GACXC,SAAU,GACVC,cAAe,IAKfC,oBAAoB,EACpB5I,SAAU,SAAAC,GACNC,QAAQC,IAAI,6BAA8BF,GAC1C2C,EAAmB,oBAAqB3C,EAAQiG,IAChDvD,EAAa,EACjB,EACAoE,iBAAAA,MAEJ8B,EAAAA,EAAAA,GAAY,IAAI,GAiChB3I,QAAQC,IAAI,4BAA6B+F,IACzChG,QAAQC,IAAI,SAAUvB,EAAMkK,YAO5B5I,QAAQC,IAAI,gBAAiBiG,KAG7B3C,EAAAA,EAAAA,YAAU,WACNsF,IACJ,GAAG,IACH,IAAMA,GAAiB,WACnBlC,IAAa,GACbF,IAAa,GACbhD,EAAAA,GAAAA,IAAU,GAAD,OAAI+B,IAAiB7B,EAAAA,EAAAA,MACzBC,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,iCAAkC4D,EAASnE,KAAKA,MAC5DmG,EAAWhC,EAASnE,KAAKA,MACzB+G,IAAa,EACjB,IACC3C,OAAM,SAAUC,GACb/D,QAAQC,IAAI,eAAgB8D,GAC5B4C,IAAa,GACbF,IAAa,EACjB,GACR,EACAzG,QAAQC,IAAI,WAAY2F,GAIxB,IAAMkD,GAAiB,SAACC,GACpB,IAAMC,EAAc,CAEhBD,MAAO,GAEX/I,QAAQC,IAAI,yBAA0B+I,GACtCvF,EAAAA,GAAAA,KAAW,GAAD,OAAIgC,GAAiBuD,GAAaC,EAAAA,EAAAA,MACvCrF,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,gBAAiB4D,GAC7BkC,GAAYlC,EAASnE,KAAKA,KAC9B,IACCoE,OAAM,SAAUC,GACb/D,QAAQC,IAAI,wBAAyB8D,EACzC,GACR,EACA/D,QAAQC,IAAI,sBAAuB6F,IAGnCvC,EAAAA,EAAAA,YAAU,WACN2F,IACJ,GAAG,IACH,IAAMA,GAAmB,SAACH,GACtBtF,EAAAA,GAAAA,KAAW,GAAD,OAAI0B,IAA2B8D,EAAAA,EAAAA,MACpCrF,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,qCAAsC4D,EAASnE,KAAKA,MAChEiG,EAAc9B,EAASnE,KAAKA,KAEhC,IACCoE,OAAM,SAAUC,GACb/D,QAAQC,IAAI,eAAgB8D,EAChC,GACR,GAGAR,EAAAA,EAAAA,YAAU,WACN4F,IACJ,GAAG,IACH,IAAMA,GAAkB,WACpB1F,EAAAA,GAAAA,KAAW,GAAD,OAAIe,IAAgCyE,EAAAA,EAAAA,MACzCrF,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,yBAA0B4D,EAASnE,KAAKA,MACpDgF,GAAgBb,EAASnE,KAAKA,KAClC,IACCoE,OAAM,SAAUC,GACb/D,QAAQC,IAAI,eAAgB8D,EAChC,GACR,GAIAR,EAAAA,EAAAA,YAAU,WAEM,SAARvB,IACAoH,KACAnD,GAAgBf,GAExB,GAAG,CAACA,IACJ,IAAMkE,GAAsB,WAExBxJ,GAAOW,cAAc,MAAiC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BmE,QACxDzJ,GAAOW,cAAc,cAAyC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BoE,cAChE1J,GAAOW,cAAc,gBAA2C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BqE,WAClE3J,GAAOW,cAAc,aAAwC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BsE,QAC/D5J,GAAOW,cAAc,QAAmC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BmC,OAC1DzH,GAAOW,cAAc,mBAA8C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BuE,mBACrE7J,GAAOW,cAAc,kBAA6C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BwE,SACpE9J,GAAOW,cAAc,mBAA8C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByE,mBACrE/J,GAAOW,cAAc,kBAA6C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B0E,mBACpEhK,GAAOW,cAAc,WAAsC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B2E,WAC7DjK,GAAOW,cAAc,WAAsC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B4E,WAC7DlK,GAAOW,cAAc,aAAwC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B6E,aAC/DnK,GAAOW,cAAc,gBAA2C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B8E,gBAClEpK,GAAOW,cAAc,eAA0C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B+E,gBACjErK,GAAOW,cAAc,uBAAkD,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BgF,uBACzEtK,GAAOW,cAAc,mBAA8C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiF,oBACrEvK,GAAOW,cAAc,iBAA4C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BkF,kBACnExK,GAAOW,cAAc,QAAmC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BmF,QAC1DzK,GAAOW,cAAc,YAAuC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BoF,YAC9D1K,GAAOW,cAAc,cAAyC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BqF,cAChE3K,GAAOW,cAAc,cAAyC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BsF,cAChE5K,GAAOW,cAAc,YAAuC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BqD,WAC9D3I,GAAOW,cAAc,WAAsC,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BsD,UAC7D5I,GAAOW,cAAc,gBAA2C,OAA1B2E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BuF,cAEtE,EAGA,OAAIjE,IAEI,iCACI,SAACkE,EAAA,EAAS,KACV,gBAAKpJ,UAAU,oBAIvBoF,IAEI,SAACiE,EAAA,EAAW,WACR,SAACC,EAAA,EAAe,CAACC,MAAM,iBAAiBC,KAAK,yDAAyDC,WAAW,iBAAiBC,UAAU,gCAKxJhL,QAAQC,IAAI,+BAAgCiF,GAC5ClF,QAAQC,IAAI,4BAA6BwE,IACzCzE,QAAQC,IAAI,kBAAmByF,GAC/B1F,QAAQC,IAAI,qBAAgC,OAAVmG,SAAU,IAAVA,QAAU,EAAVA,GAAY6E,iBAC9CjL,QAAQC,IAAI,yBAA0BoG,KAIlC,+BACI,gBAAK/E,UAAU,6BAA4B,UACvC,iBAAMxB,SAAUF,GAAOiB,aAAcC,SAjL1B,SAACC,GACpBf,QAAQC,IAAI,cAAec,EAAEE,OAAOe,MACpChC,QAAQC,IAAI,iBAAkBc,EAAEE,OAAOD,MAEvC,IAAIA,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAGX,OAARF,GAAiB8H,GAAe5H,GACxB,OAARF,GAAiBmF,GAAiBjF,GAEpClB,QAAQC,IAAI,eAAgBiB,GAGP,cAAjBH,EAAEE,OAAOe,KACTiE,IAAgB,kBAAKD,IAAY,cAAGhF,EAAOD,EAAEE,OAAOF,EAAEE,OAAOiK,eAAeC,QAE5ElF,IAAgB,kBAAKD,IAAY,cAAGhF,EAAOE,KAGrC,YAARF,GAAsBpB,GAAOW,cAAc,YAAY6K,EAAAA,EAAAA,IAAiBlK,EAAOtB,GAAOG,OAAO2H,SAAU,KAC/F,YAAR1G,GAAsBpB,GAAOW,cAAc,YAAY6K,EAAAA,EAAAA,IAAiBlK,EAAOtB,GAAOG,OAAO4H,SAAU,KAC/F,SAAR3G,GAAmBpB,GAAOW,cAAc,SAAS8K,EAAAA,EAAAA,IAA0BnK,EAAOtB,GAAOG,OAAOmI,MAAO,KAC/F,eAARlH,GAAyBpB,GAAOW,cAAc,eAAe+K,EAAAA,EAAAA,IAAgBpK,EAAOtB,GAAOG,OAAOoI,YAAa,IACvG,aAARnH,GAAuBpB,GAAOW,cAAc,aAAa+K,EAAAA,EAAAA,IAAgBpK,EAAOtB,GAAOG,OAAOwI,UAAW,KACjG,YAARvH,GAAsBpB,GAAOW,cAAc,YAAY+K,EAAAA,EAAAA,IAAgBpK,EAAOtB,GAAOG,OAAOyI,SAAU,KAC9F,aAARxH,GAAuBpB,GAAOW,cAAc,aAAa8K,EAAAA,EAAAA,IAA0BnK,EAAOtB,GAAOG,OAAOsI,UAAW,KAC3G,kBAARrH,GAA4BpB,GAAOW,cAAc,kBAAkB8K,EAAAA,EAAAA,IAA0BnK,EAAOtB,GAAOG,OAAOuI,eAAgB,KAC1H,SAARtH,GAAmBpB,GAAOW,cAAc,SAASgL,EAAAA,EAAAA,IAAerK,EAAOtB,GAAOG,OAAOsH,MAAO,KAClG,EAoJ0E,UAC1D,4BAGI,gBAAK/F,UAAU,+EAA8E,SAChF,SAARU,IACG,gBAAKV,UAAU,eAAc,cACPG,GAAjByE,IACG,iCACI,gBAAI5E,UAAU,uDAAsD,gCAC9C,iBAAMA,UAAU,0BAAyB,gCAA0B,yDAAqD,kBAAM,2DACzF,mBAAM,iBAAMA,UAAU,0BAAyB,oDAE1G,iBAAKA,UAAU,oBAAmB,WAC9B,iBAAKA,UAAU,oFAAmF,WAC9F,gBAAIA,UAAU,6DAA4D,0BAAa,iBAAMA,UAAU,GAAE,iBAAW,QACpH,eAAIA,UAAU,4CAA2C,iEACzD,gBAAKA,UAAU,IAAG,UACd,oCAAQA,UAAS,UAAKsF,GAAU,qBAAwBhH,GAAO4L,cAAc,QAAM,eAC/E,wCACQ,OAAP5F,QAAO,IAAPA,OAAO,EAAPA,EAAS3B,KAAI,SAACC,GAAK,OAChB,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAOwH,UAAkB,cAQpE,gBAAKpK,UAAU,iBAAgB,UAC3B,gBAAKI,IAAI,0DAA0DJ,UAAU,kBAKzF,iBAAKA,UAAU,iCAAgC,WAC3C,gBAAKsD,MAAM,6BAA6BE,QAAQ,YAAYD,KAAK,eAAexD,MAAM,6BAA4B,UAC9G,iBAAM2D,EAAE,yPAGZ,gBAAI1D,UAAU,uCAAsC,qCAAwB,iBAAMA,UAAU,2EAA0E,SAAE0E,GAAae,MAAW,+CASpN,yBACa,SAAR/E,IACG,gBAAKV,UAAS,GAAK,UACf,iBAAKA,UAAU,2FAA0F,WACrG,iBAAKA,UAAU,aAAY,WACvB,iBAAKA,UAAU,8EAA6E,WACxF,iBAAKA,UAAU,+DAA8D,WACzE,iBAAKA,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,4BAAe,iBAAM2C,UAAU,eAAc,sBAE/E,iBAAKA,UAAU,mBAAkB,WAC7B,oCAAQA,UAAS,UAAKsF,GAAU,cAAiBhH,GAAO4L,cAAc,gBAAc,eAChF,mBAAQtK,MAAM,GAAE,qBACL,OAAVwE,QAAU,IAAVA,GAA2B,QAAjB,EAAVA,EAAYiG,uBAAe,OAAa,QAAb,EAA3B,EAA6BC,mBAAW,WAA9B,EAAV,EAA0C3H,KAAI,SAACC,GAAK,OACjD,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAO2H,kBAA0B,SAGpE,cAAGvK,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ7E,aAAerH,GAAOmM,OAAO9E,YAAcrH,GAAOmM,OAAO9E,YAAc,cAG5I,iBAAK3F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,gBAAgBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACjE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOmH,cACrB+E,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ5E,eAAiBtH,GAAOmM,OAAO7E,cAAgBtH,GAAOmM,OAAO7E,cAAgB,cAIlJ,iBAAK5F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,yBAAY,iBAAM2C,UAAU,eAAc,sBAE5E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,aAAagL,YAAY,GAAG1K,UAAS,UAAKsF,IAC9D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOqH,WACrB6E,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ1E,YAAcxH,GAAOmM,OAAO3E,WAAaxH,GAAOmM,OAAO3E,WAAa,cAGzI,iBAAK9F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,qBAAQ,iBAAM2C,UAAU,eAAc,sBAExE,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,QAAQgL,YAAY,GAAG1K,UAAS,UAAKsF,IACzD9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOsH,MACrB4E,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQzE,OAASzH,GAAOmM,OAAO1E,MAAQzH,GAAOmM,OAAO1E,MAAQ,cAG1H,iBAAK/F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,gCAAmB,iBAAM2C,UAAU,eAAc,sBAEnF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,mBAAmBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACpE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOuH,iBACrB2E,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQxE,kBAAoB1H,GAAOmM,OAAOzE,iBAAmB1H,GAAOmM,OAAOzE,iBAAmB,cAI3J,iBAAKhG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,sBAAS,iBAAM2C,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,mBAAkB,WAC7B,qCAAY1B,GAAO4L,cAAc,oBAAkB,IAAElK,UAAS,UAAKsF,GAAU,aAAaqF,UAAQ,YAC9F,mBAAQ/K,MAAiC,OAA1BgE,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BwE,QAAQ,SAA4B,OAA1BxE,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BgH,gBAKrF,cAAG5K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQvE,iBAAmB3H,GAAOmM,OAAOxE,gBAAkB3H,GAAOmM,OAAOxE,gBAAkB,cAGxJ,iBAAKjG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,gCAAmB,iBAAM2C,UAAU,eAAc,sBAEnF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,mBAAmBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACpE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOyH,iBACrByE,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQtE,kBAAoB5H,GAAOmM,OAAOvE,iBAAmB5H,GAAOmM,OAAOvE,iBAAmB,cAG3J,iBAAKlG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,sBAAS,iBAAM2C,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,mBAAkB,WAC7B,qCAAa1B,GAAO4L,cAAc,oBAAkB,IAAElK,UAAS,UAAKsF,GAAU,aAAaqF,UAAQ,YAC/F,mBAAQ/K,MAAiC,OAA1BgE,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B0E,kBAAkB,SAA4B,OAA1B1E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiH,0BAM/F,cAAG7K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQrE,iBAAmB7H,GAAOmM,OAAOtE,gBAAkB7H,GAAOmM,OAAOtE,gBAAkB,cAGxJ,iBAAKnG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,WAAWgL,YAAY,GAAG1K,UAAS,UAAKsF,GAAU,KACtE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO2H,SACrBuE,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQpE,UAAY9H,GAAOmM,OAAOrE,SAAW9H,GAAOmM,OAAOrE,SAAW,cAGnI,iBAAKpG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,WAAWgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC5D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO4H,SACrBsE,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQnE,UAAY/H,GAAOmM,OAAOpE,SAAW/H,GAAOmM,OAAOpE,SAAW,cAGnI,iBAAKrG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,yBAAY,iBAAM2C,UAAU,eAAc,sBAE5E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,aAAagL,YAAY,GAAG1K,UAAS,UAAKsF,IAC9D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO8H,WACrBoE,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQjE,YAAcjI,GAAOmM,OAAOlE,WAAajI,GAAOmM,OAAOlE,WAAa,cAGzI,iBAAKvG,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,4BAAe,iBAAM2C,UAAU,eAAc,sBAE/E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,gBAAgBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACjE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO+H,cACrBmE,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQhE,eAAiBlI,GAAOmM,OAAOjE,cAAgBlI,GAAOmM,OAAOjE,cAAgB,iBAItJ,iBAAKxG,UAAU,kEAAiE,WAC5E,iBAAKA,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,6BAAgB,iBAAM2C,UAAU,eAAc,sBAEhF,iBAAKA,UAAU,mBAAkB,WAC7B,mCAAQU,KAAK,OAAOhB,KAAK,eAAegL,YAAY,GAAG1K,UAAS,UAAKsF,GAAU,cAAgBhH,GAAO4L,cAAc,iBAAe,IAAES,UAAQ,YACzI,mBAAQ/K,MAAiC,OAA1BgE,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B+E,eAAe,SAA4B,OAA1B/E,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BkH,uBAM5F,cAAG9K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ/D,cAAgBnI,GAAOmM,OAAOhE,aAAenI,GAAOmM,OAAOhE,aAAe,cAG/I,iBAAKzG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,oCAAuB,iBAAM2C,UAAU,eAAc,sBAEvF,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,yBAAuB,IAAElK,UAAS,UAAKsF,GAAU,aAAaqF,UAAQ,aACnG,mBAAQ/K,MAAM,GAAG+K,UAAQ,EAACI,UAAQ,uBACvB,OAAV3G,QAAU,IAAVA,GAA2B,QAAjB,EAAVA,EAAYiG,uBAAe,OAAsB,QAAtB,EAA3B,EAA6BW,4BAAoB,WAAvC,EAAV,EAAmDrI,KAAI,SAACC,GAAK,OAC1D,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAO2H,kBAA0B,SAGpE,cAAGvK,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ9D,sBAAwBpI,GAAOmM,OAAO/D,qBAAuBpI,GAAOmM,OAAO/D,qBAAuB,cAIvK,iBAAK1G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,oCAAuB,iBAAM2C,UAAU,eAAc,sBAEvF,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,kBAAgB,IAAElK,UAAS,UAAKsF,GAAU,aAAaqF,UAAQ,aAC5F,mBAAQ/K,MAAM,GAAG+K,UAAQ,EAACI,UAAQ,uBACrB,OAAZ5H,SAAY,IAAZA,QAAY,EAAZA,GAAcR,KAAI,SAACC,GAAK,OACrB,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAOlC,MAAc,SAGxD,cAAGV,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQrD,eAAiB7I,GAAOmM,OAAOtD,cAAgB7I,GAAOmM,OAAOtD,cAAgB,cAIlJ,iBAAKnH,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,mBAAmBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACpE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOkI,iBACrBgE,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ7D,kBAAoBrI,GAAOmM,OAAO9D,iBAAmBrI,GAAOmM,OAAO9D,iBAAmB,cAG3J,iBAAK3G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,yBAAY,iBAAM2C,UAAU,eAAc,sBAE5E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,YAAYgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC7D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOsI,UACrB4D,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQzD,WAAazI,GAAOmM,OAAO1D,UAAYzI,GAAOmM,OAAO1D,UAAY,cAItI,iBAAK/G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,sBAAS,iBAAM2C,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,QAAQgL,YAAY,GAAG1K,UAAS,UAAKsF,IACzD9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOmI,MACrB+D,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ5D,OAAStI,GAAOmM,OAAO7D,MAAQtI,GAAOmM,OAAO7D,MAAQ,cAG1H,iBAAK5G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,iCAAoB,iBAAM2C,UAAU,eAAc,sBAEpF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,cAAcgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC/D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOoI,YACrB8D,UAAQ,KAEZ,cAAG3K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ3D,aAAevI,GAAOmM,OAAO5D,YAAcvI,GAAOmM,OAAO5D,YAAc,cAG5I,iBAAK7G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,0BAAa,iBAAM2C,UAAU,eAAc,sBAE7E,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,gBAAc,IAAElK,UAAS,UAAKsF,GAAU,aAAaqF,UAAQ,aAC1F,mBAAQ/K,MAAM,GAAE,qBACL,OAAVwE,QAAU,IAAVA,GAA2B,QAAjB,EAAVA,EAAYiG,uBAAe,OAAa,QAAb,EAA3B,EAA6BY,mBAAW,WAA9B,EAAV,EAA0CtI,KAAI,SAACC,GAAK,OACjD,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAO2H,kBAA0B,SAGpE,cAAGvK,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ1D,aAAexI,GAAOmM,OAAO3D,YAAcxI,GAAOmM,OAAO3D,YAAc,cAG5I,iBAAK9G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,+BAAkB,iBAAM2C,UAAU,eAAc,sBAElF,gBAAKA,UAAU,mBAAkB,UAC7B,kBAAOU,KAAK,OAAOhB,KAAK,iBAAiBgL,YAAY,GAAG1K,UAAS,UAAKsF,IAClE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOuI,eACrB2D,UAAQ,UAKpB,iBAAK3K,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK3C,IAAa,2BAElC,gBAAK2C,UAAU,mBAAkB,UAC7B,kBAAOU,KAAK,OAAOhB,KAAK,YAAYgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC7D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOwI,kBAMjC,iBAAKjH,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK3C,IAAa,yBAElC,gBAAK2C,UAAU,mBAAkB,UAC7B,kBAAOU,KAAK,OAAOhB,KAAK,WAAWgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC5D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOyI,uBAQzC,gBAAKlH,UAAU,kBAAiB,UAC5B,mBAAQU,KAAK,SAASV,UAAU,yQAAwQ,+BAGhT,iBAAKA,UAAU,sCAAqC,WAChD,iBAAKA,UAAU,iBAAgB,WAC3B,gBAAKA,UAAU,+EAA+EQ,QAAS,kBAAMyE,GAAY,EAAE,EAAC,iCAC5H,gBAAKjF,UAAU,+EAA+EQ,QAAS,kBAAMyE,GAAY,EAAE,EAAC,sBAEnH,GAAZD,KACG,gBAAKhF,UAAU,SAAQ,UACnB,SAAC,EAAkB,MAGd,GAAZgF,KACG,gBAAKhF,UAAU,SAAQ,UACnB,SAACkL,EAAA,EAA0B,iBAWvD,8BACsB/K,GAAjByE,KACG,gBAAK5E,UAAS,GAAK,UACf,iBAAKA,UAAU,2FAA0F,WACrG,iBAAKA,UAAU,aAAY,WACvB,iBAAKA,UAAU,8EAA6E,WACxF,iBAAKA,UAAU,+DAA8D,WACzE,iBAAKA,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,4BAAe,iBAAM2C,UAAU,eAAc,sBAE/E,iBAAKA,UAAU,mBAAkB,WAC7B,oCAAQA,UAAS,UAAKsF,GAAU,cAAiBhH,GAAO4L,cAAc,gBAAc,eAChF,mBAAQtK,MAAM,GAAE,qBACL,OAAVwE,QAAU,IAAVA,GAA2B,QAAjB,EAAVA,EAAYiG,uBAAe,OAAa,QAAb,EAA3B,EAA6BC,mBAAW,WAA9B,EAAV,EAA0C3H,KAAI,SAACC,GAAK,OACjD,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAO2H,kBAA0B,SAGpE,cAAGvK,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ7E,aAAerH,GAAOmM,OAAO9E,YAAcrH,GAAOmM,OAAO9E,YAAc,cAG5I,iBAAK3F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,gBAAgBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACjE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOmH,iBAEzB,cAAG5F,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ5E,eAAiBtH,GAAOmM,OAAO7E,cAAgBtH,GAAOmM,OAAO7E,cAAgB,cAIlJ,iBAAK5F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,yBAAY,iBAAM2C,UAAU,eAAc,sBAE5E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,aAAagL,YAAY,GAAG1K,UAAS,UAAKsF,IAC9D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOqH,cAEzB,cAAG9F,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ1E,YAAcxH,GAAOmM,OAAO3E,WAAaxH,GAAOmM,OAAO3E,WAAa,cAGzI,iBAAK9F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,qBAAQ,iBAAM2C,UAAU,eAAc,sBAExE,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,QAAQgL,YAAY,GAAG1K,UAAS,UAAKsF,IACzD9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOsH,SAEzB,cAAG/F,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQzE,OAASzH,GAAOmM,OAAO1E,MAAQzH,GAAOmM,OAAO1E,MAAQ,cAG1H,iBAAK/F,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,gCAAmB,iBAAM2C,UAAU,eAAc,sBAEnF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,mBAAmBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACpE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOuH,oBAEzB,cAAGhG,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQxE,kBAAoB1H,GAAOmM,OAAOzE,iBAAmB1H,GAAOmM,OAAOzE,iBAAmB,cAI3J,iBAAKhG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,sBAAS,iBAAM2C,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,oBAAkB,IAAElK,UAAS,UAAKsF,GAAU,aAAY,WACrF,wCACS,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAU7B,KAAI,SAACC,GAAK,OACjB,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAOgI,WAAmB,SAG7D,cAAG5K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQvE,iBAAmB3H,GAAOmM,OAAOxE,gBAAkB3H,GAAOmM,OAAOxE,gBAAkB,cAGxJ,iBAAKjG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,gCAAmB,iBAAM2C,UAAU,eAAc,sBAEnF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,mBAAmBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACpE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOyH,oBAEzB,cAAGlG,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQtE,kBAAoB5H,GAAOmM,OAAOvE,iBAAmB5H,GAAOmM,OAAOvE,iBAAmB,cAG3J,iBAAKlG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,sBAAS,iBAAM2C,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAa1B,GAAO4L,cAAc,oBAAkB,IAAElK,UAAS,UAAKsF,GAAU,aAAY,WACtF,wCACS,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAU7B,KAAI,SAACC,GAAK,OACjB,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAOgI,WAAmB,SAG7D,cAAG5K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQrE,iBAAmB7H,GAAOmM,OAAOtE,gBAAkB7H,GAAOmM,OAAOtE,gBAAkB,cAGxJ,iBAAKnG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,WAAWgL,YAAY,GAAG1K,UAAS,UAAKsF,GAAU,KACtE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO2H,YAEzB,cAAGpG,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQpE,UAAY9H,GAAOmM,OAAOrE,SAAW9H,GAAOmM,OAAOrE,SAAW,cAGnI,iBAAKpG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,wBAAW,iBAAM2C,UAAU,eAAc,sBAE3E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,WAAWgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC5D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO4H,YAEzB,cAAGrG,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQnE,UAAY/H,GAAOmM,OAAOpE,SAAW/H,GAAOmM,OAAOpE,SAAW,cAGnI,iBAAKrG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,yBAAY,iBAAM2C,UAAU,eAAc,sBAE5E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,aAAagL,YAAY,GAAG1K,UAAS,UAAKsF,IAE9D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO8H,cAEzB,cAAGvG,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQjE,YAAcjI,GAAOmM,OAAOlE,WAAajI,GAAOmM,OAAOlE,WAAa,cAGzI,iBAAKvG,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,4BAAe,iBAAM2C,UAAU,eAAc,sBAE/E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,gBAAgBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACjE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAO+H,iBAEzB,cAAGxG,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQhE,eAAiBlI,GAAOmM,OAAOjE,cAAgBlI,GAAOmM,OAAOjE,cAAgB,iBAItJ,iBAAKxG,UAAU,kEAAiE,WAC5E,iBAAKA,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,6BAAgB,iBAAM2C,UAAU,eAAc,sBAEhF,iBAAKA,UAAU,mBAAkB,WAC7B,oCAAQU,KAAK,OAAOhB,KAAK,eAAegL,YAAY,GAAG1K,UAAS,UAAKsF,GAAU,cAAgBhH,GAAO4L,cAAc,iBAAe,eAC/H,wCACS,OAAR1F,QAAQ,IAARA,OAAQ,EAARA,EAAU7B,KAAI,SAACC,GAAK,OACjB,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAOgI,WAAmB,SAG7D,cAAG5K,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ/D,cAAgBnI,GAAOmM,OAAOhE,aAAenI,GAAOmM,OAAOhE,aAAe,cAG/I,iBAAKzG,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,oCAAuB,iBAAM2C,UAAU,eAAc,sBAEvF,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,yBAAuB,IAAElK,UAAS,UAAKsF,GAAU,aAAY,WAC1F,mBAAQ1F,MAAM,GAAG+K,UAAQ,EAACI,UAAQ,uBACvB,OAAV3G,QAAU,IAAVA,GAA2B,QAAjB,EAAVA,EAAYiG,uBAAe,OAAsB,QAAtB,EAA3B,EAA6BW,4BAAoB,WAAvC,EAAV,EAAmDrI,KAAI,SAACC,GAAK,OAC1D,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAO2H,kBAA0B,SAGpE,cAAGvK,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ9D,sBAAwBpI,GAAOmM,OAAO/D,qBAAuBpI,GAAOmM,OAAO/D,qBAAuB,cAIvK,iBAAK1G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,oCAAuB,iBAAM2C,UAAU,eAAc,sBAEvF,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,kBAAgB,IAAElK,UAAS,UAAKsF,GAAU,aAAY,WACnF,mBAAQ1F,MAAM,GAAG+K,UAAQ,EAACI,UAAQ,uBACrB,OAAZ5H,SAAY,IAAZA,QAAY,EAAZA,GAAcR,KAAI,SAACC,GAAK,OACrB,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAOlC,MAAc,SAGxD,cAAGV,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQrD,eAAiB7I,GAAOmM,OAAOtD,cAAgB7I,GAAOmM,OAAOtD,cAAgB,cAIlJ,iBAAKnH,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,gCAAmB,iBAAM2C,UAAU,eAAc,sBAEnF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,mBAAmBgL,YAAY,GAAG1K,UAAS,UAAKsF,IACpE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOkI,oBAEzB,cAAG3G,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ7D,kBAAoBrI,GAAOmM,OAAO9D,iBAAmBrI,GAAOmM,OAAO9D,iBAAmB,cAG3J,iBAAK3G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,yBAAY,iBAAM2C,UAAU,eAAc,sBAE5E,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,YAAYgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC7D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOsI,aAEzB,cAAG/G,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQzD,WAAazI,GAAOmM,OAAO1D,UAAYzI,GAAOmM,OAAO1D,UAAY,cAItI,iBAAK/G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,sBAAS,iBAAM2C,UAAU,eAAc,sBAEzE,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,QAAQgL,YAAY,GAAG1K,UAAS,UAAKsF,IACzD9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOmI,SAEzB,cAAG5G,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ5D,OAAStI,GAAOmM,OAAO7D,MAAQtI,GAAOmM,OAAO7D,MAAQ,cAG1H,iBAAK5G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,iCAAoB,iBAAM2C,UAAU,eAAc,sBAEpF,iBAAKA,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,cAAcgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC/D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOoI,eAEzB,cAAG7G,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ3D,aAAevI,GAAOmM,OAAO5D,YAAcvI,GAAOmM,OAAO5D,YAAc,cAG5I,iBAAK7G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,0BAAa,iBAAM2C,UAAU,eAAc,sBAE7E,iBAAKA,UAAU,mBAAkB,WAC7B,sCAAY1B,GAAO4L,cAAc,gBAAc,IAAElK,UAAS,UAAKsF,GAAU,aAAY,WACjF,mBAAQ1F,MAAM,GAAE,qBACL,OAAVwE,QAAU,IAAVA,GAA2B,QAAjB,EAAVA,EAAYiG,uBAAe,OAAa,QAAb,EAA3B,EAA6BY,mBAAW,WAA9B,EAAV,EAA0CtI,KAAI,SAACC,GAAK,OACjD,mBAAQhD,MAAY,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOuH,GAAG,SAAO,OAALvH,QAAK,IAALA,OAAK,EAALA,EAAO2H,kBAA0B,SAGpE,cAAGvK,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQ1D,aAAexI,GAAOmM,OAAO3D,YAAcxI,GAAOmM,OAAO3D,YAAc,cAG5I,iBAAK9G,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,eAAGA,UAAS,UAAK3C,IAAa,+BAAkB,iBAAM2C,UAAU,eAAc,sBAElF,gBAAKA,UAAU,mBAAkB,UAC7B,kBAAOU,KAAK,OAAOhB,KAAK,iBAAiBgL,YAAY,GAAG1K,UAAS,UAAKsF,IAClE9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOuI,uBAKjC,iBAAKhH,UAAU,sDAAqD,WAChE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK3C,IAAa,4BAElC,iBAAK2C,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,YAAYgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC7D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOwI,aAEzB,cAAGjH,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQvD,WAAa3I,GAAOmM,OAAOxD,UAAY3I,GAAOmM,OAAOxD,UAAY,cAGtI,iBAAKjH,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,aAAY,UACvB,cAAGA,UAAS,UAAK3C,IAAa,yBAElC,iBAAK2C,UAAU,mBAAkB,WAC7B,kBAAOU,KAAK,OAAOhB,KAAK,WAAWgL,YAAY,GAAG1K,UAAS,UAAKsF,IAC5D9F,SAAUlB,GAAOsC,aACjBhB,MAAOtB,GAAOG,OAAOyI,YAEzB,cAAGlH,UAAU,gCAA+B,SAAE1B,GAAOkM,QAAQtD,UAAY5I,GAAOmM,OAAOvD,SAAW5I,GAAOmM,OAAOvD,SAAW,oBAK3I,gBAAKlH,UAAU,kBAAiB,UAC5B,mBAAQU,KAAK,SAASV,UAAU,yQAAwQ,+BAGhT,iBAAKA,UAAU,sCAAqC,WAChD,iBAAKA,UAAU,iBAAgB,WAC3B,gBAAKA,UAAU,+EAA+EQ,QAAS,kBAAMyE,GAAY,EAAE,EAAC,iCAC5H,gBAAKjF,UAAU,+EAA+EQ,QAAS,kBAAMyE,GAAY,EAAE,EAAC,sBAEnH,GAAZD,KACG,gBAAKhF,UAAU,UAAS,UACpB,SAAC,EAAkB,MAGd,GAAZgF,KACG,gBAAKhF,UAAU,SAAQ,UACnB,SAACkL,EAAA,EAA0B,yBAc/E,E,qBCx2BA,MAjKA,SAA8B9N,GAAQ,IAAD,uOAEzB+D,IAAsB,OAAL/D,QAAK,IAALA,OAAK,EAALA,EAAOqB,QAAxB0C,aACJ9D,GAAa,8CACbiI,GAAa,mCAQjB,OAHA5G,QAAQC,IAAI,yBAA+B,OAALvB,QAAK,IAALA,OAAK,EAALA,EAAO+N,aAC7CzM,QAAQC,IAAI,kCAAwC,OAALvB,QAAK,IAALA,OAAK,EAALA,EAAOgO,mBAGlD,+BACI,iBAAKpL,UAAU,8BAA6B,WACxC,iBAAKA,UAAU,6EAA4E,WACvF,iBAAKA,UAAU,qDAAoD,WACnE,eAAIA,UAAU,0EAAyE,kCACnF,iBAAKA,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,2BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C3F,eAAoB,OAALvI,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CC,0BAEvJ,iBAAKvL,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,wBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C1F,iBAAuB,OAALxI,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CrD,kBAE1J,iBAAKjI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,2BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CxF,cAAoB,OAAL1I,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CpD,eAEvJ,iBAAKlI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,sBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CvF,SAAe,OAAL3I,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CvF,iBAGtJ,iBAAK/F,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,gCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CtF,oBAAyB,OAAL5I,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CnD,0BAE5J,iBAAKnI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,iCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CrF,mBAAwB,OAAL7I,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CV,kBAE3J,iBAAK5K,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,gCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CpF,oBAAyB,OAAL9I,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CjD,0BAE5J,iBAAKrI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,gCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CnF,mBAAwB,OAAL/I,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CT,+BAG/J,iBAAK7K,UAAU,2DAA0D,WAErE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,yBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4ClF,YAAiB,OAALhJ,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C/C,kBAGpJ,iBAAKvI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,wBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4CjF,YAAiB,OAALjJ,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C9C,kBAEpJ,iBAAKxI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,0BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C/E,cAAmB,OAALnJ,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C7C,oBAGtJ,iBAAKzI,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,6BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C9E,iBAAsB,OAALpJ,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C5C,0BAG7J,iBAAK1I,UAAU,2DAA0D,WAErE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,8BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,EAAvB,EAAyBE,yBAAiB,WAArC,EAAL,EAA4C7E,gBAAqB,OAALrJ,QAAK,IAALA,GAAuB,QAAlB,EAALA,EAAOgO,wBAAgB,OAAmB,QAAnB,GAAvB,EAAyBE,yBAAiB,YAArC,EAAL,GAA4CR,yBAExJ,iBAAK9K,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,oCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4C5E,wBAA6B,OAALtJ,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4C1C,8BAEhK,iBAAK5I,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,iCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4C3E,oBAAyB,OAALvJ,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CzC,2BACtJ,iBAAK7I,UAAU,GAAE,WACnB,cAAGA,UAAS,UAAK3C,IAAa,0BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CvE,aAAkB,OAAL3J,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CtC,sBAGzJ,iBAAKhJ,UAAU,2DAA0D,WAErE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,+BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CtE,kBAAuB,OAAL5J,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CxC,yBAE1J,iBAAK9I,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,sBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4C1E,SAAc,OAALxJ,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CvC,eAEjJ,iBAAK/I,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,2BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CzE,eAAoB,OAALzJ,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CrC,qBACjJ,iBAAKjJ,UAAU,GAAE,WACnB,cAAGA,UAAS,UAAK3C,IAAa,2BAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CxE,eAAoB,OAAL1J,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CpC,wBAG3J,iBAAKlJ,UAAU,2DAA0D,WACrE,iBAAKA,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,qCAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CnE,iBAAsB,OAAL/J,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CE,2BAEzJ,iBAAKxL,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,wBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CrE,aAAkB,OAAL7J,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CrE,kBAErJ,iBAAKjH,UAAU,GAAE,WACb,cAAGA,UAAS,UAAK3C,IAAa,uBAC9B,iBAAM2C,UAAS,UAAKsF,IAAa,UAAE+F,EAAAA,EAAAA,KAAc,OAALjO,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CpE,YAAiB,OAAL9J,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAmB,QAAnB,GAAvB,GAAyBE,yBAAiB,YAArC,EAAL,GAA4CpE,uBAM5J,iBAAKlH,UAAU,qDAAoD,WACnE,eAAIA,UAAU,0EAAyE,iCAEnF,gBAAKA,UAAU,2DAA0D,SAC/D,OAAL5C,QAAK,IAALA,GAAuB,QAAlB,GAALA,EAAOgO,wBAAgB,QAAsB,QAAtB,GAAvB,GAAyBK,4BAAoB,YAAxC,EAAL,GAA+C9I,KAAI,SAACvE,EAAMyE,GAAK,aAC5D,gBAAK7C,UAAU,GAAE,UACb,iCACI,eAAGA,UAAS,UAAK3C,IAAa,UAAM,OAAJe,QAAI,IAAJA,OAAI,EAAJA,EAAMD,QAAO,QAC7C,iBAAK6B,UAAU,aAAY,WACvB,iBAAMA,UAAS,UAAKsF,GAAU,WAAU,SAAM,OAAJlH,QAAI,IAAJA,GAAW,QAAP,EAAJA,EAAMF,aAAK,WAAP,EAAJ,EAAawB,QACvD,iBAAMM,UAAS,2BAA6B,UAAC,gBAAKI,IAAI,0DAA0DC,IAAI,gBAAgBL,UAAS,kBAGnJ,aAOtB,iBAAKA,UAAU,+BAA8B,WACzC,gBAAKA,UAAU,qBAAoB,UAC/B,mBAAQU,KAAK,SAASX,MAAM,+QAA+QS,QAAS,kBAAMW,GAAa,EAAE,EAAC,qBAE9U,gBAAKnB,UAAU,aAAY,UACvB,mBAAQU,KAAK,SAASX,MAAM,qRAAqRS,QAnJlT,WACfpD,EAAMsO,WACV,EAiJyV,6BAM7V,E,iCCqFA,MAzOA,WACI,OAAkCpO,EAAAA,EAAAA,UAAS,GAAE,eAAtCqO,EAAS,KAAExK,EAAY,KAC9B,GAAsC7D,EAAAA,EAAAA,UAAS,IAAG,eAA3C6N,EAAW,KAAES,EAAc,KAClC,GAA4CtO,EAAAA,EAAAA,YAAU,eAA/CuO,EAAc,KAAEC,EAAiB,KACxC,GAAoCxO,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAzCyO,EAAU,KAAEC,EAAa,KAChC,GAAoE1O,EAAAA,EAAAA,YAAU,eAAvEsG,EAA0B,KAAEqI,EAA6B,KAChE,GAA8C3O,EAAAA,EAAAA,YAAU,eAAhC4O,GAAF,KAAoB,MAC1C,GAAkC5O,EAAAA,EAAAA,WAAS,GAAM,eAA1C4H,EAAS,KAAEC,EAAY,KAC9B,GAAkC7H,EAAAA,EAAAA,WAAS,GAAM,eAA1C8H,EAAS,KAAEC,EAAY,KAE9B,GAAqB8G,EAAAA,EAAAA,MAAbhC,EAAE,EAAFA,GAAIzJ,EAAI,EAAJA,KACZhC,QAAQC,IAAI,2BAA4BwL,GACxCzL,QAAQC,IAAI,2BAA4B+B,GAIxC,OAAuGY,EAAAA,EAAAA,KAA/F8K,EAA6B,EAA7BA,8BAA+BC,EAAyB,EAAzBA,0BAA2BC,GAAgC,EAAhCA,iCAC5DtJ,GAAS,SAACF,EAAWpC,GACvBqC,EAAAA,GAAAA,UACY,WAARrC,GACAqC,EAAAA,GAAAA,QAAcD,GAEN,SAARpC,GACAqC,EAAAA,GAAAA,MAAYD,EAEpB,EAiBApE,QAAQC,IAAI,yBAA0BwM,GACtCzM,QAAQC,IAAI,iBAAkBoN,GAI9B,IAKMQ,GAAuB,WAGzB,IAAIvO,EACA0J,EACoB,8CAgCH,kDApCrBvC,GAAa,GAID,YAARzE,KACA1C,EAAMoO,EACN1E,EAAc,CAEVD,MAAO,EACPtE,aAAyB,OAAXgI,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCnE,cAC9CvB,cAA0B,OAAXuF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC1F,cAC/CD,YAAwB,OAAXwF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC3F,YAC7CG,WAAuB,OAAXqF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCxF,WAC5CC,MAAkB,OAAXoF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCvF,MACvCC,iBAA6B,OAAXmF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCtF,iBAClDwG,OAAmB,OAAXrB,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCrF,gBACxCC,iBAA6B,OAAXiF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCpF,iBAClDuG,gBAA4B,OAAXtB,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCnF,gBACjDI,WAAuB,OAAX4E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC/E,WAC5CC,cAA0B,OAAX2E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC9E,cAC/CkG,aAAyB,OAAXvB,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC7E,aAC9CL,SAAqB,OAAX+E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgClF,SAC1CC,SAAqB,OAAX8E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCjF,SAC1CW,eAA2B,OAAXmE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCtE,eAChDD,UAAsB,OAAXoE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCvE,UAC3CH,MAAkB,OAAXuE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC1E,MACvCK,UAAsB,OAAXkE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCrE,UAC3CC,SAAqB,OAAXiE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCpE,SAC1CL,YAAwB,OAAXsE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCzE,YAC7CC,YAAwB,OAAXqE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCxE,YAC7CJ,qBAAiC,OAAXyE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC5E,qBACtDC,iBAA6B,OAAXwE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC3E,iBAElDgG,UAAsB,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAaM,uBAGpB,SAAR/K,IACA1C,EAAMqO,EACN3E,EAAc,CACVkF,cAAezC,EAEf1C,MAAO,EACPtE,aAAyB,OAAXgI,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCnE,cAC9CvB,cAA0B,OAAXuF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC1F,cAC/CD,YAAwB,OAAXwF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC3F,YAC7CG,WAAuB,OAAXqF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCxF,WAC5CC,MAAkB,OAAXoF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCvF,MACvCC,iBAA6B,OAAXmF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCtF,iBAClDwG,OAAmB,OAAXrB,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCrF,gBACxCC,iBAA6B,OAAXiF,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCpF,iBAClDuG,gBAA4B,OAAXtB,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCnF,gBACjDI,WAAuB,OAAX4E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC/E,WAC5CC,cAA0B,OAAX2E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC9E,cAC/CkG,aAAyB,OAAXvB,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC7E,aAC9CL,SAAqB,OAAX+E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgClF,SAC1CC,SAAqB,OAAX8E,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCjF,SAC1CW,eAA2B,OAAXmE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCtE,eAChDD,UAAsB,OAAXoE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCvE,UAC3CH,MAAkB,OAAXuE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgC1E,MACvCK,UAAsB,OAAXkE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCrE,UAC3CC,SAAqB,OAAXiE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCpE,SAC1CL,YAAwB,OAAXsE,QAAW,IAAXA,GAA8B,QAAnB,EAAXA,EAAaG,yBAAiB,WAAnB,EAAX,EAAgCzE,YAC7CC,YAAwB,OAAXqE,QAAW,IAAXA,GAA8B,QAAnB,GAAXA,EAAaG,yBAAiB,YAAnB,EAAX,GAAgCxE,YAC7CJ,qBAAiC,OAAXyE,QAAW,IAAXA,GAA8B,QAAnB,GAAXA,EAAaG,yBAAiB,YAAnB,EAAX,GAAgC5E,qBACtDC,iBAA6B,OAAXwE,QAAW,IAAXA,GAA8B,QAAnB,GAAXA,EAAaG,yBAAiB,YAAnB,EAAX,GAAgC3E,iBAElDgG,UAAsB,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAaM,uBAGhC/M,QAAQC,IAAI,kBAAmB+I,GAE/BvF,EAAAA,GAAAA,KAAW,GAAD,OAAInE,GAAO0J,GAAarF,EAAAA,EAAAA,MAC7BC,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,gCAAiC4D,EAASnE,KAAKA,MAC3D0N,EAAkBvJ,EAASnE,KAAKA,MAChC+G,GAAa,GACbnC,GAAO,yBAA0B,UACrC,IACCR,OAAM,SAAUC,GACb/D,QAAQC,IAAI,eAAgB8D,GAC5B0C,GAAa,GACbnC,GAAO,mBAAoB,QAC/B,GACR,EAGMvE,GAAS,CACX0C,aAAcA,EACdC,mBAjHuB,SAACU,EAAKC,EAAU2C,GACvChG,QAAQC,IAAI,mBAAoBwM,GAChCzM,QAAQC,IAAI,gCAAiC+F,GAC7CkH,GAAe,kBAAKT,GAAW,cAAGrJ,EAAMC,KAE7B,qBAAPD,GACApD,QAAQC,IAAI,yBAA0BmD,EAAK,WAAYC,EAAU,aAAc2C,GAC/EsH,GAAc,kBAAKD,GAAU,cAAGjK,EAAM4C,OAGtChG,QAAQC,IAAI,yBAA0BmD,EAAK,MAAOC,EAAU,aAAc2C,GAC1EsH,GAAc,kBAAKD,GAAU,cAAGjK,EAAMC,KAE9C,EAqGI8K,SAAU7J,GACVtC,KAAMA,EACNkD,2BAA4BA,IAGhC3B,EAAAA,EAAAA,YAAU,WACNiK,EAAmBxL,GACP,SAARA,GACAoM,IAER,GAAG,IACH,IAAMA,GAA0B,WAC5BzH,GAAa,GACbF,GAAa,GACb,IAAIuC,EAAc,CACdkF,cAAezC,GAGnBzL,QAAQC,IAAI,uBAAwB+I,GACpCvF,EAAAA,GAAAA,KAAW,GAAD,OAAImK,IAAoC5E,GAAarF,EAAAA,EAAAA,MAC1DC,MAAK,SAAUC,GACZ7D,QAAQC,IAAI,wDAAyD4D,EAASnE,KAAKA,MACnF6N,EAA8B1J,EAASnE,KAAKA,MAC5C+G,GAAa,EACjB,IACC3C,OAAM,SAAUC,GACb/D,QAAQC,IAAI,6BAA8B8D,GAC1C4C,GAAa,GACbF,GAAa,EACjB,GACR,EAKA,OAHAzG,QAAQC,IAAI,gCAAiCiF,GAE7ClF,QAAQC,IAAI,kBAAmBkN,GACD,IAAZ,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgBkB,SAEZ,+BACI,SAACC,EAAA,EAAkB,CAACC,mBAAoBpB,MAKhD3G,GAEI,iCACI,SAACgI,EAAA,EAAW,KACZ,gBAAKlN,UAAU,oBAIvBoF,GAEI,SAACiE,EAAA,EAAW,WACR,SAACC,EAAA,EAAe,CAACC,MAAM,iBAAiBC,KAAK,yDAAyDC,WAAW,iBAAiBC,UAAU,gCAMpJ,iCAEI,SAAC,KAAc,CAACyD,SAAS,YACrBC,UAAW,OAEf,iBAAKpN,UAAU,mEAAkE,WAC7E,iBAAKA,UAAU,uGAAsG,WACjH,iBAAKA,UAAU,GAAE,WACb,gBAAKA,UAAU,iBAAgB,UAC3B,eAAIA,UAAU,sDAAqD,mCAEvE,eAAIA,UAAU,2CAA0C,kFAI5D,0BACI,iBAAKA,UAAU,iCAAgC,WAC3C,kBAAMA,UAAU,2FAA0F,qBAAQ,mBAAQA,UAAU,4BAA2B,SAAE,EAAI2L,IAC5J,mBACT,gBAAKvL,IAAI,0DAA0DJ,UAAU,qDAIzF,gBAAKA,UAAS,UAAkB,GAAb2L,EAAiB,gBAAkB,mBAAkB,mBAAkB,UAAC,SAAC,EAAsB,CAAClN,OAAQA,QAC3H,gBAAKuB,UAAS,UAAkB,GAAb2L,EAAiB,gBAAkB,mBAAkB,mBAAkB,UAAC,SAAC,EAAwB,CAAClN,OAAQA,QAC7H,gBAAKuB,UAAS,UAAkB,GAAb2L,EAAiB,gBAAkB,mBAAkB,mBAAkB,UAAC,SAAC,EAAoB,CAAClN,OAAQA,GAAQ2M,iBAAkBW,EAAYZ,YAAaA,EAAaO,UApL1K,WACvBhN,QAAQC,IAAI,gCAAiCwM,GAC7CoB,IACJ,WAqLJ,C,gDC3MA,IAlDA,WAEI,IAAIc,EAAc,kCACdhQ,EAAa,mCACbiQ,EAAW,2BACf,OACI,+BACI,iBAAKtN,UAAU,kEAAiE,WAC5E,iBAAKA,UAAU,gBAAe,WAC1B,gBAAKsD,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAY,eAAa,MAAMC,OAAO,eAAe1D,MAAM,0BAAyB,UAC5I,iBAAM,iBAAe,QAAQ,kBAAgB,QAAQ2D,EAAE,0JAE3D,eAAI1D,UAAU,eAAc,6BAEhC,iBAAKA,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,8BAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,yEAE7C,iBAAK2C,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,6BAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,+EAE7C,iBAAK2C,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,iCAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,kEAE7C,iBAAK2C,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,8BAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,uEAE7C,iBAAK2C,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,oCAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,oEAE7C,iBAAK2C,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,4BAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,8DAE7C,iBAAK2C,UAAS,UAAKsN,EAAQ,aAAY,WACnC,iBAAMtN,UAAS,UAAKqN,EAAW,YAAW,4BAC1C,iBAAMrN,UAAS,UAAK3C,EAAU,YAAW,6DAE7C,0BACI,gBAAK+C,IAAI,4LAA4LJ,UAAU,kCAKnO,C","sources":["Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocTable.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/AdvtCategoryScreen.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementForm1.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/ReviewSelfAdvertForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementIndexForm.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen.jsx"],"sourcesContent":["// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementDocTable(props) {\r\n\r\n    let labelStyle = \" text-xs  text-gray-600 font-bold\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState('')\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState('')\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setTimeout(() => {\r\n                setimgPath(values)\r\n                props.collectAllDataFun(props?.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n            }, 500);\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    console.log(\"mykey\", props.mykey)\r\n    console.log(\"image path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' &&\r\n                        <div className='px-1'>\r\n                            <h1>click </h1>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocTable","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementDocForm\r\n//    DESCRIPTION - SelfAdvertisementDocForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\nimport SelfAdvertisementDocTable from './SelfAdvertisementDocTable';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nfunction SelfAdvertisementDocForm(props) {\r\n\r\n    const { setFormIndex, collectFormDataFun, type } = props?.values\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n\r\n    console.log(\"all data doc inside document view\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        if (docList?.SELF_ADVERT?.length == collectDoc.length) {\r\n            collectFormDataFun('selfAdvertisementDoc', collectDoc)\r\n            setFormIndex(3)\r\n        }\r\n        else {\r\n            notify(\"Upload All Document\", \"error\")\r\n        }\r\n    }\r\n\r\n    console.log(\"collect doc\", collectDoc.length)\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    console.log(\"document length\", docList?.SELF_ADVERT?.length)\r\n\r\n    return (\r\n        <>\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>Back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocForm","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport axios from 'axios'\r\n\r\nfunction AdvtCategoryScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n\r\n    const { api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n\r\n    ///////////{***get advertisement category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        axios.post(`${api_getAdvertisementCategory}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                setadvtCategory(response.data.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"advertisement category screen\", advtCategory)\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6 '>\r\n                <div className='h-[42rem] overflow-y-auto'>\r\n                    <div className='flex flex-row'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                        </svg>\r\n                        <h1 className='ml-2 text-lg'>Typology Category</h1>\r\n                    </div>\r\n                    {advtCategory?.map((data) => (\r\n                        <div className={`${divStyle}flex mt-3 `}>\r\n                            <span className={`${tittleStyle} flex-1 `}>{data?.type}</span>\r\n\r\n                            <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdvtCategoryScreen","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementForm1\r\n//    DESCRIPTION - SelfAdvertisementForm1 Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from './SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport AdvtCategoryScreen from './AdvtCategoryScreen';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport useSetTitle from '../../../../Components/GlobalData/UseSetTitle';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementForm1(props) {\r\n\r\n    const { setFormIndex, collectFormDataFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails, api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n    // const [confirmUlb, setconfirmUlb] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600 font-bold\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.number().required('Enter mobile no.'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        entityName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        installationLocation: yup.string().required('This field is Required'),\r\n        brandDisplayName: yup.string().required('This field is Required'),\r\n        // holdingNo: yup.string().required('This field is Required'),\r\n        // tradeLicenseNo: yup.string().required('This field is Required'),\r\n        gstNo: yup.string().required('This field is Required'),\r\n        displayArea: yup.string().required('Enter Number'),\r\n        displayType: yup.string().required('This field is Required'),\r\n    })\r\n\r\n    const initialValues = {\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        aadharNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        installationLocation: '',\r\n        brandDisplayName: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        gstNo: '',\r\n        displayArea: '',\r\n        displayType: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        advrtCategory: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            console.log(\"self Advertisement values \", values)\r\n            collectFormDataFun('selfAdvertisement', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n    useSetTitle('', false)\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // { name == 'ulb' && handleUlb(value) }\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one')\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        else\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n        { name == 'displayArea' && formik.setFieldValue(\"displayArea\", allowFloatInput(value, formik.values.displayArea, 4)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n\r\n    // const handleUlb = (ulbId) => {\r\n    //     setstoreUlbValue(ulbId)\r\n    // }\r\n\r\n    console.log(\"storeUlbValue\", storeUlbValue)\r\n    // console.log(\"ulb is confirmed\", confirmUlb)\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n    // console.log(\"ulb value...\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        console.log(\"ulb id in request body\", requestBody)\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list..16', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ward list', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n                // setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** ADVERTISEMENT CATEGORY***}/////////\r\n    useEffect(() => {\r\n        getCategoryList()\r\n    }, [])\r\n    const getCategoryList = () => {\r\n        axios.post(`${api_getAdvertisementCategory}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('advertisement category', response.data.data)\r\n                setadvtCategory(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residence_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_no)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('installationLocation', existingApplicationDetails?.installation_location)\r\n        formik.setFieldValue('brandDisplayName', existingApplicationDetails?.brand_display_name)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('displayArea', existingApplicationDetails?.display_area)\r\n        formik.setFieldValue('displayType', existingApplicationDetails?.display_type)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('advrtCategory', existingApplicationDetails?.advt_category)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"existing application details\", existingApplicationDetails)\r\n    console.log(\"advertisement category..2\", advtCategory)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute top-2 ml-4 w-full'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n\r\n                        {/* {setFormIndex != 1 && */}\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12 '>\r\n                                    {storeUlbValue == undefined ?\r\n                                        <>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-12'>\r\n                                                Registration of a <span className='text-gray-700 font-bold'>Self Advertisement</span> is mendatory under the urban local body it falls in.<br />\r\n                                                If you are the owner of such a property, it need to be <br /><span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-6 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                            <option>select </option>\r\n                                                            {ulbList?.map((items) => (\r\n                                                                <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    {/* <div className='text-center bg-indigo-500 px-2 py-1 text-xs text-white rounded leading-5 mt-6'>\r\n                                                        <button className='' onClick={handleUlb}>Confirm</button>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                <div className='animate-wiggle'>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24' />\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        <div className='flex flex-row mt-4 space-x-2  '>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg>\r\n\r\n                                            <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase  px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* } */}\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value={existingApplicationDetails?.ward_id}>{existingApplicationDetails?.ward_name}</option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value={existingApplicationDetails?.permanent_ward_id}>{existingApplicationDetails?.permanent_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled >\r\n                                                                <option value={existingApplicationDetails?.entity_ward_id}>{existingApplicationDetails?.entity_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Display Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude  </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16 '>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementForm1","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - ReviewSelfAdvertForm\r\n//    DESCRIPTION - ReviewSelfAdvertForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewSelfAdvertForm(props) {\r\n\r\n    const { setFormIndex } = props?.values\r\n    let labelStyle = \"mt-6 -ml-7 text-md text-gray-600  font-bold\"\r\n    let inputStyle = \"mt-6 -ml-7 text-sm text-gray-600\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form document...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Application Details</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.license_year_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.applicantName  || props?.reviewIdNameData?.selfAdvertisement?.applicant)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.fatherName  || props?.reviewIdNameData?.selfAdvertisement?.father)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.email  || props?.reviewIdNameData?.selfAdvertisement?.email)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceAddress || props?.reviewIdNameData?.selfAdvertisement?.residence_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceWardNo || props?.reviewIdNameData?.selfAdvertisement?.ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentAddress || props?.reviewIdNameData?.selfAdvertisement?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentWardNo || props?.reviewIdNameData?.selfAdvertisement?.permanent_ward_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.mobileNo || props?.reviewIdNameData?.selfAdvertisement?.mobile_no)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.aadharNo || props?.reviewIdNameData?.selfAdvertisement?.aadhar_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityName || props?.reviewIdNameData?.selfAdvertisement?.entity_name)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityAddress || props?.reviewIdNameData?.selfAdvertisement?.entity_address)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityWardNo || props?.reviewIdNameData?.selfAdvertisement?.entity_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Installation Location</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.installationLocation || props?.reviewIdNameData?.selfAdvertisement?.installation_location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Brand Display Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.brandDisplayName || props?.reviewIdNameData?.selfAdvertisement?.brand_display_name)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.holdingNo || props?.reviewIdNameData?.selfAdvertisement?.holding_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.tradeLicenseNo || props?.reviewIdNameData?.selfAdvertisement?.trade_license_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>GST No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.gstNo || props?.reviewIdNameData?.selfAdvertisement?.gst_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Display Area</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayArea || props?.reviewIdNameData?.selfAdvertisement?.display_area)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Display Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayType || props?.reviewIdNameData?.selfAdvertisement?.display_type)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Advertisement Category</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.advrtCategory || props?.reviewIdNameData?.selfAdvertisement?.advt_category_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.longitude || props?.reviewIdNameData?.selfAdvertisement?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.latitude || props?.reviewIdNameData?.selfAdvertisement?.latitude)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Documents Uploaded</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.selfAdvertisementDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} </p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>Back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewSelfAdvertForm","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - SelfAdvertisementIndexForm\r\n//    DESCRIPTION - SelfAdvertisementIndexForm Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport SelfAdvertisementDocForm from './SelfAdvertisementDocForm'\r\nimport SelfAdvertisementForm1 from './SelfAdvertisementForm1'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport ReviewSelfAdvertForm from './ReviewSelfAdvertForm'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport { useParams } from 'react-router-dom';\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\n\r\nfunction SelfAdvertisementIndexForm() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n   \r\n\r\n    const { api_postSelfAdvertApplication, api_renewSelfAdvt_license, api_getApplicationDetailsToRenew } = AdvertisementApiList();\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'selfAdvertisement') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"review data...\", reviewData)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitSelfAdvertForm()\r\n    }\r\n\r\n    const submitSelfAdvertForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postSelfAdvertApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewSelfAdvt_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        console.log('request body...', requestBody)\r\n\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n          \r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip bg-violet-50 p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Self Advertisement</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle '>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementForm1 values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewSelfAdvertForm values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementIndexForm","import { Info } from '@mui/icons-material'\r\nimport React from 'react'\r\n\r\nfunction SelfAdvrtInformationScreen() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your address where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div>\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto'/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvrtInformationScreen"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","labelStyle","useState","imgPath","setimgPath","DocUrl","setDocUrl","modalIsOpen","setIsOpen","imageFile","setimageFile","modalAction","url","initialValues","image","docCode","data","ownerDtlId","formik","useFormik","onSubmit","values","console","log","setTimeout","collectAllDataFun","mykey","handleFile","file","setFieldValue","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","onChange","e","name","target","value","files","encType","class","className","document_name","docType","undefined","src","alt","split","pop","onClick","Tooltip","type","accept","handleChange","isOpen","onAfterOpen","onRequestClose","style","contentLabel","frameborder","setFormIndex","collectFormDataFun","api_getSelfAdvertDocList","AdvertisementApiList","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","collectAllData","key","formData","length","useEffect","getDocumentList","axios","deviceId","ApiHeaderAdvrt","then","response","catch","error","SELF_ADVERT","map","items","index","toastData","toast","notify","DocumentUploadSteps","api_getAdvertisementCategory","advtCategory","setadvtCategory","getHoardingCategoryList","xmlns","fill","viewBox","stroke","d","descriptions","existingApplicationDetails","api_getAdvertMasterData","api_getUlbList","api_getWardList","api_getTradeLicenseDetails","CitizenApplyApiList","api_getAllUlb","api_wardByUlb","masterData","setmasterData","ulbList","setulbList","wardList","setwardList","reviewIdName","setreviewIdName","storeUlbValue","setstoreUlbValue","liceneData","liceneDetails","tabIndex","settabIndex","isLoading","setisLoading","erroState","seterroState","inputStyle","validationSchema","yup","ulb","required","licenseYear","applicantName","max","fatherName","email","residenceAddress","residenceWardNo","permanentAddress","permanentWardNo","mobileNo","aadharNo","min","entityName","entityAddress","entityWardNo","installationLocation","brandDisplayName","gstNo","displayArea","displayType","holdingNo","tradeLicenseNo","longitude","latitude","advrtCategory","enableReinitialize","useSetTitle","showLoader","getUlbListData","getWardListFun","ulbId","requestBody","ApiHeader","getMasterDataFun","getCategoryList","feedApplicationData","ulb_id","license_year","applicant","father","residence_address","ward_id","permanent_address","permanent_ward_id","mobile_no","aadhar_no","entity_name","entity_address","entity_ward_id","installation_location","brand_display_name","trade_license_no","gst_no","holding_no","display_area","display_type","advt_category","BarLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","licenseDataById","selectedIndex","text","allowNumberInput","allowCharacterNumberInput","allowFloatInput","allowMailInput","getFieldProps","id","ulb_name","paramCategories","LicenseYear","string_parameter","touched","errors","placeholder","disabled","ward_name","permanent_ward_name","entity_ward_name","selected","InstallationLocation","DisplayType","SelfAdvrtInformationScreen","allFormData","reviewIdNameData","nullToNA","selfAdvertisement","license_year_name","advt_category_name","selfAdvertisementDoc","submitFun","formIndex","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setexistingApplicationDetails","setapplicationType","useParams","api_postSelfAdvertApplication","api_renewSelfAdvt_license","api_getApplicationDetailsToRenew","submitSelfAdvertForm","wardId","permanentWardId","entityWardId","documents","applicationId","toastFun","fetchApplicationDetails","status","AdvrtSuccessScreen","responseScreenData","BrandLoader","position","autoClose","tittleStyle","divStyle"],"sourceRoot":""}