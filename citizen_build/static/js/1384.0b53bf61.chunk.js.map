{"version":3,"file":"static/js/1384.0b53bf61.chunk.js","mappings":"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","sources":["Components/ApiList/BackendUrlAdvt.js","Pages/AdvertisementModule/AdvertisementApiList.jsx","Pages/AdvertisementModule/Advertisement/AdvrtSuccessScreen.jsx","Pages/AdvertisementModule/Advertisement/DocumentUploadSteps.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen.jsx","Pages/AdvertisementModule/ApiHeaderAdvrt.jsx","Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx","Pages/AdvertisementModule/ServerErrorCard.js","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallDocForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/ReviewFormBanquetMarriageHall.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallFormIndex.jsx","Pages/AdvertisementModule/marketing/OldNewRuleComponent.jsx"],"sourcesContent":["// DEVELOPMENT SERVER\r\n// const BackendUrlAdvt = 'http://192.168.0.189:8000' // only for advertisement case\r\n\r\n// TEST SERVER\r\nconst BackendUrlAdvt = 'http://203.129.217.246:8001' // only for advertisement case\r\n\r\nexport default BackendUrlAdvt\r\n\r\n","import BackendUrlAdvt from \"../../Components/ApiList/BackendUrlAdvt\"\r\n\r\nexport default function AdvertisementApiList() {\r\n    // let baseUrl = \"http://192.168.0.127:8000\"\r\n    let baseUrl = BackendUrlAdvt\r\n\r\n    let apiList = {\r\n        api_getTradeLicenseByHolding: `${baseUrl}/api/advertisement/self-advert/get-license-by-holding-no`, //trade license for holding\r\n        api_getTradeLicenseByUserId: `${baseUrl}/api/advertisement/self-advert/get-license-by-userid`, //trade license list by userId\r\n        api_getTradeLicenseDetails: `${baseUrl}/api/advertisement/self-advert/get-details-by-license-no`, //list of ulb\r\n        api_getUlbList: `${baseUrl}/api/get-all-ulb`, //list of ulb\r\n        api_getWardList: `${baseUrl}/api/workflow/getWardByUlb`, //list of ward\r\n        api_getAdvertMasterData: `${baseUrl}/api/crud/param-strings`, //master data for advertisement\r\n\r\n\r\n\r\n        // api_getSelfAdvertDocList: `${baseUrl}/api/advertisements/crud/v1/document-mstrs`, //master document for advertisement\r\n        api_getSelfAdvertDocList: `${baseUrl}/api/advertisements/crud/v1/list-document`, //master document for advertisement\r\n\r\n        //razor pay api\r\n        verifyPaymentStatus: `${baseUrl}/api/payment/verify-payment-status`, //POST // use to store the data if payment failed or success=> \r\n        getTypologyList: `${baseUrl}/api/advert/hording/list-typology`, //POST // use to store the data if payment failed or success=> \r\n        getHoardingCategory: `${baseUrl}/api/advert/hording/get-hording-category`, //hoarding category \r\n        getPaymentsuccessDetails: `${baseUrl}/api/advertisements/get-payment-details`, //payment details \r\n        getApprovalLetterDetails: `${baseUrl}/api/advertisements/get-approval-letter`, //approval letter details \r\n        getAgencyDashboardGraphData: `${baseUrl}/api/advert/hording/agency-dashboard-graph`, //agency dashboard graph data\r\n\r\n\r\n\r\n        // Self Advertisement api //\r\n        api_postSelfAdvertApplication: `${baseUrl}/api/advert/self/add-new`, //applying for self advertisement\r\n        api_getAppliedApplicationList: `${baseUrl}/api/advert/self/list-applied-applications`, //pending Application list\r\n        api_getAppliedApplicationDetail: `${baseUrl}/api/advert/self/get-details-by-id `, //application details by id\r\n        api_getAppliedDocumentList: `${baseUrl}/api/advert/self/view-advert-document`, //applied document list\r\n        api_getApprovedApplicationList: `${baseUrl}/api/advert/self/list-approved`, //approved Application list\r\n        api_getRejectedApplicationList: `${baseUrl}/api/advert/self/list-rejected`, //rejected Application list\r\n        api_getOrderIdForPayment: `${baseUrl}/api/advert/self/generate-payment-order-id`,//order if for payment\r\n        api_getApplicationDetailForPayment: `${baseUrl}/api/advert/self/get-application-details-for-payment`,//application details for payment\r\n        api_getAdvertisementCategory: `${baseUrl}/api/advert/self/list-self-advt-category`,//advertisement category\r\n        api_getAdvertisementReuploadDoc: `${baseUrl}/api/advert/self/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postAdvertisementReuploadedDocument: `${baseUrl}/api/advert/self/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewSelfAdvt_license: `${baseUrl}/api/advert/self/renewal-selfAdvt`,\r\n        api_getApplicationDetailsToRenew: `${baseUrl}/api/advert/self/get-application-details-for-renew `,\r\n\r\n        // Movable api //\r\n        api_postMovableVehicleApplication: `${baseUrl}/api/advert/vehicle/add-new`, //applying for Movable vehicle\r\n        api_getMovableAppliedApplicationList: `${baseUrl}/api/advert/vehicle/list-applied-applications`, //pending Application list\r\n        api_getMovableAppliedApplicationDetail: `${baseUrl}/api/advert/vehicle/get-details-by-id `, //application details by id\r\n        api_getMovableAppliedDocumentList: `${baseUrl}/api/advert/vehicle/view-vehicle-documents`, //applied document list\r\n        api_getMovableApprovedApplicationList: `${baseUrl}/api/advert/vehicle/list-approved`, //approved Application list\r\n        api_getMovableRejectedApplicationList: `${baseUrl}/api/advert/vehicle/list-rejected`, //rejected Application list\r\n        api_getMovableVehicleOrderIdForPayment: `${baseUrl}/api/advert/vehicle/generate-payment-order-id`,//order if for payment\r\n        api_getMovableVehicleApplicationDetailForPayment: `${baseUrl}/api/advert/vehicle/get-application-details-for-payment`,//application details for payment\r\n        api_getMovableVehicleReuploadDoc: `${baseUrl}/api/advert/vehicle/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postMovableVehicleReuploadedDocument: `${baseUrl}/api/advert/vehicle/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewMovableVehicle_license: `${baseUrl}/api/advert/vehicle/renewal-application`,\r\n        api_getMovableApplicationDetailsToRenew: `${baseUrl}/api/advert/vehicle/get-application-details-for-renew`,\r\n\r\n        // Private land api //\r\n        api_postPrivateLandApplication: `${baseUrl}/api/advert/pvt-land/add-new\t`, //applying for private land\r\n        api_getPrivateLandAppliedApplicationList: `${baseUrl}/api/advert/pvt-land/list-applied-applications`, //pending Application list\r\n        api_getPrivateLandAppliedApplicationDetail: `${baseUrl}/api/advert/pvt-land/get-details-by-id `, //application details by id\r\n        api_getPrivateLandAppliedDocumentList: `${baseUrl}/api/advert/pvt-land/view-pvt-land-documents`, //applied document list\r\n        api_getPrivateLandApprovedApplicationList: `${baseUrl}/api/advert/pvt-land/list-approved`, //approved Application list\r\n        api_getPrivateLandRejectedApplicationList: `${baseUrl}/api/advert/pvt-land/list-rejected  `, //rejected Application list\r\n        api_getPrivateLandOrderIdForPayment: `${baseUrl}/api/advert/pvt-land/generate-payment-order-id`,//order if for payment\r\n        api_getPrivateLandApplicationDetailForPayment: `${baseUrl}/api/advert/pvt-land/get-application-details-for-payment`,//application details for payment\r\n        api_getPrivateLandReuploadDoc: `${baseUrl}/api/advert/pvt-land/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postPrivateLandReuploadedDocument: `${baseUrl}/api/advert/pvt-land/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewPrivateLand_license: `${baseUrl}/api/advert/pvt-land/renewal-application`,\r\n        api_getPrivateApplicationDetailsToRenew: `${baseUrl}/api/advert/pvt-land/get-application-details-for-renew `,\r\n\r\n        // Agency api //\r\n        api_postAgencyApplication: `${baseUrl}/api/advert/agency/add-new`, //applying for agency\r\n        api_getAgencyApprovedApplicationList: `${baseUrl}/api/advert/agency/list-approved `, //approved Application list\r\n        api_getAgencyRejectedApplicationList: `${baseUrl}/api/advert/agency/list-rejected `, //rejected Application list\r\n        api_getAgencyAppliedApplicationList: `${baseUrl}/api/advert/agency/list-applied-applications`, //pending Application list\r\n        api_getAgencyApplicationFullDetail: `${baseUrl}/api/advert/agency/get-details-by-id`, //application details by id\r\n        api_getAgencyAppliedDocumentList: `${baseUrl}/api/advert/agency/view-agency-documents`,//applied document list\r\n        api_getAgencyOrderIdForPayment: `${baseUrl}/api/advert/agency/generate-payment-order-id `,//order if for payment\r\n        api_getAgencyApplicationDetailForPayment: `${baseUrl}/api/advert/agency/get-application-details-for-payment`,//application details for payment\r\n        api_postRedirectToAgencyDashboard: `${baseUrl}/api/advert/agency/is-agency`,//redirect to agency dashboard\r\n        api_getAgencyDashboardData: `${baseUrl}/api/advert/agency/get-agency-dashboard`,//data in agency dashboard \r\n        api_getAgencyDetails: `${baseUrl}/api/advert/agency/get-agency-details`,//agerncy details after login\r\n        api_renew_license: `${baseUrl}/api/advert/agency/renewal-agency`,\r\n        api_getAgencyReuploadDoc: `${baseUrl}/api/advert/agency/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postAgencyReuploadedDocument: `${baseUrl}/api/advert/agency/reupload-document`,//rejected documents list to be reuploaded\r\n\r\n        // Hoarding api //\r\n\r\n        api_getDistrictList: `${baseUrl}/api/crud/district-mstrs`, //district list\r\n        api_postHoardingApplication: `${baseUrl}/api/advert/hording/add-new`, //applying for hoarding\r\n        api_getHoardingPendingApplicationList: `${baseUrl}/api/advert/hording/list-applied-applications`, //pending Application list\r\n        api_getHoardingApprovedApplicationList: `${baseUrl}/api/advert/hording/list-approved`, //approved Application list\r\n        api_getHoardingRejectedApplicationList: `${baseUrl}/api/advert/hording/list-rejected`, //rejected Application list\r\n        api_getHoardingUnpaidApplicationList: `${baseUrl}/api/advert/hording/list-unpaid`, //unpaid Application list\r\n        api_getHoardingTypologyList: `${baseUrl}/api/advert/hording/list-typology`, //topology list\r\n        api_getHoardingApplicationFullDetail: `${baseUrl}/api/advert/hording/get-details-by-id`, //application details by id\r\n        api_getHoardingAppliedDocumentList: `${baseUrl}/api/advert/hording/view-hoarding-documents`,//applied document list\r\n        api_getHoardingOrderIdForPayment: `${baseUrl}/api/advert/hording/generate-payment-order-id`,//order if for payment\r\n        api_getHoardingApplicationDetailForPayment: `${baseUrl}/api/advert/hording/get-application-details-for-payment`,//application details for payment\r\n        api_getHoardingReuploadDoc: `${baseUrl}/api/advert/hording/view-active-document`,//rejected documents list to be reuploaded\r\n        api_postHoardingReuploadedDocument: `${baseUrl}/api/advert/hording/reupload-document`,//rejected documents list to be reuploaded\r\n        api_postHoardingRenewList: `${baseUrl}/api/advert/hording/get-renew-active-applications`,//rejected documents list to be reuploaded\r\n        api_renewHoarding_license: `${baseUrl}/api/advert/hording/renewal-hording`,\r\n        api_getHoardingApplicationDetailsToRenew: `${baseUrl}/api/advert/hording/get-hording-details-for-renew`,\r\n        api_getHoardingArchivedList: `${baseUrl}/api/advert/hording/list-hording-archived`, //hoarding archived in list\r\n        api_getHoardingBlacklistedList: `${baseUrl}/api/advert/hording/list-hording-blacklist`, //hoarding archived in list\r\n        api_archivedApplication: `${baseUrl}/api/advert/hording/archived-hording `, //hoarding archived in list\r\n        api_blacklistedApplication: `${baseUrl}/api/advert/hording/blacklist-hording  `, //hoarding blacklisted application\r\n\r\n        // marketing //\r\n\r\n        // Dharamshala //\r\n        api_postDharamshalaApplication: `${baseUrl}/api/market/dharamshala/add-new`, //applying for self advertisement\r\n        api_getDharamshalaAppliedApplicationList: `${baseUrl}/api/market/dharamshala/list-applied-applications`, //pending Application list\r\n        api_getDharamshalaAppliedApplicationDetail: `${baseUrl}/api/market/dharamshala/get-details-by-id `, //application details by id\r\n        api_getDharamshalaAppliedDocumentList: `${baseUrl}/api/market/dharamshala/view-dharamshala-documents`, //applied document list\r\n        api_getDharamshalaApprovedApplicationList: `${baseUrl}/api/market/dharamshala/list-approved`, //approved Application list\r\n        api_getDharamshalaRejectedApplicationList: `${baseUrl}/api/market/dharamshala/list-rejected`, //rejected Application list\r\n        api_getDharamshalaOrderIdForPayment: `${baseUrl}/api/market/dharamshala/generate-payment-order-id`,//order if for payment\r\n        api_getDharamshalaApplicationDetailForPayment: `${baseUrl}/api/market/dharamshala/get-application-details-for-payment`,//application details for payment\r\n        api_getDharamshalaReuploadDoc: `${baseUrl}/api/market/dharamshala/view-active-document`,//list of rejected and verified document\r\n        api_postDharamshalaReuploadedDocument: `${baseUrl}/api/market/dharamshala/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewDharamshala_license: `${baseUrl}/api/market/dharamshala/renew-application`,\r\n        api_getDharamshalaApplicationDetailsToRenew: `${baseUrl}/api/market/dharamshala/get-renew-application-details`,\r\n\r\n        // Banquet/marriage hall //\r\n        api_postBanquetApplication: `${baseUrl}/api/market/bm-hall/add-new`, //applying for self advertisement\r\n        api_getBanquetAppliedApplicationList: `${baseUrl}/api/market/bm-hall/list-applied-applications`, //pending Application list\r\n        api_getBanquetAppliedApplicationDetail: `${baseUrl}/api/market/bm-hall/get-details-by-id `, //application details by id\r\n        api_getBanquetAppliedDocumentList: `${baseUrl}/api/market/bm-hall/view-bm-hall-documents`, //applied document list\r\n        api_getBanquetApprovedApplicationList: `${baseUrl}/api/market/bm-hall/list-approved`, //approved Application list\r\n        api_getBanquetRejectedApplicationList: `${baseUrl}/api/market/bm-hall/list-rejected`, //rejected Application list\r\n        api_getBanquetOrderIdForPayment: `${baseUrl}/api/market/bm-hall/generate-payment-order-id`,//order if for payment\r\n        api_getBanquetApplicationDetailForPayment: `${baseUrl}/api/market/bm-hall/get-application-details-for-payment`,//application details for payment\r\n        api_getBanquetReuploadDoc: `${baseUrl}/api/market/bm-hall/view-active-document`,//list of rejected and verified document\r\n        api_postBanquetReuploadedDocument: `${baseUrl}/api/market/bm-hall/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewBanquet_license: `${baseUrl}/api/market/bm-hall/renew-application`,\r\n        api_getBanquetApplicationDetailsToRenew: `${baseUrl}/api/market/bm-hall/get-renew-application-details`,\r\n\r\n        // Hostel //\r\n        api_postHostelApplication: `${baseUrl}/api/market/hostel/add-new`, //applying for self advertisement\r\n        api_getHostelAppliedApplicationList: `${baseUrl}/api/market/hostel/list-applied-applications`, //pending Application list\r\n        api_getHostelAppliedApplicationDetail: `${baseUrl}/api/market/hostel/get-details-by-id `, //application details by id\r\n        api_getHostelAppliedDocumentList: `${baseUrl}/api/market/hostel/view-hostel-documents`, //applied document list\r\n        api_getHostelApprovedApplicationList: `${baseUrl}/api/market/hostel/list-approved`, //approved Application list\r\n        api_getHostelRejectedApplicationList: `${baseUrl}/api/market/hostel/list-rejected`, //rejected Application list\r\n        api_getHostelOrderIdForPayment: `${baseUrl}/api/market/hostel/generate-payment-order-id`,//order if for payment\r\n        api_getHostelApplicationDetailForPayment: `${baseUrl}/api/market/hostel/get-application-details-for-payment`,//application details for payment\r\n        api_getHostelReuploadDoc: `${baseUrl}/api/market/hostel/view-active-document`,//list of rejected and verified document\r\n        api_postHostelReuploadedDocument: `${baseUrl}/api/market/hostel/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewHostel_license: `${baseUrl}/api/market/hostel/renew-application`,\r\n        api_getHostelApplicationDetailsToRenew: `${baseUrl}/api/market/hostel/get-renew-application-details`,\r\n\r\n        // Lodge //\r\n        api_postLodgeApplication: `${baseUrl}/api/market/lodge/add-new`, //applying for self advertisement\r\n        api_getLodgeAppliedApplicationList: `${baseUrl}/api/market/lodge/list-applied-applications`, //pending Application list\r\n        api_getLodgeAppliedApplicationDetail: `${baseUrl}/api/market/lodge/get-details-by-id `, //application details by id\r\n        api_getLodgeAppliedDocumentList: `${baseUrl}/api/market/lodge/view-lodge-documents`, //applied document list\r\n        api_getLodgeApprovedApplicationList: `${baseUrl}/api/market/lodge/list-approved`, //approved Application list\r\n        api_getLodgeRejectedApplicationList: `${baseUrl}/api/market/lodge/list-rejected`, //rejected Application list\r\n        api_getLodgeOrderIdForPayment: `${baseUrl}/api/market/lodge/generate-payment-order-id`,//order if for payment\r\n        api_getLodgeApplicationDetailForPayment: `${baseUrl}/api/market/lodge/get-application-details-for-payment`,//application details for payment\r\n        api_getLodgeReuploadDoc: `${baseUrl}/api/market/lodge/view-active-document`,//list of rejected and verified document\r\n        api_postLodgeReuploadedDocument: `${baseUrl}/api/market/lodge/reupload-document`,//rejected documents list to be reuploaded\r\n        api_renewLodge_license: `${baseUrl}/api/market/lodge/renew-application`,\r\n        api_getLodgeApplicationDetailsToRenew: `${baseUrl}/api/market/lodge/get-renew-application-details`,\r\n    }\r\n\r\n    return apiList\r\n}","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction AdvrtSuccessScreen(props) {\r\n    const navigate = useNavigate\r\n\r\n    console.log(\"data in response screen\", props?.responseScreenData)\r\n    return (\r\n        <div>\r\n            <div className='grid grid-cols-1 md:grid-cols-6 lg:grid-cols-6 mt-6'>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n                <div className='col-span-2 bg-white shadow-lg mt-4'>\r\n                    <div className='p-2'>\r\n                        <img src='https://img.freepik.com/free-vector/mail-sent-concept-illustration_114360-96.jpg?w=740&t=st=1672636866~exp=1672637466~hmac=5f164187014737ee6e91346184ade8b9590a40d01e247f97d5dba6f313d4c474' className='h-64 mx-auto' />\r\n                    </div>\r\n                    <div className='ml-44 -mt-16'>\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/5610/5610944.png' className='h-20 -mt-4 mx-auto opacity-75' />\r\n                        {/* <img src='https://cdn-icons-png.flaticon.com/512/753/753344.png' className='h-12 mx-auto opacity-75' /> */}\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-3xl p-8 text-gray-600'>Application Submitted Successfully</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-xl text-gray-600 font-bold uppercase'> Application No. :- {props?.responseScreenData?.ApplicationNo}</h1>\r\n                    </div>\r\n                    <div className='text-center p-8'>\r\n                        <Link to='/advertisement-dashboard'>\r\n                            <button class=\"w-32 text-xs p-3 mt-10 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-indigo-500 rounded-md hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\">\r\n                                Close\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvrtSuccessScreen","import React from 'react'\r\n\r\nfunction DocumentUploadSteps() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-xl'>How To Uplaod Document ?</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 1 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >Choose a file which you want to uplaod </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 2 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To upload image click on upload button</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 3 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on preview to view uploaded image </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 4 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on Save & Next button to proceed with the application</span>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div> */}\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/image-upload-concept-illustration_114360-798.jpg?w=826&t=st=1675677630~exp=1675678230~hmac=3ce8cef91d846d7436a3f83357381af891a8e1e3c51eeef330e620448f1420c8' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentUploadSteps","import { Info } from '@mui/icons-material'\r\nimport React from 'react'\r\n\r\nfunction SelfAdvrtInformationScreen() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your address where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div>\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto'/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvrtInformationScreen","export default function ApiHeaderAdvrt() {\r\n    let token = window.localStorage.getItem(\"citizen_token\");\r\n    const header = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n    };\r\n    return header;\r\n  }\r\n  ","\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Component  - ServerErrorCard\r\n// DESCRIPTION - This component is rendered when there is some error in hitting the api to show text like server is busy..\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineReload } from 'react-icons/ai'\r\n\r\nfunction ServerErrorCard(props) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div class=\"items-center justify-center p-10 bg-white shadow-xl\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex rounded-full bg-red-100 p-4\">\r\n            <div class=\"rounded-full stroke-red-600 bg-red-200 p-4\">\r\n              <svg class=\"w-16 h-16\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 8H6.01M6 16H6.01M6 12H18C20.2091 12 22 10.2091 22 8C22 5.79086 20.2091 4 18 4H6C3.79086 4 2 5.79086 2 8C2 10.2091 3.79086 12 6 12ZM6 12C3.79086 12 2 13.7909 2 16C2 18.2091 3.79086 20 6 20H14\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M17 16L22 21M22 16L17 21\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" p-10\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">{props?.title}</div>\r\n            <p class=\"text-slate-600 mt-1 lg:text-lg\">{props?.desc}</p>\r\n            <div className=\"text-center mt-10\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => window.location.reload()}><AiOutlineReload className=\"inline mr-2\" />Reload</button>\r\n              <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(props?.buttonUrl)}>{props?.buttonText}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServerErrorCard","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport SelfAdvrtInformationScreen from '../../../Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../../FunctionComponent/ValidationFunction';\r\nimport OldNewRuleComponent from '../../OldNewRuleComponent';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction BanquetMarriageHallForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [applyYearValue, setapplyYearValue] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        rule: yup.string().required('select rule'),\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.string().required('Enter mobile no.').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        hallType: yup.string().required('This field is Required'),\r\n        entityName: yup.string().required('Enter Entity name').max(50, 'Enter maximum 50 characters'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        holdingNo: yup.string().required('This field is Required'),\r\n        tradeLicenseNo: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('Enter Number'),\r\n        // latitude: yup.string().required('Enter Number'),\r\n        organizationType: yup.string().required('This field is Required'),\r\n        floorArea: yup.string().required('This field is Required'),\r\n        landDeedType: yup.string().required('This field is Required'),\r\n        waterSupplyType: yup.string().required('This field is Required'),\r\n        electricityType: yup.string().required('This field is Required'),\r\n        securityType: yup.string().required('This field is Required'),\r\n        noOfCctv: yup.string().required('Enter Number'),\r\n        noFireExtinguishers: yup.string().required('Enter Number'),\r\n        noEntryGates: yup.string().required('Enter Number'),\r\n        noExitGate: yup.string().required('Enter Number'),\r\n        noTwoWheelerParking: yup.string().required('Enter Number'),\r\n        noFourWheelerParking: yup.string().required('Enter Number'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        panNo: yup.string().required('Enter aadhar').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n    })\r\n\r\n    const initialValues = {\r\n        rule: '',\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        hallType: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        organizationType: '',\r\n        floorArea: '',\r\n        landDeedType: '',\r\n        waterSupplyType: '',\r\n        electricityType: '',\r\n        securityType: '',\r\n        noOfCctv: '',\r\n        noFireExtinguishers: '',\r\n        noEntryGates: '',\r\n        noExitGate: '',\r\n        noTwoWheelerParking: '',\r\n        noFourWheelerParking: '',\r\n        aadharNo: '',\r\n        panNo: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            console.log(\"banquetForm\", values, reviewIdName)\r\n            collectFormDataFun('banquetForm', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        { name == 'rule' && setapplyYearValue(value) }\r\n\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'panNo' && formik.setFieldValue(\"panNo\", allowCharacterNumberInput(value, formik.values.panNo, 10)) }\r\n        { name == 'floorArea' && formik.setFieldValue(\"floorArea\", allowFloatInput(value, formik.values.floorArea, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 50)) }\r\n    };\r\n    console.log(\"rule\", applyYearValue)\r\n    console.log(\"review\", reviewIdName)\r\n\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list', response.data.data)\r\n                setwardList(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    console.log(\"ulb value...\", storeUlbValue)\r\n\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        showLoader(true);\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n                showLoader(false);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                showLoader(false);\r\n            })\r\n    }\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('rule', existingApplicationDetails?.rule)\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        // formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residential_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.residential_ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile)\r\n        formik.setFieldValue('hallType', existingApplicationDetails?.hall_type_id)\r\n        formik.setFieldValue('electricityType', existingApplicationDetails?.electricity_type_id)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('organizationType', existingApplicationDetails?.organization_type_id)\r\n        formik.setFieldValue('floorArea', existingApplicationDetails?.floor_area)\r\n        formik.setFieldValue('landDeedType', existingApplicationDetails?.land_deed_type_id)\r\n        formik.setFieldValue('waterSupplyType', existingApplicationDetails?.water_supply_type_id)\r\n        formik.setFieldValue('securityType', existingApplicationDetails?.security_type_id)\r\n        formik.setFieldValue('noOfCctv', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noFireExtinguishers', existingApplicationDetails?.fire_extinguisher)\r\n        formik.setFieldValue('noEntryGates', existingApplicationDetails?.entry_gate)\r\n        formik.setFieldValue('noExitGate', existingApplicationDetails?.exit_gate)\r\n        formik.setFieldValue('noTwoWheelerParking', existingApplicationDetails?.two_wheelers_parking)\r\n        formik.setFieldValue('noFourWheelerParking', existingApplicationDetails?.four_wheelers_parking)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_card)\r\n        formik.setFieldValue('panNo', existingApplicationDetails?.pan_card)\r\n\r\n    }\r\n\r\n    const modalAction = () => {\r\n        openModal()\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\" existing data for banquet marriage\", existingApplicationDetails)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n\r\n    return (\r\n        <>\r\n            <div className=' absolute top-2 ml-4 w-full'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12'>\r\n                                    {applyYearValue == undefined &&\r\n                                        <div className='col-span-12'>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-4'>\r\n                                                Select <span className=' font-bold  uppercase underline px-2 text-md  lg:text-2xl md:text-2xl text-gray-700'>Rule</span> From Which You Want To Proceed With The <span className=' font-bold  uppercase underline px-2 text-md lg:text-2xl md:text-2xl text-gray-700'>Application</span>\r\n                                            </h1>\r\n                                            <div className='text-lg font-semibold text-center cursor-pointer underline' onClick={modalAction}>What is Rule?</div>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>Apply</h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs '>According to rule</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('rule')} >\r\n                                                            <option>select </option>\r\n                                                            <option value=\"Old Rule\">Old Rule</option>\r\n                                                            <option value=\"New Rule\">New Rule</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {applyYearValue != undefined &&\r\n                                        <div className='col-span-12 '>\r\n                                            <h1 className='text-center text-md lg:text-xl md:text-xl text-gray-600 font-semibold pt-8 '> you have selected rule <span className='font-bold uppercase underline px-2 text-md lg:text-xl md:text-xl text-violet-500'>{reviewIdName?.rule}</span> to proceed with the application.</h1>\r\n                                            {storeUlbValue == undefined ?\r\n                                                <>\r\n                                                    <h1 className='text-center text-md lg:text-xl md:text-xl font-semibold text-gray-500 p-8'>\r\n                                                        Registration of a <span className='text-gray-700 font-bold'>Marriage or a Banquet Hall</span> is mendatory under the urban local body it falls in.\r\n                                                        If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                                    </h1>\r\n\r\n\r\n                                                    <div className='w-96 h-64 mx-auto'>\r\n                                                        <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                            <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                            <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                            <div className=' '>\r\n                                                                <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                                    <option>select </option>\r\n                                                                    {ulbList?.map((items) => (\r\n                                                                        <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='animate-wiggle'>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                                :\r\n                                                <div className=' mt-4  text-center'>\r\n                                                    {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500 \">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg> */}\r\n\r\n                                                    <h1 className='text-md lg:text-xl md:text-xl text-gray-600 font-semibold '> you have selected ulb <span className='font-bold uppercase underline px-2 text-md lg:text-xl md:text-xl text-violet-500'>{reviewIdName?.ulb}</span> to proceed with the application.</h1>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8  mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} disabled >\r\n                                                                <option>{existingApplicationDetails?.resident_ward_name} </option>\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option>{existingApplicationDetails?.permanent_ward_name} </option>\r\n\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled >\r\n                                                                <option>{existingApplicationDetails?.entity_ward_name} </option>\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Hall Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('hallType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HallType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hallType && formik.errors.hallType ? formik.errors.hallType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Floor Area<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='floorArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.floorArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.floorArea && formik.errors.floorArea ? formik.errors.floorArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8  mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude  </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Hall Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('hallType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HallType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hallType && formik.errors.hallType ? formik.errors.hallType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Floor Area<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='floorArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.floorArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.floorArea && formik.errors.floorArea ? formik.errors.floorArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n\r\n            {/*view application full detail */}\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '50vw', 'height': '50%' }}>\r\n                    <div className='h-[24rem] bg-violet-100 overflow-y-auto '>\r\n                        <OldNewRuleComponent />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction BanquetMarriageHallDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        // id: props?.data?.id,\r\n        // relativeName: props?.data?.relative_name,\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    // console.log(\"url\", DocUrl)\r\n    // console.log(\"path\", imgPath)\r\n    // console.log(\"document full data 1...\", props?.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    <div onClick={() => modalAction(DocUrl)}>\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                    </div>\r\n\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallDocTable","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport BanquetMarriageHallDocTable from './BanquetMarriageHallDocTable';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../../../Advertisement/DocumentUploadSteps';\r\n// import SelfAdvertisementDocTable from './SelfAdvertisementDocTable';\r\n// import * as yup from 'yup'\r\n\r\n\r\nfunction BanquetMarriageHallDocForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('banquetDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('banquet document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.BANQUTE_MARRIGE_HALL?.map((items, index) => (\r\n                                    <BanquetMarriageHallDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.BANQUTE_MARRIGE_HALL?.map((items, index) => (\r\n                                    <BanquetMarriageHallDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallDocForm","import React from 'react'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewFormBanquetMarriageHall(props) {\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 -ml-7 text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4  '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800'>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.licenseYear || props?.reviewIdNameData?.banquetForm?.licenseYear)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.applicantName || props?.reviewIdNameData?.banquetForm?.applicant)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.fatherName || props?.reviewIdNameData?.banquetForm?.father)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.residenceAddress || props?.reviewIdNameData?.banquetForm?.residential_address)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.residenceWardNo || props?.reviewIdNameData?.banquetForm?.resident_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.permanentAddress || props?.reviewIdNameData?.banquetForm?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.permanentWardNo || props?.reviewIdNameData?.banquetForm?.permanent_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.mobileNo || props?.reviewIdNameData?.banquetForm?.mobile)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.email || props?.reviewIdNameData?.banquetForm?.email)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar Card No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.aadharNo || props?.reviewIdNameData?.banquetForm?.aadhar_card)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Pan Card No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.panNo || props?.reviewIdNameData?.banquetForm?.pan_card)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.entityName || props?.reviewIdNameData?.banquetForm?.entity_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.entityAddress || props?.reviewIdNameData?.banquetForm?.entity_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.entityWardNo || props?.reviewIdNameData?.banquetForm?.entity_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.holdingNo || props?.reviewIdNameData?.banquetForm?.holding_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.tradeLicenseNo || props?.reviewIdNameData?.banquetForm?.trade_license_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.longitude || props?.reviewIdNameData?.banquetForm?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.latitude || props?.reviewIdNameData?.banquetForm?.latitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hall Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.hallType || props?.reviewIdNameData?.banquetForm?.hall_type_name)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Organization Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.organizationType || props?.reviewIdNameData?.banquetForm?.organization_type_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Floor Area</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.floorArea || props?.reviewIdNameData?.banquetForm?.floor_area)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Land Deed Type  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.landDeedType || props?.reviewIdNameData?.banquetForm?.land_deed_type_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Water Supply Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.waterSupplyType || props?.reviewIdNameData?.banquetForm?.water_supply_type_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Electricity Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.electricityType || props?.reviewIdNameData?.banquetForm?.electricity_type_name)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Security Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.securityType || props?.reviewIdNameData?.banquetForm?.security_type_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of CCTV Camera</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noOfCctv || props?.reviewIdNameData?.banquetForm?.cctv_camera)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Fire Extinguishers </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noFireExtinguishers || props?.reviewIdNameData?.banquetForm?.fire_extinguisher)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Entry Gates</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noEntryGates || props?.reviewIdNameData?.banquetForm?.entry_gate)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Exit Gates</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noExitGate || props?.reviewIdNameData?.banquetForm?.exit_gate)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Two Wheelers Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noTwoWheelerParking || props?.reviewIdNameData?.banquetForm?.two_wheelers_parking)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noFourWheelerParking || props?.reviewIdNameData?.banquetForm?.four_wheelers_parking)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.banquetDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewFormBanquetMarriageHall","import React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport BanquetMarriageHallForm from './BanquetMarriageHallForm';\r\nimport BanquetMarriageHallDocForm from './BanquetMarriageHallDocForm';\r\nimport ReviewFormBanquetMarriageHall from './ReviewFormBanquetMarriageHall';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport AdvrtSuccessScreen from '../../../Advertisement/AdvrtSuccessScreen';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction BanquetMarriageHallFormIndex() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postBanquetApplication, api_renewBanquet_license, api_getBanquetApplicationDetailsToRenew } = AdvertisementApiList()\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'banquetForm') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitBanquetApplicationForm()\r\n    }\r\n\r\n    const submitBanquetApplicationForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postBanquetApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.banquetForm?.rule,\r\n                licenseYear: allFormData?.banquetForm?.licenseYear,\r\n                applicantName: allFormData?.banquetForm?.applicantName,\r\n                fatherName: allFormData?.banquetForm?.fatherName,\r\n                residentialAddress: allFormData?.banquetForm?.residenceAddress,\r\n                residentialWardId: allFormData?.banquetForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.banquetForm?.permanentAddress,\r\n                permanentWardId: allFormData?.banquetForm?.permanentWardNo,\r\n                email: allFormData?.banquetForm?.email,\r\n                mobile: allFormData?.banquetForm?.mobileNo,\r\n                hallType: allFormData?.banquetForm?.hallType,\r\n                entityName: allFormData?.banquetForm?.entityName,\r\n                entityAddress: allFormData?.banquetForm?.entityAddress,\r\n                entityWardId: allFormData?.banquetForm?.entityWardNo,\r\n                holdingNo: allFormData?.banquetForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.banquetForm?.tradeLicenseNo,\r\n                longitude: allFormData?.banquetForm?.longitude,\r\n                latitude: allFormData?.banquetForm?.latitude,\r\n                organizationType: allFormData?.banquetForm?.organizationType,\r\n                floorArea: allFormData?.banquetForm?.floorArea,\r\n                landDeedType: allFormData?.banquetForm?.landDeedType,\r\n                waterSupplyType: allFormData?.banquetForm?.waterSupplyType,\r\n                electricityType: allFormData?.banquetForm?.electricityType,\r\n                cctvCamera: allFormData?.banquetForm?.noOfCctv,\r\n                fireExtinguisher: allFormData?.banquetForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.banquetForm?.noEntryGates,\r\n                exitGate: allFormData?.banquetForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.banquetForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.banquetForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.banquetForm?.aadharNo,\r\n                panCard: allFormData?.banquetForm?.panNo,\r\n                securityType: allFormData?.banquetForm?.securityType,\r\n                documents: allFormData?.banquetDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewBanquet_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.banquetForm?.rule,\r\n                licenseYear: allFormData?.banquetForm?.licenseYear,\r\n                applicantName: allFormData?.banquetForm?.applicantName,\r\n                fatherName: allFormData?.banquetForm?.fatherName,\r\n                residentialAddress: allFormData?.banquetForm?.residenceAddress,\r\n                residentialWardId: allFormData?.banquetForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.banquetForm?.permanentAddress,\r\n                permanentWardId: allFormData?.banquetForm?.permanentWardNo,\r\n                email: allFormData?.banquetForm?.email,\r\n                mobile: allFormData?.banquetForm?.mobileNo,\r\n                hallType: allFormData?.banquetForm?.hallType,\r\n                entityName: allFormData?.banquetForm?.entityName,\r\n                entityAddress: allFormData?.banquetForm?.entityAddress,\r\n                entityWardId: allFormData?.banquetForm?.entityWardNo,\r\n                holdingNo: allFormData?.banquetForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.banquetForm?.tradeLicenseNo,\r\n                longitude: allFormData?.banquetForm?.longitude,\r\n                latitude: allFormData?.banquetForm?.latitude,\r\n                organizationType: allFormData?.banquetForm?.organizationType,\r\n                floorArea: allFormData?.banquetForm?.floorArea,\r\n                landDeedType: allFormData?.banquetForm?.landDeedType,\r\n                waterSupplyType: allFormData?.banquetForm?.waterSupplyType,\r\n                electricityType: allFormData?.banquetForm?.electricityType,\r\n                cctvCamera: allFormData?.banquetForm?.noOfCctv,\r\n                fireExtinguisher: allFormData?.banquetForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.banquetForm?.noEntryGates,\r\n                exitGate: allFormData?.banquetForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.banquetForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.banquetForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.banquetForm?.aadharNo,\r\n                panCard: allFormData?.banquetForm?.panNo,\r\n                securityType: allFormData?.banquetForm?.securityType,\r\n                documents: allFormData?.banquetDoc\r\n            }\r\n        }\r\n\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getBanquetApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    console.log(\"review data in index 12\", reviewData)\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Banquet/Marriage Hall Application</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><BanquetMarriageHallForm values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><BanquetMarriageHallDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewFormBanquetMarriageHall values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallFormIndex","import React from 'react'\r\n\r\nfunction OldNewRuleComponent() {\r\n    return (\r\n        <>\r\n            <div className='p-4'>\r\n                <h1 className='text-3xl text-center text-violet-600 underline'>RULES</h1>\r\n                <div className=''>\r\n                    <h1 className='text-violet-600 font-semibold p-4 text-xl underline'> Old Rule</h1>\r\n                    <h1 className='text-violet-600 text-md p-4'>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sequi, iure hic earum, molestias, cum quam provident libero amet quasi nobis error soluta repudiandae blanditiis magnam. Aliquid ullam nam quo culpa.</h1>\r\n                </div>\r\n                <div className=''>\r\n                    <h1 className='text-violet-600 font-semibold p-4 text-xl underline'> New Rule</h1>\r\n                    <h1 className='text-violet-600 text-md p-4'>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sequi, iure hic earum, molestias, cum quam provident libero amet quasi nobis error soluta repudiandae blanditiis magnam. Aliquid ullam nam quo culpa.</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldNewRuleComponent"],"names":["AdvertisementApiList","baseUrl","BackendUrlAdvt","api_getTradeLicenseByHolding","api_getTradeLicenseByUserId","api_getTradeLicenseDetails","api_getUlbList","api_getWardList","api_getAdvertMasterData","api_getSelfAdvertDocList","verifyPaymentStatus","getTypologyList","getHoardingCategory","getPaymentsuccessDetails","getApprovalLetterDetails","getAgencyDashboardGraphData","api_postSelfAdvertApplication","api_getAppliedApplicationList","api_getAppliedApplicationDetail","api_getAppliedDocumentList","api_getApprovedApplicationList","api_getRejectedApplicationList","api_getOrderIdForPayment","api_getApplicationDetailForPayment","api_getAdvertisementCategory","api_getAdvertisementReuploadDoc","api_postAdvertisementReuploadedDocument","api_renewSelfAdvt_license","api_getApplicationDetailsToRenew","api_postMovableVehicleApplication","api_getMovableAppliedApplicationList","api_getMovableAppliedApplicationDetail","api_getMovableAppliedDocumentList","api_getMovableApprovedApplicationList","api_getMovableRejectedApplicationList","api_getMovableVehicleOrderIdForPayment","api_getMovableVehicleApplicationDetailForPayment","api_getMovableVehicleReuploadDoc","api_postMovableVehicleReuploadedDocument","api_renewMovableVehicle_license","api_getMovableApplicationDetailsToRenew","api_postPrivateLandApplication","api_getPrivateLandAppliedApplicationList","api_getPrivateLandAppliedApplicationDetail","api_getPrivateLandAppliedDocumentList","api_getPrivateLandApprovedApplicationList","api_getPrivateLandRejectedApplicationList","api_getPrivateLandOrderIdForPayment","api_getPrivateLandApplicationDetailForPayment","api_getPrivateLandReuploadDoc","api_postPrivateLandReuploadedDocument","api_renewPrivateLand_license","api_getPrivateApplicationDetailsToRenew","api_postAgencyApplication","api_getAgencyApprovedApplicationList","api_getAgencyRejectedApplicationList","api_getAgencyAppliedApplicationList","api_getAgencyApplicationFullDetail","api_getAgencyAppliedDocumentList","api_getAgencyOrderIdForPayment","api_getAgencyApplicationDetailForPayment","api_postRedirectToAgencyDashboard","api_getAgencyDashboardData","api_getAgencyDetails","api_renew_license","api_getAgencyReuploadDoc","api_postAgencyReuploadedDocument","api_getDistrictList","api_postHoardingApplication","api_getHoardingPendingApplicationList","api_getHoardingApprovedApplicationList","api_getHoardingRejectedApplicationList","api_getHoardingUnpaidApplicationList","api_getHoardingTypologyList","api_getHoardingApplicationFullDetail","api_getHoardingAppliedDocumentList","api_getHoardingOrderIdForPayment","api_getHoardingApplicationDetailForPayment","api_getHoardingReuploadDoc","api_postHoardingReuploadedDocument","api_postHoardingRenewList","api_renewHoarding_license","api_getHoardingApplicationDetailsToRenew","api_getHoardingArchivedList","api_getHoardingBlacklistedList","api_archivedApplication","api_blacklistedApplication","api_postDharamshalaApplication","api_getDharamshalaAppliedApplicationList","api_getDharamshalaAppliedApplicationDetail","api_getDharamshalaAppliedDocumentList","api_getDharamshalaApprovedApplicationList","api_getDharamshalaRejectedApplicationList","api_getDharamshalaOrderIdForPayment","api_getDharamshalaApplicationDetailForPayment","api_getDharamshalaReuploadDoc","api_postDharamshalaReuploadedDocument","api_renewDharamshala_license","api_getDharamshalaApplicationDetailsToRenew","api_postBanquetApplication","api_getBanquetAppliedApplicationList","api_getBanquetAppliedApplicationDetail","api_getBanquetAppliedDocumentList","api_getBanquetApprovedApplicationList","api_getBanquetRejectedApplicationList","api_getBanquetOrderIdForPayment","api_getBanquetApplicationDetailForPayment","api_getBanquetReuploadDoc","api_postBanquetReuploadedDocument","api_renewBanquet_license","api_getBanquetApplicationDetailsToRenew","api_postHostelApplication","api_getHostelAppliedApplicationList","api_getHostelAppliedApplicationDetail","api_getHostelAppliedDocumentList","api_getHostelApprovedApplicationList","api_getHostelRejectedApplicationList","api_getHostelOrderIdForPayment","api_getHostelApplicationDetailForPayment","api_getHostelReuploadDoc","api_postHostelReuploadedDocument","api_renewHostel_license","api_getHostelApplicationDetailsToRenew","api_postLodgeApplication","api_getLodgeAppliedApplicationList","api_getLodgeAppliedApplicationDetail","api_getLodgeAppliedDocumentList","api_getLodgeApprovedApplicationList","api_getLodgeRejectedApplicationList","api_getLodgeOrderIdForPayment","api_getLodgeApplicationDetailForPayment","api_getLodgeReuploadDoc","api_postLodgeReuploadedDocument","api_renewLodge_license","api_getLodgeApplicationDetailsToRenew","props","useNavigate","console","log","responseScreenData","className","src","ApplicationNo","to","class","tittleStyle","labelStyle","divStyle","xmlns","fill","viewBox","stroke","d","ApiHeaderAdvrt","token","window","localStorage","getItem","headers","Authorization","Accept","allowFloatInput","currentValue","oldValue","max","length","re","test","allowNumberInput","allowCharacterNumberInput","allowCharacterNumberForwardInput","allowMailInput","navigate","title","desc","onClick","location","reload","buttonUrl","buttonText","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","Modal","values","setFormIndex","showLoader","collectFormDataFun","existingApplicationDetails","toastFun","type","CitizenApplyApiList","api_getAllUlb","api_wardByUlb","useState","masterData","setmasterData","ulbList","setulbList","wardList","setwardList","reviewIdName","setreviewIdName","storeUlbValue","setstoreUlbValue","applyYearValue","setapplyYearValue","isLoading","setisLoading","erroState","seterroState","liceneData","liceneDetails","modalIsOpen","setIsOpen","inputStyle","validationSchema","yup","rule","required","ulb","licenseYear","applicantName","fatherName","email","residenceAddress","residenceWardNo","permanentAddress","permanentWardNo","mobileNo","min","hallType","entityName","entityAddress","entityWardNo","holdingNo","tradeLicenseNo","organizationType","floorArea","landDeedType","waterSupplyType","electricityType","securityType","noOfCctv","noFireExtinguishers","noEntryGates","noExitGate","noTwoWheelerParking","noFourWheelerParking","aadharNo","panNo","formik","useFormik","initialValues","longitude","latitude","enableReinitialize","onSubmit","useEffect","getUlbListData","axios","ApiHeader","then","response","data","catch","error","getWardListFun","ulbId","setTimeout","getMasterDataFun","feedApplicationData","setFieldValue","ulb_id","applicant","father","residential_address","residential_ward_id","permanent_address","permanent_ward_id","mobile","hall_type_id","electricity_type_id","entity_name","entity_address","entity_ward_id","holding_no","trade_license_no","organization_type_id","floor_area","land_deed_type_id","water_supply_type_id","security_type_id","cctv_camera","fire_extinguisher","entry_gate","exit_gate","two_wheelers_parking","four_wheelers_parking","aadhar_card","pan_card","BarLoader","CommonModal","ServerErrorCard","licenseDataById","handleSubmit","onChange","e","target","name","value","selectedIndex","text","undefined","getFieldProps","map","items","id","ulb_name","paramCategories","LicenseYear","string_parameter","touched","errors","placeholder","handleChange","disabled","resident_ward_name","permanent_ward_name","entity_ward_name","HallType","OrganizationType","LandDeedType","WaterSupplyType","ElectricityType","SecutityType","SelfAdvrtInformationScreen","ward_name","isOpen","onAfterOpen","onRequestClose","style","contentLabel","OldNewRuleComponent","backgroundColor","imgPath","setimgPath","DocUrl","setDocUrl","imageFile","setimageFile","modalAction","url","image","docCode","ownerDtlId","collectAllDataFun","mykey","handleFile","file","reader","FileReader","onloadend","result","readAsDataURL","files","encType","document_name","docType","alt","split","pop","accept","webkitdirectory","frameborder","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","collectAllData","key","formData","getDocumentList","deviceId","BANQUTE_MARRIGE_HALL","index","DocumentUploadSteps","allFormData","reviewIdNameData","nullToNA","banquetForm","hall_type_name","organization_type_name","land_deed_type_name","water_supply_type_name","electricity_type_name","security_type_name","banquetDoc","submitFun","formIndex","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setshow","setexistingApplicationDetails","setapplicationType","useParams","notify","toastData","toast","submitBanquetApplicationForm","requestBody","residentialAddress","residentialWardId","permanentWardId","entityWardId","cctvCamera","fireExtinguisher","entryGate","exitGate","twoWheelersParking","fourWheelersParking","aadharCard","panCard","documents","applicationId","val","fetchApplicationDetails","status","AdvrtSuccessScreen","BrandLoader","position","autoClose"],"sourceRoot":""}