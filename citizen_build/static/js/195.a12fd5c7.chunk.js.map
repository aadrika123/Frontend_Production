{"version":3,"file":"static/js/195.a12fd5c7.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx","Pages/Property/CitizenAuth/PtnNoCard.js"],"sourcesContent":["\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberForwardInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!/]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n","import { useContext, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport { allowCharacterNumberInput, allowNumberInput } from '../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport CitizenApplyApiList from '../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../Components/Common/BarLoader';\r\nimport axios from 'axios';\r\nimport { contextVar } from '../../../Components/ContextVar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allowCharacterNumberForwardInput } from '../../AdvertisementModule/FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../Components/ApiList/ApiHeader';\r\nimport CommonModal from '../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../AdvertisementModule/ServerErrorCard';\r\nimport BottomErrorCard from '../../../Components/BottomErrorCard';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction PtnNoCard(props) {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [isButtonEnabled, setisButtonEnabled] = useState(false)\r\n    const [inputError, setinputError] = useState('')\r\n    const { api_sendMobileOtpAttachment } = CitizenApplyApiList()\r\n    const { notify } = useContext(contextVar)\r\n    const navigate = useNavigate()\r\n    const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n    const [errorMsg, seterrorMsg] = useState('')\r\n\r\n\r\n\r\n\r\n    const validationSchema = yup.object({\r\n        ptnNo: yup.string(),\r\n        holdingNo: yup.string(),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            ptnNo: \"\",\r\n            holdingNo: \"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log('at submit form.....', values)\r\n            // IF NO INPUT THEN GIVE ERROR\r\n            if (values.ptnNo.length < 14 && values.holdingNo < 15) {\r\n                setinputError('Please enter PTN or holding no.')\r\n                return\r\n            }\r\n\r\n            // IF PTN LENGTH IS ZERO THEN SET HOLDING OR VICE VERSA\r\n            if (values.ptnNo.length == 0) {\r\n                props?.setholdingNo(values.holdingNo)\r\n            } else {\r\n                props?.setptnNo(values.ptnNo)\r\n            }\r\n            sendOtp(values)\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // CLEAR OPPOSITE INPUT FIELD\r\n        if (name == 'ptnNo') {\r\n            formik.setFieldValue('holdingNo', '')\r\n            props?.setholdingNo('')\r\n        } else {\r\n            formik.setFieldValue('ptnNo', '')\r\n            props?.setptnNo('')\r\n        }\r\n\r\n        // INPUT RESTRICTION\r\n        { name == 'ptnNo' && formik.setFieldValue(\"ptnNo\", allowCharacterNumberForwardInput(value, formik.values.ptnNo, 17)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberForwardInput(value, formik.values.holdingNo, 16)) }\r\n\r\n        if ((name == 'ptnNo' && (value.length >= 14) || (name == 'holdingNo' && (value.length >= 15)))) {\r\n            setisButtonEnabled(true)\r\n        }\r\n        else {\r\n            setisButtonEnabled(false)\r\n        }\r\n    };\r\n\r\n    // FUNCTION WHICH SENDS OTP TO REGISTERED MOBILE NO TO ATTACH HOLDING\r\n    const sendOtp = (values) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        setisButtonEnabled(false)\r\n        // DUMMY OTP SEND MESSAGE\r\n        // notify('Otp has been send to registered mobile no.', 'success')\r\n        // props?.setptnCardStatus(false)\r\n        // props?.setotpCardStatus(true)\r\n\r\n        // return\r\n\r\n        let requestBody\r\n        if (values.ptnNo.length == 0) {\r\n            requestBody = {\r\n                holdingNo: values.holdingNo\r\n            }\r\n        } else {\r\n            requestBody = {\r\n                ptNo: values.ptnNo\r\n            }\r\n        }\r\n\r\n        console.log('before send otp for attachment...', requestBody)\r\n        // return\r\n        axios\r\n            .post(api_sendMobileOtpAttachment, requestBody, ApiHeader())\r\n            .then((response) => {\r\n                console.log('otp send for attachment response', response?.data)\r\n                if (response?.data?.status) {\r\n                    props?.setpropertyAttachedMobileNo(response?.data?.data?.mobileNo)\r\n                    props?.setptnCardStatus(false)\r\n                    props?.setotpCardStatus(true)\r\n                } else {\r\n                    activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                }\r\n                setisLoading(false)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error otp send\", err)\r\n                notify('Something went wrong in attachment...', 'error')\r\n                setisLoading(false)\r\n                activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                setisButtonEnabled(true)\r\n            });\r\n    }\r\n\r\n    const activateBottomErrorCard = (state, msg) => {\r\n        seterroMessage(msg)\r\n        seterroState(state)\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading && <BarLoader />\r\n            }\r\n             {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n            {/* <Modal\r\n                isOpen={modalIsOpen}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            > */}\r\n            {/* <div class=\"w-screen h-screen\"> */}\r\n            <div class=\"w-full sm:w-full  mx-auto\">\r\n                <div class=\"container mx-auto\">\r\n                    <div class=\"max-w-sm mx-auto md:max-w-lg\">\r\n                        <div class=\"w-full bg-white rounded text-center shadow-xl relative p-20\">\r\n                            <div class=\"\">\r\n                                <button\r\n                                    onClick={() => props?.closeModal(false)}\r\n                                    type=\"button\"\r\n                                    class=\"absolute top-6 right-6 bg-transparent bg-gray-200 text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center shadow-sm  hover:bg-red-200 hover:border-none\"\r\n                                >\r\n                                    <svg class=\"w-5 h-5\" fill=\"currentColor\">\r\n                                        <path\r\n                                            fill-rule=\"evenodd\"\r\n                                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                            clip-rule=\"evenodd\"\r\n                                        ></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <div class=\"text-2xl font-bold px-10\">Enter PTN No.\r\n                                    {/* <button onClick={() => props?.setptnCardStatus(false)} type=\"button\" class=\"float-right right-2.5 text-red-400 bg-transparent hover:bg-red-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center \" >\r\n                                                <svg class=\"w-5 h-5\" fill=\"currentColor\" ><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\r\n                                            </button> */}\r\n                                </div>\r\n                                <div class=\"flex flex-col mt-4 text-center\">\r\n                                    <span className='text-center'>Enter 14 digit PTN no, or Holding no.<br />to attach a property</span>\r\n                                    {/* <span class=\"font-bold\">+91 ******876</span> */}\r\n                                </div>\r\n\r\n                                <div class=\"flex flex-col mt-4 text-center\">\r\n                                    <span className='text-center text-red-400'>{errorMsg}</span>\r\n                                </div>\r\n                                <div class=\"flex flex-row justify-center text-center mt-5\">\r\n\r\n                                    <form onSubmit={formik.handleSubmit} onChange={handleChange} >\r\n                                        <div>\r\n                                            <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold w-full text-left`}>PTN</label>\r\n                                            <input type=\"text\"  {...formik.getFieldProps('ptnNo')} className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className='font-semibold text-indigo-500 mt-2'>Or</div>\r\n\r\n                                        <div>\r\n                                            <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold w-full text-left`}>Holding No.</label>\r\n                                            <input type=\"text\"  {...formik.getFieldProps('holdingNo')} className=\"form-control block w-full px-3 2xl:py-1.5 py-1 2xl:text-base text-sm font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className='text-red-500 mt-10'>{inputError}</div>\r\n                                        <div class=\"w-full text-center\">\r\n\r\n                                            {isButtonEnabled && <button type='submit' className=\"w-full  py-2.5 bg-indigo-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-indigo-700 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out\">Submit</button>}\r\n                                            {!isButtonEnabled && <button type='button' className=\"w-full  py-2.5 bg-gray-400 text-white font-medium text-xs leading-tight  rounded shadow-md  hover:shadow-lg  focus:shadow-lg focus:outline-none focus:ring-0  transition duration-150 ease-in-out cursor-default \">Submit</button>}\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            {/* </Modal> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PtnNoCard"],"names":["allowFloatInput","currentValue","oldValue","max","arguments","length","undefined","test","allowNumberInput","allowCharacterNumberInput","allowCharacterNumberForwardInput","allowMailInput","Modal","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isLoading","setisLoading","_useState5","_useState6","isButtonEnabled","setisButtonEnabled","_useState7","_useState8","inputError","setinputError","api_sendMobileOtpAttachment","CitizenApplyApiList","notify","useContext","contextVar","_useState9","useNavigate","_useState10","erroState","seterroState","_useState11","_useState12","erroMessage","seterroMessage","_useState13","_useState14","errorMsg","validationSchema","yup","ptnNo","holdingNo","formik","useFormik","initialValues","onSubmit","values","console","log","setholdingNo","setptnNo","sendOtp","requestBody","ptNo","axios","ApiHeader","then","response","_response$data","_response$data2","_response$data2$data","data","status","setpropertyAttachedMobileNo","mobileNo","setptnCardStatus","setotpCardStatus","activateBottomErrorCard","catch","err","state","msg","_jsxs","_Fragment","children","_jsx","BarLoader","BottomErrorCard","errorTitle","class","onClick","closeModal","type","fill","d","className","handleSubmit","onChange","e","name","target","value","setFieldValue","_objectSpread","getFieldProps"],"sourceRoot":""}