{"version":3,"file":"static/js/6135.0137a607.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Loader.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen.jsx","Pages/AdvertisementModule/AdvtUlbSelectComponent.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { ColorRing, MutatingDots, Dna, CirclesWithBar, Oval, RotatingLines, Blocks } from 'react-loader-spinner';\r\n\r\nfunction Loader(props) {\r\n    // console.log('props loader ', props.show)\r\n    return (\r\n        <>\r\n            <div className={`${props.show ? 'grid' : 'hidden'} bg-gray-50 opacity-50  z-50 absolute w-full h-full`}>\r\n                <div className=\" mx-auto my-[20%] \">\r\n                    <RotatingLines\r\n                        visible={props.show}\r\n                        strokeColor=\"gray\"\r\n                        strokeWidth=\"3\"\r\n                        animationDuration=\"0.80\"\r\n                        width=\"80\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loader","import { Info } from '@mui/icons-material'\r\nimport React from 'react'\r\n\r\nfunction SelfAdvrtInformationScreen() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your address where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div>\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto'/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvrtInformationScreen","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { contextVar } from '../../Components/ContextVar';\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport CitizenApplyApiList from '../../Components/CitizenApplyApiList';\r\nimport Select from 'react-select';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction AdvtUlbSelectComponent(props) {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(props?.open);\r\n    const [ulbList, setUlbList] = useState();\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n\r\n    const { api_getAllUlb } = CitizenApplyApiList();\r\n    const { notify } = useContext(contextVar)\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (props.openUlbModal == 0) setIsOpen(true);\r\n    }, [props.openUlbModal]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(api_getAllUlb)\r\n            .then(\r\n                (res) => (console.log(\"ULB LIsts...\", res), setUlbList(res.data.data))\r\n            )\r\n            .catch((err) => console.log(\"Error while fetching ulblist\", err));\r\n    }, []);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        navigate(-1);\r\n    }\r\n\r\n    const handleUlb = () => {\r\n        if (!selectedOption.id) {\r\n            return setSelectedOption(null);\r\n        } else {\r\n            // setValidULB(true);\r\n            notify(\"ULB Selected\", \"success\")\r\n            console.log(\"Start Button Clicked..\");\r\n            // props.nextScreen();\r\n            // props.setSelectedUlb(selectedOption);\r\n            props?.setUlbValues(selectedOption.id, selectedOption.ulb_name)\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    // console.log(\"selectedOption\", selectedOption);\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"container\">\r\n                    <div class=\"relative w-full h-full max-w-3xl md:h-auto border-indigo-600 shadow-indigo-200 shadow-sm rounded\">\r\n                        <div class=\"relative bg-white rounded-lg shadow \">\r\n                            <div class=\"flex items-start justify-between p-4 border-b rounded-t darks:border-gray-600\">\r\n                                <h3 class=\"text-base md:text-xl font-semibold text-gray-900 darks:text-white\">Select Ulb </h3>\r\n                                <button\r\n                                    onClick={closeModal}\r\n                                    class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center darks:hover:bg-gray-600 darks:hover:text-white\"\r\n                                    data-modal-hide=\"defaultModal\"\r\n                                >\r\n                                    <svg\r\n                                        aria-hidden=\"true\"\r\n                                        class=\"w-5 h-5\"\r\n                                        fill=\"currentColor\"\r\n                                        viewBox=\"0 0 20 20\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path\r\n                                            fill-rule=\"evenodd\"\r\n                                            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                            clip-rule=\"evenodd\"\r\n                                        ></path>\r\n                                    </svg>\r\n                                    <span class=\"sr-only\">Close modal</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"p-6 space-y-6\">\r\n                                <p class=\"md:text-base leading-relaxed text-gray-500 text-xs\">\r\n                                    Before applying for a water connection, you may need to\r\n                                    provide a declaration or some other documentation to the water\r\n                                    authority or utility company. The specific requirements may\r\n                                    vary depending on your location and the regulations of the\r\n                                    water provider.\r\n                                </p>\r\n                                <p class=\"md:text-base leading-relaxed text-gray-500 text-xs\">\r\n                                    Typically, you may need to provide information about the\r\n                                    property where you want the water connection, including the\r\n                                    address, the type of property (residential or commercial), and\r\n                                    the number of occupants or users. You may also need to provide\r\n                                    proof of ownership or tenancy, such as a copy of your lease or\r\n                                    property deed.\r\n                                </p>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"block md:flex justify-center space-x-4\">\r\n                                <div className=\"font-semibold text-center\">Please Select Your ULB</div>\r\n\r\n                                <div className=\"md:w-1/2 w-auto mr-5\">\r\n                                    <Select\r\n                                        defaultValue={selectedOption}\r\n                                        onChange={setSelectedOption}\r\n                                        getOptionLabel={option => option.ulb_name}\r\n                                        getOptionValue={option => option.id}\r\n                                        options={ulbList}\r\n                                        isClearable={true}\r\n                                        isLoading={!ulbList}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-center\">\r\n                                {selectedOption && selectedOption?.id != \"\" ? (\r\n                                    <p>\r\n                                        You are applying for\r\n                                        <span className=\"text-indigo-500 mx-2\">\r\n                                            {selectedOption?.ulb_name}\r\n                                        </span>{\" \"}\r\n                                    </p>\r\n                                ) : (\r\n                                    <p className=\"text-red-500 py-2 mx-2\"> Please Select Your ULB</p>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div class=\"flex flex-row-reverse items-center p-6 border-t border-gray-200 rounded-b\">\r\n                                <button\r\n                                    onClick={handleUlb}\r\n                                    disabled={!selectedOption?.id}\r\n                                    class=\"mx-2 text-white disabled:bg-gray-500 disabled:scale-100 bg-indigo-700 hover:bg-indigo-800 focus:ring-4 focus:outline-none focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center darks:bg-indigo-600 darks:hover:bg-indigo-700 darks:focus:ring-indigo-800\"\r\n                                >\r\n                                    START\r\n                                </button>\r\n                                <button\r\n                                    onClick={closeModal}\r\n                                    class=\"mx-2 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 rounded-lg border border-red-200 text-sm font-medium px-5 py-2.5 focus:z-10 \"\r\n                                >\r\n                                    CANCEL\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AdvtUlbSelectComponent"],"names":["props","_jsx","_Fragment","children","className","concat","show","RotatingLines","visible","strokeColor","strokeWidth","animationDuration","width","tittleStyle","labelStyle","divStyle","_jsxs","xmlns","fill","viewBox","stroke","class","d","src","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","Modal","_useState","useState","open","_useState2","_slicedToArray","modalIsOpen","setIsOpen","_useState3","_useState4","ulbList","setUlbList","_useState5","_useState6","selectedOption","setSelectedOption","api_getAllUlb","CitizenApplyApiList","notify","useContext","contextVar","navigate","useNavigate","closeModal","useEffect","openUlbModal","axios","then","res","console","log","data","catch","err","isOpen","onAfterOpen","onRequestClose","style","contentLabel","onClick","Select","defaultValue","onChange","getOptionLabel","option","ulb_name","getOptionValue","id","options","isClearable","isLoading","setUlbValues","disabled"],"sourceRoot":""}