{"version":3,"file":"static/js/6822.a888e9ee.chunk.js","mappings":"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","sources":["Components/ApiList/ObjectionAssessmentApi.js","Pages/Contents/ObjectionEntryForm/ObjectionFloorTable.js","Pages/Contents/ObjectionEntryForm/ObjectionFloor.js","Pages/Contents/ObjectionEntryForm/ObjectionEntryForm.js","Pages/Contents/ObjectionEntryForm/ObjectionFormIndex.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionAssessmentApi\r\n// Description : Objection Assessment Error api list\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport BackendUrl from './BackendUrl'\r\n\r\nconst ObjectionAssessmentApi = () => {\r\n\r\n    const baseUrl = BackendUrl\r\n  \r\n    let apiLinks = {\r\n        \r\n                // to get id and type\r\n                getType : `${baseUrl}/api/property/objection/objection-type`,\r\n\r\n                // getAssessment : `${baseUrl}/assesment-details`,\r\n                getAssessment : `${baseUrl}/api/property/saf/get-prop-byholding`,\r\n                postClericalData : `${baseUrl}/api/property/objection/rectification`,\r\n                postAssessment : `${baseUrl}/api/property/objection/apply-objection`,\r\n        \r\n                // for list \r\n                getWardList: `${baseUrl}/api/property/saf/master-saf`,\r\n\r\n    }\r\n  \r\n    return apiLinks;\r\n\r\n}\r\n\r\nexport default ObjectionAssessmentApi\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\n// Export to : ObjectionRectification.js, ObjectionRectificationTable.js\r\n//////////////////////////////////////////////////////////////////////////","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport apiLinks from \"../../../Components/ApiList/ObjectionAssessmentApi\";\r\nimport axios from \"axios\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport './assets/fonts/Font.css'\r\n\r\nconst ObjectionFloorTable = (props) => {\r\n  const { usageTypeList, constructionTypeList, occupancyTypeList, getWardList } = apiLinks();\r\n\r\n  const [loader, setloader] = useState(false);\r\n  const [usageList, setusageList] = useState();\r\n  const [occupancyList, setoccupancyList] = useState();\r\n  const [constructionList, setconstructionList] = useState();\r\n  const [refresh, setrefresh] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setrefresh(refresh + 1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"working.......\");\r\n    setloader(true);\r\n    // getting usage type list\r\n    axios\r\n      .get(getWardList, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"usage type list => \", res);\r\n        setusageList(res?.data?.data?.usage_type);\r\n        setoccupancyList(res?.data?.data?.occupancy_type)\r\n        setconstructionList(res?.data?.data?.construction_type)\r\n        setloader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"usage type error => \", err);\r\n        setloader(false);\r\n      });\r\n  }, [refresh]);\r\n\r\n  // useEffect(() => {\r\n  //   setloader(true);\r\n  //   //  getting occupancy type list\r\n  //   axios\r\n  //     .get(occupancyTypeList, ApiHeader())\r\n  //     .then((res) => {\r\n  //       console.log(\"occupancy type list => \", res);\r\n  //       setoccupancyList(res?.data);\r\n  //       setloader(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"occupancy type error => \", err);\r\n  //       setloader(false);\r\n  //     });\r\n  // }, [refresh]);\r\n\r\n  // useEffect(() => {\r\n  //   setloader(true);\r\n  //   //  getting construction type list\r\n  //   axios\r\n  //     .get(constructionTypeList, ApiHeader())\r\n  //     .then((res) => {\r\n  //       console.log(\"construction type list => \", res);\r\n  //       setconstructionList(res?.data);\r\n  //       setloader(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"construction type error => \", err);\r\n  //       setloader(false);\r\n  //     });\r\n  // }, [refresh]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      propFloorId : props?.floor?.id,\r\n      floorNo: props?.floor?.floor_mstr_id,\r\n      usageType: props?.floor?.usage_type_mstr_id,\r\n      occupancyType:  props?.floor?.occupancy_type_mstr_id,\r\n      constructionType:  props?.floor?.const_type_mstr_id,\r\n      buildupArea:  props?.floor?.builtup_area,\r\n      // dateFrom: props?.floor?.date_from,\r\n      // dateUpto: props?.floor?.date_upto,\r\n    },\r\n\r\n    enableReinitialize: true,\r\n    \r\n    onSubmit: (values) => {\r\n      console.log(\"floor values => \", values);\r\n      props.getfloor(values);\r\n      // props.updation()\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n     {loader && (\r\n        <div className=\"w-full z-10 absolute mx-auto text-center flex justify-center items-center top-1/2\">\r\n          <span className=\"inline\">\r\n            <ColorRing\r\n              visible={true}\r\n              height=\"120\"\r\n              width=\"120\"\r\n              ariaLabel=\"blocks-loading\"\r\n              wrapperStyle={{}}\r\n              wrapperClass=\"blocks-wrapper\"\r\n              colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\r\n            />\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      <tr className=\"bg-white shadow-lg border-b border-gray-200 poppins\">\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.floor_name}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.usage_type}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.occupancy_type}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">\r\n          {props?.floor?.construction_type}\r\n        </td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.builtup_area}</td>\r\n        {/* <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.date_from}</td>\r\n        <td className=\"px-2 py-2 text-left 2xl:text-sm text-xs poppins\">{props?.floor?.date_upto}</td> */}\r\n      </tr>\r\n      <tr className=\"bg-white shadow-md  border-b border-gray-200 border-b border-gray-500 poppins\">\r\n        <td className=\"px-2 py-2 text-left font-semibold 2xl:text-sm text-xs poppins\">{props?.floor?.floor_name}</td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <select\r\n            {...formik.getFieldProps(\"usageType\")}\r\n            value={formik.values.usageType}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          >\r\n            <option selected disabled value=\"\">\r\n              --select--\r\n            </option>\r\n            {usageList?.map((elem) => (\r\n              <>\r\n                <option value={elem?.id}>{elem?.usage_type}</option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <select\r\n            {...formik.getFieldProps(\"occupancyType\")}\r\n            value={formik.values.occupancyType}\r\n            className=\"div-control block w-full px-3 py-1.5  2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          >\r\n            <option selected disabled value=\"\">\r\n              --select--\r\n            </option>\r\n            {occupancyList?.map((elem) => (\r\n              <>\r\n                <option value={elem?.id}>{elem?.occupancy_type}</option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <select\r\n            {...formik.getFieldProps(\"constructionType\")}\r\n            value={formik.values.constructionType}\r\n            className=\"div-control block w-full px-3 py-1.5  2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          >\r\n            <option selected disabled value=\"\">\r\n              --select--\r\n            </option>\r\n            {constructionList?.map((elem) => (\r\n              <>\r\n                <option value={elem?.id}>{elem?.construction_type}</option>\r\n              </>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <input\r\n            type=\"number\"\r\n            {...formik.getFieldProps(\"buildupArea\")}\r\n            value={formik.values.buildupArea}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          />\r\n        </td>\r\n        {/* <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <input\r\n            type=\"date\"\r\n            {...formik.getFieldProps(\"dateFrom\")}\r\n            value={formik.values.dateFrom}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          />\r\n        </td>\r\n        <td className=\"px-2 py-2 2xl:text-sm text-xs poppins text-left\">\r\n          <input\r\n            type=\"date\"\r\n            {...formik.getFieldProps(\"dateUpto\")}\r\n            value={formik.values.dateUpto}\r\n            className=\"div-control block w-full px-3 py-1.5 2xl:text-sm text-xs poppins font-semibold text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md\"\r\n          />\r\n        </td> */}\r\n        <td>\r\n          <button\r\n            onClick={formik.handleSubmit}\r\n            type=\"submit\"\r\n            className=\"bg-blue-200 hover:bg-blue-300 rounded-md shadow-md px-3 py-1.5\"\r\n          >\r\n            Post\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr> <td colSpan={8}>&nbsp;</td></tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectionFloorTable;\r\n","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentDate } from \"../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport ObjectionFloorTable from \"./ObjectionFloorTable\";\r\nimport './assets/fonts/Font.css'\r\n\r\nconst ObjectionFloor = (props) => {\r\n  const [floorData, setfloorData] = useState();\r\n  const [floorList, setfloorList] = useState([]);\r\n  const [update, setupdate] = useState(true)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      floorNo: \"\",\r\n      usageType: \"\",\r\n      occupancyType: \"\",\r\n      constructionType: \"\",\r\n      buildupArea: \"\",\r\n      // dateFrom: \"\",\r\n      // dateUpto: getCurrentDate(),\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      console.log(\"floor values => \", values);\r\n    },\r\n  });\r\n\r\n  const getfloor = (datas) => {\r\n    console.log(\"incoming datas => \", datas);\r\n    floorList?.map((elem) => {\r\n      if (elem?.propFloorId == datas?.propFloorId) {\r\n\r\n        return setupdate(false)\r\n      }\r\n    }\r\n\r\n    )\r\n\r\n    { update && console.log(\"===================found==================\", update) }\r\n\r\n    let tempFloorList = [...floorList, datas];\r\n    setfloorList([...floorList, datas]);\r\n    props?.getFloorData(tempFloorList);\r\n    toast.info(\"Posted...\");\r\n    console.log(\r\n      \"temp floor data => \",\r\n      tempFloorList,\r\n      \"\\n floor list data => \",\r\n      floorList\r\n    );\r\n  };\r\n\r\n  console.log(\"update boolean => \", update)\r\n\r\n  // console.log(\"props floor => \", props?.floor)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"col-span-4 overflow-x-auto\"\r\n        onChange={formik.handleChange}\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        <table className=\"min-w-full leading-normal\">\r\n          <thead className=\"font-semibold text-left 2xl:text-sm text-xs poppins bg-sky-50\">\r\n            <tr className=\"px-2 py-3 border-b border-gray-200 text-gray-800  text-left text-xs uppercase text-left\">\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Floor No.\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Usage Type\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Occupancy Type\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Construction Type\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                Built Up Area\r\n                <small className=\"block mt-1 text-xs text-gray-600 inline \">\r\n                  <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  (in Sq. Ft)\r\n                </small>\r\n              </th>\r\n              {/* <th className=\"py-2 px-2 poppins\">\r\n                <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                  *\r\n                </small>\r\n                From Date\r\n              </th>\r\n              <th className=\"py-2 px-2 poppins\">\r\n                Upto Date\r\n                <small className=\"block mt-1 text-xs text-gray-700 inline poppins font-normal\">\r\n                  (Leave blank for current date)\r\n                </small>\r\n              </th> */}\r\n              <th className=\"py-2 px-2 poppins\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-xs\">\r\n            {props?.floor?.length < 1 && <tr><td colSpan={8}><div className=\"italic bg-red-200 px-4 py-2 text-center\">No Floor List Found !!</div></td></tr>}\r\n            {props?.floor?.map((floor) => (\r\n              <>\r\n                <ObjectionFloorTable floor={floor} getfloor={getfloor} />\r\n              </>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ObjectionFloor;\r\n","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { RiBuilding2Fill } from \"react-icons/ri\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport { allowFloatInput, nullToNA } from \"../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport axios from \"axios\";\r\nimport { GiFlatHammer } from \"react-icons/gi\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport apiLinks from \"../../../Components/ApiList/ObjectionAssessmentApi\";\r\nimport ObjectionFloor from \"./ObjectionFloor\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport BarLoader from \"../../../Components/Common/BarLoader\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport EmptyDetailsIllustration from './EmptyDetailsIllustration'\r\nimport ApiHeader2 from \"../../../Components/ApiList/ApiHeader2\";\r\nimport { FcDepartment } from 'react-icons/fc'\r\nimport BottomErrorCard from \"../../../Components/BottomErrorCard\";\r\n\r\nfunction ObjectionEntryForm(props) {\r\n  const {\r\n    getAssessment,\r\n    postAssessment,\r\n    getType,\r\n    getWardList\r\n  } = apiLinks();\r\n\r\n  const id = props?.id\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [loader, setloader] = useState(false);\r\n  const [evidenceDoc, setevidenceDoc] = useState('');\r\n  const [refresh, setrefresh] = useState(0);\r\n  const [formDoc, setformDoc] = useState('');\r\n  const [propertyList, setpropertyList] = useState();\r\n  const [roadList, setroadList] = useState();\r\n  const [allfloor, setallfloor] = useState();\r\n  const [floor, setfloor] = useState();\r\n  const [tempData, settempData] = useState();\r\n  const [harvestingStatus, setHarvestingStatus] = useState(false);\r\n  const [roadWidthStatus, setroadWidthStatus] = useState(false);\r\n  const [propertyTypeStatus, setpropertyTypeStatus] = useState(false);\r\n  const [plotAreaStatus, setplotAreaStatus] = useState(false);\r\n  const [mobileTowerStatus, setmobileTowerStatus] = useState(false);\r\n  const [hoardingStatus, sethoardingStatus] = useState(false);\r\n  const [floorStatus, setfloorStatus] = useState(false);\r\n  const [status, setstatus] = useState(true)\r\n  const [erroState, seterroState] = useState(false);\r\n  const [erroMessage, seterroMessage] = useState(null);\r\n\r\n\r\n  const validationSchema = yup.object({\r\n    harvestingToggleStatus: yup.boolean(),\r\n    roadWidthToggleStatus: yup.boolean(),\r\n    propertyTypeToggleStatus: yup.boolean(),\r\n    plotAreaToggleStatus: yup.boolean(),\r\n    mobileTowerToggleStatus: yup.boolean(),\r\n    hoardingToggleStatus: yup.boolean(),\r\n    floorToggleStatus: yup.boolean(),\r\n\r\n    isWaterHarvesting: yup.string().when(\"harvestingToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    roadType: yup.string().when(\"roadWidthToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    propertyType: yup.string().when(\"propertyTypeToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    areaOfPlot: yup.string().when(\"plotAreaToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    isMobileTower: yup.string().when(\"mobileTowerToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    isHoarding: yup.string().when(\"hoardingToggleStatus\", {\r\n      is: true,\r\n      then: yup.string().required(\"Field is required\"),\r\n    }),\r\n    // objEvidenceDoc : yup.mixed().required(\"Evidence document is required\")\r\n\r\n    // isWaterHarvesting: yup.string().required('Enter ACC no'),\r\n    // roadType: yup.string().required('Enter ACC no'),\r\n    // propertyType: yup.string().required('Enter bind/book no.'),\r\n    // areaOfPlot: yup.string().required('Enter building plan approval no.'),\r\n    // isMobileTower: yup.string().required('Select building plan approval date'),\r\n    // isHoarding: yup.string().required('Enter water consumer no.'),\r\n\r\n    // objFormDoc: yup.mixed().required('Enter water consumer no.'),\r\n    // objEvidenceDoc: yup.mixed().required('Enter water consumer no.'),\r\n    // objRemarks: yup.string().required(\"Enter water consumer no.\"),\r\n  });\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      harvestingToggleStatus: false,\r\n      roadWidthToggleStatus: false,\r\n      propertyTypeToggleStatus: false,\r\n      plotAreaToggleStatus: false,\r\n      mobileTowerToggleStatus: false,\r\n      hoardingToggleStatus: false,\r\n      floorToggleStatus: false,\r\n\r\n      propId: id,\r\n      isWaterHarvesting: tempData?.is_water_harvesting ? 1 : 0,\r\n      roadType: tempData?.road_type_mstr_id,\r\n      propertyType: tempData?.prop_type_mstr_id,\r\n      areaOfPlot: tempData?.area_of_plot,\r\n      isMobileTower: tempData?.is_mobile_tower ? 1 : 0,\r\n      mobileArea: tempData?.tower_area,\r\n      mobileDate: tempData?.tower_installation_date,\r\n      isHoarding: tempData?.is_hoarding_board ? 1 : 0,\r\n      hoardingArea: tempData?.hoarding_area,\r\n      hoardingDate: tempData?.hoarding_installation_date,\r\n\r\n      objFormDoc: \"\",\r\n      objEvidenceDoc: \"\",\r\n      objRemarks: \"\",\r\n      floor: [],\r\n    },\r\n\r\n    // enableReinitialize: true,\r\n\r\n    onSubmit: (values) => {\r\n      console.log(\"electricity \", values);\r\n      // formik.setFieldValue('floor', allfloor)\r\n      submitFun(values);\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const handleChangeImage = (e) => {\r\n    if (e.target.name == \"objFormDoc\") {\r\n      let file = e.target.files[0];\r\n      setformDoc(e.target.files[0]);\r\n      console.log(\"--1-- objFormDoc file on change..\", file);\r\n    } else if (e.target.name == \"objEvidenceDoc\") {\r\n      let file = e.target.files[0];\r\n      setevidenceDoc(e.target.files[0]);\r\n      console.log(\"--3-- objEvidenceDoc file on change..\", file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Entering getting details function............\", id);\r\n    setloader(true);\r\n    setTimeout(() => {\r\n      setloader(false)\r\n    }, 10000);\r\n    axios\r\n      .post(getAssessment, { \"propertyId\": id }, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"get assessment details => \", res);\r\n        settempData(res?.data?.data);\r\n        setfloor(res?.data?.data?.floors);\r\n        setrefresh(refresh + 1);\r\n        setloader(false);\r\n        setstatus(res?.data?.status)\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error getting assessment details => \", err);\r\n        toast(\"Something went wrong !!\");\r\n        setloader(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // getting ward List \r\n    // =========================================\r\n    axios.get(getWardList, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"getting ward list => \", res)\r\n        setpropertyList(res?.data?.data?.property_type)\r\n        setroadList(res?.data?.data?.road_type);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"getting ward list error => \", err)\r\n      })\r\n  }, [refresh]);\r\n\r\n  // useEffect(() => {\r\n  //   //  getting road type list\r\n  //   setloader(true);\r\n  //   axios\r\n  //     .get(roadTypeList, ApiHeader())\r\n  //     .then((res) => {\r\n  //       console.log(\"road type list => \", res);\r\n  //       setroadList(res?.data?.data);\r\n  //       setloader(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"road type error => \", err);\r\n  //       setloader(false);\r\n  //     });\r\n  // }, [refresh]);\r\n\r\n  const getFloorData = (data) => {\r\n    console.log(\"all floor data => \", data);\r\n    setallfloor(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formik.setFieldValue(\"floor\", allfloor);\r\n  }, [allfloor]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(getType, ApiHeader())\r\n      .then((res) => {\r\n        console.log(\"getting type and id => \", res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error getting type and id => \", err);\r\n      });\r\n  }, []);\r\n\r\n  const submitFun = (values) => {\r\n    // console.log(\"Entering submit function with values => \", values)\r\n\r\n    // let assessData = [\r\n    //   harvestingStatus && {\r\n    //     id: 2,\r\n    //     value: values?.isWaterHarvesting,\r\n    //   },\r\n    //  roadWidthStatus && {\r\n    //     id: 3,\r\n    //     value: values?.roadType,\r\n    //   },\r\n    //  propertyTypeStatus && {\r\n    //     id: 4,\r\n    //     value: values?.propertyType,\r\n    //   },\r\n    //   plotAreaStatus &&{\r\n    //     id: 5,\r\n    //     value: values?.areaOfPlot,\r\n    //   },\r\n    //   // {\r\n    //   //   id: 6,\r\n    //   //   value: values?.isMobileTower,\r\n    //   //   area: values?.mobileArea,\r\n    //   //   date: values?.mobileDate\r\n    //   // },\r\n    //   // {\r\n    //   //   id: 7,\r\n    //   //   value: values?.isHoarding,\r\n    //   //   area: values?.hoardingArea,\r\n    //   //   date: values?.hoardingDate\r\n    //   // },\r\n    // ]\r\n\r\n    let assessData = []\r\n\r\n    if (harvestingStatus) {\r\n      assessData.push({\r\n        id: 2,\r\n        value: values?.isWaterHarvesting,\r\n      });\r\n    }\r\n\r\n    if (roadWidthStatus) {\r\n      assessData.push({\r\n        id: 3,\r\n        value: values?.roadType,\r\n      });\r\n    }\r\n\r\n    if (propertyTypeStatus) {\r\n      assessData.push({\r\n        id: 4,\r\n        value: values?.propertyType,\r\n      });\r\n    }\r\n\r\n    if (plotAreaStatus) {\r\n      assessData.push({\r\n        id: 5,\r\n        value: values?.areaOfPlot,\r\n      });\r\n    }\r\n\r\n    if (assessData?.length == 0 && !floorStatus) {\r\n      props?.toastFun('You have not selected any type for objection !!!', 'info')\r\n      return\r\n    }\r\n\r\n    setloader(true);\r\n\r\n\r\n    let requestBody = {\r\n      objectionFor: \"Assessment Error\",\r\n      propId: id,\r\n\r\n      assessmentData: [\r\n        {\r\n          id: 2,\r\n          value: values?.isWaterHarvesting,\r\n        },\r\n        {\r\n          id: 3,\r\n          value: values?.roadType,\r\n        },\r\n        {\r\n          id: 4,\r\n          value: values?.propertyType,\r\n        },\r\n        {\r\n          id: 5,\r\n          value: values?.areaOfPlot,\r\n        },\r\n        {\r\n          id: 6,\r\n          value: values?.isMobileTower,\r\n        },\r\n        {\r\n          id: 7,\r\n          value: values?.isHoarding,\r\n        },\r\n      ],\r\n\r\n      floorData: allfloor,\r\n\r\n    };\r\n\r\n    setTimeout(() => {\r\n      setloader(false)\r\n    }, 10000);\r\n\r\n    let fd = new FormData();\r\n    fd.append(\"propId\", id);\r\n    fd.append(\"ulbId\", tempData?.ulb_id)\r\n    fd.append(\"objectionFor\", \"Assessment Error\");\r\n    assessData?.length > 0 && fd.append(\"assessmentData\", JSON.stringify(assessData));\r\n    floorStatus && fd.append(\"floorData\", JSON.stringify(allfloor));\r\n    evidenceDoc != '' && fd.append(\"objEvidenceDoc\", evidenceDoc);\r\n\r\n    console.log(\"before send data => \", fd);\r\n\r\n    axios\r\n      .post(postAssessment, fd, ApiHeader2())\r\n      .then((res) => {\r\n        if (res?.data?.status == true) {\r\n          console.log(\"Submitted assessment => \", res);\r\n          toast.success(\"Assessment Objection Applied Successfully...\");\r\n          props.submitForm(res?.data?.data);\r\n        } else {\r\n          activateBottomErrorCard(true, 'Error occurred in submitting objection application. Please try again later.')\r\n        }\r\n        setloader(false)\r\n      })\r\n      .catch((err) => {\r\n        activateBottomErrorCard(true, 'Error occurred in submitting objection application. Please try again later.')\r\n        setloader(false)\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let checkValue = e.target.checked;\r\n    let value = e.target.value;\r\n    console.log(\"switched is clicked \", e.target.name);\r\n\r\n    //toggling the visibility of specific objection sections\r\n    {\r\n      name === \"harvestingToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setHarvestingStatus(true)\r\n          : setHarvestingStatus(false));\r\n    }\r\n    {\r\n      name === \"roadWidthToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setroadWidthStatus(true)\r\n          : setroadWidthStatus(false));\r\n    }\r\n    {\r\n      name === \"propertyTypeToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setpropertyTypeStatus(true)\r\n          : setpropertyTypeStatus(false));\r\n    }\r\n    {\r\n      name === \"plotAreaToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setplotAreaStatus(true)\r\n          : setplotAreaStatus(false));\r\n    }\r\n    {\r\n      name === \"floorToggleStatus\" &&\r\n        (checkValue === true ? setfloorStatus(true) : setfloorStatus(false));\r\n    }\r\n    {\r\n      name === \"hoardingToggleStatus\" &&\r\n        (checkValue === true\r\n          ? sethoardingStatus(true)\r\n          : sethoardingStatus(false));\r\n    }\r\n    {\r\n      name === \"mobileTowerToggleStatus\" &&\r\n        (checkValue === true\r\n          ? setmobileTowerStatus(true)\r\n          : setmobileTowerStatus(false));\r\n    }\r\n\r\n    //input restrict validation\r\n    {\r\n      name == \"builtupArea\" &&\r\n        formik.setFieldValue(\r\n          \"builtupArea\",\r\n          allowFloatInput(value, formik.values.builtupArea, 20)\r\n        );\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    props.closePopUp();\r\n  }\r\n\r\n  const activateBottomErrorCard = (state, msg) => {\r\n    seterroMessage(msg)\r\n    seterroState(state)\r\n\r\n  }\r\n  return (\r\n    <>\r\n      {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n      {/* <ToastContainer position=\"top-right\" autoClose={2000} /> */}\r\n\r\n      {/* <h1 className='mt-6 mb-2 font-serif font-semibold  text-gray-800'><GiFlatHammer className=\"inline mr-2\" />Assessment Error</h1> */}\r\n\r\n      {/* <h1 className=\"mt-6 mb-2 font-serif font-semibold  text-gray-600\">\r\n        <RiBuilding2Fill className=\"inline mr-2\" />\r\n        Assessment Objection\r\n      </h1> */}\r\n\r\n      {/* <div className=\"flex flex-row md:justify-evenly items-center space-x-2 px-4 w-full md:w-max uppercase text-xs poppins 2xl:text-base poppins mb-4 bg-white shadow-md py-2 rounded-md\">\r\n            <span className=\"font-extrabold text-[25px] text-gray-800\"><RiBuilding2Fill/></span>\r\n            <span className=\"font-semibold poppins text-xl\">Assessment Objection</span>\r\n      </div> */}\r\n\r\n      <div className=\"2xl:mt-6 mt-3 bg-indigo-500 text-white flex flex-row md:justify-evenly items-center justify-center uppercase text-xs poppins 2xl:text-base poppins mb-4 shadow-md py-2 rounded-md\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"font-extrabold text-[30px]\">\r\n            <FcDepartment />\r\n          </span>\r\n          <span className=\"font-semibold poppins 2xl:text-xl text-lg\">\r\n            Assessment Objection\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poppins my-2 2xl:font-base text-sm poppins\">\r\n        Under Section 167 of the Jharkhand Municipal Act 2011, citizen can file the following objections in this objection form.\r\n      </div>\r\n\r\n      {loader && <BarLoader />}\r\n\r\n      {(status && !loader) &&\r\n        <div className=\" px-4 w-full md:py-6 rounded-lg shadow-lg bg-white mt-6 \">\r\n          <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 h-max\">\r\n              <FormGroup className=\"col-span-4 grid grid-cols-4 h-max\">\r\n                {/* harvesting objection content */}\r\n                <div className=\"col-span-4 grid grid-cols-4 gap-2\">\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Rain Water Harvesting\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={harvestingStatus}\r\n                            // name=\"harvestingSwitch\"\r\n                            // onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"harvestingToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${harvestingStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:2xl:text-sm text-xs poppins text-xs poppins font-semibold\">\r\n                        Objection On: Rainwater Harvesting\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {tempData?.is_water_harvesting ? <>Yes</> : <>No</>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <select\r\n                        {...formik.getFieldProps(\"isWaterHarvesting\")}\r\n                        value={formik.values.isWaterHarvesting}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      >\r\n                        <option value=\"0\" >\r\n                          No\r\n                        </option>\r\n                        <option value=\"1\">Yes</option>\r\n                      </select>\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.isWaterHarvesting &&\r\n                          formik.errors.isWaterHarvesting\r\n                          ? formik.errors.isWaterHarvesting\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* roadWidth objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Road Width\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={roadWidthStatus}\r\n                            // name=\"roadWidthSwitch\"\r\n                            // onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"roadWidthToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${roadWidthStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Road Width (in sq.ft.)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {nullToNA(tempData?.road_type)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <select\r\n                        {...formik.getFieldProps(\"roadType\")}\r\n                        value={formik.values.roadType}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          --select--\r\n                        </option>\r\n                        {roadList?.map((elem) => (\r\n                          <>\r\n                            <option value={elem?.id}>{elem?.road_type}</option>\r\n                          </>\r\n                        ))}\r\n                      </select>\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.roadType && formik.errors.roadType\r\n                          ? formik.errors.roadType\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* propertyType objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Property Type\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={propertyTypeStatus}\r\n                            // name=\"propertyTypeSwitch\"\r\n                            // onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"propertyTypeToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${propertyTypeStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Property Type\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {nullToNA(tempData?.property_type)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <select\r\n                        {...formik.getFieldProps(\"propertyType\")}\r\n                        value={formik.values.propertyType}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          --select--\r\n                        </option>\r\n                        {propertyList?.map((elem) => (\r\n                          <>\r\n                            <option value={elem?.id}>{elem?.property_type}</option>\r\n                          </>\r\n                        ))}\r\n                      </select>\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.propertyType && formik.errors.propertyType\r\n                          ? formik.errors.propertyType\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* area of plot objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Area of Plot\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={plotAreaStatus} name=\"areaPlotSwitch\"\r\n                            //     onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"plotAreaToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-4 ${plotAreaStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Area of plot (in sq.ft.)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        As Per Assessment\r\n                      </label>\r\n                      <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                        {nullToNA(tempData?.area_of_plot)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                        <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        As Per Applicant\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"areaOfPlot\")}\r\n                        type=\"number\"\r\n                        value={formik.values.areaOfPlot}\r\n                        className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.areaOfPlot && formik.errors.areaOfPlot\r\n                          ? formik.errors.areaOfPlot\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-span-4 grid grid-cols-4\">\r\n                  mobile tower objection content\r\n                  <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                    <label className=\" text-gray-800 pr-2\">\r\n                      \r\n                      <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Mobile Tower\r\n                      </span>\r\n                    </label>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={mobileTowerStatus} name=\"mobileTowerSwitch\"\r\n                              onChange={switchHandleChange}\r\n                          {...formik.getFieldProps(\"mobileTowerToggleStatus\")}\r\n                          inputProps={{ \"aria-label\": \"controlled\" }}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </div>\r\n                </div> */}\r\n\r\n                  {/* <div\r\n                  className={`col-span-4 ${\r\n                    mobileTowerStatus ? \"grid\" : \"hidden\"\r\n                  } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                >\r\n                  <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                      Objection On: Mobile Tower\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      As Per Assessment\r\n                    </label>\r\n                    <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                      {tempData?.is_mobile_tower ? <>Yes</> : <>No</>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      As Per Applicant\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"isMobileTower\")}\r\n                      value={formik.values.isMobileTower}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    >\r\n                      <option value=\"0\" >\r\n                        No\r\n                      </option>\r\n                      <option value=\"1\">Yes</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {\r\n                    formik.values.isMobileTower == 1 && <>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Total Area Covered\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"mobileArea\")}\r\n                      type=\"number\"\r\n                      value={formik.values.mobileArea}\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Date of Installation\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"mobileDate\")}\r\n                      value={formik.values.mobileDate}\r\n                      type=\"date\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                    </>\r\n                  }\r\n\r\n                </div> */}\r\n                  {/* hoarding objection content */}\r\n                  {/* <div className=\"col-span-4 grid grid-cols-4\">\r\n                  <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                    <label className=\" text-gray-800 pr-2\">\r\n                      \r\n                      <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Hoarding Board\r\n                      </span>\r\n                    </label>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          // checked={hoardingStatus} name=\"hoardingSwitch\"\r\n                          //     onChange={switchHandleChange}\r\n                          {...formik.getFieldProps(\"hoardingToggleStatus\")}\r\n                          inputProps={{ \"aria-label\": \"controlled\" }}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </div>\r\n\r\n                </div> */}\r\n\r\n                  {/* <div\r\n                  className={`col-span-4 ${\r\n                    hoardingStatus ? \"grid\" : \"hidden\"\r\n                  } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                >\r\n                  <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                      Objection On: Hording Board\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      As Per Assessment\r\n                    </label>\r\n                    <div className=\"font-serif 2xl text-xs poppins:2xl:text-base text-sm poppins font-semibold\">\r\n                      {tempData?.is_hoarding_board ? <>Yes</> : <>No</>}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      As Per Applicant\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"isHoarding\")}\r\n                      value={formik.values.isHoarding}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    >\r\n                      <option value=\"0\" >\r\n                        No\r\n                      </option>\r\n                      <option value=\"1\">Yes</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isHoarding && formik.errors.isHoarding\r\n                        ? formik.errors.isHoarding\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  {\r\n                    formik.values.isHoarding == 1 && <>\r\n                    <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Total Area Covered\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"hoardingArea\")}\r\n                      value={formik.values.hoardingArea}\r\n                      type=\"number\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                      <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Date of Installation\r\n                    </label>\r\n                    <input\r\n                      {...formik.getFieldProps(\"hoardingDate\")}\r\n                      value={formik.values.hoardingDate}\r\n                      type=\"date\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-xs poppins 2xl:text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                    />\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.isMobileTower &&\r\n                      formik.errors.isMobileTower\r\n                        ? formik.errors.isMobileTower\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                    </>\r\n                  }\r\n                </div> */}\r\n                  {/* floor objection content */}\r\n                  <div className=\"col-span-4 grid grid-cols-4\">\r\n                    <div className=\"col-span-4 md:col-span-1  mb-2 px-2 md:px-4 bg-gray-100 shadow-md border border-gray-300\">\r\n                      <label className=\" text-gray-800 pr-2\">\r\n\r\n                        <span className=\"inline text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                          Floor Detail\r\n                        </span>\r\n                      </label>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            // checked={floorStatus} name=\"floorSwitch\"\r\n                            //     onChange={switchHandleChange}\r\n                            {...formik.getFieldProps(\"floorToggleStatus\")}\r\n                            inputProps={{ \"aria-label\": \"controlled\" }}\r\n                          />\r\n                        }\r\n                        label=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`col-span-4 ${floorStatus ? \"grid\" : \"hidden\"\r\n                      } grid-cols-1 md:grid-cols-4  mt-2`}\r\n                  >\r\n                    <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-red-100 shadow-md\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold\">\r\n                        Objection On: Floor Details\r\n                      </label>\r\n                    </div>\r\n\r\n                    <ObjectionFloor floor={floor} getFloorData={getFloorData} />\r\n                  </div>\r\n                </div>\r\n              </FormGroup>\r\n\r\n              {/* ==========Documents=============== */}\r\n              <div\r\n                className={`col-span-4 grid grid-cols-1 md:grid-cols-4 h-max mt-10 border`}\r\n              >\r\n                <div className=\"form-group col-span-4 mb-6 px-2 md:px-4 bg-green-100 shadow-md\">\r\n                  <label className=\"form-label inline-block mb-1 text-gray-700 2xl:text-sm text-xs poppins font-semibold poppins\">\r\n                    Documents\r\n                  </label>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group mb-6 col-span-4 md:col-span-1 px-2 md:px-4\" onChange={formik.handleChange}>\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 2xl:text-sm text-xs poppins font-semibold\">\r\n                  <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  Objection Form\r\n                </label>\r\n                <input\r\n                  {...formik.getFieldProps(\"objFormDoc\")}\r\n                  type=\"file\"\r\n                  onChange={handleChangeImage}\r\n                  accept=\".pdf,.jpg,.jpeg\"\r\n                  className=\"form-control block w-full px-3 py-1 text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                />\r\n                <span className=\"text-red-600 absolute text-xs\">\r\n                  {formik.touched.objFormDoc && formik.errors.objFormDoc\r\n                    ? formik.errors.objFormDoc\r\n                    : null}\r\n                </span>\r\n              </div> */}\r\n\r\n                <div className=\"form-group mb-6 col-span-4 md:col-span-1 md:px-4\" onChange={formik.handleChange}>\r\n                  <label className=\"form-label inline-block mb-1 text-gray-600 2xl:2xl:text-sm text-xs poppins text-xs font-semibold poppins\">\r\n                    <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                      *\r\n                    </small>\r\n                    Evidence Document\r\n                  </label>\r\n                  <input\r\n                    {...formik.getFieldProps(\"objEvidenceDoc\")}\r\n                    onChange={handleChangeImage}\r\n                    accept=\".pdf,.jpg,.jpeg\"\r\n                    type=\"file\"\r\n                    className=\"form-control block w-full px-3 py-1 text-xs poppins font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                  />\r\n                  <span className=\"text-red-600 absolute text-xs\">\r\n                    {formik.touched.objEvidenceDoc && formik.errors.objEvidenceDoc\r\n                      ? formik.errors.objEvidenceDoc\r\n                      : null}\r\n                  </span>\r\n                </div>\r\n                {/* <div className=\"form-group mb-6 col-span-4 md:col-span-4 md:px-4\">\r\n                <label className=\"form-label inline-block mb-1 text-gray-600 2xl:2xl:text-sm text-xs poppins text-xs font-semibold poppins\">\r\n                  <small className=\"block mt-1 2xl:text-sm text-xs poppins font-semibold text-red-600 inline \">\r\n                    *\r\n                  </small>\r\n                  Remarks\r\n                </label>\r\n                <input\r\n                  {...formik.getFieldProps(\"objRemarks\")}\r\n                  type=\"text\"\r\n                  className=\"form-control block w-full px-3 py-1.5 2xl text-xs poppins:2xl:text-base text-xs poppins font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                />\r\n                <span className=\"text-red-600 absolute text-xs\">\r\n                  {formik.touched.objRemarks && formik.errors.objRemarks\r\n                    ? formik.errors.objRemarks\r\n                    : null}\r\n                </span>\r\n              </div> */}\r\n              </div>\r\n\r\n              <div className=\"col-span-4 flex flex-row flex-wrap justify-between items-center w-[full] h-max mt-4\">\r\n                <div\r\n                  onClick={closeModal}\r\n                  className=\"cursor-pointer px-3 py-1.5 2xl:px-6 2xl:py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out poppins\"\r\n                >\r\n                  Close\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\" poppins px-3 py-1.5 2xl:px-6 2xl:py-2.5 bg-green-600 text-white font-medium text-xs leading-tight rounded shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out\"\r\n                  >\r\n\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>}\r\n\r\n      {!status && <>\r\n        <EmptyDetailsIllustration title={\"Oops !! No Assessment Details Found !!\"} location={closeModal} />\r\n      </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ObjectionEntryForm","//////////////////////////////////////////////////////////////////////\r\n// Author      : R U Bharti\r\n// Date        : 18th Nov., 2022  12:45 PM\r\n// Project     : JUIDCO\r\n// Component   : ObjectionRectificationTable\r\n// Description : Objection Rectification Application page\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nimport { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ImUpload2 } from 'react-icons/im'\r\nimport { TbWebhook } from 'react-icons/tb'\r\nimport ObjectionEntryForm from './ObjectionEntryForm.js'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction ObjectionFormIndex(props) {\r\n  \r\n    const [formIndex, setFormIndex] = useState(1); //formindex specifies type of form like basicdetails at index 1 ...\r\n    const [animateform1, setAnimateform1] = useState(\"translate-x-0\"); //slide animation control state for BasicDetails form\r\n    const [submitStatus, setSubmitStatus] = useState(false); //checking full form filled status to toggle final submit button\r\n    const [allFormData, setAllFormData] = useState({});\r\n    const [responseScreenStatus, setResponseScreenStatus] = useState(\"\");\r\n  \r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n      toast.dismiss();\r\n      toast[type](toastData);\r\n\r\n    };\r\n  \r\n    //\r\n    const submitButtonToggle = () => {\r\n      setSubmitStatus(true);\r\n    };\r\n\r\n    const submitObForm = (id) => {\r\n      props.submitForm(id)\r\n    }\r\n  \r\n    const collectAllFormData = (key, formData) => {\r\n      console.log(\"prev Data\", allFormData);\r\n      // setAllFormData({...allFormData,formData}) //this is going to replace upcoming data since has same formData key all the time\r\n      setAllFormData({ ...allFormData, [key]: formData });\r\n    };\r\n    if (responseScreenStatus == \"success\") {\r\n      return <>{/* <FormSubmitResponse/> */} Done</>;\r\n    }\r\n    return (\r\n      <>\r\n        {/* <ToastContainer position=\"top-right\" autoClose={2000} /> */}\r\n        {/* <div className=\"text-right absoltue top-0 animate__animated animate__fadeInDown\">\r\n          <span className=\"bg-sky-100 border-l border-b border-white text-black col-span-12 sm:col-span-2 sm:col-start-11 pl-4 rounded-l shadow-lg font-semibold pr-4\">\r\n            <TbWebhook className=\"inline\" /> Objection\r\n          </span>\r\n        </div> */}\r\n  \r\n        <div className={`${animateform1} transition-all relative`}>\r\n          <ObjectionEntryForm\r\n          //   id={id}\r\n            collectFormDataFun={collectAllFormData}\r\n            submitFun={submitButtonToggle}\r\n            toastFun={notify}\r\n            id={props?.id}\r\n            closePopUp={props?.closePopUp}\r\n            submitForm={submitObForm}\r\n          />\r\n        </div>\r\n        {/* collectDataFun to receive form data on every save&next */}\r\n        {/* submitFun to activate final submit button when all forms are filled */}\r\n        {/* toastFun to activate toast notification via receiving toast message */}\r\n        {/* backFun to go back from any specific form level */}\r\n        {/* nextFun to go next from any specific form level */}\r\n  \r\n        {submitStatus && (\r\n          <div\r\n            onClick={() => setResponseScreenStatus(\"success\")}\r\n            className=\"flex items-center justify-center\"\r\n          >\r\n            <button\r\n              type=\"submit\"\r\n              className=\"absolute bottom-40 mx-auto px-6 py-2.5 bg-green-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-xl hover:bg-blue-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out\"\r\n            >\r\n              Submit Form <ImUpload2 className=\"inline text-xl\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ObjectionFormIndex"],"names":["baseUrl","BackendUrl","getType","getAssessment","postClericalData","postAssessment","getWardList","props","apiLinks","usageTypeList","constructionTypeList","occupancyTypeList","useState","loader","setloader","usageList","setusageList","occupancyList","setoccupancyList","constructionList","setconstructionList","refresh","setrefresh","useEffect","console","log","axios","ApiHeader","then","res","data","usage_type","occupancy_type","construction_type","catch","err","formik","useFormik","initialValues","propFloorId","floor","id","floorNo","floor_mstr_id","usageType","usage_type_mstr_id","occupancyType","occupancy_type_mstr_id","constructionType","const_type_mstr_id","buildupArea","builtup_area","enableReinitialize","onSubmit","values","getfloor","className","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","floor_name","getFieldProps","value","selected","disabled","map","elem","type","onClick","handleSubmit","colSpan","floorList","setfloorList","update","setupdate","datas","tempFloorList","getFloorData","toast","onChange","handleChange","length","useNavigate","evidenceDoc","setevidenceDoc","setformDoc","propertyList","setpropertyList","roadList","setroadList","allfloor","setallfloor","setfloor","tempData","settempData","harvestingStatus","setHarvestingStatus","roadWidthStatus","setroadWidthStatus","propertyTypeStatus","setpropertyTypeStatus","plotAreaStatus","setplotAreaStatus","setmobileTowerStatus","sethoardingStatus","floorStatus","setfloorStatus","status","setstatus","erroState","seterroState","erroMessage","seterroMessage","validationSchema","yup","harvestingToggleStatus","roadWidthToggleStatus","propertyTypeToggleStatus","plotAreaToggleStatus","mobileTowerToggleStatus","hoardingToggleStatus","floorToggleStatus","isWaterHarvesting","when","is","required","roadType","propertyType","areaOfPlot","isMobileTower","isHoarding","propId","is_water_harvesting","road_type_mstr_id","prop_type_mstr_id","area_of_plot","is_mobile_tower","mobileArea","tower_area","mobileDate","tower_installation_date","is_hoarding_board","hoardingArea","hoarding_area","hoardingDate","hoarding_installation_date","objFormDoc","objEvidenceDoc","objRemarks","submitFun","setTimeout","floors","property_type","road_type","setFieldValue","assessData","push","fd","FormData","append","ulb_id","JSON","stringify","ApiHeader2","submitForm","activateBottomErrorCard","toastFun","closeModal","closePopUp","state","msg","BottomErrorCard","errorTitle","BarLoader","e","name","target","checkValue","checked","allowFloatInput","builtupArea","FormGroup","FormControlLabel","control","Switch","inputProps","label","touched","errors","nullToNA","file","files","accept","EmptyDetailsIllustration","title","location","animateform1","submitStatus","setSubmitStatus","allFormData","setAllFormData","responseScreenStatus","setResponseScreenStatus","collectFormDataFun","key","formData","toastData"],"sourceRoot":""}