{"version":3,"file":"static/js/3261.7edb074e.chunk.js","mappings":"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","sources":["Pages/Water/DocUpload/WaterDocUploadIndex.js","Pages/Water/Modals/WaterDocumentModal.js","Pages/Water/Modals/WaterDocumentModalForOwner.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList';\r\nimport HelpAndSupport from '../../LandingDashboard/LandDashNew/Components/HelpAndSupport'\r\n\r\n// import pdfImage from '../../../assets'\r\nimport pdfImage from '../../../assets/Images/pdf.png'\r\nimport imageIcon from '../../../assets/Images/image.png'\r\nimport noImage from '../../../assets/Images/no-photo.png'\r\nimport WaterDocumentModal from '../Modals/WaterDocumentModal';\r\nimport WaterDocumentModalForOwner from '../Modals/WaterDocumentModalForOwner';\r\nimport ViewUploadedDoc from '../Modals/ViewUploadedDoc';\r\nimport BarLoader from '../../../Components/Common/BarLoader';\r\nimport WaterPaymentModal from '../Modals/WaterPaymentModal';\r\nimport WaterApplicationTopButtons from '../../../Pages/Water/ViewApplication/WaterApplicationTopButtons'\r\n\r\n\r\nconst WaterDocUploadIndex = (props) => {\r\n    const [openDocumentModal, setOpenDocumentModal] = useState(0)\r\n    const [openDocumentModalForOwner, setOpenDocumentModalForOwner] = useState(0)\r\n    const [documentList, setDocumentList] = useState()\r\n    const [ownerDocList, setOwnerDocList] = useState()\r\n    const [openDocviewModal, setOpenDocviewModal] = useState(0)\r\n    const [payloadData, setPayloadData] = useState()\r\n    const [documentUrl, setDocumentUrl] = useState()\r\n    const [loader, setLoader] = useState(false)\r\n    const [isDocUpload, setIsDocUpload] = useState(false)\r\n    const [connectionCharges, setConnectionCharges] = useState(false)\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0);\r\n\r\n    const { api_waterViewDocumetTobeuploaded, header } = WaterApiList();\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [id])\r\n\r\n\r\n    const fetchData = () => {\r\n        setLoader(true)\r\n        axios.post(api_waterViewDocumetTobeuploaded, { \"applicationId\": id }, header)\r\n            .then((res) => {\r\n                setLoader(false)\r\n                console.log(\"LIst of document to be uploaded in water\", res)\r\n                setDocumentList(res.data.data.documentsList)\r\n                setOwnerDocList(res.data.data.ownersDocList)\r\n                setIsDocUpload(res?.data?.data?.doc_upload_status)\r\n                setConnectionCharges(res?.data?.data)\r\n            })\r\n            .catch((err) => {\r\n                setLoader(false)\r\n                console.log(\"ERror while fetching list of water doc to be upladed\", err)\r\n            })\r\n    }\r\n\r\n    const handleUploadBtn = (docName, docVal) => {\r\n        const payload = {\r\n            \"docName\": docName,\r\n            \"applicationId\": id,\r\n            \"docVal\": docVal\r\n        }\r\n        setPayloadData(payload)\r\n        setOpenDocumentModal(pre => pre + 1)\r\n    }\r\n\r\n\r\n    const handleUploadBtnForOwner = (ownerName, docName, ownerId, docVal) => {\r\n        const payload = {\r\n            \"ownerName\": ownerName,\r\n            \"docName\": docName,\r\n            \"applicationId\": id,\r\n            \"ownerId\": ownerId,\r\n            \"docVal\": docVal,\r\n        }\r\n        setPayloadData(payload)\r\n        setOpenDocumentModalForOwner(pre => pre + 1)\r\n    }\r\n\r\n    const openDocView = (url) => {\r\n        if (url) {\r\n            setDocumentUrl(url)\r\n            setOpenDocviewModal(prev => prev + 1)\r\n        }\r\n    }\r\n\r\n    const handlePayment = () => {\r\n        setOpenPaymentModal(prev => prev + 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loader && <BarLoader />}\r\n\r\n            <WaterApplicationTopButtons active=\"document\" title={\"Application Document\"} applicationNo={connectionCharges?.connectionCharges?.applicationNo} />\r\n\r\n            {/* ============WATER PAYMENT============ */}\r\n            <WaterPaymentModal\r\n                openPaymentModal={openPaymentModal}\r\n                paymentData={connectionCharges}\r\n            // refechList={() => setRefetchApplicationList((prev) => prev + 1)}\r\n            />\r\n\r\n            <WaterDocumentModal openDocumentModal={openDocumentModal} payloadData={payloadData} refetch={fetchData} />\r\n            <WaterDocumentModalForOwner openDocumentModal={openDocumentModalForOwner} payloadData={payloadData} refetch={fetchData} />\r\n            <ViewUploadedDoc openDocviewModal={openDocviewModal} documentUrl={documentUrl} />\r\n            <div className='grid grid-cols-12 bg-white poppins animate__animated animate__fadeIn animate__faster'>\r\n\r\n                <div className='col-span-12 pt-4 2xl:h-full md:h-screen overflow-y-auto pb-2'>\r\n                    <div className=\"md:px-2 col-span-12\">\r\n\r\n                        <div className=\"float-right m-3 space-x-3\">\r\n                            {isDocUpload == true ?\r\n                                connectionCharges?.connectionCharges?.paid_status == false &&\r\n                                <button onClick={() => handlePayment()} class=\"py-2 px-4 inline-block text-center mb-3 leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\">Pay Now</button>\r\n                                :\r\n                                <div></div>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <h1 class=\"text-xl font-bold mt-3 mb-5 text-gray-600 ml-3\">Water Connection Document List</h1>\r\n                        </div>\r\n\r\n                        <div className=\"bg-white shadow-xl border border-sky-200 p-5 m-2 rounded-md\">\r\n                            <div className=\"md:inline-block min-w-full overflow-hidden hidden\">\r\n                                <table className=\"min-w-full leading-normal border\">\r\n                                    <thead className='bg-sky-100'>\r\n                                        <tr className='font-semibold '>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                #\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                Document Name\r\n                                            </th>\r\n                                            {/* <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\"> Remark </th> */}\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                View\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800 text-center text-sm uppercase\">\r\n                                                Status\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                Upload\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            documentList?.map((e, i = 1) => (\r\n                                                <tr>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {i + 1}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {e?.docName}{e?.isMadatory == 1 && <span className=\"text-red-500 font-semibold mx-1\">*</span>}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    {/* <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {e?.uploadDoc == \"\" ? <p className=\"text-red-500\">Not Upload</p> :\r\n                                                                <div>\r\n                                                                    {e?.uploadDoc?.verify_status == 0 && <p className=\"text-green-700\">Pending</p>}\r\n                                                                    {e?.uploadDoc?.verify_status == 1 && <p className=\"text-green-700\">Verified</p>}\r\n                                                                    {e?.uploadDoc?.verify_status == 2 && <p className=\"text-red-700\">Rejected</p>}\r\n                                                                    {e?.uploadDoc && <p className=\"text-green-700\">Uploaded</p>}\r\n\r\n                                                                </div>\r\n                                                            }\r\n                                                        </p>\r\n                                                    </td> */}\r\n                                                    <td onClick={() => openDocView(e?.uploadDoc?.doc_path)} className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\" >\r\n                                                        <div className=\"flex items-center\">\r\n                                                            <div className=\"flex-shrink-0\">\r\n                                                                <a href=\"#\" className=\"block relative\">\r\n                                                                    {e?.uploadDoc == \"\" && <img alt=\"profil\" src={noImage} className=\"mx-auto object-cover rounded-none h-10 w-10 cursor-not-allowed\" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"pdf\" && <img alt=\"profil\" src={pdfImage} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"jpg\" && <img alt=\"profil\" src={imageIcon} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"jpeg\" && <img alt=\"profil\" src={imageIcon} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"png\" && <img alt=\"profil\" src={imageIcon} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-center text-black font-medium\">\r\n                                                            {e.uploadDoc == \"\" && <p className='bg-red-400 rounded-xl px-2 py-0.5'>{e.docStatus}</p>}\r\n                                                            {e.uploadDoc != \"\" && <p className='bg-green-400 rounded-xl py-0.5'>{e.docStatus}</p>}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm \">\r\n                                                        <button onClick={() => handleUploadBtn(e.docName, e.docVal)} className=\"border px-4 py-2 hover:text-white hover:bg-indigo-500\">Upload</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <p className=' font-semibold text-red-400'> <span className='text-base'> *</span> <span className='text-xs'> Mandatory</span></p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h1 class=\"text-xl font-bold my-5 text-gray-600 ml-3\">Owner Document List</h1>\r\n                        </div>\r\n                        <div className=\"bg-white shadow-xl border border-sky-200 p-5 m-2 rounded-md\">\r\n                            <div className=\"md:inline-block min-w-full overflow-hidden hidden\">\r\n                                <table className=\"min-w-full leading-normal border\">\r\n                                    <thead className='bg-sky-100'>\r\n                                        <tr className='font-semibold '>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                #\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                Document Name\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                Owner Name\r\n                                            </th>\r\n                                            {/* <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\"> Remark </th> */}\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                View\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800 text-center text-sm uppercase\">\r\n                                                Status\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                                Upload\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {ownerDocList ?\r\n                                            ownerDocList?.map((e, i = 1) => (\r\n                                                <tr>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {i + 1}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {e?.docName}{e?.isMadatory && <span className=\"text-red-500 font-semibold mx-1\">*</span>}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {e?.ownerName}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    {/* <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                            {e?.uploadDoc == \"\" ? <p className=\"text-red-500\">Not Upload</p> :\r\n                                                                <div>\r\n                                                                    {e?.uploadDoc?.verify_status == 0 && <p className=\"text-green-700\">Pending</p>}\r\n                                                                    {e?.uploadDoc?.verify_status == 1 && <p className=\"text-green-700\">Verified</p>}\r\n                                                                    {e?.uploadDoc?.verify_status == 2 && <p className=\"text-red-700\">Rejected</p>}\r\n\r\n                                                                </div>\r\n                                                            }\r\n                                                        </p>\r\n                                                    </td> */}\r\n                                                    <td onClick={() => openDocView(e?.uploadDoc?.doc_path)} className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\" >\r\n                                                        <div className=\"flex items-center\">\r\n                                                            <div className=\"flex-shrink-0\">\r\n                                                                <a href=\"#\" className=\"block relative\">\r\n                                                                    {e?.uploadDoc == \"\" && <img alt=\"profil\" src={noImage} className=\"mx-auto object-cover rounded-none h-10 w-10 cursor-not-allowed\" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"pdf\" && <img alt=\"profil\" src={pdfImage} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"jpg\" && <img alt=\"profil\" src={imageIcon} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"jpeg\" && <img alt=\"profil\" src={imageIcon} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                    {e?.uploadDoc?.doc_path?.split('.').pop() == \"png\" && <img alt=\"profil\" src={imageIcon} className=\"mx-auto object-cover rounded-none h-10 w-10 \" />}\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <p className=\"text-center text-black font-medium\">\r\n                                                            {e.uploadDoc == \"\" && <p className='bg-red-400 rounded-xl px-2 py-0.5'>{e.docStatus}</p>}\r\n                                                            {e.uploadDoc != \"\" && <p className='bg-green-400 rounded-xl py-0.5'>{e.docStatus}</p>}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                    <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                        <button onClick={() => handleUploadBtnForOwner(e.ownerName, e.docName, e.ownerId, e.docVal)} className=\"border px-4 py-2 hover:text-white hover:bg-indigo-500\">Upload</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                            : <p>No Data Found</p>\r\n                                        }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                                <p className=' font-semibold text-red-400'> <span className='text-base'> *</span> <span className='text-xs'> Mandatory</span></p>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <HelpAndSupport /> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaterDocUploadIndex","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FiUpload } from 'react-icons/fi';\r\nimport axios from \"axios\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport WaterApiList from \"../../../Components/ApiList/WaterApiList\";\r\nimport { contextVar } from \"../../../Components/ContextVar\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaterDocumentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [docType, setDocType] = useState()\r\n    const [errorMessage, setErrorMessage] = useState()\r\n    const [docPath, setDocPath] = useState()\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n\r\n    console.log(\"Doc type is\", docType)\r\n\r\n\r\n    const { api_getDocList, api_waterUploadDoc, header } = WaterApiList();\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    const data = props?.payloadData;\r\n\r\n    useEffect(() => {\r\n        if (props.openDocumentModal > 0) setIsOpen(true);\r\n        setErrorMessage()\r\n    }, [props.openDocumentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setDocType()\r\n        setDocPath()\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const docUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        // if (props?.payloadData?.applicationId == \"\" || docPath || docType) {\r\n        //     return setErrorMessage(\"Please Select Correct File and Type\")\r\n        // }\r\n\r\n        if (docType == undefined || docType == \"\" || docPath == undefined || docPath == \"\") {\r\n            return setErrorMessage(\"Please Select Correct File and Type\")\r\n        }\r\n\r\n        let formData = new FormData();\r\n\r\n        formData.append('applicationId', props?.payloadData?.applicationId);\r\n        formData.append('document', docPath);  //doucment master id\r\n        formData.append('docCode', docType);            //Btn name\r\n        formData.append('docCategory', data?.refDocName);            //Btn name\r\n\r\n\r\n        // formData.append('docMstrId', docType);            //Btn name\r\n        // formData.append('docRefName', props?.payloadData?.docName);            //File information\r\n        // formData.append('ownerId', props.ownerId);   //ownerID\r\n\r\n\r\n        console.log(\"Complate Payload\", formData);\r\n        // return\r\n        setIsUploading(true)\r\n        axios.post(api_waterUploadDoc, formData, header)\r\n            .then((res) => {\r\n                if (res.data.status == true) {\r\n                    notify('Document Uploaded Successfully', 'success')\r\n                    console.log(\"Data Uploaded\", res)\r\n                    setIsUploading(false)\r\n                    closeModal()\r\n                    props.refetch()\r\n                } else {\r\n                    setIsUploading(false)\r\n                    notify('Failed to Upload Document', 'error')\r\n                    setErrorMessage(\"Error : Failed to upload file. Please Select Proper File.\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setIsUploading(false)\r\n                notify('Something went wrong', 'error')\r\n                setErrorMessage(\"Exception : Failed to upload file. Please Select Proper File.\")\r\n                console.log(\"Expection...\", err)\r\n            })\r\n\r\n        // setFileSelected(e.target.files[0]);\r\n    };\r\n\r\n\r\n    console.log(\" ====props?.payloadData=========\", data)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <form encType=\"multipart/form\" onSubmit={docUpload} >\r\n                    <div className=\"bg-indigo-200 shadow-2xl border border-sky-200 p-2 rounded-md\">\r\n                        <div className=\"my-2 mx-3\">\r\n                            <div onClick={closeModal} className=\"float-right cursor-pointer hover:bg-gray-300 rounded-sm p-1\"> <GrClose /></div>\r\n                            <h1 className=\"font-semibold text-gray-700\">Upload Document {props?.payloadData?.docName}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"md:inline-block min-w-full overflow-hidden hidden p-4\">\r\n                            <table className=\"min-w-full leading-normal border\">\r\n                                <thead className='bg-sky-100'>\r\n                                    <tr className='font-semibold '>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Type\r\n                                        </th>\r\n\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Upload\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Submit\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        // documentList?.filter(e => e.docName == props?.payloadData?.docName).map((e, i = 1) => (\r\n                                        // data?.map((e, i = 1) => (\r\n                                        <tr>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {1}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {data?.docName}|| {data?.refDocName}\r\n                                                    {/* {e?.isMadatory && <span className=\"text-red-500 font-semibold mx-1\">*</span>} */}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    <select onChange={(e) => setDocType(e.target.selectedOptions[0].text)} className=' outline-blue-600 border border-gray-400 w-40'>\r\n                                                        <option>Select Document</option>\r\n                                                        {\r\n                                                            data?.docVal?.map((item) => (\r\n                                                                <option value={item.id}>{item.doc_name}</option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n                                                </p>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 border-b border-gray-200 bg-white text-sm\">\r\n                                                <span className=\"relative inline-block \">\r\n                                                    <span aria-hidden=\"true\" className=\"absolute inset-0 \"></span>\r\n                                                    <span className=\"relative \">\r\n                                                        <input\r\n                                                            name=\"docPath\"\r\n                                                            type=\"file\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"contained-button-file\"\r\n                                                            onChange={(e) => setDocPath(e.target.files[0])}\r\n                                                        // onChange={() => importFile(e.docName)}\r\n                                                        />\r\n                                                        <label className='bg-blue-500 hover:bg-blue-600 hover:ring-1 hover:ring-blue-800 rounded-sm hover:rounded-md hover:shadow-2xl shadow-lg cursor-pointer flex pl-4 pr-5 py-2  text-white font-medium' htmlFor=\"contained-button-file\"><FiUpload size={16} className='mt-0 ml-0 mr-2 font-medium' />Browse File</label>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <button disabled={isUploading} type=\"submit\" className=\"border disabled:bg-green-300 disabled:text-gray-500 bg-green-600 rounded-md text-white px-4 py-2\">Submit</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                        // ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className='my-2 flex justify-center font-semibold text-red-600 relative'>\r\n                                <p className=\"absolute\">\r\n                                    {errorMessage && errorMessage}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterDocumentModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrFormClose } from \"react-icons/gr\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FiUpload } from 'react-icons/fi';\r\nimport axios from \"axios\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport WaterApiList from \"../../../Components/ApiList/WaterApiList\";\r\nimport { contextVar } from \"../../../Components/ContextVar\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaterDocumentModalForOwner(props) {\r\n    const [errorMessage, setErrorMessage] = useState()\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [docType, setDocType] = useState()\r\n    const [ownerId, setOwnerId] = useState()\r\n    const [docPath, setDocPath] = useState()\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    const { api_getDocList, api_waterUploadDoc, header } = WaterApiList();\r\n\r\n    const data = props?.payloadData;\r\n\r\n    useEffect(() => {\r\n        if (props.openDocumentModal > 0) setIsOpen(true);\r\n    }, [props.openDocumentModal]);\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setDocType()\r\n        setDocPath()\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    console.log(\"Props in water doc upload\", props)\r\n\r\n\r\n    const docUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (docType == undefined || docType == \"\" || docPath == undefined || docPath == \"\") {\r\n            return setErrorMessage(\"Please Select Correct File and Type\")\r\n        }\r\n\r\n        console.log(\"Owner Doc Path\", docPath)\r\n        console.log(\"Owner ID\", ownerId)\r\n\r\n        let formData = new FormData();\r\n\r\n        formData.append('applicationId', props?.payloadData?.applicationId);\r\n        formData.append('docCategory', props?.payloadData?.docCategory);\r\n        formData.append('document', docPath);  //doucment master id\r\n        formData.append('docCode', docType);            //Btn name\r\n        // formData.append('docMstrId', docType);            //Btn name\r\n        // formData.append('docRefName', props?.payloadData?.docName);            //File information\r\n        formData.append('ownerId', props?.payloadData?.ownerId);   //ownerID\r\n\r\n\r\n        console.log(\"Owner Document Complate Payload\", formData);\r\n        setIsUploading(true)\r\n        axios.post(api_waterUploadDoc, formData, header)\r\n            .then((res) => {\r\n                // console.log(\"Data Uploaded\", res)\r\n                // closeModal()\r\n                // props.refetch()\r\n                if (res.data.status == true) {\r\n                    notify('Document Uploaded Successfully', 'success')\r\n                    console.log(\"Data Uploaded\", res)\r\n                    setIsUploading(false)\r\n                    closeModal()\r\n                    props.refetch()\r\n                } else {\r\n                    setIsUploading(false)\r\n                    notify('Failed to Upload Document', 'error')\r\n                    setErrorMessage(\"Error : Failed to upload file. Please Select Proper File.\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setIsUploading(false)\r\n                notify('Something went wrong', 'error')\r\n                setErrorMessage(\"Exception : Failed to upload file. Please Select Proper File.\")\r\n                console.log(\"Expection...\", err)\r\n            })\r\n\r\n\r\n        // setFileSelected(e.target.files[0]);\r\n    };\r\n\r\n\r\n    // useEffect(() => {\r\n    //     axios.post(api_getDocList, { \"applicationId\": props?.payloadData?.applicationId }, HEADER())\r\n    //         .then((res) => {\r\n    //             console.log(\"Llist of document to upload\", res)\r\n    //             if (res.data.status == true) {\r\n    //                 // setDocumentList(res.data.data.documentsList)\r\n    //                 setOwnerDocList(res.data.data.ownersDocList)\r\n    //             }\r\n    //         })\r\n    //         .catch((err) => console.log(\"Error in Document upload list\", err))\r\n    // }, [props?.payloadData?.applicationId])\r\n\r\n\r\n    console.log(\"Paylidadd data in owner details\", data)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <form encType=\"multipart/form\" onSubmit={docUpload} >\r\n                <div className=\"bg-indigo-200 shadow-2xl border border-sky-200 p-2 rounded-md\">\r\n                        <div className=\"my-2 mx-3\">\r\n                            <div onClick={closeModal} className=\"float-right cursor-pointer hover:bg-gray-300 rounded-sm p-1\"> <GrClose /></div>\r\n                            <h1 className=\"font-semibold text-gray-700\">Upload Document {props?.payloadData?.docName}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"md:inline-block min-w-full overflow-hidden hidden p-4\">\r\n                            <table className=\"min-w-full leading-normal border\">\r\n                                <thead className='bg-sky-100'>\r\n                                    <tr className='font-semibold '>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Owner Name\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Document Type\r\n                                        </th>\r\n\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Upload\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-2 border-b border-gray-200 text-gray-800  text-left text-sm uppercase\">\r\n                                            Submit\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        // ownerDocList?.filter(e => e.docName == props?.payloadData?.docName).map((e, i = 1) => (\r\n                                        <tr>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {1}\r\n                                                </p>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {/* {e?.docName}{e?.isMadatory && <span className=\"text-red-500 font-semibold mx-1\">*</span>} */}\r\n                                                    {data?.docName}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {data?.ownerName}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    <select onChange={(e) => setDocType(e.target.selectedOptions[0].text)} className=' outline-blue-600 border border-gray-400 w-40'>\r\n                                                        <option>Select Documet</option>\r\n                                                        {\r\n                                                            data?.docVal?.map((item) => (\r\n                                                                <option value={item.id}>{item.doc_name}</option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n                                                </p>\r\n                                            </td>\r\n\r\n                                            <td className=\"px-5 border-b border-gray-200 bg-white text-sm\">\r\n                                                <span className=\"relative inline-block \">\r\n                                                    <span aria-hidden=\"true\" className=\"absolute inset-0 \"></span>\r\n                                                    <span className=\"relative \">\r\n                                                        <input\r\n                                                            name=\"docPath\"\r\n                                                            type=\"file\"\r\n                                                            // accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"contained-button-file\"\r\n                                                            onChange={(e) => setDocPath(e.target.files[0])}\r\n                                                        // onChange={() => importFile(e.docName)}\r\n                                                        />\r\n                                                        <label className='bg-blue-500 hover:bg-blue-600 hover:ring-1 hover:ring-blue-800 rounded-sm hover:rounded-md hover:shadow-2xl shadow-lg cursor-pointer flex pl-4 pr-5 py-2  text-white font-medium' htmlFor=\"contained-button-file\"><FiUpload size={16} className='mt-0 ml-0 mr-2 font-medium' />Browse File</label>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-2 border-b border-gray-200 bg-white text-sm\">\r\n                                                <button disabled={isUploading} type=\"submit\" className=\"border disabled:bg-green-300 disabled:text-gray-500 bg-green-600 rounded-md text-white px-4 py-2\">Submit</button>\r\n                                                {/* <button type=\"submit\" className=\"border bg-green-600 rounded-md text-white px-4 py-2\">Submit</button> */}\r\n                                                {/* <button onClick={()=>setOwnerId(e?.ownerId)} type=\"submit\" className=\"border bg-green-600 rounded-md text-white px-4 py-2\">Submit</button> */}\r\n                                            </td>\r\n                                        </tr>\r\n                                        // ))\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className='my-2 flex justify-center font-semibold text-red-600 relative'>\r\n                                <p className=\"absolute\">\r\n                                    {errorMessage && errorMessage}\r\n                                </p>\r\n                            </div>\r\n\r\n                            {/* <div className='my-5 flex justify-center'>\r\n                            <div className='mx-2'><button onClick={closeModal} className='bg-red-400 hover:bg-red-500 px-5 py-2 shadow-xl rounded-md text-black text-base'>Cancel</button></div>\r\n                            <div className='mx-2'><button className='bg-green-400 hover:bg-green-500 px-5 py-2 shadow-xl rounded-md text-black text-base float-right'>Submit</button></div>\r\n                        </div> */}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterDocumentModalForOwner;\r\n"],"names":["props","_connectionCharges$co","_connectionCharges$co2","_useState","useState","_useState2","_slicedToArray","openDocumentModal","setOpenDocumentModal","_useState3","_useState4","openDocumentModalForOwner","setOpenDocumentModalForOwner","_useState5","_useState6","documentList","setDocumentList","_useState7","_useState8","ownerDocList","setOwnerDocList","_useState9","_useState10","openDocviewModal","setOpenDocviewModal","_useState11","_useState12","payloadData","setPayloadData","_useState13","_useState14","documentUrl","setDocumentUrl","_useState15","_useState16","loader","setLoader","_useState17","_useState18","isDocUpload","setIsDocUpload","_useState19","_useState20","connectionCharges","setConnectionCharges","_useState21","_useState22","openPaymentModal","setOpenPaymentModal","_WaterApiList","WaterApiList","api_waterViewDocumetTobeuploaded","header","id","useParams","useNavigate","useEffect","fetchData","axios","then","res","_res$data","_res$data$data","_res$data2","console","log","data","documentsList","ownersDocList","doc_upload_status","catch","err","openDocView","url","prev","_jsxs","_Fragment","children","_jsx","BarLoader","WaterApplicationTopButtons","active","title","applicationNo","WaterPaymentModal","paymentData","WaterDocumentModal","refetch","WaterDocumentModalForOwner","ViewUploadedDoc","className","paid_status","onClick","class","scope","map","e","_e$uploadDoc2","_e$uploadDoc2$doc_pat","_e$uploadDoc3","_e$uploadDoc3$doc_pat","_e$uploadDoc4","_e$uploadDoc4$doc_pat","_e$uploadDoc5","_e$uploadDoc5$doc_pat","i","arguments","length","undefined","docName","isMadatory","_e$uploadDoc","uploadDoc","doc_path","href","alt","src","noImage","split","pop","pdfImage","imageIcon","docStatus","docVal","pre","_e$uploadDoc7","_e$uploadDoc7$doc_pat","_e$uploadDoc8","_e$uploadDoc8$doc_pat","_e$uploadDoc9","_e$uploadDoc9$doc_pat","_e$uploadDoc10","_e$uploadDoc10$doc_pa","ownerName","_e$uploadDoc6","ownerId","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","_props$payloadData2","_data$docVal","_React$useState","React","_React$useState2","modalIsOpen","setIsOpen","docType","setDocType","errorMessage","setErrorMessage","docPath","setDocPath","isUploading","setIsUploading","api_waterUploadDoc","api_getDocList","notify","useContext","contextVar","closeModal","Modal","isOpen","onAfterOpen","onRequestClose","style","contentLabel","encType","onSubmit","_props$payloadData","preventDefault","formData","FormData","append","applicationId","refDocName","status","GrClose","onChange","target","selectedOptions","text","item","value","doc_name","name","type","display","files","htmlFor","FiUpload","size","disabled","_props$payloadData4","_props$payloadData3","docCategory"],"sourceRoot":""}