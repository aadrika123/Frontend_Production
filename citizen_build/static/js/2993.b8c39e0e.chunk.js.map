{"version":3,"file":"static/js/2993.b8c39e0e.chunk.js","mappings":"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","sources":["Pages/Water/ViewConsumer/WaterDemandPaymentConfirmationModal.js","Pages/Water/ViewConsumer/WaterDemandPayment.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - \r\n//    DESCRIPTION - \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport RazorpayPaymentScreen from \"../../../Components/RazorpayPaymentScreen\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport axios from \"axios\";\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList';\r\nimport imgSucess from '../../Water/success.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { contextVar } from '../../../Components/ContextVar'\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaterDemandPaymentConfirmationModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n\r\n    const transData = props?.transData;\r\n\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const paymentData = props.paymentData;\r\n    console.log(\"paymentData======\", paymentData)\r\n\r\n    // useEffect(() => {\r\n    //     if (props.openPaymentModal > 0) setIsOpen(true);\r\n    // }, [props.openPaymentModal]);\r\n\r\n    useEffect(() => {\r\n        setIsOpen(true)\r\n    }, [])\r\n\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div >\r\n                    <div className=\"bg-green-200 shadow-2xl border border-sky-200 p-5 m-5 rounded-md\">\r\n                        <div onClick={closeModal} className=\"absolute cursor-pointer bg-green-100 hover:bg-gray-300 p-1 rounded-md\"><GrClose /> </div>\r\n                        <div className=\"flex justify-center\">\r\n                            <img src={imgSucess} className=\"h-20\" alt=\"\" srcset=\"\" />\r\n                        </div>\r\n                        <div className='py-1 pl-3 font-semibold text-center text-2xl text-gray-800'> Payment Completed Successfully </div>\r\n                        <p className=\"text-center\"><span className=\"text-base\"> Payment Transaction No</span> <span className=\"font-bold text-blue-700 text-xl\">{transData?.transectionNo}</span></p>\r\n                        <p className=\"border-b border-gray-300 mx-10 py-1\"></p>\r\n                        <div className='grid grid-cols-12 px-8 py-3 leading-8 space-x-8 text-sm'>\r\n                            <div className='md:col-span-6 col-span-12'>\r\n                                <div className='grid grid-cols-12'>\r\n                                    <div className='col-span-6 font-semibold'>\r\n                                        <p>Application No</p>\r\n                                        <p>Connection Type</p>\r\n                                    </div>\r\n                                    <div className='col-span-6 ml-3'>\r\n                                        <p>{transData?.applicationNo}</p>\r\n                                        <p>{transData?.tranType}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='md:col-span-6 col-span-12'>\r\n                                <div className='grid grid-cols-12'>\r\n                                    <div className='col-span-6 font-semibold'>\r\n                                        <p>Amount</p>\r\n                                        <p>Payment Date</p>\r\n                                    </div>\r\n                                    <div className='col-span-6'>\r\n                                        <p>{transData?.amount}</p>\r\n                                        <p>{transData?.transectionDate}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-span-12 md:mt-4 mt-10'>\r\n                                <div className='flex justify-center'>\r\n                                    <button onClick={closeModal} className='mx-2 bg-sky-600 hover:bg-sky-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm rounded-sm shadow-xl'>Close</button>\r\n                                    {transData && <button onClick={() => navigate(`/waterUserReceipt/${transData?.transectionNo}`)} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-4 py-2 text-sm  rounded-sm shadow-xl'>View Receipt</button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterDemandPaymentConfirmationModal;\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { MdTag } from 'react-icons/md'\r\nimport moment from 'moment'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList'\r\nimport RazorpayPaymentScreen from '../../../Components/RazorpayPaymentScreen'\r\nimport { contextVar } from '../../../Components/ContextVar'\r\nimport BarLoader from '../../../Components/Common/BarLoader'\r\nimport WaterDemandPaymentConfirmationModal from './WaterDemandPaymentConfirmationModal'\r\n\r\n\r\nconst WaterDemandPayment = () => {\r\n    const [applicationFullData, setApplicationFullData] = useState()\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [demandData, setDemandData] = useState()\r\n\r\n    const [demandCalculationData, setDemandCalculationData] = useState()\r\n    const [fromDate, setFromDate] = useState()\r\n    const [uptoDate, setUptoDate] = useState()\r\n    const [paymentStatus, setPaymentStatus] = useState(false)\r\n    const [transData, setTransData] = useState()\r\n\r\n\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    // useSetTitle('Water Demand Payment')\r\n\r\n\r\n    const { api_getTranNo, api_waterApprovedApplicationDetails, api_waterListDemand, api_waterDemandCalculation, api_waterDemandPayment, header } = WaterApiList();\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail() //Fetch Application Details\r\n        getDemandListDetails() //Fetch All Due Demand List\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        demandCalculation()\r\n    }, [uptoDate, fromDate])\r\n\r\n    const demandCalculation = () => {// Demand Calculation Api called\r\n\r\n        if (uptoDate == \"\") return setDemandCalculationData()\r\n        if (fromDate == \"\") return setDemandCalculationData()\r\n\r\n        setIsLoading(true)\r\n\r\n        const payload = {\r\n            \"consumerId\": id,\r\n            \"demandFrom\": fromDate,\r\n            \"demandUpto\": uptoDate\r\n        }\r\n\r\n        axios.post(api_waterDemandCalculation, payload, header)\r\n            .then(function (response) {\r\n                console.log('water demand calculation Details', response.data.data)\r\n                setDemandCalculationData(response.data.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error : water calculating demand', error)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    const getApplicationDetail = () => {\r\n        setIsLoading(true)\r\n        axios.post(api_waterApprovedApplicationDetails, { id: id }, header)\r\n            .then(function (response) {\r\n                console.log('water Approved Application Details', response.data.data)\r\n                setApplicationFullData(response.data.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error : water Approved Application Details', error)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const getDemandListDetails = () => {\r\n        axios.post(api_waterListDemand, { \"ConsumerId\": id }, header)\r\n            .then((res) => {\r\n                console.log(\"Fetched Water Demand List\", res.data.data)\r\n                setDemandData(res.data.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Exception while fetching Water Demand\", err)\r\n            })\r\n    }\r\n\r\n\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Payment Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data.status == true) {\r\n            notify('Payment Done successfully', 'success')\r\n            setPaymentStatus(true)\r\n            const payload = {\r\n                \"orderId\": data.data.razorpay_order_id,\r\n                \"paymentId\": data.data.razorpay_payment_id\r\n            }\r\n\r\n            axios.post(api_getTranNo, payload, header) // After Payment Completed it will send payload and get Transaction Details.\r\n                .then((res) => {\r\n                    console.log(\"Data after payment success by OrderId and PaymentID\", res)\r\n                    if (res.data.status == true) {\r\n                        setTransData(res.data.data)\r\n                    }\r\n                })\r\n                .catch((err) => console.log(\"Exception/Error while fetching by OrderID and Payment ID\", err))\r\n        }\r\n        getDemandListDetails() // Refetch Demand Payment list\r\n    }\r\n\r\n    const submitForm = () => {\r\n        setIsLoading(true)\r\n        const payload = {\r\n            'consumerId': id,\r\n            'demandFrom': fromDate,\r\n            'demandUpto': uptoDate,\r\n            'amount': demandCalculationData?.totalPayAmount,\r\n            \"paymentMode\": \"online\",\r\n            \"remarks\": \"citizen payment\"\r\n        }\r\n\r\n        console.log(\"final submit\", payload)\r\n\r\n        // return\r\n\r\n        axios.post(api_waterDemandPayment, payload, header)\r\n            .then((res) => {\r\n                if (res.data.status) {\r\n                    // getDemandListDetails()\r\n                    setIsLoading(false)\r\n                    console.log(\"Order Id Generated Successfully\", res)\r\n                    if (res.data.status == true) {\r\n                        RazorpayPaymentScreen(res.data.data, dreturn)\r\n                    } else {\r\n                        notify(res.data.message, 'error')\r\n                    }\r\n                } else {\r\n                    console.log(\"Failed Generate Order ID.\", res)\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Exception while generating order id\", err)\r\n                setIsLoading(false)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    //Formik Start\r\n\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        monthFrom: yup.string().required('Require Field'),\r\n        monthUpto: yup.string().required('Require Field'),\r\n        // remarks: yup.string().required('Require Field'),\r\n\r\n\r\n    })\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            monthFrom: '',\r\n            monthUpto: '',\r\n            penalty: '',\r\n            rebate: '',\r\n            advanced: '',\r\n        },\r\n\r\n        onSubmit: (values, resetForm) => {\r\n            // console.log(\"Form Data\", values)\r\n            submitForm(values)\r\n        }\r\n        , validationSchema\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n\r\n        { (name == 'monthFrom') && setFromDate(value) }\r\n        { (name == 'monthUpto') && setUptoDate(value) }\r\n\r\n    }\r\n\r\n    //Formik END\r\n\r\n\r\n    // Filter Data Demand upto should be greater than demand upto\r\n    const filterDate = demandData?.consumerDemands?.filter(item => moment(item.demand_upto, 'YYYY-MM-DD').format('yy-MM').toString() >= moment(fromDate, 'YYYY-MM-DD').format('yy-MM'));\r\n    // const filterDate =  demandData?.consumerDemands?.filter(item =>  item.demand_upto >= fromDate);\r\n\r\n    // console.log(\"filterDate\",fromDate, moment(fromDate, 'YYYY-MM-DD').format('MMyy'))\r\n    // console.log(\"filterDate\", filterDate)\r\n    return (\r\n        <>\r\n            {isLoading && <BarLoader />}\r\n\r\n            {paymentStatus && <WaterDemandPaymentConfirmationModal transData={transData} />}\r\n\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-2 container mx-auto w-full'>\r\n\r\n                <div className=\"col-span-12 rounded-lg p-4\">\r\n\r\n                    {/* Basic  details */}\r\n                    <div className='p-4'>\r\n                        <div className=''>\r\n                            <h1 className='px-1 font-semibold font-serif  text-gray-500'><MdTag className=\"inline\" /> Basic Details</h1>\r\n                            <div className='py-6 mt-2 bg-white rounded-lg shadow-xl p-4'>\r\n                                <div className=\"flex space-x-5 pl-4 \">\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-semibold text-sm'>{applicationFullData?.ulb_name ? applicationFullData?.ulb_name : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>ULB Name</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.ward_name ? applicationFullData?.ward_name : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Ward No.</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.consumer_no ? applicationFullData?.consumer_no : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Consumer No</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.connection_through ? applicationFullData?.connection_through : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Connection Through</div>\r\n                                    </div>\r\n                                    {applicationFullData?.connection_through == 'SAF' ?\r\n                                        <div className='flex-1'>\r\n                                            <div className='font-semibold text-md'>{applicationFullData?.saf_no ? applicationFullData?.saf_no : \"N/A\"}</div>\r\n                                            <div className='text-gray-500 text-xs'>SAF No</div>\r\n                                        </div> :\r\n                                        <div className='flex-1'>\r\n                                            <div className='font-semibold text-md'>{applicationFullData?.holding_no ? applicationFullData?.holding_no : \"N/A\"}</div>\r\n                                            <div className='text-gray-500 text-xs'>Holding No</div>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-semibold text-md'>{applicationFullData?.owner_char_type ? applicationFullData?.owner_char_type : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Ownership Type</div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <>\r\n                        <div className='mt-5 p-4'>\r\n                            <h1 className='px-1 font-semibold font-serif text-gray-500'><MdTag className=\"inline\" />Due Demand Details</h1>\r\n\r\n                            <table className='min-w-full leading-normal mt-2 bg-white rounded-lg shadow-xl p-4'>\r\n                                <thead className='font-bold text-left text-sm border text-gray-800 bg-white'>\r\n                                    <tr>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">#</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand From</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand Upto</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand Amount</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Penalty</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Connection Type</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Payable Amount </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-sm\">\r\n\r\n                                    <>\r\n                                        {demandData?.consumerDemands?.map((items, i) => (\r\n                                            <tr className=\"bg-white shadow-xl border-b border-gray-200\">\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{i + 1}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.demand_from ? moment(items?.demand_from, 'YYYY-MM-DD').format('DD-MMM-yy') : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.demand_upto ? moment(items?.demand_upto, 'YYYY-MM-DD').format('DD-MMM-yy') : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.balance_amount ? items?.balance_amount : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.penalty ? items?.penalty : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.connection_type ? items?.connection_type : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.amount ? '₹ ' + items?.amount : \"N/A\"}</td>\r\n\r\n                                            </tr>\r\n                                        ))}\r\n                                    </>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </>\r\n\r\n\r\n                    <div className=\"col-span-12 rounded-lg p-4\">\r\n                        <div className='py-6 mt-2 bg-white rounded-lg shadow-xl border border-y-gray-200 p-4'>\r\n                            <form onSubmit={formik.handleSubmit} onChange={handleChange} className=\"p-4 relative\">\r\n\r\n                                <div className=\"grid grid-cols-12\">\r\n\r\n                                    {/* Forms */}\r\n\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\" mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Month From</label>\r\n                                        <select {...formik.getFieldProps('monthFrom')} type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {demandData?.consumerDemands?.map((item, index) => (\r\n                                                <option key={index} value={item.demand_from}>{moment(item.demand_from, 'YYYY-MM-DD').format('MMM-yy')}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.monthFrom && formik.errors.monthFrom ? formik.errors.monthFrom : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\" mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Month Upto</label>\r\n                                        <select {...formik.getFieldProps('monthUpto')} type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {filterDate?.map((item, index) => (\r\n                                                <option key={index} value={item.demand_upto}>{moment(item.demand_upto, 'YYYY-MM-DD').format('MMM-yy')}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.monthUpto && formik.errors.monthUpto ? formik.errors.monthUpto : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Total Demand</label>\r\n                                        <input {...formik.getFieldProps('amount')} value={demandCalculationData?.totalDemand || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.amount && formik.errors.amount ? formik.errors.amount : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Penalty</label>\r\n                                        <input {...formik.getFieldProps('penalty')} value={demandCalculationData?.totalPenalty || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.penalty && formik.errors.penalty ? formik.errors.penalty : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Rebate</label>\r\n                                        <input {...formik.getFieldProps('rebate')} value={demandCalculationData?.totalRebate || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.rebate && formik.errors.rebate ? formik.errors.rebate : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Advanced</label>\r\n                                        <input {...formik.getFieldProps('advanced')} value={demandCalculationData?.totalAdvance || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.advanced && formik.errors.advanced ? formik.errors.advanced : null}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-4 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <p>Remain Advance : <span className='text-orange-700 font-semibold'>{demandCalculationData?.remaningAdvanceAmount || 0}</span></p>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-4 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <p> Payable Amount : <span className='text-green-700 font-semibold'>{demandCalculationData?.totalPayAmount ? '₹' + demandCalculationData?.totalPayAmount : 0}</span></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-span-12 grid grid-cols-2 mt-10\">\r\n\r\n                                        <div className=''></div>\r\n                                        <div className='md:pl-10 text-right space-x-5'>\r\n                                            <button type='button' onClick={() => navigate(-1)} className=\" px-6 py-2.5 bg-sky-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-sky-700 hover:shadow-lg focus:bg-sky-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Back</button>\r\n                                            <button type='submit' className=\" px-6 py-2.5 bg-indigo-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-indigo-600 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Pay Tax</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaterDemandPayment"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","background","border","props","React","modalIsOpen","setIsOpen","transData","navigate","useNavigate","paymentData","closeModal","console","log","useEffect","className","isOpen","onAfterOpen","onRequestClose","style","contentLabel","onClick","src","imgSucess","alt","srcset","transectionNo","applicationNo","tranType","amount","transectionDate","useState","applicationFullData","setApplicationFullData","isLoading","setIsLoading","demandData","setDemandData","demandCalculationData","setDemandCalculationData","fromDate","setFromDate","uptoDate","setUptoDate","paymentStatus","setPaymentStatus","setTransData","id","useParams","notify","useContext","contextVar","WaterApiList","api_getTranNo","api_waterApprovedApplicationDetails","api_waterListDemand","api_waterDemandCalculation","api_waterDemandPayment","header","getApplicationDetail","getDemandListDetails","demandCalculation","payload","axios","then","response","data","catch","error","res","err","dreturn","status","razorpay_order_id","razorpay_payment_id","validationSchema","yup","monthFrom","required","monthUpto","formik","useFormik","enableReinitialize","initialValues","penalty","rebate","advanced","onSubmit","values","resetForm","totalPayAmount","RazorpayPaymentScreen","message","submitForm","filterDate","consumerDemands","filter","item","moment","demand_upto","format","toString","BarLoader","ulb_name","ward_name","consumer_no","connection_through","saf_no","holding_no","owner_char_type","map","items","i","demand_from","balance_amount","connection_type","handleSubmit","onChange","e","name","target","value","getFieldProps","type","index","touched","errors","totalDemand","disabled","totalPenalty","totalRebate","totalAdvance","remaningAdvanceAmount"],"sourceRoot":""}