{"version":3,"file":"static/js/4161.08cfe924.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingInformationScreen.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingForm1.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingDocTable.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingFormDoc.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingReview.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingIndex.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\n\r\nfunction HoardingInformationScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    const { getHoardingCategory } = AdvertisementApiList()\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        // showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                {hoardingCategory?.map((data) => (\r\n                    <div className={`${divStyle}flex mt-3`}>\r\n                        <span className={`${tittleStyle} flex-1 `}>{data?.subtype}</span>\r\n\r\n                        <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                    </div>\r\n                ))}\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingInformationScreen","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingForm1\r\n//    DESCRIPTION - HoardingForm1 Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport { allowFloatInput, allowNumberInput, getCurrentDate } from '../../../FunctionComponent/ValidationFunction';\r\nimport HoardingInformationScreen from './HoardingInformationScreen';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\n\r\nfunction HoardingForm1(props) {\r\n\r\n    const { api_getAdvertMasterData, api_getWardList, api_getDistrictList, getHoardingCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, id, existingApplicationDetails, type } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600 font-bold\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const [masterData, setmasterData] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [districtList, setdistrictList] = useState()\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        hoardingCategory: yup.string().required('This field is Required'),\r\n        location: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('This field is Required'),\r\n        // latitude: yup.string().required('This field is Required'),\r\n        zone: yup.string().required('This field is Required'),\r\n        lengthOfHoarding: yup.string().required('This field is Required'),\r\n        widthOfHoarding: yup.string().required('This field is Required'),\r\n        areaOfBoard: yup.string().required('This field is Required'),\r\n        landmark: yup.string().required('This field is Required'),\r\n        propertyType: yup.string().required('This field is Required'),\r\n        facing: yup.string().required('This field is Required'),\r\n        materialType: yup.string().required('This field is Required'),\r\n        illumination: yup.string().required('This field is Required'),\r\n        // ownerName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        // ownerAddress: yup.string().required('This field is Required'),\r\n        // ownerCity: yup.string().required('This field is Required'),\r\n        // ownerPhone: yup.number().required('Enter mobile no.'),\r\n        // ownerWhatsappNo: yup.number().required('Enter mobile no.'),\r\n\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        lisenseYear: '',\r\n        hoardingCategory: '',\r\n        location: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        lengthOfHoarding: '',\r\n        widthOfHoarding: '',\r\n        areaOfBoard: '',\r\n        landmark: '',\r\n        propertyType: '',\r\n        ownerName: '',\r\n        ownerAddress: '',\r\n        ownerCity: '',\r\n        ownerPhone: '',\r\n        ownerWhatsappNo: '',\r\n        facing: '',\r\n        materialType: '',\r\n        illumination: '',\r\n        zone: '',\r\n\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            console.log(\"hoarding1...1\", values, reviewIdName)\r\n            // props.collectFormDataFun('hoarding1', values, reviewIdName)\r\n            collectFormDataFun('hoarding1', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getMasterDataFun(value) }\r\n        // { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n        { name == 'ownerPhone' && formik.setFieldValue(\"ownerPhone\", allowNumberInput(value, formik.values.ownerPhone, 10)) }\r\n        { name == 'ownerWhatsappNo' && formik.setFieldValue(\"ownerWhatsappNo\", allowNumberInput(value, formik.values.ownerWhatsappNo, 12)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n\r\n    }\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    const getMasterDataFun = (ulbId) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            // // ulbId: ulbId,\r\n            ulbId: 1,\r\n        }\r\n        axios.post(`${api_getAdvertMasterData}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for hoarding', response)\r\n                setmasterData(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    useEffect(() => {\r\n        getWardListFun()\r\n    }, [])\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ward list', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('hoardingCategory', existingApplicationDetails?.typology_id)\r\n        formik.setFieldValue('location', existingApplicationDetails?.location)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('lengthOfHoarding', existingApplicationDetails?.length)\r\n        formik.setFieldValue('widthOfHoarding', existingApplicationDetails?.width)\r\n        formik.setFieldValue('areaOfBoard', existingApplicationDetails?.area)\r\n        formik.setFieldValue('landmark', existingApplicationDetails?.landmark)\r\n        formik.setFieldValue('propertyType', existingApplicationDetails?.property_type)\r\n        formik.setFieldValue('ownerName', existingApplicationDetails?.property_owner_name)\r\n        formik.setFieldValue('ownerAddress', existingApplicationDetails?.property_owner_address)\r\n        formik.setFieldValue('ownerCity', existingApplicationDetails?.property_owner_city)\r\n        formik.setFieldValue('ownerPhone', existingApplicationDetails?.property_owner_mobile_no)\r\n        formik.setFieldValue('ownerWhatsappNo', existingApplicationDetails?.property_owner_whatsapp_no)\r\n        formik.setFieldValue('facing', existingApplicationDetails?.facing)\r\n        formik.setFieldValue('materialType', existingApplicationDetails?.material)\r\n        formik.setFieldValue('illumination', existingApplicationDetails?.illumination_id)\r\n        formik.setFieldValue('zone', existingApplicationDetails?.zone_id)\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\"existing application detail\", existingApplicationDetails)\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"ward master data...1\", wardList)\r\n    console.log(\"district list\", districtList?.Jharkhand)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 '>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto '>\r\n                        <div className='col-span-8'>\r\n                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto pb-8 p-2 mt-3'>\r\n                                {/* DETAILS */}\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}> License Year <span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('lisenseYear')} className={`${inputStyle} bg-white`} >\r\n                                                <option value=''>select </option>\r\n                                                <option value={118}>2022-23 </option>\r\n                                                <option value={119}>2023-24 </option>\r\n\r\n                                            </select>\r\n                                            {/* <input type=\"text\" name='lisenseYear' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lisenseYear}\r\n                                            /> */}\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lisenseYear && formik.errors.lisenseYear ? formik.errors.lisenseYear : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}>Hoarding Category<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('hoardingCategory')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                {hoardingCategory?.map((items) => (\r\n                                                    <option value={items?.id}>{items?.subtype}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hoardingCategory && formik.errors.hoardingCategory ? formik.errors.hoardingCategory : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Location<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='location' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.location}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.location && formik.errors.location ? formik.errors.location : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Longitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.longitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.latitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Length of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='lengthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lengthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lengthOfHoarding && formik.errors.lengthOfHoarding ? formik.errors.lengthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Width of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='widthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.widthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.widthOfHoarding && formik.errors.widthOfHoarding ? formik.errors.widthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Area of Board(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='areaOfBoard' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.areaOfBoard}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.areaOfBoard && formik.errors.areaOfBoard ? formik.errors.areaOfBoard : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Landmark<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='landmark' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.landmark}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landmark && formik.errors.landmark ? formik.errors.landmark : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Facing<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='facing' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.facing}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='north'>North</option>\r\n                                                <option value='south'>South</option>\r\n                                                <option value='east'>East</option>\r\n                                                <option value='west'>West</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.facing && formik.errors.facing ? formik.errors.facing : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Property Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='propertyType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.propertyType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='public'>Public</option>\r\n                                                <option value='private'>Private</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.propertyType && formik.errors.propertyType ? formik.errors.propertyType : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Zone<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n\r\n                                            <select {...formik.getFieldProps('zone')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                <option value={1}>Zone A</option>\r\n                                                <option value={2}>Zone B</option>\r\n                                                <option value={3}>Zone C</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.zone && formik.errors.zone ? formik.errors.zone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerName' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerName}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerName && formik.errors.ownerName ? formik.errors.ownerName : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerAddress' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerAddress}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerAddress && formik.errors.ownerAddress ? formik.errors.ownerAddress : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner City(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerCity' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerCity}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerCity && formik.errors.ownerCity ? formik.errors.ownerCity : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerPhone' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerPhone}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerPhone && formik.errors.ownerPhone ? formik.errors.ownerPhone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerWhatsappNo' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerWhatsappNo}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerWhatsappNo && formik.errors.ownerWhatsappNo ? formik.errors.ownerWhatsappNo : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Material Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='materialType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.materialType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='metal'>Metal</option>\r\n                                                <option value='wood'>Wood</option>\r\n                                                <option value='others'>Others</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.materialType && formik.errors.materialType ? formik.errors.materialType : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Illumination<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='illumination' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.illumination}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='0'>No</option>\r\n                                                <option value='1'>Yes</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.illumination && formik.errors.illumination ? formik.errors.illumination : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='float-right p-2'>\r\n                                <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-span-4 hidden lg:block md:block'>\r\n                            <div className='-mt-14'>\r\n                                <HoardingInformationScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingForm1\r\n","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingDocTable\r\n//    DESCRIPTION - HoardingDocTable Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600 font-bold\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState(null)\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: '',\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setTimeout(() => {\r\n                setimgPath(values)\r\n                props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n            }, 500);\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default HoardingDocTable","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingFormDoc\r\n//    DESCRIPTION - HoardingFormDoc Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../../DocumentUploadSteps';\r\nimport HoardingDocTable from './HoardingDocTable';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction HoardingFormDoc(props) {\r\n\r\n  const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n  const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n  const [collectDoc, setcollectDoc] = useState([]);\r\n  const [docList, setdocList] = useState()\r\n  const [renewDocList, setrenewDocList] = useState()\r\n  const [isLoading, setisLoading] = useState(false);\r\n\r\n  const notify = (toastData, type) => {\r\n    toast.dismiss();\r\n    if (type == 'success') {\r\n      toast.success(toastData)\r\n    }\r\n    if (type == 'error') {\r\n      toast.error(toastData)\r\n    }\r\n  };\r\n\r\n  const collectAllData = (key, formData) => {\r\n    console.log(\"prev data in document\", collectDoc);\r\n    // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n    if (collectDoc[key] !== undefined) {\r\n      console.log('inside index match...')\r\n      collectDoc[key] = formData\r\n      return\r\n    }\r\n    setcollectDoc([...collectDoc, formData]);\r\n  };\r\n  console.log(\"all data doc\", collectDoc)\r\n\r\n  const handleDocument = () => {\r\n    if (docList?.AGENCY_HORDING_LICENSE?.length == collectDoc.length) {\r\n      collectFormDataFun('hoardingDoc', collectDoc)\r\n      setFormIndex(3)\r\n    }\r\n    else {\r\n      notify(\"Upload All Document\", \"error\")\r\n    }\r\n\r\n  }\r\n\r\n  ///////////{*** GET DOCUMENT LIST***}/////////\r\n  useEffect(() => {\r\n    getDocumentList()\r\n  }, [])\r\n  const getDocumentList = () => {\r\n    const requestBody = {\r\n      // deviceId: \"agency\",\r\n    }\r\n    axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('hoarding document list', response.data)\r\n        if (type == 'renew') {\r\n          setrenewDocList(response.data)\r\n        }\r\n        else {\r\n          setdocList(response.data)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n\r\n  console.log(\"document list for hoarding...\", docList?.AgencyHordingLicense)\r\n  return (\r\n    <>\r\n\r\n      {/* upload document */}\r\n      <div className='absolute w-full top-0 ml-4 '>\r\n        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2'>\r\n          <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n            <div className=\"p-1\">\r\n              <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                <div>\r\n                  <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                </div>\r\n              </div>\r\n              <div className='mt-2'>\r\n                {docList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n                {renewDocList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3\">\r\n              <div className='md:pl-0 col-span-6'>\r\n                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>Back</button>\r\n              </div>\r\n              <div className='col-span-6'>\r\n                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n              <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-span-4'>\r\n            <div className='-mt-20'>\r\n              <DocumentUploadSteps />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HoardingFormDoc","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingReview\r\n//    DESCRIPTION - HoardingReview Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React from 'react'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction HoardingReview(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-md text-gray-600  font-bold\"\r\n    let inputStyle = \"mt-6 -ml-7 text-sm text-gray-600\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.reviewIdNameData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Application Details</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lisenseYear || props?.reviewIdNameData?.hoarding1?.license_year)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hoarding Category </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.hoardingCategory || props?.reviewIdNameData?.hoarding1?.typology_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.longitude || props?.reviewIdNameData?.hoarding1?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.latitude || props?.reviewIdNameData?.hoarding1?.latitude)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Location </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.location || props?.reviewIdNameData?.hoarding1?.location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Length of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lengthOfHoarding || props?.reviewIdNameData?.hoarding1?.length)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Width of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.widthOfHoarding || props?.reviewIdNameData?.hoarding1?.width)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Area of Board</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.areaOfBoard || props?.reviewIdNameData?.hoarding1?.area)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Landmark</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.landmark || props?.reviewIdNameData?.hoarding1?.landmark)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Facing </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.facing || props?.reviewIdNameData?.hoarding1?.facing)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Property Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.propertyType || props?.reviewIdNameData?.hoarding1?.property_type)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Zone </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.zone || props?.reviewIdNameData?.hoarding1?.zone_id)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerName || props?.reviewIdNameData?.hoarding1?.property_owner_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerAddress || props?.reviewIdNameData?.hoarding1?.property_owner_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner City(If property type is private) </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerCity || props?.reviewIdNameData?.hoarding1?.property_owner_city)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerPhone || props?.reviewIdNameData?.hoarding1?.property_owner_mobile_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerWhatsappNo || props?.reviewIdNameData?.hoarding1?.property_owner_whatsapp_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Material Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.materialType || props?.reviewIdNameData?.hoarding1?.material)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Illumination  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.illumination || props?.reviewIdNameData?.hoarding1?.illumination_name)}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 text-lg bg-white text-gray-600 font-sans font-bold'>Documents Uploaded</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.hoardingDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} </p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>Back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingReview","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - swati sharma\r\n//    Version - 1.0\r\n//    Date - 11/04/23\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - HoardingIndex\r\n//    DESCRIPTION - HoardingIndex Component  \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../../AdvrtSuccessScreen'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport HoardingForm1 from './HoardingForm1'\r\nimport HoardingFormDoc from './HoardingFormDoc'\r\nimport HoardingReview from './HoardingReview'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\nfunction HoardingIndex() {\r\n\r\n    const { ulbId, applicationId, type } = useParams();\r\n\r\n    console.log(\"ulbid in param\", ulbId)\r\n    console.log(\"application id in param\", applicationId)\r\n    console.log(\"type in param\", type)\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState({})\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postHoardingApplication, api_renewHoarding_license, api_getHoardingApplicationDetailsToRenew } = AdvertisementApiList()\r\n\r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'hoarding1') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc)\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitHoardingApplication()\r\n    }\r\n\r\n    const submitHoardingApplication = () => {\r\n        setisLoading(true)\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postHoardingApplication  //new apply\r\n            requestBody = {\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewHoarding_license  //new apply\r\n            requestBody = {\r\n                applicationId: applicationId,\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n\r\n        }\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify('submitted successfully', 'success')\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify('failed to submit', 'error')\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        id: ulbId,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getHoardingApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/advertisement-dashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Hoarding Registration</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            {/* You Can Get License To Advertise Your Business Name On Your Shop */}\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600'>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/1684/1684121.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm1 values={values} /></div>\r\n                {/* <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm2 values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingForm3 values={values} /></div> */}\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingFormDoc values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingReview values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingIndex"],"names":["getHoardingCategory","AdvertisementApiList","_useState","useState","_useState2","_slicedToArray","hoardingCategory","sethoardingCategory","useEffect","getHoardingCategoryList","axios","concat","ApiHeaderAdvrt","then","response","console","log","data","catch","error","_jsx","_Fragment","children","_jsxs","className","xmlns","fill","viewBox","stroke","class","d","map","subtype","descriptions","src","props","_AdvertisementApiList","api_getAdvertMasterData","api_getWardList","api_getDistrictList","_CitizenApplyApiList","CitizenApplyApiList","api_wardByUlb","api_getAllUlb","_props$values","values","setFormIndex","showLoader","collectFormDataFun","existingApplicationDetails","toastFun","id","type","labelStyle","inputStyle","setmasterData","_useState3","_useState4","wardList","setwardList","_useState5","_useState6","districtList","_useState7","_useState8","setstoreUlbValue","_useState9","_useState10","reviewIdName","setreviewIdName","_useState11","_useState12","_useState13","_useState14","isLoading","setisLoading","_useState15","_useState16","erroState","seterroState","validationSchema","yup","required","location","zone","lengthOfHoarding","widthOfHoarding","areaOfBoard","landmark","propertyType","facing","materialType","illumination","formik","useFormik","initialValues","lisenseYear","longitude","latitude","ownerName","ownerAddress","ownerCity","ownerPhone","ownerWhatsappNo","onSubmit","getMasterDataFun","ulbId","setTimeout","getWardListFun","feedApplicationData","setFieldValue","typology_id","length","width","area","property_type","property_owner_name","property_owner_address","property_owner_city","property_owner_mobile_no","property_owner_whatsapp_no","material","illumination_id","zone_id","BarLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","Jharkhand","handleSubmit","onChange","e","name","target","value","_objectSpread","_defineProperty","selectedIndex","text","allowNumberInput","allowFloatInput","getFieldProps","touched","errors","items","placeholder","handleChange","HoardingInformationScreen","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","_props$data","_props$data2","_props$data3","_imgPath$image","_imgPath$image2","_imgPath$image3","_imgPath$image4","_imgPath$image4$name","_imgPath$image5","_imgPath$image5$name","_imgPath$image6","_imgPath$image6$name","_imgPath$image7","_imgPath$image7$name","_imgPath$image8","_imgPath$image8$name","_imgPath$image9","_imgPath$image9$name","_imgPath$image10","_imgPath$image10$name","_imgPath$image11","_imgPath$image11$name","imgPath","setimgPath","DocUrl","setDocUrl","modalIsOpen","setIsOpen","imageFile","setimageFile","modalAction","url","image","docCode","ownerDtlId","collectAllDataFun","mykey","handleFile","file","reader","FileReader","onloadend","result","readAsDataURL","files","encType","document_name","docType","undefined","alt","split","pop","onClick","Tooltip","accept","webkitdirectory","isOpen","onAfterOpen","onRequestClose","style","contentLabel","frameborder","_docList$AGENCY_HORDI2","_renewDocList$AGENCY_","api_getSelfAdvertDocList","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","collectAllData","key","formData","_toConsumableArray","getDocumentList","AgencyHordingLicense","AGENCY_HORDING_LICENSE","index","HoardingDocTable","_docList$AGENCY_HORDI","toastData","toast","notify","DocumentUploadSteps","_props$reviewIdNameDa","_props$reviewIdNameDa2","_props$reviewIdNameDa3","_props$reviewIdNameDa4","_props$reviewIdNameDa5","_props$reviewIdNameDa6","_props$reviewIdNameDa7","_props$reviewIdNameDa8","_props$reviewIdNameDa9","_props$reviewIdNameDa10","_props$reviewIdNameDa11","_props$reviewIdNameDa12","_props$reviewIdNameDa13","_props$reviewIdNameDa14","_props$reviewIdNameDa15","_props$reviewIdNameDa16","_props$reviewIdNameDa17","_props$reviewIdNameDa18","_props$reviewIdNameDa19","_props$reviewIdNameDa20","_props$reviewIdNameDa21","_props$reviewIdNameDa22","_props$reviewIdNameDa23","_props$reviewIdNameDa24","_props$reviewIdNameDa25","_props$reviewIdNameDa26","_props$reviewIdNameDa27","_props$reviewIdNameDa28","_props$reviewIdNameDa29","_props$reviewIdNameDa30","_props$reviewIdNameDa31","_props$reviewIdNameDa32","_props$reviewIdNameDa33","_props$reviewIdNameDa34","_props$reviewIdNameDa35","_props$reviewIdNameDa36","_props$reviewIdNameDa37","_props$reviewIdNameDa38","_props$reviewIdNameDa39","_props$reviewIdNameDa40","_props$reviewIdNameDa41","_props$reviewIdNameDa42","_props$reviewIdNameDa43","_props$reviewIdNameDa44","_props$reviewIdNameDa45","_props$reviewIdNameDa46","_props$reviewIdNameDa47","_props$reviewIdNameDa48","_props$reviewIdNameDa49","_props$reviewIdNameDa50","_props$reviewIdNameDa51","_props$reviewIdNameDa52","_props$reviewIdNameDa53","_props$reviewIdNameDa54","_props$reviewIdNameDa55","_props$reviewIdNameDa56","_props$reviewIdNameDa57","_props$reviewIdNameDa58","_props$reviewIdNameDa59","_props$reviewIdNameDa60","_props$reviewIdNameDa61","_props$reviewIdNameDa62","_props$reviewIdNameDa63","_props$reviewIdNameDa64","_props$reviewIdNameDa65","_props$reviewIdNameDa66","_props$reviewIdNameDa67","_props$reviewIdNameDa68","_props$reviewIdNameDa69","_props$reviewIdNameDa70","_props$reviewIdNameDa71","_props$reviewIdNameDa72","_props$reviewIdNameDa73","_props$reviewIdNameDa74","_props$reviewIdNameDa75","_props$reviewIdNameDa76","_props$reviewIdNameDa77","_props$reviewIdNameDa78","reviewIdNameData","nullToNA","hoarding1","license_year","typology_name","illumination_name","hoardingDoc","_data$image","submitFun","_useParams","useParams","applicationId","formIndex","allFormData","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setshow","setexistingApplicationDetails","setapplicationType","_useState17","_useState18","api_postHoardingApplication","api_renewHoarding_license","api_getHoardingApplicationDetailsToRenew","selfAdvertisementDoc","submitHoardingApplication","requestBody","_allFormData$hoarding","_allFormData$hoarding2","_allFormData$hoarding3","_allFormData$hoarding4","_allFormData$hoarding5","_allFormData$hoarding6","_allFormData$hoarding7","_allFormData$hoarding8","_allFormData$hoarding9","_allFormData$hoarding10","_allFormData$hoarding11","_allFormData$hoarding12","_allFormData$hoarding13","_allFormData$hoarding14","_allFormData$hoarding15","_allFormData$hoarding16","_allFormData$hoarding17","_allFormData$hoarding18","_allFormData$hoarding19","_allFormData$hoarding20","_allFormData$hoarding21","_allFormData$hoarding22","_allFormData$hoarding23","_allFormData$hoarding24","_allFormData$hoarding25","_allFormData$hoarding26","_allFormData$hoarding27","_allFormData$hoarding28","_allFormData$hoarding29","_allFormData$hoarding30","_allFormData$hoarding31","_allFormData$hoarding32","_allFormData$hoarding33","_allFormData$hoarding34","_allFormData$hoarding35","_allFormData$hoarding36","_allFormData$hoarding37","_allFormData$hoarding38","zoneId","licenseYear","HordingType","displayLocation","displayArea","indicateFacing","displayLandMark","propertyOwnerName","propertyOwnerAddress","propertyOwnerCity","propertyOwnerWhatsappNo","propertyOwnerMobileNo","documents","val","fetchApplicationDetails","status","AdvrtSuccessScreen","responseScreenData","BrandLoader","ToastContainer","position","autoClose","HoardingForm1","HoardingFormDoc","HoardingReview"],"sourceRoot":""}