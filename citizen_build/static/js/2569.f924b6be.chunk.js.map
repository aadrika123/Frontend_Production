{"version":3,"file":"static/js/2569.f924b6be.chunk.js","mappings":"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","sources":["Components/ApiList/ApiHeader.js","Components/Common/BarLoader.js","Pages/AdvertisementModule/Advertisement/DocumentUploadSteps.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocTable.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementDocForm.jsx","Pages/AdvertisementModule/Advertisement/BackButton.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/AdvtCategoryScreen.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementForm1.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/ReviewSelfAdvertForm.jsx","Pages/AdvertisementModule/Advertisement/AdvrtSuccessScreen.jsx","Pages/AdvertisementModule/Advertisement/SelfAdvertisement/SelfAdvertisementIndexForm.jsx","Pages/AdvertisementModule/Advertisement/MovableVehicle/MovableVehicleDocTable.jsx","Pages/AdvertisementModule/Advertisement/MovableVehicle/MovableVehicleDocForm.jsx","Pages/AdvertisementModule/Advertisement/MovableVehicle/MovableVehicleForm.jsx","Pages/AdvertisementModule/Advertisement/MovableVehicle/ReviewMovableApplication.jsx","Pages/AdvertisementModule/Advertisement/MovableVehicle/MovableVehicleIndexForm.jsx","Pages/AdvertisementModule/Advertisement/PrivateLand/PrivateLandDocTable.jsx","Pages/AdvertisementModule/Advertisement/PrivateLand/PrivateLandDocForm.jsx","Pages/AdvertisementModule/Advertisement/PrivateLand/PrivateLandForm.jsx","Pages/AdvertisementModule/Advertisement/PrivateLand/ReviewPrivateLandApplication.jsx","Pages/AdvertisementModule/Advertisement/PrivateLand/PrivateLandIndexForm.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyInformationScreen.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDetailForm.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDocTable.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDetailDocForm.jsx","Pages/AdvertisementModule/Advertisement/Agency/ReviewAgencyApplication.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDirectorDetail.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDetailIndexForm.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingInformationScreen.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingForm1.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingForm3.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingDocTable.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingFormDoc.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingReview.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingIndex.jsx","Pages/AdvertisementModule/Advertisement/SelfPrintable/SelfApprovalForm.jsx","Pages/AdvertisementModule/Advertisement/SelfPrintable/SelfApprovalIndexForm.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyNotification.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingApplicationFullDetail.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingApprovedApplication.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ReuploadHoardingDocTable.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ReuploadHoardingDocModal.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingPendingList.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingRejectedApplication.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingUnpaidList.jsx","Pages/AdvertisementModule/Advertisement/Agency/BarGraphComponent.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/AgencyDashboard.jsx","Pages/AdvertisementModule/Advertisement/BackToAgency.jsx","Pages/AdvertisementModule/GlobalFilterSearch.jsx","Pages/AdvertisementModule/ListTableAdvert.jsx","Pages/AdvertisementModule/ErrorPage.js","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingPendingList.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingApprovedList.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingRejectedList.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/HoardingPaymentModal.jsx","Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingUnpaidList.jsx","Pages/AdvertisementModule/Advertisement/PaymentScreen.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallDocForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/ReviewFormBanquetMarriageHall.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallFormIndex.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaDocForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/ReviewDharamshalaForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaIndex.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelDocForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/ReviewHostel.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelIndex.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/ReviewLodge.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgeForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgeDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgeDocForm.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgeIndex.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageApplicationFullDetails.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriagePaymentModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/ReuploadBanquetDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/ReuploadBanquetDocModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/BanquetMarriageHall/BanquetMarriagePendingApplicationList.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelApplicationFullDetails.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelPaymentModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/ReuploadHostelDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/ReuploadHostelDocModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Hostel/HostelPendingApplicationList.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaApplicationFullDetails.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaPaymentModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/ReuploadDharamshalaDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/ReuploadDharamshalaDocModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Dharmsala/DharamshalaPendingApplicationList.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgeApplicationFullDetails.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgePaymentModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/ReuploadLodgeDocTable.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/ReuploadLodgeDocModal.jsx","Pages/AdvertisementModule/marketing/MarketingModules/Lodge/LodgePendingApplicationList.jsx","Pages/AdvertisementModule/marketing/MarketingDashboard.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingRenewList.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingArchivedList.jsx","Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingBlacklistedList.jsx","Pages/AdvertisementModule/Advertisement/AdvtPaymentReceipt.jsx","Pages/AdvertisementModule/Advertisement/AdvtPaymentReceiptIndex.jsx","Pages/AdvertisementModule/Advertisement/AdvertisementRoutes.jsx","Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx"],"sourcesContent":["\r\nexport default function ApiHeader() {\r\n    let token = window.localStorage.getItem('citizen_token')\r\n    const header = {\r\n        // timeout: 1,\r\n        timeout: 60000,\r\n        headers:\r\n        {\r\n            Authorization: `Bearer ${token}`,\r\n            Accept: 'application/json',\r\n        }\r\n    }\r\n    return header\r\n}\r\n\r\n","import React from 'react'\r\nimport './barloader.css'\r\nimport jlogo from '../../Components/Media/jlogo.svg'\r\n\r\n\r\nfunction BarLoader() {\r\n    return (\r\n        <>\r\n            <div className='p-4 w-screen h-screen fixed top-0 left-0 flex flex-col justify-center items-center' style={{ 'zIndex': 1000 }}>\r\n                <div className='h-screen w-screen top-0 left-0 opacity-30 absolute flex justify-center items-center'>\r\n                    <div className='w-1/3 h-1/3 '></div>\r\n                </div>\r\n                <div className=''>\r\n                    <span className=\"loader px-20 py-20 text-center\"></span>\r\n                </div>\r\n                <div className='text-center -ml-16'>Loading..</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BarLoader","import React from 'react'\r\n\r\nfunction DocumentUploadSteps() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-xl'>How To Uplaod Document ?</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 1 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >Choose a file which you want to uplaod </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 2 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To upload image click on upload button</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 3 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on preview to view uploaded image </span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Step 4 :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Click on Save & Next button to proceed with the application</span>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div> */}\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/image-upload-concept-illustration_114360-798.jpg?w=826&t=st=1675677630~exp=1675678230~hmac=3ce8cef91d846d7436a3f83357381af891a8e1e3c51eeef330e620448f1420c8' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentUploadSteps","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props?.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n            // props.collectAllDataFun(props.mykey, values);\r\n\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n\r\n    }\r\n\r\n    console.log(\"mykey\", props.mykey)\r\n    console.log(\"image path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' &&\r\n                        <div className='px-1'>\r\n                            <h1>click </h1>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocTable","import { Info } from '@mui/icons-material'\r\nimport React from 'react'\r\n\r\nfunction SelfAdvrtInformationScreen() {\r\n\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your address where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div>\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto'/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvrtInformationScreen","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\nimport SelfAdvertisementDocTable from './SelfAdvertisementDocTable';\r\nimport SelfAdvrtInformationScreen from './SelfAdvrtInformationScreen';\r\n// import * as yup from 'yup'\r\n\r\n\r\nfunction SelfAdvertisementDocForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n\r\n    console.log(\"all data doc inside document view\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('selfAdvertisementDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'></h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.SELF_ADVERT?.map((items, index) => (\r\n                                    <SelfAdvertisementDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementDocForm","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction BackButton() {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <Link to='/advertisement-dashboard'>\r\n                <div className='flex-1 '>\r\n                    <button type='button' className='flex uppercase text-xs bg-indigo-500 text-white float-right font-semibold  px-2 py-1 rounded leading-5 shadow-lg'><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 h-5 mr-1\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z\" />\r\n                    </svg>\r\n                        back to dashboard</button>\r\n                </div>\r\n            </Link>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BackButton","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport axios from 'axios'\r\n\r\nfunction AdvtCategoryScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n\r\n    const { api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n\r\n    ///////////{***get advertisement category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        axios.post(`${api_getAdvertisementCategory}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                setadvtCategory(response.data.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"advertisement category screen\", advtCategory)\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6 '>\r\n                <div className='h-[42rem] overflow-y-auto'>\r\n                    <div className='flex flex-row'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                        </svg>\r\n                        <h1 className='ml-2 text-lg'>Typology Category</h1>\r\n                    </div>\r\n                    {advtCategory?.map((data) => (\r\n                        <div className={`${divStyle}flex mt-3 `}>\r\n                            <span className={`${tittleStyle} flex-1 `}>{data?.type}</span>\r\n\r\n                            <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdvtCategoryScreen","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from './SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport FindTradeLicense from '../FindTradeLicense';\r\nimport Modal from 'react-modal';\r\nimport BackButton from '../BackButton';\r\nimport Loader from '../Loader';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../FunctionComponent/ValidationFunction';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport AdvtCategoryScreen from './AdvtCategoryScreen';\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport useSetTitle from '../../../../Components/GlobalData/UseSetTitle';\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction SelfAdvertisementForm1(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails, api_getAdvertisementCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [advtCategory, setadvtCategory] = useState()\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n    // const [confirmUlb, setconfirmUlb] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        // email: yup.string().required('Enter email address').min(11, 'enter atleast 11 character'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.number().required('Enter mobile no.'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        entityName: yup.string().required('This field is Required'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        installationLocation: yup.string().required('This field is Required'),\r\n        brandDisplayName: yup.string().required('This field is Required'),\r\n        // holdingNo: yup.string().required('This field is Required'),\r\n        // tradeLicenseNo: yup.string().required('This field is Required'),\r\n        gstNo: yup.string().required('This field is Required'),\r\n        displayArea: yup.string().required('Enter Number'),\r\n        displayType: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('Enter Number'),\r\n        // latitude: yup.string().required('Enter Number'),\r\n    })\r\n\r\n    const initialValues = {\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        aadharNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        installationLocation: '',\r\n        brandDisplayName: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        gstNo: '',\r\n        displayArea: '',\r\n        displayType: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        advrtCategory: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            console.log(\"self Advertisement\", values)\r\n            collectFormDataFun('selfAdvertisement', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n    useSetTitle('', false)\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // { name == 'ulb' && handleUlb(value) }\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one')\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        else\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n        { name == 'displayArea' && formik.setFieldValue(\"displayArea\", allowFloatInput(value, formik.values.displayArea, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n\r\n    // const handleUlb = (ulbId) => {\r\n    //     setconfirmUlb(ulbId)\r\n    // }\r\n    // console.log(\"ulb is confirmed\", confirmUlb)\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n    // console.log(\"ulb value...\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        console.log(\"ulb id in request body\", requestBody)\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list..16', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ward list', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n                // setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** ADVERTISEMENT CATEGORY***}/////////\r\n    useEffect(() => {\r\n        getCategoryList()\r\n    }, [])\r\n    const getCategoryList = () => {\r\n        axios.post(`${api_getAdvertisementCategory}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('advertisement category', response.data.data)\r\n                setadvtCategory(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residence_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_no)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('installationLocation', existingApplicationDetails?.installation_location)\r\n        formik.setFieldValue('brandDisplayName', existingApplicationDetails?.brand_display_name)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('displayArea', existingApplicationDetails?.display_area)\r\n        formik.setFieldValue('displayType', existingApplicationDetails?.display_type)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('advrtCategory', existingApplicationDetails?.advt_category)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"existing application details\", existingApplicationDetails)\r\n    console.log(\"advertisement category..2\", advtCategory)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute top-2 ml-4 w-full'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12 '>\r\n                                    {storeUlbValue == undefined ?\r\n                                        <>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-12'>\r\n                                                Registration of a <span className='text-gray-700 font-bold'>Self Advertisement</span> is mendatory under the urban local body it falls in.\r\n                                                If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-6 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                            <option>select </option>\r\n                                                            {ulbList?.map((items) => (\r\n                                                                <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    {/* <div className='text-center bg-indigo-500 px-2 py-1 text-xs text-white rounded leading-5 mt-6'>\r\n                                                        <button className='' onClick={handleUlb}>Confirm</button>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                <div className='animate-wiggle'>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24' />\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        <div className='flex flex-row mt-4 space-x-2  '>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg>\r\n\r\n                                            <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value={existingApplicationDetails?.ward_id}>{existingApplicationDetails?.ward_name}</option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value={existingApplicationDetails?.permanent_ward_id}>{existingApplicationDetails?.permanent_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled >\r\n                                                                <option value={existingApplicationDetails?.entity_ward_id}>{existingApplicationDetails?.entity_ward_name}</option>\r\n                                                                {/* <option>select </option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800 h-[42rem]'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Installation Location <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Advertisement Category<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('advrtCategory')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\" disabled selected>select </option>\r\n                                                                {advtCategory?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.type}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.advrtCategory && formik.errors.advrtCategory ? formik.errors.advrtCategory : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Brand Display Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='brandDisplayName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayName && formik.errors.brandDisplayName ? formik.errors.brandDisplayName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Area(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.displayArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} >\r\n                                                                <option value=\"\">select </option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            {/* <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude  </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='flex space-x-2'>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(1)}>Advertisement Type</div>\r\n                                                <div className='flex-1 text-sm bg-indigo-500 text-white py-1 px-2 text-center cursor-pointer' onClick={() => settabIndex(2)}>Other</div>\r\n                                            </div>\r\n                                            {tabIndex == 1 &&\r\n                                                <div className='-mt-16 '>\r\n                                                    <AdvtCategoryScreen />\r\n                                                </div>\r\n                                            }\r\n                                            {tabIndex == 2 &&\r\n                                                <div className='-mt-16'>\r\n                                                    <SelfAdvrtInformationScreen />\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementForm1","import React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewSelfAdvertForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 -ml-7 text-md text-gray-700 font-bold\"\r\n\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form document...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.license_year_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.applicantName || props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.applicant)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.fatherName || props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.father)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.email || props?.reviewIdNameData?.selfAdvertisement?.licenseYear || props?.reviewIdNameData?.selfAdvertisement?.email)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceAddress || props?.reviewIdNameData?.selfAdvertisement?.residence_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.residenceWardNo || props?.reviewIdNameData?.selfAdvertisement?.ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentAddress || props?.reviewIdNameData?.selfAdvertisement?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.permanentWardNo || props?.reviewIdNameData?.selfAdvertisement?.permanent_ward_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.mobileNo || props?.reviewIdNameData?.selfAdvertisement?.mobile_no)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.aadharNo || props?.reviewIdNameData?.selfAdvertisement?.aadhar_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityName || props?.reviewIdNameData?.selfAdvertisement?.entity_name)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityAddress || props?.reviewIdNameData?.selfAdvertisement?.entity_address)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.entityWardNo || props?.reviewIdNameData?.selfAdvertisement?.entity_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Installation Location</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.installationLocation || props?.reviewIdNameData?.selfAdvertisement?.installation_location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Brand Display Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.brandDisplayName || props?.reviewIdNameData?.selfAdvertisement?.brand_display_name)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.holdingNo || props?.reviewIdNameData?.selfAdvertisement?.holding_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.tradeLicenseNo || props?.reviewIdNameData?.selfAdvertisement?.trade_license_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>GST No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.gstNo || props?.reviewIdNameData?.selfAdvertisement?.gst_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Display Area</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayArea || props?.reviewIdNameData?.selfAdvertisement?.display_area)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Display Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.displayType || props?.reviewIdNameData?.selfAdvertisement?.display_type)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Advertisement Category</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.advrtCategory || props?.reviewIdNameData?.selfAdvertisement?.advt_category_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.longitude || props?.reviewIdNameData?.selfAdvertisement?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.selfAdvertisement?.latitude || props?.reviewIdNameData?.selfAdvertisement?.latitude)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.selfAdvertisementDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewSelfAdvertForm","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction AdvrtSuccessScreen(props) {\r\n    const navigate = useNavigate\r\n\r\n    console.log(\"data in response screen\", props?.responseScreenData)\r\n    return (\r\n        <div>\r\n            <div className='grid grid-cols-1 md:grid-cols-6 lg:grid-cols-6 mt-6'>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n                <div className='col-span-2 bg-white shadow-lg mt-4'>\r\n                    <div className='p-2'>\r\n                        <img src='https://img.freepik.com/free-vector/mail-sent-concept-illustration_114360-96.jpg?w=740&t=st=1672636866~exp=1672637466~hmac=5f164187014737ee6e91346184ade8b9590a40d01e247f97d5dba6f313d4c474' className='h-64 mx-auto' />\r\n                    </div>\r\n                    <div className='ml-44 -mt-16'>\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/5610/5610944.png' className='h-20 -mt-4 mx-auto opacity-75' />\r\n                        {/* <img src='https://cdn-icons-png.flaticon.com/512/753/753344.png' className='h-12 mx-auto opacity-75' /> */}\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-3xl p-8 text-gray-600'>Application Submitted Successfully</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className='text-center text-xl text-gray-600 font-bold uppercase'> Application No. :- {props?.responseScreenData?.ApplicationNo}</h1>\r\n                    </div>\r\n                    <div className='text-center p-8'>\r\n                        <Link to='/advertisement-dashboard'>\r\n                            <button class=\"w-32 text-xs p-3 mt-10 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-indigo-500 rounded-md hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\">\r\n\r\n                                {/* onClick={() => navigate(`/selfAdvrt`)} */}\r\n\r\n                                back\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='col-span-2 hidden md:block lg:block '></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvrtSuccessScreen","import React, { useEffect, useState } from 'react'\r\nimport SelfAdvertisementDocForm from './SelfAdvertisementDocForm'\r\nimport SelfAdvertisementForm1 from './SelfAdvertisementForm1'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport ReviewSelfAdvertForm from './ReviewSelfAdvertForm'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen';\r\nimport Loader from '../Loader';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport { useParams } from 'react-router-dom';\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\n\r\nfunction SelfAdvertisementIndexForm() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postSelfAdvertApplication, api_renewSelfAdvt_license, api_getApplicationDetailsToRenew } = AdvertisementApiList();\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'selfAdvertisement') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"review data...\", reviewData)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitSelfAdvertForm()\r\n    }\r\n\r\n    const submitSelfAdvertForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postSelfAdvertApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewSelfAdvt_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                advtCategory: allFormData?.selfAdvertisement?.advrtCategory,\r\n                applicantName: allFormData?.selfAdvertisement?.applicantName,\r\n                licenseYear: allFormData?.selfAdvertisement?.licenseYear,\r\n                fatherName: allFormData?.selfAdvertisement?.fatherName,\r\n                email: allFormData?.selfAdvertisement?.email,\r\n                residenceAddress: allFormData?.selfAdvertisement?.residenceAddress,\r\n                wardId: allFormData?.selfAdvertisement?.residenceWardNo,\r\n                permanentAddress: allFormData?.selfAdvertisement?.permanentAddress,\r\n                permanentWardId: allFormData?.selfAdvertisement?.permanentWardNo,\r\n                entityName: allFormData?.selfAdvertisement?.entityName,\r\n                entityAddress: allFormData?.selfAdvertisement?.entityAddress,\r\n                entityWardId: allFormData?.selfAdvertisement?.entityWardNo,\r\n                mobileNo: allFormData?.selfAdvertisement?.mobileNo,\r\n                aadharNo: allFormData?.selfAdvertisement?.aadharNo,\r\n                tradeLicenseNo: allFormData?.selfAdvertisement?.tradeLicenseNo,\r\n                holdingNo: allFormData?.selfAdvertisement?.holdingNo,\r\n                gstNo: allFormData?.selfAdvertisement?.gstNo,\r\n                longitude: allFormData?.selfAdvertisement?.longitude,\r\n                latitude: allFormData?.selfAdvertisement?.latitude,\r\n                displayArea: allFormData?.selfAdvertisement?.displayArea,\r\n                displayType: allFormData?.selfAdvertisement?.displayType,\r\n                installationLocation: allFormData?.selfAdvertisement?.installationLocation,\r\n                brandDisplayName: allFormData?.selfAdvertisement?.brandDisplayName,\r\n\r\n                documents: allFormData?.selfAdvertisementDoc\r\n            }\r\n        }\r\n        console.log('request body...', requestBody)\r\n\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n          \r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip bg-violet-50 p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Self Advertisement</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle '>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementForm1 values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><SelfAdvertisementDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewSelfAdvertForm values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfAdvertisementIndexForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction MovableVehicleDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div className=''>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MovableVehicleDocTable","\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\n\r\nimport SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen'\r\nimport MovableVehicleDocTable from './MovableVehicleDocTable';\r\n\r\n\r\nfunction MovableVehicleDocForm(props) {\r\n\r\n  const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n\r\n  const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n  const [collectDoc, setcollectDoc] = useState([]);\r\n  const [docList, setdocList] = useState()\r\n  const [renewDocList, setrenewDocList] = useState()\r\n\r\n  const collectAllData = (key, formData) => {\r\n    console.log(\"prev data in document\", collectDoc);\r\n    // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n    if (collectDoc[key] !== undefined) {\r\n      console.log('inside index match...')\r\n      collectDoc[key] = formData\r\n      return\r\n    }\r\n    setcollectDoc([...collectDoc, formData]);\r\n  };\r\n  console.log(\"all data doc\", collectDoc)\r\n\r\n\r\n  const handleDocument = () => {\r\n    collectFormDataFun('movableVehicleDoc', collectDoc)\r\n    setFormIndex(3)\r\n  }\r\n\r\n  ///////////{*** GET DOCUMENT LIST***}/////////\r\n  useEffect(() => {\r\n    getDocumentList()\r\n  }, [])\r\n  const getDocumentList = () => {\r\n    const requestBody = {\r\n      deviceId: \"movableVehicle\",\r\n    }\r\n    axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('movable vehicle document list', response.data)\r\n        if (type == 'renew') {\r\n          setrenewDocList(response.data)\r\n        }\r\n        else {\r\n          setdocList(response.data)\r\n        }\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* upload document */}\r\n\r\n      <div className='absolute w-full top-2 ml-4 '>\r\n        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n          <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n            <div className=\"p-1\">\r\n              <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                <div>\r\n                  <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                </div>\r\n              </div>\r\n              <div className='mt-2'>\r\n                {docList?.MOVABLE_VEHICLE?.map((items, index) => (\r\n                  <MovableVehicleDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n                {renewDocList?.MOVABLE_VEHICLE?.map((items, index) => (\r\n                  <MovableVehicleDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3\">\r\n              <div className='md:pl-0 col-span-6'>\r\n                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n              </div>\r\n              <div className='col-span-6'>\r\n                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n              <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-span-4'>\r\n            <div className='-mt-20'>\r\n              <DocumentUploadSteps />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovableVehicleDocForm","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport * as yup from 'yup'\r\nimport BackButton from '../BackButton';\r\nimport FindTradeLicense from '../FindTradeLicense';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput, getCurrentDate } from '../../FunctionComponent/ValidationFunction';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    background: \"transparent\",\r\n    border: \"none\",\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction MovableVehicleForm(props) {\r\n\r\n\r\n  const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n  const { api_getAdvertMasterData, api_getUlbList, api_getTradeLicenseDetails, getTypologyList, api_getWardList } = AdvertisementApiList()\r\n  const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n  const [masterData, setmasterData] = useState()\r\n  const [ulbList, setulbList] = useState()\r\n  const [wardList, setwardList] = useState()\r\n  const [reviewIdName, setreviewIdName] = useState({})\r\n  const [storeUlbValue, setstoreUlbValue] = useState()\r\n  const [licenseId, setlicenseId] = useState()\r\n  const [liceneData, setlicenseData] = useState()\r\n  const [liceneDetails, setlicenseDetails] = useState()\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [erroState, seterroState] = useState(false);\r\n\r\n  // typology list state\r\n  const [typologyList, settypologyList] = useState([]);\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(true);\r\n  const openModal = () => setIsOpen(true)\r\n  const closeModal = () => setIsOpen(false)\r\n  const afterOpenModal = () => { }\r\n\r\n  let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n  let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8 mt-5\"\r\n\r\n\r\n  const validationSchema = yup.object({\r\n    ulb: yup.string().required('select ulb'),\r\n    licenseFrom: yup.string().required('This field is Required'),\r\n    licenseTo: yup.string().required('This field is Required'),\r\n    applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n    fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n    // email: yup.string().required('Enter email address').min(11, 'enter atleast 11 character'),\r\n    email: yup.string().email('Invalid email').required('Email is required'),\r\n    residenceAddress: yup.string().required('This field is Required'),\r\n    residenceWardNo: yup.string().required('This field is Required'),\r\n    permanentAddress: yup.string().required('This field is Required'),\r\n    permanentWardNo: yup.string().required('This field is Required'),\r\n    mobileNo: yup.number().required('Enter mobile no.'),\r\n    aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n    entityName: yup.string().required('This field is Required'),\r\n    // holdingNo: yup.string().required('This field is Required'),\r\n    // tradeLicenseNo: yup.string().required('This field is Required'),\r\n    gstNo: yup.string().required('This field is Required'),\r\n    vehicleNo: yup.string().required('This field is Required'),\r\n    vehicleName: yup.string().required('This field is Required'),\r\n    vehicleType: yup.string().required('select vehicle type'),\r\n    brandDisplayedInVehicle: yup.string().required('This field is Required'),\r\n    frontArea: yup.string().required('This field is Required'),\r\n    rearArea: yup.string().required('This field is Required'),\r\n    sideOneArea: yup.string().required('This field is Required'),\r\n    topArea: yup.string().required('This field is Required'),\r\n    displayType: yup.string().required('select display type'),\r\n    typology: yup.string().required('select Typolgy type'),\r\n\r\n  })\r\n\r\n  const initialValues = {\r\n    ulb: '',\r\n    licenseFrom: '',\r\n    licenseTo: '',\r\n    applicantName: '',\r\n    fatherName: '',\r\n    email: '',\r\n    residenceAddress: '',\r\n    residenceWardNo: '',\r\n    permanentAddress: '',\r\n    permanentWardNo: '',\r\n    mobileNo: '',\r\n    aadharNo: '',\r\n    entityName: '',\r\n    tradeLicenseNo: '',\r\n    gstNo: '',\r\n    vehicleNo: '',\r\n    vehicleName: '',\r\n    vehicleType: '',\r\n    brandDisplayedInVehicle: '',\r\n    frontArea: '',\r\n    rearArea: '',\r\n    sideOneArea: '',\r\n    topArea: '',\r\n    displayType: '',\r\n    typology: ''\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    onSubmit: values => {\r\n      console.log(\"movable vehicle\", values, reviewIdName)\r\n      collectFormDataFun('movableVehicle', values, reviewIdName)\r\n      setFormIndex(2)\r\n    },\r\n    validationSchema\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name\r\n    let value = e.target.value\r\n    // { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", formik.values.tradeLicenseNo) }\r\n    // { name == 'ulb' && getMasterDataFun(value) }\r\n    { name == 'ulb' && getWardListFun(value) }\r\n    { name == 'ulb' && setstoreUlbValue(value) }\r\n    console.log(\"ulb id...\", value)\r\n\r\n    // {****** collection names By Id ******}//\r\n    if (e.target.type == 'select-one') {\r\n      setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n    }\r\n    else {\r\n      setreviewIdName({ ...reviewIdName, [name]: value })\r\n    }\r\n\r\n    { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n    { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n    { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n    { name == 'frontArea' && formik.setFieldValue(\"frontArea\", allowFloatInput(value, formik.values.frontArea, 10)) }\r\n    { name == 'rearArea' && formik.setFieldValue(\"rearArea\", allowFloatInput(value, formik.values.rearArea, 10)) }\r\n    { name == 'sideOneArea' && formik.setFieldValue(\"sideOneArea\", allowFloatInput(value, formik.values.sideOneArea, 10)) }\r\n    { name == 'topArea' && formik.setFieldValue(\"topArea\", allowFloatInput(value, formik.values.topArea, 10)) }\r\n    { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n    { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n    { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n  }\r\n\r\n  console.log(\"review name.. in form...\", reviewIdName)\r\n\r\n  ///////////{*** GETTING ULB DATA***}/////////\r\n  useEffect(() => {\r\n    getUlbListData();\r\n    typologyListFun();\r\n  }, [])\r\n  const getUlbListData = () => {\r\n    seterroState(false)\r\n    setisLoading(true)\r\n    axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('ulb list in self advertisement', response.data.data)\r\n        setulbList(response.data.data)\r\n        setisLoading(false)\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n        seterroState(true)\r\n        setisLoading(false)\r\n      })\r\n  }\r\n  console.log(\"ulb list\", ulbList)\r\n\r\n\r\n\r\n  ///////////{*** GETTING WARD LIST***}/////////\r\n  const getWardListFun = (ulbId) => {\r\n    const requestBody = {\r\n      // ulbId: ulbId,\r\n      ulbId: 2,\r\n    }\r\n    axios.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('ward list..16', response.data.data)\r\n        setwardList(response.data.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n  console.log(\"ward master data...\", wardList)\r\n\r\n  ///////////{*** GETTING MASTER DATA***}/////////\r\n  useEffect(() => {\r\n    getMasterDataFun();\r\n  }, [])\r\n  const getMasterDataFun = (ulbId) => {\r\n\r\n    axios.post(`${api_getAdvertMasterData}`, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('master data for self advertisement', response.data.data)\r\n        setmasterData(response.data.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n\r\n\r\n  ///////////{*** COLLECTING TRADE LICENSE DATA***}/////////\r\n  const collectData = (key, formData) => {\r\n    console.log('trade license data.......11', formData)\r\n    setlicenseData({ ...liceneData, [key]: formData })\r\n  }\r\n\r\n\r\n  ///////////{***DETAILS BY TRADE LICENSE NO. ***}/////////\r\n  // useEffect(() => {\r\n  //   getTradeLicenseDetails()\r\n  // }, [liceneData?.licenseDataById])\r\n\r\n  // const getTradeLicenseDetails = () => {\r\n  //   showLoader(true);\r\n  //   const requestBody = {\r\n  //     license_no: liceneData?.licenseDataById,\r\n  //     // license_no: \"919191\",\r\n  //     // deviceId: \"selfAdvert\",\r\n  //   }\r\n  //   axios.post(`${api_getTradeLicenseDetails}`, requestBody, ApiHeader())\r\n  //     .then(function (response) {\r\n  //       console.log('trade license details...12', response)\r\n  //       setlicenseDetails(response.data.data)\r\n  //       setTimeout(() => {\r\n  //         showLoader(false);\r\n  //       }, 500);\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //       console.log('errorrr.... ', error);\r\n  //       setTimeout(() => {\r\n  //         showLoader(false);\r\n  //       }, 500);\r\n\r\n  //     })\r\n  // }\r\n\r\n  console.log(\" master data...\", masterData)\r\n  console.log(\" License full data in state\", liceneData?.licenseDataById)\r\n  console.log(\" trade License details\", liceneDetails)\r\n\r\n  ///////////{***TYPOLOGY LIST***}/////////\r\n  const typologyListFun = () => {\r\n    showLoader(true)\r\n    axios.post(`${getTypologyList}`, ApiHeaderAdvrt())\r\n      .then((response) => {\r\n        console.log(\"typlogylist 22\", response.data);\r\n        if (response.data.status) {\r\n          settypologyList(response.data.data.typology);\r\n          // toastFun(\"data  found\", \"success\")\r\n          showLoader(false);\r\n        } else {\r\n          toastFun(\"data not found\", \"notice\")\r\n          showLoader(false);\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toastFun(\"Something went wrong\", \"error\")\r\n        showLoader(false)\r\n      })\r\n\r\n  }\r\n  console.log(\"typology\", typologyList);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (type == 'renew') {\r\n      feedApplicationData()\r\n      setreviewIdName(existingApplicationDetails)\r\n    }\r\n  }, [existingApplicationDetails])\r\n  const feedApplicationData = () => {\r\n    //* FEEDING DATA\r\n    formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n    formik.setFieldValue('licenseFrom', existingApplicationDetails?.license_from)\r\n    formik.setFieldValue('licenseTo', existingApplicationDetails?.license_to)\r\n    formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n    formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n    formik.setFieldValue('email', existingApplicationDetails?.email)\r\n    formik.setFieldValue('residenceAddress', existingApplicationDetails?.residence_address)\r\n    formik.setFieldValue('residenceWardNo', existingApplicationDetails?.ward_id)\r\n    formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n    formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n    formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n    formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_no)\r\n    formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n    formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n    formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n    formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n    formik.setFieldValue('vehicleNo', existingApplicationDetails?.vehicle_no)\r\n    formik.setFieldValue('vehicleName', existingApplicationDetails?.vehicle_name)\r\n    formik.setFieldValue('vehicleType', existingApplicationDetails?.vehicle_type_id)\r\n    formik.setFieldValue('brandDisplayedInVehicle', existingApplicationDetails?.brand_display)\r\n    formik.setFieldValue('frontArea', existingApplicationDetails?.front_area)\r\n    formik.setFieldValue('rearArea', existingApplicationDetails?.rear_area)\r\n    formik.setFieldValue('sideOneArea', existingApplicationDetails?.side_area)\r\n    formik.setFieldValue('topArea', existingApplicationDetails?.top_area)\r\n    formik.setFieldValue('displayType', existingApplicationDetails?.display_type_id)\r\n    formik.setFieldValue('typology', existingApplicationDetails?.typology_id)\r\n\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <BarLoader />\r\n      </>\r\n    )\r\n  }\r\n  if (erroState) {\r\n    return (\r\n      <CommonModal>\r\n        <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n      </CommonModal>\r\n    )\r\n  }\r\n\r\n  console.log(\"existing application details\", existingApplicationDetails?.ulb_id)\r\n\r\n  return (\r\n    <>\r\n      <div className='absolute w-full ml-2 top-2 bg-violet-50 '>\r\n        {/* <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n        shouldCloseOnOverlayClick={false}\r\n      >\r\n        <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '80vw', 'height': '100%' }}>\r\n          <FindTradeLicense showLoader={props.showLoader} closeFun={closeModal} collectDataFun={collectData} />\r\n        </div>\r\n\r\n      </Modal> */}\r\n\r\n        <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n          <div>\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n              {/* <div className='col-span-6 '>\r\n              <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto'>\r\n                <div className=' col-span-3'>\r\n                  <p className={`mt-5 text-gray-600 text-sm -ml-8`}>Trade License No.</p>\r\n                </div>\r\n                <div className=' col-span-3'>\r\n                  <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`h-6 md:h-8 w-[10rem] md:w-[13rem]  mt-4 bg-white rounded-l leading-5 shadow-md text-xs px-2 bg-gray-50`} \r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.tradeLicenseNo}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n              {type != 'renew' &&\r\n                <div className='col-span-12 '>\r\n                  {storeUlbValue == undefined ?\r\n                    <>\r\n                      <h1 className='text-center text-xl font-semibold text-gray-500 p-12'>\r\n                        Registration of a <span className='text-gray-700 font-bold'>Movable Vehicle</span> is mendatory under the urban local body it falls in.\r\n                        If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                      </h1>\r\n                      <div className='w-96 h-64 mx-auto'>\r\n                        <div className='p-6 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                          <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                          <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                          <div className=' '>\r\n                            <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                              <option>select </option>\r\n                              {ulbList?.map((items) => (\r\n                                <option value={items?.id}>{items?.ulb_name}</option>\r\n                              ))}\r\n                            </select>\r\n                            <p className='text-red-500 text-xs absolute'>{formik.touched.ulb && formik.errors.ulb ? formik.errors.ulb : null}</p>\r\n                          </div>\r\n                        </div>\r\n                        <div className='animate-wiggle'>\r\n                          <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                    :\r\n                    <div className='flex flex-row mt-4 space-x-2  '>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                        <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                      </svg>\r\n\r\n                      <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                    </div>\r\n                  }\r\n                </div>\r\n              }\r\n            </div>\r\n            {/* renew application */}\r\n            <div>\r\n              {type == 'renew' &&\r\n                <div>\r\n                  <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-2'>\r\n                    <div className='col-span-8'>\r\n                      <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                        <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} `}> License From <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2 '>\r\n                              <input type=\"date\" name='licenseFrom' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.licenseFrom}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.licenseFrom && formik.errors.licenseFrom ? formik.errors.licenseFrom : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}> License To <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"date\" name='licenseTo' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.licenseTo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.licenseTo && formik.errors.licenseTo ? formik.errors.licenseTo : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}> Applicant<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.applicantName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}> Father Name<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.fatherName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Residence Address<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.residenceAddress}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Ward No<span className='text-red-600'>*</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                <option>select one</option>\r\n                                {wardList?.map((items) => (\r\n                                  <option value={items?.id}>{items?.ward_name}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.permanentAddress}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                <option>select one</option>\r\n                                {wardList?.map((items) => (\r\n                                  <option value={items?.id}>{items?.ward_name}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Mobile<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobileNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadharNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.entityName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>GST No <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gstNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Vehicle No<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='vehicleNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.vehicleNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.vehicleNo && formik.errors.vehicleNo ? formik.errors.vehicleNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Vehicle Name <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='vehicleName' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.vehicleName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.vehicleName && formik.errors.vehicleName ? formik.errors.vehicleName : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1 `}>Vehicle Type<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select {...formik.getFieldProps('vehicleType')} className={`${inputStyle} flex-1 bg-white`} >\r\n                                <option>select one</option>\r\n                                {masterData?.paramCategories?.VehicleTypes?.map((items) => (\r\n                                  <option value={items?.id}>{items?.string_parameter}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.vehicleType && formik.errors.vehicleType ? formik.errors.vehicleType : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Brand in Vehicle <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='brandDisplayedInVehicle' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.brandDisplayedInVehicle}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayedInVehicle && formik.errors.brandDisplayedInVehicle ? formik.errors.brandDisplayedInVehicle : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tradeLicenseNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Front Area(Sq ft) <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='frontArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.frontArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.frontArea && formik.errors.frontArea ? formik.errors.frontArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Rear Area(Sq ft) <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='rearArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.rearArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.rearArea && formik.errors.rearArea ? formik.errors.rearArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Side 1 Area(Sq ft)<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='sideOneArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.sideOneArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.sideOneArea && formik.errors.sideOneArea ? formik.errors.sideOneArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Top Area(Sq ft)<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='topArea' placeholder='' className={`${inputStyle} flex-1 `}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.topArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.topArea && formik.errors.topArea ? formik.errors.topArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1 `}>Display Type<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select {...formik.getFieldProps('displayType')} className={`${inputStyle} flex-1 bg-white`}>\r\n                                <option>Select Display Type</option>\r\n                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                  <option value={items?.id}>{items?.string_parameter}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1 `}>Typolgy Type<span className='text-red-600'>*</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select name=\"typology\" className={`${inputStyle} flex-1 bg-white`} value={formik.values.typology} onChange={formik.handleChange}>\r\n                                <option value=\"\">Select Typology</option>\r\n                                {\r\n                                  typologyList?.filter(items => items?.Type == 'Type H')[0]?.data?.map((item) => (\r\n                                    <option value={item?.id}>{item?.descriptions}</option>\r\n                                  ))\r\n                                }\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.typology && formik.errors.typology ? formik.errors.typology : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className='float-right p-2'>\r\n                        <button type=\"submit\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                      <div className='-mt-20'>\r\n                        <SelfAdvrtInformationScreen />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n            {/* new application */}\r\n            <div>\r\n              {storeUlbValue != undefined &&\r\n                <div>\r\n                  <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-2'>\r\n                    <div className='col-span-8'>\r\n                      <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                        <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} `}> License From <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2 '>\r\n                              <input type=\"date\" name='licenseFrom' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.licenseFrom}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.licenseFrom && formik.errors.licenseFrom ? formik.errors.licenseFrom : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}> License To <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"date\" name='licenseTo' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.licenseTo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.licenseTo && formik.errors.licenseTo ? formik.errors.licenseTo : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}> Applicant<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.applicantName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}> Father Name<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.fatherName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Residence Address<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.residenceAddress}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Ward No<span className='text-red-600'>*</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                <option>select one</option>\r\n                                {wardList?.map((items) => (\r\n                                  <option value={items?.id}>{items?.ward_name}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.permanentAddress}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                <option>select one</option>\r\n                                {wardList?.map((items) => (\r\n                                  <option value={items?.id}>{items?.ward_name}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Mobile<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobileNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadharNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-2'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.entityName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle}`}>GST No <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gstNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Vehicle No<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='vehicleNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.vehicleNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.vehicleNo && formik.errors.vehicleNo ? formik.errors.vehicleNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Vehicle Name <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='vehicleName' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.vehicleName}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.vehicleName && formik.errors.vehicleName ? formik.errors.vehicleName : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1 `}>Vehicle Type<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select {...formik.getFieldProps('vehicleType')} className={`${inputStyle} flex-1 bg-white`} >\r\n                                <option>select one</option>\r\n                                {masterData?.paramCategories?.VehicleTypes?.map((items) => (\r\n                                  <option value={items?.id}>{items?.string_parameter}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.vehicleType && formik.errors.vehicleType ? formik.errors.vehicleType : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Brand in Vehicle <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='brandDisplayedInVehicle' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.brandDisplayedInVehicle}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayedInVehicle && formik.errors.brandDisplayedInVehicle ? formik.errors.brandDisplayedInVehicle : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Trade License No.<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tradeLicenseNo}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Front Area(Sq ft) <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='frontArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.frontArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.frontArea && formik.errors.frontArea ? formik.errors.frontArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Rear Area(Sq ft) <span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='rearArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.rearArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.rearArea && formik.errors.rearArea ? formik.errors.rearArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Side 1 Area(Sq ft)<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='sideOneArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.sideOneArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.sideOneArea && formik.errors.sideOneArea ? formik.errors.sideOneArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1`}>Top Area(Sq ft)<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <input type=\"text\" name='topArea' placeholder='' className={`${inputStyle} flex-1 `}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.topArea}\r\n                              />\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.topArea && formik.errors.topArea ? formik.errors.topArea : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1 `}>Display Type<span className='text-red-600'> *</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select {...formik.getFieldProps('displayType')} className={`${inputStyle} flex-1 bg-white`}>\r\n                                <option>Select Display Type</option>\r\n                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                  <option value={items?.id}>{items?.string_parameter}</option>\r\n                                ))}\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                            <div className='col-span-1'>\r\n                              <p className={`${labelStyle} flex-1 `}>Typolgy Type<span className='text-red-600'>*</span></p>\r\n                            </div>\r\n                            <div className='col-span-2 mr-2'>\r\n                              <select name=\"typology\" className={`${inputStyle} flex-1 bg-white`} value={formik.values.typology} onChange={formik.handleChange}>\r\n                                <option value=\"\">Select Typology</option>\r\n                                {\r\n                                  typologyList?.filter(items => items?.Type == 'Type H')[0]?.data?.map((item) => (\r\n                                    <option value={item?.id}>{item?.descriptions}</option>\r\n                                  ))\r\n                                }\r\n                              </select>\r\n                              <p className='text-red-500 text-xs absolute'>{formik.touched.typology && formik.errors.typology ? formik.errors.typology : null}</p>\r\n\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className='float-right p-2'>\r\n                        <button type=\"submit\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                      <div className='-mt-20'>\r\n                        <SelfAdvrtInformationScreen />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovableVehicleForm","import React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewMovableApplication(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 text-md text-gray-800 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.reviewIdNameData)\r\n    console.log(\"select data in review form ...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Ulb</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.ulb || props?.reviewIdNameData?.movableVehicle?.ulb_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License From</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.licenseFrom || props?.reviewIdNameData?.movableVehicle?.license_from)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License To  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.licenseTo || props?.reviewIdNameData?.movableVehicle?.license_to)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.applicantName || props?.reviewIdNameData?.movableVehicle?.applicant)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.residenceAddress || props?.reviewIdNameData?.movableVehicle?.residence_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.residenceWardNo || props?.reviewIdNameData?.movableVehicle?.ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.permanentAddress || props?.reviewIdNameData?.movableVehicle?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.permanentWardNo || props?.reviewIdNameData?.movableVehicle?.permanent_ward_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.fatherName || props?.reviewIdNameData?.movableVehicle?.father)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.aadharNo || props?.reviewIdNameData?.movableVehicle?.aadhar_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No. </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.mobileNo || props?.reviewIdNameData?.movableVehicle?.mobile_no)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.email || props?.reviewIdNameData?.movableVehicle?.email)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.entityName || props?.reviewIdNameData?.movableVehicle?.entity_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>GST No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.gstNo || props?.reviewIdNameData?.movableVehicle?.gst_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Vehicle No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.vehicleNo || props?.reviewIdNameData?.movableVehicle?.vehicle_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Vehicle Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.vehicleName || props?.reviewIdNameData?.movableVehicle?.vehicle_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Vehicle Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.vehicleType || props?.reviewIdNameData?.movableVehicle?.vehicle_type)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Brand in Vehicle</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.brandDisplayedInVehicle || props?.reviewIdNameData?.movableVehicle?.brand_display)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Front Area(Sq ft)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.frontArea || props?.reviewIdNameData?.movableVehicle?.front_area)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Rear Area(Sq ft) </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.rearArea || props?.reviewIdNameData?.movableVehicle?.rear_area)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Side 1 Area(Sq ft)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.sideOneArea || props?.reviewIdNameData?.movableVehicle?.side_area)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Top Area(Sq ft)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.topArea || props?.reviewIdNameData?.movableVehicle?.top_area)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Display Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.displayType || props?.reviewIdNameData?.movableVehicle?.display_type)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.tradeLicenseNo || props?.reviewIdNameData?.movableVehicle?.trade_license_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Typolgy Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.movableVehicle?.typology || props?.reviewIdNameData?.movableVehicle?.typology)}</span>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.movableVehicleDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={`w-10 shadow-lg`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewMovableApplication","import React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen'\r\nimport MovableVehicleDocForm from './MovableVehicleDocForm'\r\nimport MovableVehicleForm from './MovableVehicleForm'\r\nimport ReviewMovableApplication from './ReviewMovableApplication'\r\nimport axios from 'axios'\r\nimport Loader from '../Loader';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router'\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../ServerErrorCard'\r\n\r\n\r\nfunction MovableVehicleIndexForm() {\r\n\r\n  const { id, type } = useParams();\r\n  console.log(\"self advertisement param\", id)\r\n  console.log(\"self advertisement param\", type)\r\n\r\n  const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n  const [FirmStep, setFirmStep] = useState(1)\r\n  const [allFormData, setAllFormData] = useState({})\r\n  const [responseScreen, setresponseScreen] = useState()\r\n  const [reviewData, setreviewData] = useState({})\r\n  const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n  const [applicationType, setapplicationType] = useState()\r\n  const [show, setshow] = useState(false)\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [erroState, seterroState] = useState(false);\r\n\r\n  const showLoader = (val) => {\r\n    setshow(val);\r\n  }\r\n\r\n  const { api_postMovableVehicleApplication, api_renewMovableVehicle_license, api_getMovableApplicationDetailsToRenew } = AdvertisementApiList()\r\n\r\n  //activating notification if no owner or no floor added\r\n  const notify = (toastData, type) => {\r\n    toast.dismiss();\r\n    if (type == 'success') {\r\n      toast.success(toastData)\r\n    }\r\n    if (type == 'error') {\r\n      toast.error(toastData)\r\n    }\r\n    if (type == 'notice') {\r\n      toast.warn(toastData)\r\n    }\r\n  };\r\n\r\n\r\n  //{*** COLLECTING ALL FORM DATA***}//\r\n  const collectAllFormData = (key, formData, reviewIdName) => {\r\n    console.log('prev of all Data', allFormData)\r\n    console.log(\"review name by id in index...\", reviewIdName)\r\n    setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n\r\n    if (key == 'movableVehicle') {\r\n      console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n      setreviewData({ ...reviewData, [key]: reviewIdName })\r\n    }\r\n    else {\r\n      console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n      setreviewData({ ...reviewData, [key]: formData })\r\n    }\r\n  }\r\n  console.log(\"all form data in index\", allFormData)\r\n\r\n\r\n  // SUBMIT FORM //\r\n  const submitButtonToggle = () => {\r\n    console.log('final form ready to submit...', allFormData)\r\n    submitMovableVehicleForm()\r\n  }\r\n\r\n  const submitMovableVehicleForm = () => {\r\n    setisLoading(true)\r\n\r\n    let url\r\n    let requestBody\r\n    if (type == 'newapply') {\r\n      url = api_postMovableVehicleApplication  //new apply\r\n      requestBody = {\r\n        ulbId: 2,\r\n        applicant: allFormData?.movableVehicle?.applicantName,\r\n        father: allFormData?.movableVehicle?.fatherName,\r\n        email: allFormData?.movableVehicle?.email,\r\n        residenceAddress: allFormData?.movableVehicle?.residenceAddress,\r\n        wardId: allFormData?.movableVehicle?.residenceWardNo,\r\n        permanentAddress: allFormData?.movableVehicle?.permanentAddress,\r\n        permanentWardId: allFormData?.movableVehicle?.permanentWardNo,\r\n        mobile: allFormData?.movableVehicle?.mobileNo,\r\n        aadharNo: allFormData?.movableVehicle?.aadharNo,\r\n        licenseFrom: allFormData?.movableVehicle?.licenseFrom,\r\n        licenseTo: allFormData?.movableVehicle?.licenseTo,\r\n        entityName: allFormData?.movableVehicle?.entityName,\r\n        tradeLicenseNo: allFormData?.movableVehicle?.tradeLicenseNo,\r\n        gstNo: allFormData?.movableVehicle?.gstNo,\r\n        vehicleNo: allFormData?.movableVehicle?.vehicleNo,\r\n        vehicleType: allFormData?.movableVehicle?.vehicleType,\r\n        vehicleName: allFormData?.movableVehicle?.vehicleName,\r\n        brandDisplayed: allFormData?.movableVehicle?.brandDisplayedInVehicle,\r\n        frontArea: allFormData?.movableVehicle?.frontArea,\r\n        rearArea: allFormData?.movableVehicle?.rearArea,\r\n        sideArea: allFormData?.movableVehicle?.sideOneArea,\r\n        topArea: allFormData?.movableVehicle?.topArea,\r\n        displayType: allFormData?.movableVehicle?.displayType,\r\n        typology: allFormData?.movableVehicle?.typology,\r\n        documents: allFormData?.movableVehicleDoc\r\n      }\r\n    }\r\n    if (type == 'renew') {\r\n      url = api_renewMovableVehicle_license;//\"renew url\";\r\n      requestBody = {\r\n        applicationId: id,\r\n        // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n        ulbId: 2,\r\n        applicant: allFormData?.movableVehicle?.applicantName,\r\n        father: allFormData?.movableVehicle?.fatherName,\r\n        email: allFormData?.movableVehicle?.email,\r\n        residenceAddress: allFormData?.movableVehicle?.residenceAddress,\r\n        wardId: allFormData?.movableVehicle?.residenceWardNo,\r\n        permanentAddress: allFormData?.movableVehicle?.permanentAddress,\r\n        permanentWardId: allFormData?.movableVehicle?.permanentWardNo,\r\n        mobile: allFormData?.movableVehicle?.mobileNo,\r\n        aadharNo: allFormData?.movableVehicle?.aadharNo,\r\n        licenseFrom: allFormData?.movableVehicle?.licenseFrom,\r\n        licenseTo: allFormData?.movableVehicle?.licenseTo,\r\n        entityName: allFormData?.movableVehicle?.entityName,\r\n        tradeLicenseNo: allFormData?.movableVehicle?.tradeLicenseNo,\r\n        gstNo: allFormData?.movableVehicle?.gstNo,\r\n        vehicleNo: allFormData?.movableVehicle?.vehicleNo,\r\n        vehicleType: allFormData?.movableVehicle?.vehicleType,\r\n        vehicleName: allFormData?.movableVehicle?.vehicleName,\r\n        brandDisplayed: allFormData?.movableVehicle?.brandDisplayedInVehicle,\r\n        frontArea: allFormData?.movableVehicle?.frontArea,\r\n        rearArea: allFormData?.movableVehicle?.rearArea,\r\n        sideArea: allFormData?.movableVehicle?.sideOneArea,\r\n        topArea: allFormData?.movableVehicle?.topArea,\r\n        displayType: allFormData?.movableVehicle?.displayType,\r\n        typology: allFormData?.movableVehicle?.typology,\r\n        documents: allFormData?.movableVehicleDoc\r\n      }\r\n    }\r\n    console.log('request body...', requestBody)\r\n    axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('response after data submitted', response.data.data)\r\n        setresponseScreen(response.data.data)\r\n        setisLoading(false)\r\n        notify(\"submitted successfully\", \"success\")\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n        setisLoading(false)\r\n        notify(\"failed to submit\", \"error\")\r\n\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setapplicationType(type)\r\n    if (type == 'renew') {\r\n      fetchApplicationDetails()\r\n    }\r\n  }, [])\r\n  const fetchApplicationDetails = () => {\r\n    seterroState(false)\r\n    setisLoading(true)\r\n    let requestBody = {\r\n      applicationId: id,\r\n    }\r\n\r\n    console.log('renew application id', requestBody)\r\n    axios.post(`${api_getMovableApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('getting application detail for renew application.....', response.data.data)\r\n        setexistingApplicationDetails(response.data.data)\r\n        setisLoading(false)\r\n      })\r\n      .catch(function (error) {\r\n        console.log('==2 details by id error...', error)\r\n        seterroState(true)\r\n        setisLoading(false)\r\n      })\r\n  }\r\n\r\n  console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n  // passing values in components\r\n  const values = {\r\n    setFormIndex: setFormIndex,\r\n    showLoader: showLoader,\r\n    collectFormDataFun: collectAllFormData,\r\n    toastFun: notify,\r\n    type: type,\r\n    existingApplicationDetails: existingApplicationDetails,\r\n  }\r\n\r\n  console.log(\"response screen\", responseScreen)\r\n  if (responseScreen?.status == true) {\r\n    return (\r\n      <>\r\n        <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <BrandLoader />\r\n      </>\r\n    )\r\n  }\r\n  if (erroState) {\r\n    return (\r\n      <CommonModal>\r\n        <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n      </CommonModal>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"top-right\"\r\n        autoClose={2000} />\r\n      <div className='overflow-x-clip bg-violet-50 p-4 mt-3 container mx-auto h-screen'>\r\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n          <div className=''>\r\n            <div className='flex flex-row '>\r\n              <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Movable Vehicle</h1>\r\n            </div>\r\n            <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n              You Can Get License for Ad on Movable Vehicle\r\n            </h1>\r\n          </div>\r\n          <div>\r\n            <div className='flex flex-row mt-2 float-right'>\r\n              <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n              </strong> more screen</span>\r\n              <img src='https://cdn-icons-png.flaticon.com/512/1917/1917802.png' className='h-10 mr-4  opacity-80 float-right ml-4' />\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><MovableVehicleForm values={values} /></div>\r\n        <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all  `}><MovableVehicleDocForm values={values} /></div>\r\n        <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all  `}><ReviewMovableApplication values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovableVehicleIndexForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction PrivateLandDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        // id: props?.data?.id,\r\n        // image: \"\",\r\n        // relativeName: props?.data?.relative_name\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            {props?.data?.document_name}\r\n                            {props?.data?.docType == 'R' &&\r\n                                < span className='text-red-600'> *</span>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PrivateLandDocTable","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\nimport SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport PrivateLandDocTable from './PrivateLandDocTable';\r\n\r\nfunction PrivateLandDocForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('privateLandDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('private land document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upload document */}\r\n\r\n            <div className='absolute w-full top-2 ml-4'>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2'>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.PRIVATE_LAND?.map((items, index) => (\r\n                                    <PrivateLandDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.PRIVATE_LAND?.map((items, index) => (\r\n                                    <PrivateLandDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateLandDocForm","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport FindTradeLicense from '../FindTradeLicense';\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput, getCurrentDate } from '../../FunctionComponent/ValidationFunction';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction PrivateLandForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n    console.log(\"values passed from index\", props?.values)\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getTradeLicenseDetails, getTypologyList, api_getWardList } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    // typology list state\r\n    const [typologyList, settypologyList] = useState([]);\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8 mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        // ulb: yup.string().required('select ulb'),\r\n        licenseFrom: yup.string().required('select license year'),\r\n        licenseTo: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        // email: yup.string().required('Enter email address').min(11, 'enter atleast 11 character'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.number().required('Enter mobile no.'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        entityName: yup.string().required('This field is Required'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWard: yup.string().required('This field is Required'),\r\n        installationLocation: yup.string().required('This field is Required'),\r\n        brandDisplayeName: yup.string().required('This field is Required'),\r\n        brandDisplayeAddress: yup.string().required('This field is Required'),\r\n        totalDisplayArea: yup.string().required('This field is Required'),\r\n        displayType: yup.string().required('This field is Required'),\r\n        noOfHoarding: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('This field is Required'),\r\n        // latitude: yup.string().required('This field is Required'),\r\n        holdingNoBrandDisplay: yup.string().required('This field is Required'),\r\n        holdingNo: yup.string().required('This field is Required'),\r\n        tradeLicenseNo: yup.string().required('This field is Required'),\r\n        gstNo: yup.string().required('This field is Required'),\r\n        typology: yup.string().required('select Typolgy type'),\r\n    })\r\n\r\n\r\n    const initialValues = {\r\n        ulb: '',\r\n        licenseFrom: '',\r\n        licenseTo: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        aadharNo: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        gstNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWard: '',\r\n        brandDisplayeName: '',\r\n        brandDisplayeAddress: '',\r\n        totalDisplayArea: '',\r\n        displayType: '',\r\n        noOfHoarding: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        installationLocation: '',\r\n        holdingNoBrandDisplay: '',\r\n        typology: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n\r\n            console.log(\"Private Land\", values)\r\n            collectFormDataFun('privateLand', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        // { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", formik.values.tradeLicenseNo) }\r\n        // { name == 'ulb' && getMasterDataFun(value) }\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        console.log(\"ulb id...\", value)\r\n\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n        { name == 'totalDisplayArea' && formik.setFieldValue(\"totalDisplayArea\", allowFloatInput(value, formik.values.totalDisplayArea, 10)) }\r\n        { name == 'noOfHoarding' && formik.setFieldValue(\"noOfHoarding\", allowNumberInput(value, formik.values.noOfHoarding, 20)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'holdingNoBrandDisplay' && formik.setFieldValue(\"holdingNoBrandDisplay\", allowCharacterNumberInput(value, formik.values.holdingNoBrandDisplay, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n\r\n    }\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData();\r\n        typologyListFun();\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ward list..16', response.data.data)\r\n                setwardList(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun();\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** COLLECTING TRADE LICENSE DATA***}/////////\r\n    const collectData = (key, formData) => {\r\n        console.log('trade license data.......', formData)\r\n        setlicenseData({ ...liceneData, [key]: formData })\r\n    }\r\n\r\n    // ///////////{***DETAILS BY TRADE LICENSE NO. ***}/////////\r\n    // useEffect(() => {\r\n    //     getTradeLicenseDetails()\r\n    // }, [liceneData?.licenseDataById])\r\n    // const getTradeLicenseDetails = () => {\r\n    //     showLoader(true);\r\n    //     const requestBody = {\r\n    //         license_no: liceneData?.licenseDataById,\r\n    //         // license_no: \"919191\",\r\n    //         // deviceId: \"selfAdvert\",\r\n    //     }\r\n    //     axios.post(`${api_getTradeLicenseDetails}`, requestBody, ApiHeader())\r\n    //         .then(function (response) {\r\n    //             console.log('trade license details... 1', response)\r\n    //             setlicenseDetails(response.data.data)\r\n    //             setTimeout(() => {\r\n    //                 showLoader(false);\r\n    //             }, 500);\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             console.log('errorrr.... ', error);\r\n    //             setTimeout(() => {\r\n    //                 showLoader(false);\r\n    //             }, 500);\r\n\r\n    //         })\r\n    // }\r\n    const typologyListFun = () => {\r\n        showLoader(true)\r\n        axios.post(`${getTypologyList}`, ApiHeaderAdvrt())\r\n            .then((response) => {\r\n                console.log(\"typlogylist\", response.data);\r\n                if (response.data.status) {\r\n                    settypologyList(response.data.data.typology);\r\n                    // toastFun(\"data  found\", \"success\")\r\n                    showLoader(false)\r\n                } else {\r\n                    toastFun(\"data not found\", \"notice\")\r\n                    showLoader(false)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                toastFun(\"Something went wrong\", \"error\")\r\n                showLoader(false)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n\r\n        let previewDetails\r\n        let basicDetails\r\n\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        // formik.setFieldValue('licenseFrom', existingApplicationDetails?.license_from)\r\n        // formik.setFieldValue('licenseTo', existingApplicationDetails?.license_to)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residence_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_no)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWard', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('brandDisplayeName', existingApplicationDetails?.brand_display_name)\r\n        formik.setFieldValue('brandDisplayeAddress', existingApplicationDetails?.brand_display_address)\r\n        formik.setFieldValue('totalDisplayArea', existingApplicationDetails?.display_area)\r\n        formik.setFieldValue('displayType', existingApplicationDetails?.display_type_id)\r\n        formik.setFieldValue('noOfHoarding', existingApplicationDetails?.no_of_hoardings)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('installationLocation', existingApplicationDetails?.installation_location_id)\r\n        formik.setFieldValue('holdingNoBrandDisplay', existingApplicationDetails?.holding_brand_display_address)\r\n        formik.setFieldValue('typology', existingApplicationDetails?.typology_id)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"existing application details\", existingApplicationDetails)\r\n    console.log(\"typology\", typologyList);\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n\r\n\r\n    console.log(\" master data  ...\", masterData?.paramCategories?.DisplayType)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-2 top-0 bg-violet-50'>\r\n                {/* <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                shouldCloseOnOverlayClick={false}\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <FindTradeLicense showLoader={props.showLoader} closeFun={closeModal} collectDataFun={collectData} />\r\n                </div>\r\n\r\n            </Modal> */}\r\n\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='absolute w-full top-2 ml-4'>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto -mt-4'>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12 '>\r\n                                    {storeUlbValue == undefined ?\r\n                                        <>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-12'>\r\n                                                Registration of a <span className='text-gray-700 font-bold'>Private Land</span> is mendatory under the urban local body it falls in.\r\n                                                If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-6 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                            <option>select </option>\r\n                                                            {ulbList?.map((items) => (\r\n                                                                <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.ulb && formik.errors.ulb ? formik.errors.ulb : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='animate-wiggle'>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        <div className='flex flex-row mt-4 space-x-2  '>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg>\r\n\r\n                                            <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} `}> License From <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"date\" name='licenseFrom' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.licenseFrom}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseFrom && formik.errors.licenseFrom ? formik.errors.licenseFrom : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License To <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"date\" name='licenseTo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.licenseTo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseTo && formik.errors.licenseTo ? formik.errors.licenseTo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> Applicant<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No<span className='text-red-600'>*</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option value={existingApplicationDetails?.ward_id}>{existingApplicationDetails?.ward_name}</option>\r\n                                                                {/* <option>select one</option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value={existingApplicationDetails?.permanent_ward_id}>{existingApplicationDetails?.permanent_ward_name}</option>\r\n                                                                {/* <option>select one</option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select  {...formik.getFieldProps('entityWard')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option value={existingApplicationDetails?.entity_ward_id}>{existingApplicationDetails?.entity_ward_name}</option>\r\n                                                                {/* <option>select one</option>\r\n                                                        {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWard && formik.errors.entityWard ? formik.errors.entityWard : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>GST No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Brand Display Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='brandDisplayeName' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayeName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayeName && formik.errors.brandDisplayeName ? formik.errors.brandDisplayeName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Brand Displayed Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='brandDisplayeAddress' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayeAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayeAddress && formik.errors.brandDisplayeAddress ? formik.errors.brandDisplayeAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Total Display Area<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='totalDisplayArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.totalDisplayArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.totalDisplayArea && formik.errors.totalDisplayArea ? formik.errors.totalDisplayArea : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select  {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option>select one</option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Holding No of Brand Display Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='holdingNoBrandDisplay' placeholder='' className={`${inputStyle} flex-1 `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNoBrandDisplay}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNoBrandDisplay && formik.errors.holdingNoBrandDisplay ? formik.errors.holdingNoBrandDisplay : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>No. Of Hoarding<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='noOfHoarding' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfHoarding}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfHoarding && formik.errors.noOfHoarding ? formik.errors.noOfHoarding : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Installation Location<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} disabled>\r\n                                                                <option>select one</option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Longitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                                \r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                                \r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Typolgy Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select name=\"typology\" className={`${inputStyle} flex-1 bg-white`} value={formik.values.typology} onChange={formik.handleChange} disabled>\r\n                                                                <option value=\"\">Select Typology</option>\r\n                                                                {\r\n                                                                    typologyList?.filter(items => items?.Type == 'Type D')[0]?.data?.map((item) => (\r\n                                                                        <option value={item?.id}>{item?.descriptions}</option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.typology && formik.errors.typology ? formik.errors.typology : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} `}> License From <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"date\" name='licenseFrom' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.licenseFrom}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseFrom && formik.errors.licenseFrom ? formik.errors.licenseFrom : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License To <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"date\" name='licenseTo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.licenseTo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseTo && formik.errors.licenseTo ? formik.errors.licenseTo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> Applicant<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No<span className='text-red-600'>*</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select {...formik.getFieldProps('residenceWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select one</option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select  {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select one</option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select  {...formik.getFieldProps('entityWard')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select one</option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWard && formik.errors.entityWard ? formik.errors.entityWard : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>GST No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.gstNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Brand Display Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='brandDisplayeName' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayeName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayeName && formik.errors.brandDisplayeName ? formik.errors.brandDisplayeName : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Brand Displayed Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='brandDisplayeAddress' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.brandDisplayeAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.brandDisplayeAddress && formik.errors.brandDisplayeAddress ? formik.errors.brandDisplayeAddress : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Total Display Area<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='totalDisplayArea' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.totalDisplayArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.totalDisplayArea && formik.errors.totalDisplayArea ? formik.errors.totalDisplayArea : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Display Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select  {...formik.getFieldProps('displayType')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select one</option>\r\n                                                                {masterData?.paramCategories?.DisplayType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.displayType && formik.errors.displayType ? formik.errors.displayType : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Holding No of Brand Display Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='holdingNoBrandDisplay' placeholder='' className={`${inputStyle} flex-1 `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNoBrandDisplay}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNoBrandDisplay && formik.errors.holdingNoBrandDisplay ? formik.errors.holdingNoBrandDisplay : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>No. Of Hoarding<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='noOfHoarding' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfHoarding}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfHoarding && formik.errors.noOfHoarding ? formik.errors.noOfHoarding : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Installation Location<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select {...formik.getFieldProps('installationLocation')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select one</option>\r\n                                                                {masterData?.paramCategories?.InstallationLocation?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.installationLocation && formik.errors.installationLocation ? formik.errors.installationLocation : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Longitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle} flex-1`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle} flex-1 `}>Typolgy Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2'>\r\n                                                            <select name=\"typology\" className={`${inputStyle} flex-1 bg-white`} value={formik.values.typology} onChange={formik.handleChange}>\r\n                                                                <option value=\"\">Select Typology</option>\r\n                                                                {\r\n                                                                    typologyList?.filter(items => items?.Type == 'Type D')[0]?.data?.map((item) => (\r\n                                                                        <option value={item?.id}>{item?.descriptions}</option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.typology && formik.errors.typology ? formik.errors.typology : null}</p>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateLandForm","import React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewPrivateLandApplication(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6  text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6  text-md text-gray-800 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in allform data...\", props.allFormData)\r\n    console.log(\"data in review form ...\", props.reviewIdNameData)\r\n\r\n\r\n    return (\r\n        <div className='absolute w-full ml-4 top-2  bg-violet-50'>\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Ulb</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.ulb || props?.reviewIdNameData?.privateLand?.ulb_name)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>License From</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.licenseFrom || props?.reviewIdNameData?.privateLand?.license_from)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>License To  </p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.licenseTo || props?.reviewIdNameData?.privateLand?.license_to)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Applicant</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.applicantName || props?.reviewIdNameData?.privateLand?.applicant)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Residence Address</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.residenceAddress || props?.reviewIdNameData?.privateLand?.residence_address)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Residence Ward No </p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.residenceWardNo || props?.reviewIdNameData?.privateLand?.ward_id)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Permanent Address</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.permanentAddress || props?.reviewIdNameData?.privateLand?.permanent_address)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Permanent Ward No</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.permanentWardNo || props?.reviewIdNameData?.privateLand?.permanent_ward_id)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Holding no.</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.holdingNo || props?.reviewIdNameData?.privateLand?.holding_no)}</span>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Mobile No.</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.mobileNo || props?.reviewIdNameData?.privateLand?.mobile_no)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Aadhar No. </p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.aadharNo || props?.reviewIdNameData?.privateLand?.aadhar_no)}</span>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>E-mail </p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.email || props?.reviewIdNameData?.privateLand?.email)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Entity Name</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.entityName || props?.reviewIdNameData?.privateLand?.entity_name)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Entity Address</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.entityAddress || props?.reviewIdNameData?.privateLand?.entity_address)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Entity Ward</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.entityWard || props?.reviewIdNameData?.privateLand?.entity_ward_id)}</span>\r\n                        </div><div className=''>\r\n                            <p className={`${labelStyle}`}>Gst No.</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.gstNo || props?.reviewIdNameData?.privateLand?.gst_no)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Brand Display Name</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.brandDisplayeName || props?.reviewIdNameData?.privateLand?.brand_display_name)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Brand Displayed Address</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.brandDisplayeAddress || props?.reviewIdNameData?.privateLand?.brand_display_address)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Total Display Area</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.totalDisplayArea || props?.reviewIdNameData?.privateLand?.display_area)}</span>\r\n                        </div><div className=''>\r\n                            <p className={`${labelStyle}`}>Display Type </p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.displayType || props?.reviewIdNameData?.privateLand?.display_type)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Holding No. of Brand Display Address</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.holdingNoBrandDisplay || props?.reviewIdNameData?.privateLand?.holdingNoBrandDisplay)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>No. of Hoarding</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.noOfHoarding || props?.reviewIdNameData?.privateLand?.no_of_hoardings)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Trade License No.</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.tradeLicenseNo || props?.reviewIdNameData?.privateLand?.trade_license_no)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Installation Location</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.installationLocation || props?.reviewIdNameData?.privateLand?.installation_location)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Longitude</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.longitude || props?.reviewIdNameData?.privateLand?.longitude)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Latitude</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.latitude || props?.reviewIdNameData?.privateLand?.latitude)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Typolgy Type</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.privateLand?.typology || props?.reviewIdNameData?.privateLand?.typology)}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* document */}\r\n                <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                        {props?.reviewIdNameData?.privateLandDoc?.map((data, index) => (\r\n                            <div className=''>\r\n                                <>\r\n                                    <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                    <div className='flex -mt-2'>\r\n                                        <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                        <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                    </div>\r\n                                </>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3 \">\r\n                <div className='md:pl-0 col-span-6'>\r\n                    <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n\r\n                </div>\r\n                <div className='col-span-6'>\r\n                    <button type=\"submit\" class=\"float-right py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewPrivateLandApplication","import React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen'\r\nimport PrivateLandDocForm from './PrivateLandDocForm'\r\nimport PrivateLandForm from './PrivateLandForm'\r\nimport ReviewPrivateLandApplication from './ReviewPrivateLandApplication'\r\nimport axios from 'axios'\r\nimport Loader from '../Loader'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router'\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../ServerErrorCard'\r\n\r\nfunction PrivateLandIndexForm() {\r\n\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState({})\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postPrivateLandApplication, api_renewPrivateLand_license, api_getPrivateApplicationDetailsToRenew } = AdvertisementApiList()\r\n\r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'privateLand') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc?.[0])\r\n\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitPrivateLandForm()\r\n    }\r\n\r\n    const submitPrivateLandForm = () => {\r\n        setisLoading(true)\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postPrivateLandApplication //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.privateLand?.ulb,\r\n                ulbId: 2,\r\n                applicant: allFormData?.privateLand?.applicantName,\r\n                father: allFormData?.privateLand?.fatherName,\r\n                email: allFormData?.privateLand?.email,\r\n                residenceAddress: allFormData?.privateLand?.residenceAddress,\r\n                wardId: allFormData?.privateLand?.residenceWardNo,\r\n                permanentAddress: allFormData?.privateLand?.permanentAddress,\r\n                permanentWardId: allFormData?.privateLand?.permanentWardNo,\r\n                mobileNo: allFormData?.privateLand?.mobileNo,\r\n                aadharNo: allFormData?.privateLand?.aadharNo,\r\n                licenseFrom: allFormData?.privateLand?.licenseFrom,\r\n                licenseTo: allFormData?.privateLand?.licenseTo,\r\n                holdingNo: allFormData?.privateLand?.holdingNo,\r\n                tradeLicenseNo: allFormData?.privateLand?.tradeLicenseNo,\r\n                gstNo: allFormData?.privateLand?.gstNo,\r\n                entityName: allFormData?.privateLand?.entityName,\r\n                entityAddress: allFormData?.privateLand?.entityAddress,\r\n                entityWardId: allFormData?.privateLand?.entityWard,\r\n                brandDisplayName: allFormData?.privateLand?.brandDisplayeName,\r\n                brandDisplayAddress: allFormData?.privateLand?.brandDisplayeAddress,\r\n                brandDisplayHoldingNo: allFormData?.privateLand?.holdingNoBrandDisplay,\r\n                displayArea: allFormData?.privateLand?.totalDisplayArea,\r\n                displayType: allFormData?.privateLand?.displayType,\r\n                noOfHoardings: allFormData?.privateLand?.noOfHoarding,\r\n                longitude: allFormData?.privateLand?.longitude,\r\n                latitude: allFormData?.privateLand?.latitude,\r\n                installationLocation: allFormData?.privateLand?.installationLocation,\r\n                typology: allFormData?.privateLand?.typology,\r\n\r\n                documents: allFormData?.privateLandDoc\r\n\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewPrivateLand_license;\r\n            requestBody = {\r\n                applicationId: id,\r\n                ulbId: 2,\r\n                applicant: allFormData?.privateLand?.applicantName,\r\n                father: allFormData?.privateLand?.fatherName,\r\n                email: allFormData?.privateLand?.email,\r\n                residenceAddress: allFormData?.privateLand?.residenceAddress,\r\n                wardId: allFormData?.privateLand?.residenceWardNo,\r\n                permanentAddress: allFormData?.privateLand?.permanentAddress,\r\n                permanentWardId: allFormData?.privateLand?.permanentWardNo,\r\n                mobileNo: allFormData?.privateLand?.mobileNo,\r\n                aadharNo: allFormData?.privateLand?.aadharNo,\r\n                licenseFrom: allFormData?.privateLand?.licenseFrom,\r\n                licenseTo: allFormData?.privateLand?.licenseTo,\r\n                holdingNo: allFormData?.privateLand?.holdingNo,\r\n                tradeLicenseNo: allFormData?.privateLand?.tradeLicenseNo,\r\n                gstNo: allFormData?.privateLand?.gstNo,\r\n                entityName: allFormData?.privateLand?.entityName,\r\n                entityAddress: allFormData?.privateLand?.entityAddress,\r\n                entityWardId: allFormData?.privateLand?.entityWard,\r\n                brandDisplayName: allFormData?.privateLand?.brandDisplayeName,\r\n                brandDisplayAddress: allFormData?.privateLand?.brandDisplayeAddress,\r\n                brandDisplayHoldingNo: allFormData?.privateLand?.holdingNoBrandDisplay,\r\n                displayArea: allFormData?.privateLand?.totalDisplayArea,\r\n                displayType: allFormData?.privateLand?.displayType,\r\n                noOfHoardings: allFormData?.privateLand?.noOfHoarding,\r\n                longitude: allFormData?.privateLand?.longitude,\r\n                latitude: allFormData?.privateLand?.latitude,\r\n                installationLocation: allFormData?.privateLand?.installationLocation,\r\n                typology: allFormData?.privateLand?.typology,\r\n\r\n                documents: allFormData?.privateLandDoc\r\n            }\r\n        }\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n\r\n            })\r\n        console.log(\"form index\", formIndex)\r\n    }\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getPrivateApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=''>\r\n                <ToastContainer position=\"top-right\"\r\n                    autoClose={2000} />\r\n                <div className='overflow-x-clip bg-violet-50 p-4 mt-3 container mx-auto h-screen'>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                        <div className=''>\r\n                            <div className='flex flex-row '>\r\n                                <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Private Land</h1>\r\n                            </div>\r\n                            <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                                You can get license to advertise on your premises\r\n                            </h1>\r\n                        </div>\r\n                        <div>\r\n                            <div className='flex flex-row mt-2 float-right'>\r\n                                <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                                </strong> more screen</span>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/1684/1684121.png' className='h-10 mr-4  opacity-80 float-right ml-4' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><PrivateLandForm values={values} /></div>\r\n                        <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><PrivateLandDocForm values={values} /></div>\r\n                        <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><ReviewPrivateLandApplication values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateLandIndexForm","import React from 'react'\r\n\r\nfunction AgencyInformationScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Licence Year :-</span>\r\n                    <span className={`${labelStyle} flex-1 `} >License year will insure the validity of your license .</span>\r\n                </div> */}\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Name :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Entity name is the name of your business taking license for .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div>\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Holding No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Holding of your addrress where business is established</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Trade License No.  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure that your business is illegaly approved .</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Longitude  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Longitude for the location of your business.</span>\r\n                </div>\r\n                <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Latitude   :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>Latitude for the location of your business.</span>\r\n                </div> */}\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgencyInformationScreen","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\n// import SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport * as yup from 'yup'\r\nimport FindTradeLicense from '../FindTradeLicense';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../FunctionComponent/ValidationFunction';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport AgencyInformationScreen from './AgencyInformationScreen';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../ServerErrorCard';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction PrivateLandForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type, existingApplicationDetails } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getTradeLicenseDetails } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [checkboxValue, setcheckboxValue] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8 mt-5 \"\r\n\r\n\r\n    const validationSchema = yup.object({\r\n        // ulb: yup.string().required('select ulb'),\r\n        entityType: yup.string().required('select entity type'),\r\n        entityName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        address: yup.string().required('This field is Required'),\r\n        mobileNo: yup.number().required('Enter mobile no.'),\r\n        officialTelephone: yup.number().required('Enter official no.'),\r\n        fax: yup.string().required('Enter fax no.'),\r\n        // email: yup.string().required('Enter email address').min(11, 'enter atleast 11 character'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        panNo: yup.string().required('This field is Required'),\r\n        gstNo: yup.string().required('This field is Required'),\r\n        // pendingAmount: yup.string().required('Enter Amount'),\r\n    })\r\n\r\n\r\n    const initialValues = {\r\n        ulb: '',\r\n        entityType: '',\r\n        entityName: '',\r\n        address: '',\r\n        mobileNo: '',\r\n        officialTelephone: '',\r\n        fax: '',\r\n        email: '',\r\n        panNo: '',\r\n        gstNo: '',\r\n        // tradeLicenseNo: liceneData?.licenseDataById,\r\n        blacklisted: '',\r\n        pendingCourtCase: '',\r\n        pendingAmount: '',\r\n        applicationNo: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            console.log(\"agency\", values)\r\n            collectFormDataFun('agency', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // { name == 'ulb' && getMasterDataFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        { name == 'blacklisted' && e.target.checked == true ? formik.setFieldValue(\"blacklisted\", 1) : formik.setFieldValue(\"blacklisted\", 0) }\r\n        { name == 'pendingCourtCase' && e.target.checked == true ? formik.setFieldValue(\"pendingCourtCase\", 1) : formik.setFieldValue(\"pendingCourtCase\", 0) }\r\n        console.log(\"checkbox value\", formik.values)\r\n\r\n        // console.log(\"checkbox value...\", value)\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'fax' && formik.setFieldValue(\"fax\", allowNumberInput(value, formik.values.fax, 10)) }\r\n        { name == 'panNo' && formik.setFieldValue(\"panNo\", allowCharacterNumberInput(value, formik.values.panNo, 12)) }\r\n        { name == 'gstNo' && formik.setFieldValue(\"gstNo\", allowCharacterNumberInput(value, formik.values.gstNo, 15)) }\r\n        { name == 'officialTelephone' && formik.setFieldValue(\"officialTelephone\", allowNumberInput(value, formik.values.officialTelephone, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n        { name == 'pendingAmount' && formik.setFieldValue(\"pendingAmount\", allowFloatInput(value, formik.values.pendingAmount, 10)) }\r\n    }\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        formik.setFieldValue('entityType', existingApplicationDetails?.entity_type)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('address', existingApplicationDetails?.address)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile_no)\r\n        formik.setFieldValue('officialTelephone', existingApplicationDetails?.telephone)\r\n        formik.setFieldValue('fax', existingApplicationDetails?.fax)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('panNo', existingApplicationDetails?.pan_no)\r\n        formik.setFieldValue('gstNo', existingApplicationDetails?.gst_no)\r\n        formik.setFieldValue('blacklisted', existingApplicationDetails?.blacklisted)\r\n        formik.setFieldValue('pendingCourtCase', existingApplicationDetails?.pending_court_case)\r\n        formik.setFieldValue('pendingAmount', existingApplicationDetails?.pending_amount)\r\n        formik.setFieldValue('applicationNo', existingApplicationDetails?.application_no)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"type in ageny detail form\", type)\r\n    console.log(\"existing application details\", existingApplicationDetails)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n    console.log(\" store value ...\", storeUlbValue)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute top-0 w-full ml-4 bg-violet-50 mt-4'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto -mt-4'>\r\n                        {type != 'renew' &&\r\n                            <div className='col-span-12 '>\r\n                                {storeUlbValue == undefined ?\r\n                                    <>\r\n                                        <h1 className='text-center text-xl font-semibold text-gray-500 p-12'>\r\n                                            Registration of a <span className='text-gray-700 font-bold'>Agency </span> is mendatory under the urban local body it falls in.\r\n                                            If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                        </h1>\r\n                                        <div className='w-96 h-64 mx-auto'>\r\n                                            <div className='p-6 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                <div className=' '>\r\n                                                    <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                        <option>select </option>\r\n                                                        {ulbList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='animate-wiggle'>\r\n                                                <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                    :\r\n                                    <div className='flex flex-row mt-4 space-x-2  '>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                            <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                        </svg>\r\n                                        <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {/* renew application */}\r\n                    <div>\r\n                        {type == 'renew' &&\r\n                            <div>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto '>\r\n                                    <div className='col-span-8'>\r\n                                        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto pb-8 p-2 mt-3'>\r\n                                            {/* DETAILS */}\r\n                                            <div className='col-span-6 p-1 h-72 border border-dashed border-violet-800'>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 hidden'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle} `}> ulb <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='ulb' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.ulb}\r\n                                                            disabled\r\n                                                        />\r\n                                                        {/* <p className='text-red-500 text-xs absolute'>{formik.touched.ulb && formik.errors.ulb ? formik.errors.ulb : null}</p> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle} `}> Entity Type  <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        {/* {JSON.stringify(masterData?.paramCategories)} */}\r\n                                                        <select {...formik.getFieldProps('entityType')} className={`${inputStyle} bg-white`} disabled>\r\n                                                            <option value={existingApplicationDetails?.entity_type}>{existingApplicationDetails?.entity_type_name}</option>\r\n                                                            {/* {masterData?.paramCategories?.EntityType?.map((items) => (\r\n                                                                <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                            ))} */}\r\n                                                        </select>\r\n                                                        {/* <input type=\"text\" name='entityType' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.entityType}\r\n                                                            disabled\r\n                                                        /> */}\r\n\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.entityType && formik.errors.entityType ? formik.errors.entityType : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Entity Name <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.entityName}\r\n                                                            disabled\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}> Address<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='address' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.address}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.address && formik.errors.address ? formik.errors.address : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>PAN No.<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.panNo}\r\n                                                            disabled\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Email<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.email}\r\n\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col-span-6 p-1 h-72 border border-dashed border-violet-800'>\r\n\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Mobile No<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.mobileNo}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Official Telephone<span className='text-red-600'>*</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='officialTelephone' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.officialTelephone}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.officialTelephone && formik.errors.officialTelephone ? formik.errors.officialTelephone : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>FAX<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='fax' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.fax}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.fax && formik.errors.fax ? formik.errors.fax : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.gstNo}\r\n                                                            disabled\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* OTHER INFORMATION */}\r\n\r\n                                        <h1 className='px-5  bg-white '>Other Information</h1>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3  container  mx-auto -mt-6 pb-8 p-2 border border-dashed border-violet-800 '>\r\n                                            <div className='flex flex-row'>\r\n                                                <p className={`mt-6  text-xs text-gray-600 ml-6`}>Blacklisted in RMC <span className='text-red-600'> *</span>\r\n                                                    <br />\r\n                                                    <p className='text-xs text-gray-600'>(if blacklisted click on checkbox)</p>\r\n                                                </p>\r\n                                                <input type=\"checkbox\" name='blacklisted' placeholder='' className={` text-xs text-gray-600  ml-2`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.blacklisted}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div className='flex flex-row'>\r\n                                                <p className={`mt-6 text-xs text-gray-600 ml-6`}>Pending Court Case<span className='text-red-600'> *</span>\r\n                                                    <br />\r\n                                                    <p className='text-xs text-gray-600'>(if pending court case click on checkbox)</p>\r\n                                                </p>\r\n                                                <input type=\"checkbox\" name='pendingCourtCase' placeholder='' className={` text-xs text-gray-600  ml-2`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.pendingCourtCase}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='flex flex-row'>\r\n                                                <p className={`mt-6 text-xs text-gray-600 ml-6 `}>Pending Amount (If any)<span className='text-red-600'> *</span></p>\r\n                                                <input type=\"text\" name='pendingAmount' placeholder='0.00' className={`text-xs text-gray-600 mt-6 ml-2  rounded-md shadow-md px-1.5 py-1 w-full h-6 md:h-8  `}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.pendingAmount}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.pendingAmount && formik.errors.pendingAmount ? formik.errors.pendingAmount : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='float-right p-2'>\r\n                                            <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                    <div className='col-span-4 hidden lg:block md:block'>\r\n                                        <div className='-mt-16'>\r\n                                            <AgencyInformationScreen />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {/* new application */}\r\n                    <div>\r\n                        {storeUlbValue != undefined &&\r\n                            <div>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto '>\r\n                                    <div className='col-span-8'>\r\n                                        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto pb-8 p-2 mt-3'>\r\n                                            {/* DETAILS */}\r\n                                            <div className='col-span-6 p-1 h-72 border border-dashed border-violet-800'>\r\n\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle} `}> Entity Type  <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <select {...formik.getFieldProps('entityType')} className={`${inputStyle} bg-white`} >\r\n                                                            <option>select</option>\r\n                                                            {masterData?.paramCategories?.EntityType?.map((items) => (\r\n                                                                <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.entityType && formik.errors.entityType ? formik.errors.entityType : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Entity Name <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.entityName}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}> Address<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='address' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.address}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.address && formik.errors.address ? formik.errors.address : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>PAN No.<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.panNo}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Email<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.email}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col-span-6 p-1 h-72 border border-dashed border-violet-800'>\r\n\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Mobile No<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.mobileNo}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>Official Telephone<span className='text-red-600'>*</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='officialTelephone' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.officialTelephone}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.officialTelephone && formik.errors.officialTelephone ? formik.errors.officialTelephone : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>FAX<span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='fax' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.fax}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.fax && formik.errors.fax ? formik.errors.fax : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                    <div className='col-span-1'>\r\n                                                        <p className={`${labelStyle}`}>GST No. <span className='text-red-600'> *</span></p>\r\n                                                    </div>\r\n                                                    <div className='col-span-2 mr-2'>\r\n                                                        <input type=\"text\" name='gstNo' placeholder='' className={`${inputStyle}`}\r\n                                                            onChange={formik.handleChange}\r\n                                                            value={formik.values.gstNo}\r\n                                                        />\r\n                                                        <p className='text-red-500 text-xs absolute'>{formik.touched.gstNo && formik.errors.gstNo ? formik.errors.gstNo : null}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* OTHER INFORMATION */}\r\n                                        <h1 className='px-5  bg-white '>Other Information</h1>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3  container  mx-auto -mt-6 pb-8 p-2 border border-dashed border-violet-800 '>\r\n                                            <div className='flex flex-row'>\r\n                                                <p className={`mt-6  text-xs text-gray-600 ml-6`}>Blacklisted in RMC\r\n                                                    <br />\r\n                                                    <p className='text-xs text-gray-600'>(if blacklisted click on checkbox)</p>\r\n                                                </p>\r\n                                                <input type=\"checkbox\" name='blacklisted' placeholder='' className={` text-xs text-gray-600  ml-2`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.blacklisted}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div className='flex flex-row'>\r\n                                                <p className={`mt-6 text-xs text-gray-600 ml-6`}>Pending Court Case\r\n                                                    <br />\r\n                                                    <p className='text-xs text-gray-600'>(if pending court case click on checkbox)</p>\r\n                                                </p>\r\n                                                <input type=\"checkbox\" name='pendingCourtCase' placeholder='' className={` text-xs text-gray-600  ml-2`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.pendingCourtCase}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='flex flex-row'>\r\n                                                <p className={`mt-6 text-xs text-gray-600 ml-6 `}>Pending Amount (If any)</p>\r\n                                                <input type=\"text\" name='pendingAmount' placeholder='0.00' className={`text-xs text-gray-600 mt-6 ml-2  rounded-md shadow-md px-1.5 py-1 w-full h-6 md:h-8  `}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.pendingAmount}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.pendingAmount && formik.errors.pendingAmount ? formik.errors.pendingAmount : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='float-right p-2'>\r\n                                            <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 hidden lg:block md:block'>\r\n                                        <div className='-mt-16'>\r\n                                            <AgencyInformationScreen />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateLandForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction AgencyDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: '',\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AgencyDocTable","import axios from 'axios';\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../DocumentUploadSteps';\r\nimport SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen'\r\nimport AgencyDocTable from './AgencyDocTable';\r\n\r\nfunction PrivateLandDocForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('agencyDoc', collectDoc)\r\n        setFormIndex(4)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"agency\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('agency document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* upload document */}\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2'>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.AGENCY?.map((items, index) => (\r\n                                    <AgencyDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.AGENCY?.map((items, index) => (\r\n                                    <AgencyDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateLandDocForm","import React from 'react'\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewPrivateLandApplication(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \" text-xs text-gray-600\"\r\n    let inputStyle = \" text-md text-gray-800 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form master id...\", props?.reviewIdNameData)\r\n\r\n\r\n    return (\r\n        <div className='absolute w-full ml-4 top-4 '>\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 '>\r\n                <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                    <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Ulb</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.ulb)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Entity Type</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.entityType)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Entity Name</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.entityName)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Address</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.address)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>PAN No.</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.panNo)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Email</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.email)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Mobile No</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.mobileNo)}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Official Telephone</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.officialTelephone)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>FAX</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.fax)}</span>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>GST No.</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.gstNo)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Blacklisted in RMC</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.blacklisted == true ? 'Yes' : 'No')}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Pending Court Case</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.pendingCourtCase == true ? 'Yes' : 'No')}</span>\r\n                        </div>\r\n                        <div className=''>\r\n                            <p className={`${labelStyle}`}>Pending Amount (If any)</p>\r\n                            <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.agency?.pendingAmount)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mt-4'>\r\n                        <h1 className='px-10 text-md text-gray-800 font-bold'>DIRECTORS INFORMATION</h1>\r\n                        <table class=\"table-auto text-slate-700 w-11/12 mx-auto mt-1 mb-4\">\r\n                            <thead>\r\n                                <tr className=\"bg-violet-200 text-gray-600 text-xs h-8  uppercase\">\r\n                                    <th>Director Name</th>\r\n                                    <th>Director Mobile No.</th>\r\n                                    <th>Director Email</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {props?.reviewIdNameData?.agencyDirector?.map((data) => (\r\n                                    <tr className='border-t-2 bg-white hover:bg-violet-200 text-sm hover:shadow-lg text-center  '>\r\n                                        <td>\r\n                                            <span>{nullToNA(data?.name)} </span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span>{nullToNA(data?.mobile)}</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span>{nullToNA(data?.email)}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {/* document */}\r\n                <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                    <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                        {props?.reviewIdNameData?.agencyDoc?.map((data, index) => (\r\n                            <div className='p-2'>\r\n                                <>\r\n                                    <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                    <div className='flex'>\r\n                                        <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                        <span className={`flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                    </div>\r\n                                </>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3 \">\r\n                <div className='md:pl-0 col-span-6'>\r\n                    <button type=\"button\" className=\" px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\" onClick={() => setFormIndex(3)}>back</button>\r\n                </div>\r\n                <div className='col-span-6'>\r\n                    <button type='submit' className=\"float-right px-6 py-2.5 bg-green-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0  active:shadow-lg transition duration-150 ease-in-out\" onClick={submitForm}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewPrivateLandApplication","import { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SelfAdvrtInformationScreen from '../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport * as yup from 'yup'\r\nimport { allowMailInput, allowNumberInput } from '../../FunctionComponent/ValidationFunction';\r\nimport AgencyInformationScreen from './AgencyInformationScreen';\r\n\r\nfunction AgencyDirectorDetail(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    // const [directorData, setdirectorData] = useState([])\r\n    const [directorData, setdirectorData] = useState([])\r\n    const [formToggleStatus, setformToggleStatus] = useState(true)\r\n    const [AddMore, setAddMore] = useState(false);\r\n    const [directorDataVisibility, setdirectorDataVisibility] = useState(false)\r\n    const [directorPreviewList, setdirectorPreviewList] = useState([])\r\n\r\n\r\n    // const [toggleCalcParams, settoggleCalcParams] = useState(true)\r\n\r\n\r\n    let labelStyle = \" text-sm text-gray-600 px-6\"\r\n    let inputStyle = \"text-xs rounded-md shadow-md px-1.5 py-1 w-[10rem] md:w-[11rem] h-6 md:h-8  mt-2 mb-2 -ml-2\"\r\n\r\n\r\n    const validationSchema = yup.object({\r\n        name: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        mobile: yup.number().required('Enter mobile no.'),\r\n        email: yup.string().required('Enter email address').min(11, 'enter atleast 11 character'),\r\n    })\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            mobile: '',\r\n            email: '',\r\n\r\n        },\r\n        onSubmit: values => {\r\n            setformToggleStatus(false)\r\n            setdirectorDataVisibility(true)\r\n            setdirectorData([...directorData, values]);\r\n            setdirectorPreviewList([...directorPreviewList, values]);\r\n            setAddMore(true);\r\n            formik.resetForm();\r\n\r\n        },\r\n    });\r\n\r\n\r\n    const handleMultipleSubmit = () => {\r\n        console.log('Final submission of the form ', directorData)\r\n        if (directorPreviewList?.length == 0) {\r\n            alert('Atleast One Owner is required !');\r\n            showLoader(false);\r\n            collectFormDataFun('agencyDirector', directorPreviewList, directorData, 0)\r\n        } else {\r\n            collectFormDataFun('agencyDirector', directorPreviewList, directorData, 0) //sending BasicDetails data to parent to store all form data at one container\r\n            setFormIndex(3) //forwarding to next form level\r\n            // setTimeout(() => {\r\n            //     props?.nextFun(2) \r\n            //     currentStepFun(4)\r\n            //     colorCodeFun(3)\r\n\r\n            //     showLoader(false)\r\n            // }, 500);\r\n        }\r\n\r\n    }\r\n\r\n    console.log(\"director data\", directorData)\r\n    const handleRemove = (index) => {\r\n        // alert('remove filter', key);\r\n        console.log('key ', index);\r\n        setdirectorPreviewList(current =>\r\n            current.filter(ct => {\r\n                if (current.indexOf(ct) == index) {\r\n                    console.log('value matched at ', index)\r\n                } else {\r\n                    // alert('current index of ct ',current.indexOf(ct))\r\n                    return ct\r\n                }\r\n            }),\r\n        );\r\n    }\r\n    const handleOwnerShow = () => {\r\n        { formToggleStatus == false ? setformToggleStatus(true) : setformToggleStatus(false) }\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        { name == 'mobile' && formik.setFieldValue(\"mobile\", allowNumberInput(value, formik.values.mobile, 10)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n        }\r\n    }, [existingApplicationDetails])\r\n\r\n    const feedApplicationData = () => {\r\n        console.log('inside feed director data dat..')\r\n        //* making matching floor key to ajust in existing code since key coming is different\r\n        if (existingApplicationDetails?.directors?.length != 0) {\r\n            console.log('inside lenght >0..')\r\n            console.log(\"listtttttt\", existingApplicationDetails?.directors)\r\n            let previewDirector = existingApplicationDetails?.directors.map((data) => {\r\n                return {\r\n                    name: data?.director_name,\r\n                    mobile: data?.director_mobile,\r\n                    email: data?.director_email,\r\n                }\r\n            })\r\n            console.log('directors list in preview...', previewDirector)\r\n            setdirectorPreviewList(previewDirector)\r\n            collectFormDataFun('agencyDirector', previewDirector) //sending FloorDetails data to parent to store all form data at one container\r\n        }\r\n    }\r\n    console.log(\"directors list to preview\", directorPreviewList)\r\n    console.log(\"existing application details in directors\", existingApplicationDetails)\r\n\r\n    return (\r\n        <>\r\n            {/* DIRECTORS INFORMATION */}\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto'>\r\n                    <div className='col-span-8  p-2 border border-dashed border-violet-800 h-auto'>\r\n                        <h1 className='text-md font-semibold text-gray-700 ml-2 bg-white p-2'>DIRECTOR INFORMATION</h1>\r\n                        <form onSubmit={formik.handleSubmit} onChange={handleChange} >\r\n                            <div className={`  mt-2 ${formToggleStatus ? ' md:h-[96px]' : 'bg-white'}`}>\r\n                                <>\r\n                                    <div className={`${formToggleStatus ? '' : 'hidden'}`}>\r\n                                        {/* <div className={directorPreviewList?.length == 0 ? setformToggleStatus(true) : setformToggleStatus(false)}> */}\r\n                                        <div class=\"max-w-2xl mx-auto\">\r\n                                            <div class=\"flex flex-col\">\r\n                                                <div class=\"overflow-x-auto shadow-md \">\r\n                                                    <div class=\"inline-block min-w-full align-middle\">\r\n                                                        <div class=\"overflow-hidden \">\r\n                                                            <table class=\"min-w-full divide-y divide-gray-200 table-fixed \">\r\n                                                                <thead class=\"bg-white\">\r\n                                                                    <tr>\r\n                                                                        <th scope=\"col\" class=\"py-3 px-6 text-xs font-medium tracking-wider text-left text-gray-700 uppercase darks:text-gray-400\">\r\n                                                                            Director Name\r\n                                                                        </th>\r\n                                                                        <th scope=\"col\" class=\"py-3 px-6 text-xs font-medium tracking-wider text-left text-gray-700 uppercase darks:text-gray-400\">\r\n                                                                            Mobile No.\r\n                                                                        </th>\r\n                                                                        <th scope=\"col\" class=\"py-3 px-6 text-xs font-medium tracking-wider text-left text-gray-700 uppercase darks:text-gray-400\">\r\n                                                                            Email\r\n                                                                        </th>\r\n\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody class=\" divide-y divide-gray-200 \">\r\n                                                                    <tr class=\" darks:hover:bg-gray-700\">\r\n\r\n                                                                        <td className={`${labelStyle}`}>\r\n                                                                            <input type=\"text\" name='name' placeholder='' className={`${inputStyle}`}\r\n                                                                                onChange={formik.handleChange}\r\n                                                                                value={formik.values.name}\r\n                                                                            />\r\n                                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.name && formik.errors.name ? formik.errors.name : null}</p>\r\n                                                                        </td>\r\n                                                                        <td className={`${labelStyle}`}>\r\n                                                                            <input type=\"text\" name='mobile' placeholder='' className={`${inputStyle}`}\r\n                                                                                onChange={formik.handleChange}\r\n                                                                                value={formik.values.mobile}\r\n                                                                            />\r\n                                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobile && formik.errors.mobile ? formik.errors.mobile : null}</p>\r\n                                                                        </td>\r\n                                                                        <td className={`${labelStyle}`}>\r\n                                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle}`}\r\n                                                                                onChange={formik.handleChange}\r\n                                                                                value={formik.values.email}\r\n                                                                            />\r\n                                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n\r\n                                                                </tbody>\r\n\r\n                                                            </table>\r\n                                                            <div className=''>\r\n                                                                <button type=\"submit\" onClick={() => setAddMore(true)} class=\"float-right mr-2 text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\">Confirm\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-3 w-full px-10 mt-16\">\r\n                                <div className=' text-left'>\r\n                                    <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                                </div>\r\n                                <div className='text-center'>\r\n                                    <button type=\"button\" class={`${AddMore ? '' : 'hidden'} text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0`} onClick={handleOwnerShow}> Add Director </button>\r\n                                </div>\r\n                                <div className=' text-right'>\r\n                                    <button type={directorData.length === 0 ? 'submit' : 'button'} onClick={handleMultipleSubmit} class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next </button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n\r\n                        {/* table */}\r\n                        {/* <div className={`${directorDataVisibility ? '' : 'hidden'}  h-56 mr-8 `}> */}\r\n                        <div className={`' h-56 mr-8 `}>\r\n                            {directorPreviewList?.length != 0 && <table class=\"table-auto text-slate-700 w-full mx-auto \">\r\n                                <thead>\r\n                                    <tr className=\"bg-white text-gray-600 text-xs h-8 hover:bg-violet-200 uppercase\">\r\n                                        <th>Director Name</th>\r\n                                        <th>Director Mobile No.</th>\r\n                                        <th>Director Email</th>\r\n                                        <th>Action.</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        directorPreviewList?.map((items, index) => (\r\n                                            <tr className='border-t-2 bg-white hover:bg-violet-200 text-sm hover:shadow-lg text-center  '>\r\n                                                <td>\r\n                                                    <span>{items.name} </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span>{items.mobile} </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span>{items.email} </span>\r\n\r\n                                                    {/* <input type=\"text\" name=\"email[]\" className=' text-center' value={items.email} readOnly /> */}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <button type='button' className='text-red-400' onClick={() => handleRemove(index)}>\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-4 h-4 text-red-400\">\r\n                                                            <path fill-rule=\"evenodd\" d=\"M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z\" clip-rule=\"evenodd\" />\r\n                                                        </svg>\r\n\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>}\r\n                        </div >\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <AgencyInformationScreen />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AgencyDirectorDetail","import React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../AdvrtSuccessScreen'\r\nimport AgencyDetailForm from './AgencyDetailForm'\r\nimport AgencyDetailDocForm from './AgencyDetailDocForm'\r\nimport ReviewAgencyApplication from './ReviewAgencyApplication'\r\nimport axios from 'axios'\r\nimport AgencyDirectorDetail from './AgencyDirectorDetail'\r\nimport Loader from '../Loader';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../ServerErrorCard'\r\n\r\nfunction PrivateLandIndexForm() {\r\n\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState({})\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const { id, type } = useParams();\r\n    console.log(\"params received\", id)\r\n    console.log(\"params received type\", type)\r\n\r\n    const { api_postAgencyApplication, api_getAgencyDetails, api_renew_license } = AdvertisementApiList()\r\n\r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'agency') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitAgencyForm()\r\n    }\r\n\r\n    const submitAgencyForm = () => {\r\n        setisLoading(true)\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postAgencyApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.agency?.ulb,\r\n                ulbId: 2,\r\n                entityType: allFormData?.agency?.entityType,\r\n                entityName: allFormData?.agency?.entityName,\r\n                address: allFormData?.agency?.address,\r\n                mobileNo: allFormData?.agency?.mobileNo,\r\n                officeTelephone: allFormData?.agency?.officialTelephone,\r\n                fax: allFormData?.agency?.fax,\r\n                email: allFormData?.agency?.email,\r\n                panNo: allFormData?.agency?.panNo,\r\n                gstNo: allFormData?.agency?.gstNo,\r\n                blacklisted: allFormData?.agency?.blacklisted,\r\n                pendingCourtCase: allFormData?.agency?.pendingCourtCase,\r\n                pendingAmount: allFormData?.agency?.pendingAmount,\r\n                directors: allFormData?.agencyDirector,\r\n                documents: allFormData?.agencyDoc,\r\n                // applicationNo: allFormData?.agency?.applicationNo,\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renew_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.agency?.ulb,\r\n                ulbId: 2,\r\n                entityType: allFormData?.agency?.entityType,\r\n                entityName: allFormData?.agency?.entityName,\r\n                address: allFormData?.agency?.address,\r\n                mobileNo: allFormData?.agency?.mobileNo,\r\n                officeTelephone: allFormData?.agency?.officialTelephone,\r\n                fax: allFormData?.agency?.fax,\r\n                email: allFormData?.agency?.email,\r\n                panNo: allFormData?.agency?.panNo,\r\n                gstNo: allFormData?.agency?.gstNo,\r\n                blacklisted: allFormData?.agency?.blacklisted,\r\n                pendingCourtCase: allFormData?.agency?.pendingCourtCase,\r\n                pendingAmount: allFormData?.agency?.pendingAmount,\r\n                directors: allFormData?.agencyDirector,\r\n                documents: allFormData?.agencyDoc,\r\n                // applicationNo: allFormData?.agency?.applicationNo,\r\n            }\r\n        }\r\n\r\n        // let url = api_postAgencyApplication;//\"new application  url\";\r\n        // if (type == 'renew') {\r\n        //     url = api_renew_license;//\"renew url\";\r\n        // }\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getAgencyDetails}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data.data)\r\n                setexistingApplicationDetails(response.data.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Agency Registration</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            Advertisement Agencies can apply to get License\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle '>&emsp; <strong className='text-2xl text-violet-600 '>{4 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/1684/1684121.png' className='h-10 mr-4  opacity-80 float-right ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'}`}><AgencyDetailForm values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'}`}><AgencyDirectorDetail values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'}`}><AgencyDetailDocForm values={values} /></div>\r\n                <div className={`${formIndex == 4 ? 'translate-x-0' : 'translate-x-full'}`}><ReviewAgencyApplication values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateLandIndexForm","import axios from 'axios'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\n\r\nfunction HoardingInformationScreen() {\r\n    let tittleStyle = 'text-gray-800 text-xs font-bold'\r\n    let labelStyle = 'text-xs text-gray-500 p-1 -mt-1 '\r\n    let divStyle = ' px-2 shadow-sm mt-3 p-2'\r\n    const { getHoardingCategory } = AdvertisementApiList()\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        // showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                // setTimeout(() => {\r\n                //     showLoader(false);\r\n                // }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n    return (\r\n        <>\r\n            <div className='border border-dashed border-violet-800 bg-white mt-[4.8rem] p-6'>\r\n                <div className='flex flex-row'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-violet-800\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\" />\r\n                    </svg>\r\n                    <h1 className='ml-2 text-lg'>Information</h1>\r\n                </div>\r\n                {hoardingCategory?.map((data) => (\r\n                    <div className={`${divStyle}flex mt-3`}>\r\n                        <span className={`${tittleStyle} flex-1 `}>{data?.subtype}</span>\r\n\r\n                        <span className={`${labelStyle} flex-1 `}>{data?.descriptions}</span>\r\n                    </div>\r\n                ))}\r\n                {/* <div className={`${divStyle}flex mt-3`}>\r\n                    <span className={`${tittleStyle} flex-1 `}>Entity Address  :-</span>\r\n                    <span className={`${labelStyle} flex-1 `}>To insure address where business is established.</span>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <img src='https://img.freepik.com/free-vector/forms-concept-illustration_114360-4957.jpg?w=826&t=st=1674191537~exp=1674192137~hmac=67c7c12eff6e498587032535d0b97de0502d3a1d73dfdb21d546398efe933d0a' className='opacity-90 h-80 mx-auto' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingInformationScreen","import axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react'\r\nimport SelfAdvrtInformationScreen from '../../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport * as yup from 'yup'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport { allowFloatInput, allowNumberInput, getCurrentDate } from '../../../FunctionComponent/ValidationFunction';\r\nimport HoardingInformationScreen from './HoardingInformationScreen';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\n\r\nfunction HoardingForm1(props) {\r\n\r\n    const { api_getAdvertMasterData, api_getWardList, api_getDistrictList, getHoardingCategory } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, id, existingApplicationDetails, type } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const [masterData, setmasterData] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [districtList, setdistrictList] = useState()\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [hoardingCategory, sethoardingCategory] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        hoardingCategory: yup.string().required('This field is Required'),\r\n        location: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('This field is Required'),\r\n        // latitude: yup.string().required('This field is Required'),\r\n        zone: yup.string().required('This field is Required'),\r\n        lengthOfHoarding: yup.string().required('This field is Required'),\r\n        widthOfHoarding: yup.string().required('This field is Required'),\r\n        areaOfBoard: yup.string().required('This field is Required'),\r\n        landmark: yup.string().required('This field is Required'),\r\n        propertyType: yup.string().required('This field is Required'),\r\n        facing: yup.string().required('This field is Required'),\r\n        materialType: yup.string().required('This field is Required'),\r\n        illumination: yup.string().required('This field is Required'),\r\n        // ownerName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        // ownerAddress: yup.string().required('This field is Required'),\r\n        // ownerCity: yup.string().required('This field is Required'),\r\n        // ownerPhone: yup.number().required('Enter mobile no.'),\r\n        // ownerWhatsappNo: yup.number().required('Enter mobile no.'),\r\n\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        lisenseYear: '',\r\n        hoardingCategory: '',\r\n        location: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        lengthOfHoarding: '',\r\n        widthOfHoarding: '',\r\n        areaOfBoard: '',\r\n        landmark: '',\r\n        propertyType: '',\r\n        ownerName: '',\r\n        ownerAddress: '',\r\n        ownerCity: '',\r\n        ownerPhone: '',\r\n        ownerWhatsappNo: '',\r\n        facing: '',\r\n        materialType: '',\r\n        illumination: '',\r\n        zone: '',\r\n\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            console.log(\"hoarding1...1\", values, reviewIdName)\r\n            // props.collectFormDataFun('hoarding1', values, reviewIdName)\r\n            collectFormDataFun('hoarding1', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getMasterDataFun(value) }\r\n        // { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n        { name == 'ownerPhone' && formik.setFieldValue(\"ownerPhone\", allowNumberInput(value, formik.values.ownerPhone, 10)) }\r\n        { name == 'ownerWhatsappNo' && formik.setFieldValue(\"ownerWhatsappNo\", allowNumberInput(value, formik.values.ownerWhatsappNo, 12)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n\r\n    }\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    const getMasterDataFun = (ulbId) => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            // // ulbId: ulbId,\r\n            ulbId: 1,\r\n        }\r\n        axios.post(`${api_getAdvertMasterData}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for hoarding', response)\r\n                setmasterData(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{***get hoarding category list***}/////////\r\n    useEffect(() => {\r\n        getHoardingCategoryList()\r\n    }, [])\r\n    const getHoardingCategoryList = () => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${getHoardingCategory}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('typlology..1', response)\r\n                sethoardingCategory(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n    console.log(\"hoardingCategory list ..\", hoardingCategory)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    useEffect(() => {\r\n        getWardListFun()\r\n    }, [])\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ward list', response)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('hoardingCategory', existingApplicationDetails?.typology_id)\r\n        formik.setFieldValue('location', existingApplicationDetails?.location)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('lengthOfHoarding', existingApplicationDetails?.length)\r\n        formik.setFieldValue('widthOfHoarding', existingApplicationDetails?.width)\r\n        formik.setFieldValue('areaOfBoard', existingApplicationDetails?.area)\r\n        formik.setFieldValue('landmark', existingApplicationDetails?.landmark)\r\n        formik.setFieldValue('propertyType', existingApplicationDetails?.property_type)\r\n        formik.setFieldValue('ownerName', existingApplicationDetails?.property_owner_name)\r\n        formik.setFieldValue('ownerAddress', existingApplicationDetails?.property_owner_address)\r\n        formik.setFieldValue('ownerCity', existingApplicationDetails?.property_owner_city)\r\n        formik.setFieldValue('ownerPhone', existingApplicationDetails?.property_owner_mobile_no)\r\n        formik.setFieldValue('ownerWhatsappNo', existingApplicationDetails?.property_owner_whatsapp_no)\r\n        formik.setFieldValue('facing', existingApplicationDetails?.facing)\r\n        formik.setFieldValue('materialType', existingApplicationDetails?.material)\r\n        formik.setFieldValue('illumination', existingApplicationDetails?.illumination_id)\r\n        formik.setFieldValue('zone', existingApplicationDetails?.zone_id)\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\"existing application detail\", existingApplicationDetails)\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"ward master data...1\", wardList)\r\n    console.log(\"district list\", districtList?.Jharkhand)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 '>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto '>\r\n                        <div className='col-span-8'>\r\n                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto pb-8 p-2 mt-3'>\r\n                                {/* DETAILS */}\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}> License Year <span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('lisenseYear')} className={`${inputStyle} bg-white`} >\r\n                                                <option value=''>select </option>\r\n                                                <option value={118}>2022-23 </option>\r\n                                                <option value={119}>2023-24 </option>\r\n\r\n                                            </select>\r\n                                            {/* <input type=\"text\" name='lisenseYear' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lisenseYear}\r\n                                            /> */}\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lisenseYear && formik.errors.lisenseYear ? formik.errors.lisenseYear : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle} `}>Hoarding Category<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select {...formik.getFieldProps('hoardingCategory')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                {hoardingCategory?.map((items) => (\r\n                                                    <option value={items?.id}>{items?.subtype}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hoardingCategory && formik.errors.hoardingCategory ? formik.errors.hoardingCategory : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Location<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='location' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.location}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.location && formik.errors.location ? formik.errors.location : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Longitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.longitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.latitude}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Length of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='lengthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.lengthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lengthOfHoarding && formik.errors.lengthOfHoarding ? formik.errors.lengthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Width of Hoarding(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='widthOfHoarding' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.widthOfHoarding}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.widthOfHoarding && formik.errors.widthOfHoarding ? formik.errors.widthOfHoarding : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Area of Board(sq.ft)<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='areaOfBoard' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.areaOfBoard}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.areaOfBoard && formik.errors.areaOfBoard ? formik.errors.areaOfBoard : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Landmark<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='landmark' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.landmark}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landmark && formik.errors.landmark ? formik.errors.landmark : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Facing<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='facing' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.facing}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='north'>North</option>\r\n                                                <option value='south'>South</option>\r\n                                                <option value='east'>East</option>\r\n                                                <option value='west'>West</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.facing && formik.errors.facing ? formik.errors.facing : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-span-6 p-1 h-auto border border-dashed border-violet-800'>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Property Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='propertyType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.propertyType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='public'>Public</option>\r\n                                                <option value='private'>Private</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.propertyType && formik.errors.propertyType ? formik.errors.propertyType : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Zone<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n\r\n                                            <select {...formik.getFieldProps('zone')} className={`${inputStyle} bg-white`} >\r\n                                                <option>select </option>\r\n                                                <option value={1}>Zone A</option>\r\n                                                <option value={2}>Zone B</option>\r\n                                                <option value={3}>Zone C</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.zone && formik.errors.zone ? formik.errors.zone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerName' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerName}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerName && formik.errors.ownerName ? formik.errors.ownerName : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerAddress' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerAddress}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerAddress && formik.errors.ownerAddress ? formik.errors.ownerAddress : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner City(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerCity' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerCity}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerCity && formik.errors.ownerCity ? formik.errors.ownerCity : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerPhone' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerPhone}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerPhone && formik.errors.ownerPhone ? formik.errors.ownerPhone : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <input type=\"text\" name='ownerWhatsappNo' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ownerWhatsappNo}\r\n                                            />\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.ownerWhatsappNo && formik.errors.ownerWhatsappNo ? formik.errors.ownerWhatsappNo : null}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Material Type<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='materialType' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.materialType}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='metal'>Metal</option>\r\n                                                <option value='wood'>Wood</option>\r\n                                                <option value='others'>Others</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.materialType && formik.errors.materialType ? formik.errors.materialType : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-4'>\r\n                                        <div className='col-span-1'>\r\n                                            <p className={`${labelStyle}`}>Illumination<span className='text-red-600'> *</span></p>\r\n                                        </div>\r\n                                        <div className='col-span-2 mr-2'>\r\n                                            <select type=\"text\" name='illumination' placeholder='' className={`${inputStyle}`}\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.illumination}\r\n                                            >\r\n                                                <option value=''>select</option>\r\n                                                <option value='0'>No</option>\r\n                                                <option value='1'>Yes</option>\r\n                                            </select>\r\n                                            <p className='text-red-500 text-xs absolute'>{formik.touched.illumination && formik.errors.illumination ? formik.errors.illumination : null}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='float-right p-2'>\r\n                                <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-span-4 hidden lg:block md:block'>\r\n                            <div className='-mt-14'>\r\n                                <HoardingInformationScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingForm1\r\n","import React from 'react'\r\nimport { useFormik } from 'formik';\r\nimport SelfAdvrtInformationScreen from '../../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport * as yup from 'yup'\r\n\r\nfunction HoardingForm3(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n    let labelStyle = \"mt-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        // applicant: yup.string().required('select license year'),\r\n        // directorName: yup.string().required('This field is Required'),\r\n        // omdId: yup.string().required('This field is Required'),\r\n        // mailingAddress: yup.string().required('This field is Required'),\r\n        // city: yup.string().required('This field is Required'),\r\n        // state: yup.string().required('This field is Required'),\r\n        // mobileNo: yup.string().required('This field is Required'),\r\n        // registrationNo: yup.string().required('This field is Required'),\r\n        // permanentAddress: yup.number().required('Enter mobile no.'),\r\n        // permanentCity: yup.string().required('This field is Required'),\r\n        // permanentState: yup.string().required('This field is Required'),\r\n        // pinCode: yup.string().required('This field is Required'),\r\n        // ownerName: yup.string().required('This field is Required'),\r\n        // ownerAddress: yup.string().required('This field is Required'),\r\n        // ownerCity: yup.string().required('This field is Required'),\r\n        // ownerPinCode: yup.string().required('This field is Required'),\r\n        // ownerPhoneNo: yup.string().required('This field is Required'),\r\n        // propertyType: yup.string().required('This field is Required'),\r\n        // displayArea: yup.string().required('This field is Required'),\r\n        // displayLocation: yup.string().required('This field is Required'),\r\n        // displayStreet: yup.string().required('This field is Required'),\r\n        // displayLandmark: yup.string().required('This field is Required'),\r\n        // mediaHeight: yup.string().required('This field is Required'),\r\n        // mediaLength: yup.string().required('This field is Required'),\r\n        // mediaSize: yup.string().required('This field is Required'),\r\n        // material: yup.string().required('This field is Required'),\r\n        // illumination: yup.string().required('This field is Required'),\r\n        // indicateFace: yup.string().required('This field is Required'),\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        applicant: '',\r\n        directorName: '',\r\n        omdId: '',\r\n        mailingAddress: '',\r\n        city: '',\r\n        state: '',\r\n        mobileNo: '',\r\n        registrationNo: '',\r\n        permanentAddress: '',\r\n        permanentCity: '',\r\n        permanentState: '',\r\n        pinCode: '',\r\n        ownerName: '',\r\n        ownerAddress: '',\r\n        ownerCity: '',\r\n        ownerPinCode: '',\r\n        ownerPhoneNo: '',\r\n        propertyType: '',\r\n        displayArea: '',\r\n        displayLocation: '',\r\n        displayStreet: '',\r\n        displayLandmark: '',\r\n        mediaHeight: '',\r\n        mediaLength: '',\r\n        mediaSize: '',\r\n        material: '',\r\n        illumination: '',\r\n        indicateFace: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            console.log(\"hoarding3\", values)\r\n            // props.collectFormDataFun('hoarding3', values, reviewIdName)\r\n            collectFormDataFun('hoarding3', values)\r\n            setFormIndex(4)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        // { name == 'ulb' && getMasterDataFun(value) }\r\n        // { name == 'ulb' && setstoreUlbValue(value) }\r\n        console.log(\"ulb id...\", value)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-0 ml-4 bg-violet-50 '>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                    <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto  '>\r\n                        <div className='col-span-8 '>\r\n                            {/* property details */}\r\n                            <div className='border border-dashed border-violet-800 pb-4 p-2 mt-4'>\r\n                                <h1 className='font-semibold border-b bg-white px-2 p-2 rounded leading-5'>Property</h1>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4'>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Owner Name (person in control of property)<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='ownerName' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.ownerName}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.ownerName && formik.errors.ownerName ? formik.errors.ownerName : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Address<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='ownerAddress' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.ownerAddress}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.ownerAddress && formik.errors.ownerAddress ? formik.errors.ownerAddress : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>City<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='ownerCity' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.ownerCity}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.ownerCity && formik.errors.ownerCity ? formik.errors.ownerCity : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4'>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Pin Code<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='ownerPinCode' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.ownerPinCode}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.ownerPinCode && formik.errors.ownerPinCode ? formik.errors.ownerPinCode : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Phone No.<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='ownerPhoneNo' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.ownerPhoneNo}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.ownerPhoneNo && formik.errors.ownerPhoneNo ? formik.errors.ownerPhoneNo : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Property Type<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <select type=\"text\" name='propertyType' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.propertyType}\r\n                                                >\r\n                                                    <option value=''>select</option>\r\n                                                    <option value='public'>Public</option>\r\n                                                    <option value='private'>Private</option>\r\n                                                </select>\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.propertyType && formik.errors.propertyType ? formik.errors.propertyType : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*display location information*/}\r\n                            <div className='border border-dashed border-violet-800 pb-4 p-2 mt-4'>\r\n                                <h1 className='font-semibold border-b bg-white px-2 p-2 rounded leading-5'>Display location information</h1>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4'>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Area<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='displayArea' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.displayArea}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.displayArea && formik.errors.displayArea ? formik.errors.displayArea : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Location<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='displayLocation' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.displayLocation}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.displayLocation && formik.errors.displayLocation ? formik.errors.displayLocation : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Street<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='displayStreet' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.displayStreet}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.displayStreet && formik.errors.displayStreet ? formik.errors.displayStreet : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4'>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Land mark<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='displayLandmark' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.displayLandmark}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.displayLandmark && formik.errors.displayLandmark ? formik.errors.displayLandmark : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*media specification*/}\r\n                            <div className='border border-dashed border-violet-800 pb-4 p-2 mt-4'>\r\n                                <h1 className='font-semibold border-b bg-white px-2 p-2 rounded leading-5'>Media Specification</h1>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4'>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Height<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='mediaHeight' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.mediaHeight}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.mediaHeight && formik.errors.mediaHeight ? formik.errors.mediaHeight : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Length<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='mediaLength' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.mediaLength}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.mediaLength && formik.errors.mediaLength ? formik.errors.mediaLength : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Size(in sq. ft)<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <input type=\"text\" name='mediaSize' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.mediaSize}\r\n                                                />\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.mediaSize && formik.errors.mediaSize ? formik.errors.mediaSize : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4'>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Material<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <select type=\"text\" name='material' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.material}\r\n                                                >\r\n                                                    <option value=''>select</option>\r\n                                                    <option value='metal'>Metal</option>\r\n                                                    <option value='wood'>Wood</option>\r\n                                                    <option value='others'>Others</option>\r\n                                                </select>\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.material && formik.errors.material ? formik.errors.material : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Illumination<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <select type=\"text\" name='illumination' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.illumination}\r\n                                                >\r\n                                                    <option value=''>select</option>\r\n                                                    <option value='0'>No</option>\r\n                                                    <option value='1'>Yes</option>\r\n                                                </select>\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.illumination && formik.errors.illumination ? formik.errors.illumination : null}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col-span-4 '>\r\n                                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-1'>\r\n                                            <div className=''>\r\n                                                <p className={`${labelStyle}`}>Indicate Facing<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2'>\r\n                                                <select type=\"text\" name='indicateFace' placeholder='' className={`${inputStyle}`}\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.indicateFace}\r\n                                                >\r\n                                                    <option value=''>select</option>\r\n                                                    <option value='north'>North</option>\r\n                                                    <option value='south'>South</option>\r\n                                                    <option value='east'>East</option>\r\n                                                    <option value='west'>West</option>\r\n                                                </select>\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.indicateFace && formik.errors.indicateFace ? formik.errors.indicateFace : null}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='text-left'>\r\n                                <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                            </div>\r\n                            <div className='float-right -mt-12'>\r\n                                <button type=\"submit\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" >Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-span-4 hidden lg:block md:block'>\r\n                            <div className='-mt-16'>\r\n                                <SelfAdvrtInformationScreen />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingForm3","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: '',\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >{props?.data?.document_name}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                        ?\r\n                                        <div onClick={() => modalAction(DocUrl)}>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                <div>\r\n                                                    <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default HoardingDocTable","import axios from 'axios';\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../../DocumentUploadSteps';\r\nimport SelfAdvrtInformationScreen from '../../SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport HoardingDocTable from './HoardingDocTable';\r\n\r\n\r\nfunction HoardingFormDoc(props) {\r\n\r\n  const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n  const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n  const [collectDoc, setcollectDoc] = useState([]);\r\n  const [docList, setdocList] = useState()\r\n  const [renewDocList, setrenewDocList] = useState()\r\n  const [isLoading, setisLoading] = useState(false);\r\n\r\n  const collectAllData = (key, formData) => {\r\n    console.log(\"prev data in document\", collectDoc);\r\n    // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n    if (collectDoc[key] !== undefined) {\r\n      console.log('inside index match...')\r\n      collectDoc[key] = formData\r\n      return\r\n    }\r\n    setcollectDoc([...collectDoc, formData]);\r\n  };\r\n  console.log(\"all data doc\", collectDoc)\r\n\r\n  const handleDocument = () => {\r\n    collectFormDataFun('hoardingDoc', collectDoc)\r\n    setFormIndex(3)\r\n  }\r\n\r\n  ///////////{*** GET DOCUMENT LIST***}/////////\r\n  useEffect(() => {\r\n    getDocumentList()\r\n  }, [])\r\n  const getDocumentList = () => {\r\n    const requestBody = {\r\n      // deviceId: \"agency\",\r\n    }\r\n    axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n      .then(function (response) {\r\n        console.log('hoarding document list', response.data)\r\n        if (type == 'renew') {\r\n          setrenewDocList(response.data)\r\n        }\r\n        else {\r\n          setdocList(response.data)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log('errorrr.... ', error);\r\n      })\r\n  }\r\n\r\n  console.log(\"document list for hoarding...\", docList?.AgencyHordingLicense)\r\n  return (\r\n    <>\r\n\r\n      {/* upload document */}\r\n      <div className='absolute w-full top-0 ml-4 '>\r\n        <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2'>\r\n          <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n            <div className=\"p-1\">\r\n              <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                <div>\r\n                  <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                </div>\r\n                <div>\r\n                  <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                </div>\r\n              </div>\r\n              <div className='mt-2'>\r\n                {docList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n                {renewDocList?.AGENCY_HORDING_LICENSE?.map((items, index) => (\r\n                  <HoardingDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-12 w-full p-3\">\r\n              <div className='md:pl-0 col-span-6'>\r\n                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n              </div>\r\n              <div className='col-span-6'>\r\n                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n              <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n            </div>\r\n          </div>\r\n          <div className='col-span-4'>\r\n            <div className='-mt-20'>\r\n              <DocumentUploadSteps />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HoardingFormDoc","import React from 'react'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction HoardingReview(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.reviewIdNameData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lisenseYear || props?.reviewIdNameData?.hoarding1?.license_year)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hoarding Category </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.hoardingCategory || props?.reviewIdNameData?.hoarding1?.typology_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.longitude || props?.reviewIdNameData?.hoarding1?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.latitude || props?.reviewIdNameData?.hoarding1?.latitude)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Location </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.location || props?.reviewIdNameData?.hoarding1?.location)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Length of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.lengthOfHoarding || props?.reviewIdNameData?.hoarding1?.length)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Width of Hoarding</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.widthOfHoarding || props?.reviewIdNameData?.hoarding1?.width)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Area of Board</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.areaOfBoard || props?.reviewIdNameData?.hoarding1?.area)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Landmark</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.landmark || props?.reviewIdNameData?.hoarding1?.landmark)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Facing </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.facing || props?.reviewIdNameData?.hoarding1?.facing)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Property Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.propertyType || props?.reviewIdNameData?.hoarding1?.property_type)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Zone </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.zone || props?.reviewIdNameData?.hoarding1?.zone_id)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Name(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerName || props?.reviewIdNameData?.hoarding1?.property_owner_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Address(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerAddress || props?.reviewIdNameData?.hoarding1?.property_owner_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner City(If property type is private) </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerCity || props?.reviewIdNameData?.hoarding1?.property_owner_city)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Phone(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerPhone || props?.reviewIdNameData?.hoarding1?.property_owner_mobile_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Owner Whatsapp No.(If property type is private)</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.ownerWhatsappNo || props?.reviewIdNameData?.hoarding1?.property_owner_whatsapp_no)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Material Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.materialType || props?.reviewIdNameData?.hoarding1?.material)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Illumination  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.hoarding1?.illumination || props?.reviewIdNameData?.hoarding1?.illumination_name)}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.hoardingDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingReview","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdvrtSuccessScreen from '../../AdvrtSuccessScreen'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport Loader from '../../Loader'\r\nimport BackButton from '../../BackButton'\r\nimport HoardingForm1 from './HoardingForm1'\r\nimport HoardingForm2 from './HoardingForm2'\r\nimport HoardingForm3 from './HoardingForm3'\r\nimport HoardingFormDoc from './HoardingFormDoc'\r\nimport HoardingReview from './HoardingReview'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\nfunction HoardingIndex() {\r\n\r\n    const { ulbId, applicationId, type } = useParams();\r\n\r\n    console.log(\"ulbid in param\", ulbId)\r\n    console.log(\"application id in param\", applicationId)\r\n    console.log(\"type in param\", type)\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState({})\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postHoardingApplication, api_renewHoarding_license, api_getHoardingApplicationDetailsToRenew } = AdvertisementApiList()\r\n\r\n    //activating notification if no owner or no floor added\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'hoarding1') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc)\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitHoardingApplication()\r\n    }\r\n\r\n    const submitHoardingApplication = () => {\r\n        setisLoading(true)\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postHoardingApplication  //new apply\r\n            requestBody = {\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewHoarding_license  //new apply\r\n            requestBody = {\r\n                applicationId: applicationId,\r\n                ulbId: ulbId,\r\n                zoneId: allFormData?.hoarding1?.zone,\r\n                licenseYear: allFormData?.hoarding1?.lisenseYear,\r\n                HordingType: allFormData?.hoarding1?.hoardingCategory,\r\n                displayLocation: allFormData?.hoarding1?.location,\r\n                width: allFormData?.hoarding1?.widthOfHoarding,\r\n                length: allFormData?.hoarding1?.lengthOfHoarding,\r\n                displayArea: allFormData?.hoarding1?.areaOfBoard,\r\n                longitude: allFormData?.hoarding1?.longitude,\r\n                latitude: allFormData?.hoarding1?.latitude,\r\n                material: allFormData?.hoarding1?.materialType,\r\n                illumination: allFormData?.hoarding1?.illumination,\r\n                indicateFacing: allFormData?.hoarding1?.facing,\r\n                propertyType: allFormData?.hoarding1?.propertyType,\r\n                displayLandMark: allFormData?.hoarding1?.landmark,\r\n                propertyOwnerName: allFormData?.hoarding1?.ownerName,\r\n                propertyOwnerAddress: allFormData?.hoarding1?.ownerAddress,\r\n                propertyOwnerCity: allFormData?.hoarding1?.ownerCity,\r\n                propertyOwnerWhatsappNo: allFormData?.hoarding1?.ownerWhatsappNo,\r\n                propertyOwnerMobileNo: allFormData?.hoarding1?.ownerPhone,\r\n                documents: allFormData?.hoardingDoc,\r\n            }\r\n\r\n        }\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify('submitted successfully', 'success')\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify('failed to submit', 'error')\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        id: ulbId,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getHoardingApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Hoarding Registration</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            {/* You Can Get License To Advertise Your Business Name On Your Shop */}\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600'>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/1684/1684121.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm1 values={values} /></div>\r\n                {/* <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HoardingForm2 values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingForm3 values={values} /></div> */}\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingFormDoc values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all `}><HoardingReview values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingIndex","\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n//  import QRCode from \"react-qr-code\";\r\n//  import CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport axios from 'axios'\r\nimport { AiFillPrinter } from 'react-icons/ai'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\n//  import NonBlockingLoader from '../NonBlockingLoader';\r\nimport { useRef } from 'react';\r\nimport { QrCode } from '@mui/icons-material';\r\nimport BackButton from '../BackButton';\r\nimport { nullToNA } from '../../../../Components/Common/PowerUps/PowerupFunctions';\r\n\r\n\r\nclass ComponentToPrint extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"paymentData...1\", this.props?.paymentData)\r\n\r\n        return (\r\n\r\n            <>\r\n                {/* <div>\r\n                 <div className='md:px-0 flex-1 '>\r\n                   \r\n                 </div>\r\n                 <div className='md:px-0 flex-1 '>\r\n                     <button onClick={() => window.print()} className=\"float-right pl-4 pr-6 py-1 bg-sky-400 text-white font-medium text-xs leading-tight uppercase rounded  hover:bg-amber-100 hover: focus: focus:outline-none focus:ring-0  active: transition duration-150 ease-in-out\">\r\n                       \r\n                         print\r\n                     </button>\r\n                 </div>\r\n             </div> */}\r\n                <div id=\"printableArea\" className=''>\r\n\r\n                    <div>\r\n                        {/* <BackButton /> */}\r\n\r\n                        <div className='border-2 border-dashed border-gray-600  bg-white p-3 w-[200mm] h-auto  md:mx-auto lg:mx-auto container ml-6 mt-12 pb-12'>\r\n                            <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 '>\r\n                                <div className=''>\r\n                                    <img src='https:upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Jharkhand_Rajakiya_Chihna.svg/1200px-Jharkhand_Rajakiya_Chihna.svg.png' className='h-16 mx-auto' />\r\n                                </div>\r\n                                <div className=''>\r\n                                    <img src='https:upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Jharkhand_Rajakiya_Chihna.svg/1200px-Jharkhand_Rajakiya_Chihna.svg.png' alt=\"\" className=' w-[22rem] h-[22rem]  absolute z-10 bg-transparent opacity-20 mt-[16rem] ml-[13rem]  rounded-full border' />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2 '>\r\n                                <div className=''>\r\n                                    <h1 className='font-bold text-2xl text-center '>RANCHI MUNICIPAL CORPORATION</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* holding tax */}\r\n                            <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2 '>\r\n                                <div className='mx-auto'>\r\n                                    <h1 className='font-semibold text-xl text-center text-gray-800 border border-gray-700 w-[16rem] uppercase'>APPROVAL FORM</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* detail section 1 */}\r\n                            <div>\r\n                                <table className='w-full p-2 '>\r\n                                    <tr className=''>\r\n                                        <td className=' '>\r\n                                            <div className='flex p-1 text-md'>\r\n                                                <h1 className='flex text-gray-900 font-sans '>Receipt No. :</h1>\r\n                                                <h1 className='flex font-sans font-semibold  pl-2'> {nullToNA(this.props?.paymentData?.reciept_no)}</h1>\r\n                                            </div>\r\n\r\n                                        </td>\r\n                                        <td className='float-right '>\r\n                                            <div className='flex p-1 text-md'>\r\n                                                <h1 className='flex text-gray-900 font-sans '>Date : </h1>\r\n                                                <h1 className='flex font-sans font-semibold pl-2 '>{nullToNA(this.props?.paymentData?.approve_date)}</h1>\r\n                                            </div>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n\r\n\r\n                            {/* detail section 2 */}\r\n                            <div>\r\n                                <table className='w-full  p-2'>\r\n                                    <tr className=''>\r\n                                        <td className=' '>\r\n                                            <div className='flex p-1 text-md'>\r\n                                                <h1 className='flex text-gray-900 font-sans '>To ,</h1>\r\n                                                <h1 className='flex font-sans font-semibold  pl-2'>{nullToNA(this.props?.paymentData?.applicant_name)}</h1>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                            {/* N.B online */}\r\n                            <div className='grid grid-col-1 md:grid-col-12 xl:grid-col-12 p-2 '>\r\n                                <div className=''>\r\n                                    <h1 className=' text-md leading-relaxed'> Please refer to your application No.<span className='font-bold'>{nullToNA(this.props?.paymentData?.application_no)}</span>, dated <span className='font-bold'>{nullToNA(this.props?.paymentData?.license_start_date)}</span> for registration of installation of Outdoor Media Device for Display of outdoor Advertisement.\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* holding tax details */}\r\n                            <div className='grid grid-col-1 md:grid-col-12 xl:grid-col-12 p-2 ' >\r\n                                <div className=''>\r\n                                    <h1 className='text-md text-left leading-relaxed '>Dear Sir,</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Table 1 */}\r\n                            <div>\r\n                                <h1 className='text-md leading-relaxed p-2'>\r\n                                    This is with reference to your application regarding registration with Urban Local Bodies for installation of an Outdoor Media Device for display of outdoor advertisements.\r\n                                    <br />\r\n                                    It is to inform that following decision has been taken in consideration of your application:\r\n                                    <br />\r\n                                    1.  Your application for registrationis approved and unique identification number alloted to you is <span className='font-bold'>{nullToNA(this.props?.paymentData?.license_no)}</span> Please use the same for all future correspondance with the Urban Local Bodies and for activating your account on the website of Urban Local Bodies.\r\n                                    <br />\r\n                                    2.  Your application for new Media/renewal is rejected on account of the following :<br />\r\n\r\n                                    a.   Incomplete application.<br />\r\n                                    b.   Incorrect information provided<br />\r\n                                    c.   Pending dues with Municipal Corporation.<br />\r\n                                    d.   Blacklisted Status not verified<br />\r\n                                    e.   Others ..............\r\n                                </h1>\r\n                                <br />\r\n                                <h1 className='text-md leading-relaxed p-2'>\r\n                                    Thanking You,<br />\r\n                                    Municipal Commissioner/Executive Officer/Special Officer,<br />\r\n                                    Urban Local Bodies,\r\n                                </h1>\r\n                                <br />\r\n                                <h1 className='text-md leading-relaxed p-2z'>\r\n                                    Note :   In case of rejection of application you may apply fresh on satisfying the above mentioned conditions. <br />\r\n                                    Note :   This is a Typical format only and is subject to modification/amendment by the Urban Local Bodies from time to time .\r\n                                </h1>\r\n                            </div>\r\n\r\n\r\n                            {/* Qr code\r\n                         <div>\r\n                             <table className='w-full mt-8  '>\r\n                                 <tr className=''>\r\n                                     <td className=' '>\r\n                                         <div className=''>\r\n                                             <QrCode value={this.props?.qrValue} size='64' />\r\n                                             <QrCode url='https:upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Jharkhand_Rajakiya_Chihna.svg/1200px-Jharkhand_Rajakiya_Chihna.svg.png' size='64' />\r\n                                         </div>\r\n                                         <div className='flex '>\r\n                                             <h1 className='flex text-gray-900 font-sans text-md leading-relaxed'>For Details Please Visit : udhd.jharkhand.gov.in</h1>\r\n                                         </div>\r\n                                         <div className='flex '>\r\n                                             <h1 className='flex text-gray-900 font-sans text-md leading-relaxed'>Or Call us at 1800 8904115 or 0651-3500700</h1>\r\n                                         </div>\r\n                                     </td>\r\n                                     <td className='float-right mt-8  '>\r\n                                         <div className='flex '>\r\n                                             <h1 className='flex text-gray-900 font-sans text-md leading-relaxed'>In Collaboration with</h1>\r\n                                         </div>\r\n                                         <div className='flex'>\r\n                                             <h1 className='flex text-gray-900 font-sans text-md leading-relaxed'>Sri Publication & Stationers Pvt Ltd</h1>\r\n                                         </div>\r\n\r\n                                     </td>\r\n                                 </tr>\r\n                             </table>\r\n                         </div>\r\n\r\n                         computer generated text\r\n                         <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2 '>\r\n                             <div className=''>\r\n                                 <h1 className='font-semibold text-md text-center'>**This is a computer-generated receipt and it does not require a physical signature.**</h1>\r\n                             </div>\r\n                         </div>\r\n\r\n                         swatch bharat logo\r\n                         <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2  '>\r\n                             <div className=''>\r\n                                 <img src='https:zeevector.com/wp-content/uploads/LOGO/Swachh-Bharat-Logo-PNG.png' className='w-28 mx-auto' />\r\n                             </div>\r\n                         </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\nexport default ComponentToPrint","import React, { useRef } from 'react'\r\nimport ReactToPrint from 'react-to-print-advanced'\r\nimport ComponentToPrint from './SelfApprovalForm';\r\nimport AdvertisementApiList from '../../AdvertisementApiList';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport useSetTitle from '../../../../Components/GlobalData/UseSetTitle';\r\nimport axios from 'axios';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction SelfApprovalIndexForm() {\r\n\r\n    ///////{***✅ payment Id from use param...***}///////\r\n    const { id, workflowId } = useParams()\r\n    console.log(\"param transcation id ..\", id)\r\n    console.log(\"param wrkflow id ..\", workflowId)\r\n\r\n    const { getApprovalLetterDetails } = AdvertisementApiList();\r\n    const componentRef = useRef();\r\n    const [paymentData, setpaymentData] = useState();\r\n    const [show, setshow] = useState(false)\r\n    // SETTING GLOBAL TITLE AT ONCE USING CUSTOM HOOK\r\n    useSetTitle('Payment Receipt')\r\n    // const [paymentId, setpaymentId] = useState('pay_KiI7acuJomb5eq');\r\n\r\n    // const { licenseId, tranId } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPaymentData();\r\n    }, [])\r\n\r\n    const fetchPaymentData = () => {\r\n        const requestBody = {\r\n            applicationId: id,\r\n            workflowId: workflowId,\r\n        }\r\n\r\n        console.log('before fetch payment receipt....', requestBody)\r\n        axios.post(`${getApprovalLetterDetails}`, requestBody, ApiHeader())\r\n            .then((response) => {\r\n                // console.log(\"payment data\", response.data.data);\r\n                console.log(\"Approval letter details\", response);\r\n                if (response.data.status) {\r\n                    setpaymentData(response.data.data);\r\n                } else {\r\n                    ;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    console.log(\"payment data\", paymentData)\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                {/* <NonBlockingLoader show={show} /> */}\r\n                <ReactToPrint\r\n                    trigger={() => <button className='bg-sky-200 px-4 text-lg '>print</button>}\r\n                    content={() => componentRef.current}\r\n                />\r\n                <ComponentToPrint ref={componentRef} paymentData={paymentData} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelfApprovalIndexForm","\r\nimport { Tooltip } from '@material-tailwind/react'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport AdvertisementApiList from '../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../ApiHeaderAdvrt'\r\n\r\nfunction AgencyNotification(props) {\r\n\r\n    const { api_getAgencyDetails } = AdvertisementApiList()\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [profileDetail, setprofileDetail] = useState()\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [showPayment, setshowPayment] = useState([\r\n        {\r\n            id: \"1\",\r\n            notification: \"your license is going to expire on 30/01/2023\",\r\n            hoardingNo: \"123456789\",\r\n            action: 'pay & renew',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            notification: \"your license is going to expire on 30/01/2023\",\r\n            hoardingNo: \"3433456789\",\r\n            action: 'pay & renew',\r\n        },\r\n        {\r\n            id: \"3\",\r\n            notification: \"your license is going to expire on 30/01/2023\",\r\n            hoardingNo: \"1344345688\",\r\n            action: 'pay & renew',\r\n        },\r\n\r\n    ])\r\n    const [showMessage, setshowMessage] = useState([\r\n        {\r\n            id: \"1\",\r\n            notification: \"Hoarding Has Been Approved\",\r\n            hoardingNo: \"123456789\",\r\n            action: 'pay',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            notification: \"Hoarding Has Been Approved\",\r\n            hoardingNo: \"3433456789\",\r\n            action: 'pay',\r\n        },\r\n        {\r\n            id: \"3\",\r\n            notification: \"Hoarding Has Been Approved\",\r\n            hoardingNo: \"1344345688\",\r\n            action: 'pay',\r\n        },\r\n        {\r\n            id: \"4\",\r\n            notification: \"Hoarding Has Been Approved\",\r\n            hoardingNo: \"1344345688\",\r\n            action: 'pay',\r\n        },\r\n\r\n    ])\r\n    const [showValidTime, setshowValidTime] = useState([\r\n        {\r\n            id: \"1\",\r\n            notification: \"hoarding is valid for 21/01/2023 to 21/01/2024\",\r\n            hoardingNo: \"123456789\",\r\n            action: 'pay',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            notification: \"hoarding is valid for 21/01/2023 to 21/01/2024\",\r\n            hoardingNo: \"3433456789\",\r\n            action: 'pay',\r\n        },\r\n        {\r\n            id: \"3\",\r\n            notification: \"hoarding is valid for 21/01/2023 to 21/01/2024\",\r\n            hoardingNo: \"1344345688\",\r\n            action: 'pay',\r\n        },\r\n\r\n    ])\r\n\r\n    console.log(\"application id..12\", props.applicationId)\r\n\r\n    ///////////{*** get agency details ***}/////////\r\n    useEffect(() => {\r\n        getAgencyDetails()\r\n    }, [])\r\n    const getAgencyDetails = () => {\r\n        // props.showLoader(true);\r\n        const requestBody = {\r\n            applicationId: props.applicationId,\r\n        }\r\n        axios.post(`${api_getAgencyDetails}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('agency details', response.data.data.data)\r\n                setprofileDetail(response.data.data.data)\r\n                // setTimeout(() => {\r\n                //     props.showLoader(false);\r\n                // }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                // setTimeout(() => {\r\n                //     props.showLoader(false);\r\n                // }, 500);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    console.log(\"tabindex\", tabIndex)\r\n    console.log(\"directors details\", profileDetail?.directors)\r\n    console.log(\"application id...\", profileDetail?.id)\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"p-3\">\r\n                    <div className=\"bg-violet-100  flex flex-row \">\r\n                        <h1 className=\"text-gray-500 p-2 ml-8 text-lg font-semibold\">Tasks</h1>\r\n                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Account\">\r\n                            <button type='button' className=\"p-2 flex flex-row focus:outline-none focus:ring focus:ring-violet-300 \" onClick={() => settabIndex(1)}>\r\n                                <span>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 p-1 rounded-full text-indigo-500 bg-gray-50 darks:bg-pink-900 darks:bg-opacity-40\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M8.25 6.75a3.75 3.75 0 117.5 0 3.75 3.75 0 01-7.5 0zM15.75 9.75a3 3 0 116 0 3 3 0 01-6 0zM2.25 9.75a3 3 0 116 0 3 3 0 01-6 0zM6.31 15.117A6.745 6.745 0 0112 12a6.745 6.745 0 016.709 7.498.75.75 0 01-.372.568A12.696 12.696 0 0112 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 01-.372-.568 6.787 6.787 0 011.019-4.38z\" clip-rule=\"evenodd\" />\r\n                                        <path d=\"M5.082 14.254a8.287 8.287 0 00-1.308 5.135 9.687 9.687 0 01-1.764-.44l-.115-.04a.563.563 0 01-.373-.487l-.01-.121a3.75 3.75 0 013.57-4.047zM20.226 19.389a8.287 8.287 0 00-1.308-5.135 3.75 3.75 0 013.57 4.047l-.01.121a.563.563 0 01-.373.486l-.115.04c-.567.2-1.156.349-1.764.441z\" />\r\n                                    </svg>\r\n                                </span>\r\n\r\n                            </button>\r\n                        </Tooltip>\r\n                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Notifications\">\r\n                            <button type='button' className=\"p-2 flex flex-row focus:outline-none focus:ring focus:ring-violet-300 \" onClick={() => settabIndex(2)} >\r\n                                <span>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 p-1 rounded-full text-indigo-500 bg-gray-50 darks:bg-pink-900 darks:bg-opacity-40\">\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\" />\r\n                                    </svg>\r\n                                </span>\r\n                                <span className=\"text-red-500 font-bold text-lg -mt-2\">4</span>\r\n                            </button>\r\n                        </Tooltip>\r\n                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Payments Dues\">\r\n                            <button type='button' className=\"p-2 flex flex-row focus:outline-none focus:ring focus:ring-violet-300 \" onClick={() => settabIndex(3)}>\r\n                                <span>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 p-1 rounded-full text-indigo-500 bg-gray-50 darks:bg-pink-900 darks:bg-opacity-40\">\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 8.25H9m6 3H9m3 6l-3-3h1.5a3 3 0 100-6M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                    </svg>\r\n\r\n                                </span>\r\n                                <span className=\"text-red-500 font-bold text-lg -mt-2\">3</span>\r\n                            </button>\r\n                        </Tooltip>\r\n                        {/* <button type='button' className=\"p-2 flex flex-row \" onClick={() => settabIndex(3)}>\r\n                            <span>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 p-1 rounded-full text-indigo-500 bg-gray-50 darks:bg-pink-900 darks:bg-opacity-40\">\r\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                            </span>\r\n                           \r\n                        </button> */}\r\n\r\n                    </div>\r\n\r\n                    {/* hoarding valid till */}\r\n                    {tabIndex == 1 &&\r\n                        <div className={``}>\r\n                            <div>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"h-20 rounded-full bg-gray-200 mx-auto  text-indigo-500 mt-4\">\r\n                                    <path fill-rule=\"evenodd\" d=\"M8.25 6.75a3.75 3.75 0 117.5 0 3.75 3.75 0 01-7.5 0zM15.75 9.75a3 3 0 116 0 3 3 0 01-6 0zM2.25 9.75a3 3 0 116 0 3 3 0 01-6 0zM6.31 15.117A6.745 6.745 0 0112 12a6.745 6.745 0 016.709 7.498.75.75 0 01-.372.568A12.696 12.696 0 0112 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 01-.372-.568 6.787 6.787 0 011.019-4.38z\" clip-rule=\"evenodd\" />\r\n                                    <path d=\"M5.082 14.254a8.287 8.287 0 00-1.308 5.135 9.687 9.687 0 01-1.764-.44l-.115-.04a.563.563 0 01-.373-.487l-.01-.121a3.75 3.75 0 013.57-4.047zM20.226 19.389a8.287 8.287 0 00-1.308-5.135 3.75 3.75 0 013.57 4.047l-.01.121a.563.563 0 01-.373.486l-.115.04c-.567.2-1.156.349-1.764.441z\" />\r\n                                </svg></div>\r\n                            <div><h1 className='text-center font-semibold text-xl'>{profileDetail?.entity_name}</h1></div>\r\n                            <div><h1 className='text-center text-gray-600 font-semibold text-md'>Your License is valid for 5 years <br /> {profileDetail?.approve_date}  to  {profileDetail?.expiry_date}</h1></div>\r\n                            {profileDetail?.warning == 1 &&\r\n                                <div className='text-center'>\r\n                                    <button className=\" mt-4 py-1 px-4 text-xs inline-block text-center shadow-lg  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0 animate-pulse\" onClick={() => navigate(`/agency/${profileDetail?.id}/renew`)}>Renew your license</button>\r\n                                    <h1 className='text-sm font-bold mt-1'>your license is going to expire on <span className='text-red-500'>{profileDetail?.expiry_date}</span>.To continue with the license Renew It. </h1>\r\n                                </div>\r\n                            }\r\n                            <div>\r\n                                <table className='border mt-8'>\r\n                                    <thead className='bg-violet-200'>\r\n                                        <tr className='border '>\r\n                                            <td className='border px-12 text-sm'>Members</td>\r\n                                            <td className='border px-12 text-sm'>Mobile No.</td>\r\n                                            <td className='border px-12 text-sm'>Email</td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {profileDetail?.directors?.map((data) => (\r\n                                            <tr className='text-center text-sm'>\r\n                                                <td className='border'>{data?.director_name}</td>\r\n                                                <td className='border'>{data?.director_mobile}</td>\r\n                                                <td className='border'>{data?.director_email}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {/* message */}\r\n                    {tabIndex == 2 &&\r\n                        <div className={``}>\r\n                            {showMessage.map((items) => (\r\n                                <div className='flex bg-white shadow-sm p-2 mb-3 '>\r\n                                    <h1 className='text-md text-gray-800 ml-4'>\r\n                                        {items.notification} <br /> <span className='text-sm font-bold'>HOARDING NO. :- {items.hoardingNo}</span>\r\n                                    </h1>\r\n                                    {items.action != null || items.action != undefined || items.action != '' &&\r\n                                        <button type=\"button\" class=\"text-sm ml-16 mt-2 lg:ml-20 md:ml-20 px-4 inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\">{items.action}</button>}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                    {/* payment notification */}\r\n                    {tabIndex == 3 &&\r\n                        < div className={``}>\r\n                            {showPayment.map((items) => (\r\n                                <div className='flex bg-white shadow-sm p-2 mb-3 '>\r\n                                    <h1 className='text-md text-gray-800 ml-4'>\r\n                                        {items.notification} <br /> <span className='text-sm font-bold'>HOARDING NO. :- {items.hoardingNo}</span>\r\n                                    </h1>\r\n                                    <button type=\"button\" class=\"text-sm ml-16 mt-2 lg:ml-20 md:ml-20 px-2 inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\">{items.action}</button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgencyNotification","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\n// import Loader from './Loader'\r\n\r\nfunction HoardingApplicationFullDetail(props) {\r\n\r\n    const { api_getHoardingApplicationFullDetail, api_getHoardingAppliedDocumentList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n    console.log(\"application data in list application\", props.data)\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [documentList, setdocumentList] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const applicationId = props.data\r\n    const applicationType = props.applicationType\r\n\r\n\r\n    console.log(\"onclick close modal\", props.closeModal)\r\n    console.log(\"application id..1\", applicationId)\r\n    console.log(\"application type\", applicationType)\r\n\r\n\r\n    const handleClose = () => {\r\n        props.closeModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        console.log(\"application no through props..\", props?.data)\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        console.log(\"request body for application full detail\", requestBody)\r\n        axios.post(`${api_getHoardingApplicationFullDetail}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application view details 1', response)\r\n                setapplicationDetail(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"details of application...hoarding\", applicationDetail?.fullDetailsData\r\n    )\r\n\r\n    ///////////{*** GET UPLOADED DOCUMENT***}/////////\r\n    useEffect(() => {\r\n        getAppliedDocumentList()\r\n    }, [])\r\n    const getAppliedDocumentList = () => {\r\n        props.showLoader(true)\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        axios.post(`${api_getHoardingAppliedDocumentList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('document list 22', response.data.data)\r\n                setdocumentList(response.data.data)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"document list...2\", documentList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-violet-400 shadow-lg rounded leading-5 z-50'>\r\n                <div className=' shadow-md shadow-violet-200 p-2 '>\r\n                    <h1 className='text-2xl px-4 font-semibold text-gray-700 '>Application Details</h1>\r\n                    <h1 className='text-xs px-4 text-gray-500'>Review your application</h1>\r\n                    <button className='float-right -mt-9 mr-4' onClick={handleClose}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 bg-red-400 text-white  shadow-lg  rounded-full\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                <div className='ml-96'>\r\n                    {/* <Loader show={ props.showLoader(false)} /> */}\r\n                </div>\r\n                {props.showLoader}\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 p-4 gap-4'>\r\n                    <div className='col-span-7 '>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 p-4 bg-violet-100 rounded leading-5'>\r\n                            <div className='flex '>\r\n                                <h1 className='font-normal text-md '>Application No.</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.application_no}</h1>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <h1 className='font-normal text-md '>Apply Date</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.apply_date}</h1>\r\n                            </div>\r\n                        </div>\r\n                        {applicationDetail?.fullDetailsData?.dataArray?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 container mx-auto bg-white rounded leading-5 p-2 mt-4'>\r\n                                {data?.data?.map((data) => (\r\n                                    <div className='bg-violet-100 border border-white p-2'>\r\n                                        <h1 className='font-bold text-lg text-gray-900 '>{data?.value || 'N/A'} </h1>\r\n                                        <h1 className=' font-normal text-sm text-gray-600 '>{data?.displayString}</h1>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                    <div className='col-span-5 bg-white rounded leading-5'>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-violet-100 p-4 rounded leading-5 container'>\r\n                            <div className='   '>\r\n                                <h1 className='font-semibold text-gray-800 text-lg text-center '>Documents Uploaded</h1>\r\n                            </div>\r\n                        </div>\r\n                        {documentList?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-4 bg-white  rounded leading-5'>\r\n                                <div className='flex  bg-violet-100'>\r\n                                    <h1 className='flex-1 font-semibold text-sm text-gray-600 p-6 uppercase'>{data?.doc_val}</h1>\r\n                                    <h1 className='flex-1 '>\r\n                                        <embed className='w-16 h-16 float-right' src={`${BackendUrlAdvt}/${data?.doc_path}`} />\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingApplicationFullDetail","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from '../Hoarding/HoardingApplicationFullDetail';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\n\r\nfunction HoardingApprovedApplication(props) {\r\n\r\n\r\n    const { api_getHoardingApprovedApplicationList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        props.showLoader(true);\r\n        const requestBody = {\r\n            // applicationId: applicationId,\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHoardingApprovedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('hoarding approved list in dashboard', response)\r\n                setapplicationDetail(response.data.data)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"hoarding Approved application\", applicationDetail)\r\n\r\n    return (\r\n        <>\r\n\r\n            {applicationDetail?.data?.length == 0 || applicationDetail == undefined || applicationDetail == null || applicationDetail == '' ?\r\n                <div className=''>\r\n                    <h1 className='text-lg ml-2 font-semibold text-center '>NO DATA\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 text-violet-600 mx-auto\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" />\r\n                        </svg>\r\n\r\n                    </h1>\r\n                </div>\r\n\r\n                :\r\n                <>\r\n                    {applicationDetail?.data?.slice(0, 4)?.map((data) => (\r\n                        <div className=\"col-span-3  p-2\">\r\n                            <div className=\"bg-violet-100 \">\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1 \">Application No.</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_no}</h1>\r\n                                </div>\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1\">Applied Date</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_date}</h1>\r\n                                </div>\r\n                                <div className='text-right'>\r\n                                    <button id={data?.id} value='Approve' className=' px-1 text-violet-700 text-sm border-b border-violet-700  font-semibold' onClick={(e) => modalAction(data?.id, e.target.value)}>view</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className='text-right'><button className='text-sm bg-indigo-500 shadow-lg px-2 text-white' onClick={() => navigate\r\n                        (`/hoarding-approved-list`)}>View All</button>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                        <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            {/* <div><button className='text-sm bg-indigo-500 rounded leading-5 shadow-md px-2 text-white  '>View All</button></div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingApprovedApplication","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ReuploadHoardingDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const { api_postHoardingReuploadedDocument } = AdvertisementApiList()\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        id: props?.data?.id,\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n\r\n            axios.post(`${api_postHoardingReuploadedDocument}`, values, ApiHeaderAdvrt())\r\n                .then(function (response) {\r\n                    console.log('re-uploaded document', response.data.data)\r\n                    // setdocList(response.data.data)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('errorrr.... ', error);\r\n                })\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"reupload doc \", props.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`}> {props?.data?.doc_val} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            <div onClick={() => modalAction(DocUrl)}>\r\n                                <img src={`${BackendUrlAdvt}/${props?.data?.doc_path}`} alt=\"Preview Image\" className={`${labelStyle} w-8`} />\r\n                            </div>\r\n                            {props?.data?.verify_status == 2 &&\r\n                                <div>\r\n                                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                        <>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                                ?\r\n                                                <div onClick={() => modalAction(DocUrl)}>\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                </div>\r\n\r\n                                                :\r\n                                                <>\r\n                                                    <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                        <div>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0 mt-2\">\r\n                                {props?.data?.verify_status == 0 && <h1 className='bg-amber-200 text-center  w-28 text-xs rounded-full text-amber-800 shadow-md'>Pending</h1>}\r\n                                {props?.data?.verify_status == 1 && <h1 className='bg-green-200 text-center w-28 text-xs rounded-full text-green-800 shadow-md'>Verified</h1>}\r\n                                {props?.data?.verify_status == 2 && <h1 className='bg-red-200 text-center w-28 text-xs rounded-full text-red-800 shadow-md '>Rejected</h1>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm mt-2\">\r\n                            {props?.data?.verify_status == 2 ?\r\n                                <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                    {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0'>\r\n                                            <span className='text-xs'>upload</span>\r\n                                        </button> :\r\n                                        <>\r\n                                            <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                            < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                                <span className='text-xs'>re-upload</span>\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                :\r\n                                < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white focus:outline-none focus:ring-0' disabled>\r\n                                    <span className='text-xs'>uploaded</span>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ReuploadHoardingDocTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport ReuploadHoardingDocTable from './ReuploadHoardingDocTable';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\n\r\nfunction ReuploadHoardingDocModal(props) {\r\n\r\n    const { api_getHoardingReuploadDoc } = AdvertisementApiList()\r\n    const [docList, setdocList] = useState()\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: props?.data,\r\n            // workflowId: props?.workflowId,\r\n        }\r\n        axios.post(`${api_getHoardingReuploadDoc}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('re-uploaded document list', response.data.data)\r\n                setdocList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"application id\", props.data)\r\n    console.log(\"workflow id 1\", props.workflowId)\r\n    return (\r\n        <>\r\n            <div className=' top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8 p-2 mt-12'>\r\n                    <div className='col-span-12'><h1 className='text-xl'>Upload Rejected Document</h1></div>\r\n                    <div className='col-span-12 border border-dashed border-violet-800 '>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Status</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.map((items, index) => (\r\n                                    <ReuploadHoardingDocTable data={items} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReuploadHoardingDocModal","import axios from 'axios'\r\nimport Modal from 'react-modal';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Loader from '../../Loader'\r\nimport HoardingApplicationFullDetail from '../Hoarding/HoardingApplicationFullDetail';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport ReuploadHoardingDocModal from '../Hoarding/ReuploadHoardingDocModal';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\n\r\nfunction HoardingPendingList(props) {\r\n\r\n    const { api_getHoardingPendingApplicationList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen1, setIsOpen1] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const openModal1 = () => setIsOpen1(true)\r\n    const closeModal1 = () => setIsOpen1(false)\r\n    const afterOpenModal1 = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    const docUploadModal = (applicationId) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        setapplicationNo(applicationId)\r\n        openModal1()\r\n    }\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        props.showLoader(true);\r\n        const requestBody = {\r\n            // applicationId: applicationId,\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHoardingPendingApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('hoarding pending applications in dashboard', response.data.data)\r\n                setapplicationDetail(response.data.data)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"hoarding application...1\", applicationDetail?.data?.length)\r\n\r\n    return (\r\n        <>\r\n\r\n            {applicationDetail?.data?.length == 0 || applicationDetail == undefined || applicationDetail == null || applicationDetail == '' ?\r\n                <div className=''>\r\n                    <h1 className='text-lg ml-2 font-semibold text-center'>NO DATA\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 text-violet-600 mx-auto\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" />\r\n                        </svg>\r\n\r\n                    </h1>\r\n                </div>\r\n\r\n                :\r\n                <>\r\n                    {applicationDetail?.data?.slice(0, 4)?.map((data) => (\r\n                        <div className=\"col-span-3  p-2\">\r\n                            <div className=\"bg-violet-100 \">\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1 \">Application No.</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_no}</h1>\r\n                                </div>\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1\">Applied Date</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_date}</h1>\r\n                                </div>\r\n                                <div className='text-right'>\r\n                                    {data?.doc_upload_status == 0 &&\r\n                                        <button type=\"button\" id={data?.id} value='Active' class=\"mr-4 text-violet-700 text-sm border-b border-violet-700  font-semibold\" onClick={(e) => docUploadModal(data?.id)}>upload Document</button>\r\n                                    }\r\n                                    <button id={data?.id} value='Active' className=' px-1 text-violet-700 text-sm border-b border-violet-700  font-semibold' onClick={(e) => modalAction(data?.id, e.target.value)}>view</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className='text-right'><button className='text-sm bg-indigo-500 shadow-lg px-2 text-white' onClick={() => navigate(`/hoarding-pending-list`)}>View All</button>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                        <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={modalIsOpen1}\r\n                onAfterOpen={afterOpenModal1}\r\n                onRequestClose={closeModal1}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '70vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-violet-50 overflow-y-auto '>\r\n                        <ReuploadHoardingDocModal data={applicationNo} closeModal={closeModal1} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingPendingList","import axios from 'axios'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport HoardingApplicationFullDetail from '../Hoarding/HoardingApplicationFullDetail';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingRejectedApplication(props) {\r\n\r\n\r\n    const { api_getHoardingRejectedApplicationList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        props.showLoader(true);\r\n        const requestBody = {\r\n            // applicationId: applicationId,\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHoardingRejectedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('approved hoarding view details 1', response)\r\n                setapplicationDetail(response.data.data)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"hoarding application\", applicationDetail)\r\n\r\n    return (\r\n        <>\r\n            {applicationDetail?.data?.length == 0 || applicationDetail == undefined || applicationDetail == null || applicationDetail == '' ?\r\n                <div className=''>\r\n                    <h1 className='text-lg ml-2 font-semibold text-center'>NO DATA\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 text-violet-600 mx-auto\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" />\r\n                        </svg>\r\n\r\n                    </h1>\r\n                </div>\r\n\r\n                :\r\n                <>\r\n                    {applicationDetail?.data?.map((data) => (\r\n                        <div className=\"col-span-3  p-2\">\r\n                            <div className=\"bg-violet-100 \">\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1 \">Application No.</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_no}</h1>\r\n                                </div>\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1\">Applied Date</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_date}</h1>\r\n                                </div>\r\n                                <div className='text-right'>\r\n                                    <button id={data?.id} value='Reject' className=' px-1 text-violet-700 text-sm border-b border-violet-700  font-semibold' onClick={(e) => modalAction(data?.id, e.target.value)}>view</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className='text-right'><button className='text-sm bg-indigo-500  shadow-lg px-2 text-white' onClick={() => navigate\r\n                        (`/hoarding-Rejected-list`)}>View All</button>\r\n                    </div>\r\n                </>\r\n            }\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                        <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            {/* <div><button className='text-sm bg-indigo-500 rounded leading-5 shadow-md px-2 text-white  '>View All</button></div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingRejectedApplication","import axios from 'axios'\r\nimport Modal from 'react-modal';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Loader from '../../Loader'\r\nimport HoardingApplicationFullDetail from '../Hoarding/HoardingApplicationFullDetail';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\n\r\nfunction HoardingUnpaidList(props) {\r\n\r\n    const { api_getHoardingUnpaidApplicationList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        props.showLoader(true);\r\n        const requestBody = {\r\n            // applicationId: applicationId,\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHoardingUnpaidApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('hoarding unpaid application in dashboard', response)\r\n                setapplicationDetail(response.data.data)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"hoarding unpaid application...1\", applicationDetail)\r\n\r\n    return (\r\n        <>\r\n\r\n            {applicationDetail?.data?.length == 0 || applicationDetail == undefined || applicationDetail == null || applicationDetail == '' ?\r\n                <div className=''>\r\n                    <h1 className='text-lg ml-2 font-semibold text-center'>NO DATA\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-8 h-8 text-violet-600 mx-auto\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" />\r\n                        </svg>\r\n\r\n                    </h1>\r\n                </div>\r\n\r\n                :\r\n                <>\r\n                    {applicationDetail?.data?.slice(0, 4)?.map((data) => (\r\n                        <div className=\"col-span-3  p-2\">\r\n                            <div className=\"bg-violet-100 \">\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1 \">Application No.</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_no}</h1>\r\n                                </div>\r\n                                <div className=\"flex p-2 text-gray-600  text-xs\">\r\n                                    <h1 className=\"flex-1\">Applied Date</h1>\r\n                                    <h1 className=\"flex-1 font-bold\">{data?.application_date}</h1>\r\n                                </div>\r\n                                <div className='text-right'>\r\n                                    <button id={data?.id} value='Approve' className=' px-1 text-violet-700 text-sm border-b border-violet-700  font-semibold' onClick={(e) => modalAction(data?.id, e.target.value)}>view</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className='text-right'><button className='text-sm bg-indigo-500  shadow-lg px-2 text-white' onClick={() => navigate\r\n                        (`/hoarding-Unpaid-list`)}>View All</button>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                        <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HoardingUnpaidList","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\n\r\nexport const data = [\r\n  [\"Year\", \"Hoarding Applied\", \"Approved \", \"Rejected\"],\r\n  [\"2020\", 1170, 460, 250],\r\n  [\"2021\", 660, 1120, 300],\r\n  [\"2022\", 1030, 540, 350],\r\n];\r\n\r\nexport const options = {\r\n  chart: {\r\n    title: \"Yearly statics\",\r\n    subtitle: \"Yearly Applied , Approved , Rejected\",\r\n  },\r\n};\r\n\r\nexport function BarGraphComponent() {\r\n  return (\r\n    <Chart\r\n      chartType=\"Bar\"\r\n      width=\"100%\"\r\n      height=\"400px\"\r\n      data={data}\r\n      options={options}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport React, { Component, useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\n// import { BarGraphComponent } from \"../BarGraphComponent\";\r\nimport { PieChartComponent } from \"../PieChartComponent\";\r\nimport HoardingApprovedApplication from \"./HoardingApprovedApplication\";\r\nimport HoardingPendingList from \"./HoardingPendingList\";\r\nimport HoardingRejectedApplication from \"./HoardingRejectedApplication\";\r\nimport HoardingUnpaidList from \"./HoardingUnpaidList\";\r\nimport { BarGraphComponent } from '../../../../../Pages/AdvertisementModule/Advertisement/Agency/BarGraphComponent'\r\n\r\n\r\nfunction AgencyDashboard() {\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate()\r\n    console.log(\"application id through param\", id)\r\n    const { api_getAgencyDashboardData } = AdvertisementApiList()\r\n    const [tabIndex, settabIndex] = useState(0)\r\n    const [show, setshow] = useState(false)\r\n    const [agencyDashboard, setagencyDashboard] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const myRef = useRef(null);\r\n    const useMountEffect = fun => useEffect(fun, []);\r\n    const executeScroll = () => {\r\n\r\n        // console.log(\"id of div\",e.target)\r\n        myRef.current.scrollIntoView();\r\n        // settabIndex(2)\r\n    }\r\n    // run this function from an event handler or pass it to useEffect to execute scroll\r\n    useMountEffect(executeScroll); // Scroll on mount\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n\r\n\r\n    ///////////{*** get agency details ***}/////////\r\n    useEffect(() => {\r\n        getAgencyDetails()\r\n    }, [])\r\n    const getAgencyDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            applicationId: id,\r\n        }\r\n        axios.post(`${api_getAgencyDashboardData}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('agency dashboard---2', response.data.data)\r\n                setagencyDashboard(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"agency ulb_id\", agencyDashboard?.ulb_id)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\" container mx-auto\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 mt-10 \">\r\n                    <div className=\"col-span-6\">\r\n                        <div className=\"bg-white rounded leading-5 shadow-lg\">\r\n                            <div className=\"grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 p-2\">\r\n                                <div className=\"col-span-1\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-48 h-48 text-violet-200 \">\r\n                                        <path d=\"M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 001.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06zM18.584 5.106a.75.75 0 011.06 0c3.808 3.807 3.808 9.98 0 13.788a.75.75 0 11-1.06-1.06 8.25 8.25 0 000-11.668.75.75 0 010-1.06z\" />\r\n                                        <path d=\"M15.932 7.757a.75.75 0 011.061 0 6 6 0 010 8.486.75.75 0 01-1.06-1.061 4.5 4.5 0 000-6.364.75.75 0 010-1.06z\" />\r\n                                    </svg>\r\n\r\n                                </div>\r\n                                <div className=\"col-span-2 p-3 \">\r\n\r\n                                    <h1 className=\"font-bold text-3xl text-gray-600 \">Agency Dashboard</h1>\r\n                                    <h1 className=\"text-md text-gray-500 mt-2 p-1 \">\r\n                                        Agency is a vendor that works as mediator between the advertisers and the ulb. It simplifies the process of taking authorisation from the government body for general advertisers.\r\n                                        This dashboard will incoprate the data of advertisers that has one parent agency to handle thier ads. </h1>\r\n                                    <span className=\"\"></span>\r\n                                    {/* <Link to='/hoarding'> */}\r\n                                    <button className=\"float-right mt-4 py-2 px-4 inline-block text-center shadow-lg  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => navigate(`/hoarding/${agencyDashboard?.ulb_id}/${0}/newapply`)}>Apply Hoarding</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-span-6\">\r\n\r\n                        <div className=\"\" >\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                                <div className=\"flex flex-row p-6 bg-white rounded leading-5 shadow-lg\" onClick={executeScroll}>\r\n                                    <div className=\"\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4  rounded-full text-pink-500 bg-pink-100 darks:bg-pink-900 darks:bg-opacity-40 \">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"ml-3 p-2\">\r\n                                        <h1 className=\"text-gray-500 text-lg font-semibold\">Pending Payments</h1>\r\n                                        <h1 className=\"text-gray-500 text-lg font-extrabold\">{agencyDashboard?.countUnpaideAppl?.totalUnpaid}</h1>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex flex-row p-6 bg-white rounded leading-5 shadow-lg\" onClick={executeScroll}>\r\n                                    <div className=\"\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4 rounded-full text-indigo-500 bg-indigo-100 darks:bg-indigo-900  darks:bg-opacity-40 \">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"ml-3 p-2\">\r\n                                        <h1 className=\"text-gray-500 text-lg font-semibold\">Pending Applications</h1>\r\n                                        <h1 className=\"text-gray-500 text-lg font-extrabold\">{agencyDashboard?.countPendindAppl?.totalPending}</h1>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-1 lg:grid-cols-2 gap-4 mt-6\">\r\n                                <div id=\"2\" className=\"flex flex-row p-6 bg-white rounded leading-5 shadow-lg\" onClick={executeScroll}>\r\n                                    <div className=\"\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4 rounded-full text-green-500 bg-green-100 darks:bg-green-900 darks:bg-opacity-40  \">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"ml-3 p-2\">\r\n                                        <h1 className=\"text-gray-500 text-lg font-semibold\">Approved Applications</h1>\r\n                                        <h1 className=\"text-gray-500 text-lg font-extrabold\">{agencyDashboard?.countApprovedAppl?.totalApproved}</h1>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex flex-row p-6 bg-white rounded leading-5 shadow-lg\" onClick={executeScroll}>\r\n                                    <div className=\"\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4 rounded-full text-yellow-500 bg-yellow-100 darks:bg-yellow-900 darks:bg-opacity-40\">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"ml-3 p-2\">\r\n                                        <h1 className=\"text-gray-500 text-lg font-semibold\">Rejected Applications</h1>\r\n                                        <h1 className=\"text-gray-500 text-lg font-extrabold\">{agencyDashboard?.countRejectAppl?.totalRejected}</h1>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* notification */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mt-4 mx-auto \">\r\n\r\n                    <div className=\"col-span-8\">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4\">\r\n\r\n                            {/* graph */}\r\n                            <div className=\"col-span-6 \">\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n                                    <div className=\"col-span-1\">\r\n                                        <div className=\"p-1  mt-1 cursor-pointer space-x-2 justify-center flex flex-row   bg-indigo-500  rounded leading-5 shadow-md\" onClick={() => navigate(`/hoarding-archived-list`)}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6 text-gray-50\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\" clip-rule=\"evenodd\" />\r\n                                            </svg>\r\n                                            <h1 className=\"text-sm text-gray-50\" >Archived</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-span-1\">\r\n                                        <div className=\"p-1 mt-1 cursor-pointer space-x-2 justify-center  flex flex-row bg-indigo-500  rounded leading-5 shadow-md\" onClick={() => navigate(`/hoarding-blacklisted-list`)}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6 text-gray-50\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M6.72 5.66l11.62 11.62A8.25 8.25 0 006.72 5.66zm10.56 12.68L5.66 6.72a8.25 8.25 0 0011.62 11.62zM5.105 5.106c3.807-3.808 9.98-3.808 13.788 0 3.808 3.807 3.808 9.98 0 13.788-3.807 3.808-9.98 3.808-13.788 0-3.808-3.807-3.808-9.98 0-13.788z\" clip-rule=\"evenodd\" />\r\n                                            </svg>\r\n                                            <h1 className=\"text-sm text-gray-50\">Blacklisted</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-white rounded leading-5 shadow-lg mt-4\">\r\n                                    {/* <div className=\"p-1  opacity-95\"><BarGraphComponent /></div> */}\r\n                                    <BarGraphComponent />\r\n                                    <div><img src=\"https://wcs.smartdraw.com/chart/img/basic-bar-graph.png?bn=15100111868\" className=\"h-96\" /></div>\r\n                                </div>\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-red-300 rounded leading-5 shadow-lg mt-4 \">\r\n                                    {/* <div className=\" opacity-90\"><PieChartComponent /></div> */}\r\n                                    {/* <HoardingPendingList /> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-span-6 mt-1\">\r\n                                { /* /////////// Monthly statics group /////////// */}\r\n                                <div className=\"rounded leading-5 shadow-lg bg-white\">\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-2 gap-4 \">\r\n                                        <div className=\"col-span-2 flex bg-white  p-5\">\r\n                                            <div className=\"flex-1\"><h1 className=\"text-xl font-semibold text-gray-500\">Monthly Statics</h1></div>\r\n                                            <div className=\"flex-1\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 float-right text-indigo-500\">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-2 pb-2\">\r\n                                        <div className=\"flex flex-col md:flex-row lg:flex-row p-3 bg-white \">\r\n                                            <div className=\"\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4  rounded-full text-pink-500 bg-pink-100 darks:bg-pink-900 darks:bg-opacity-40 \">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div className=\"ml-3 p-2\">\r\n                                                <h1 className=\"text-gray-500 text-md font-semibold\">Total Hoarding</h1>\r\n                                                <h1 className=\"text-gray-500 text-xl \">0</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex flex-col md:flex-row lg:flex-row p-3 bg-white\">\r\n                                            <div className=\"\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4  rounded-full text-green-500 bg-green-100 darks:bg-green-900 darks:bg-opacity-40 \">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div className=\"ml-3 p-2\">\r\n                                                <h1 className=\"text-gray-500 text-md font-semibold\">Total Renewal</h1>\r\n                                                <h1 className=\"text-gray-500 text-xl \">0</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                { /* /////////// renew list /////////// */}\r\n                                <div className=\"  flex bg-pink-500 rounded leading-5 shadow-lg mt-4\">\r\n                                    <div className=\"\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-16 h-16 p-4   text-white \">\r\n                                            <path fill-rule=\"evenodd\" d=\"M2.625 6.75a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875 0A.75.75 0 018.25 6h12a.75.75 0 010 1.5h-12a.75.75 0 01-.75-.75zM2.625 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zM7.5 12a.75.75 0 01.75-.75h12a.75.75 0 010 1.5h-12A.75.75 0 017.5 12zm-4.875 5.25a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875 0a.75.75 0 01.75-.75h12a.75.75 0 010 1.5h-12a.75.75 0 01-.75-.75z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                    </div>\r\n\r\n                                    <div className=\"cursor-pointer\" onClick={() => navigate(`/hoarding-Renew-list/${agencyDashboard?.ulb_id}`)}>\r\n                                        <h1 className=\" float-right mt-4 text-white text-lg font-semibold\">List of application to be renew</h1>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                { /* /////////// Yearly statics group /////////// */}\r\n                                <div className=\"rounded leading-5 shadow-lg bg-white mt-4\">\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-2 gap-4 \">\r\n                                        <div className=\"col-span-2 flex bg-white  p-5\">\r\n                                            <div className=\"flex-1\"><h1 className=\"text-xl font-semibold text-gray-500\">Yearly Statics</h1></div>\r\n                                            <div className=\"flex-1\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 float-right text-indigo-500\">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-2 pb-2\">\r\n                                        <div className=\"flex flex-col md:flex-row lg:flex-row p-3 bg-white \">\r\n                                            <div className=\"\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4  rounded-full text-pink-500 bg-pink-100 darks:bg-pink-900 darks:bg-opacity-40 \">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div className=\"ml-3 p-2\">\r\n                                                <h1 className=\"text-gray-500 text-md font-semibold\">Total Hoarding</h1>\r\n                                                <h1 className=\"text-gray-500 text-xl \">0</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex flex-col md:flex-row lg:flex-row p-3 bg-white\">\r\n                                            <div className=\"\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-16 h-16 p-4  rounded-full text-green-500 bg-green-100 darks:bg-green-900 darks:bg-opacity-40 \">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div className=\"ml-3 p-2\">\r\n                                                <h1 className=\"text-gray-500 text-md font-semibold\">Total Renewal</h1>\r\n                                                <h1 className=\"text-gray-500 text-xl \">0</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div ref={myRef} className={`${tabIndex == 1 ? 'bg-indigo-300 z-20 drop-shadow-xl overflow-auto ' : 'bg-white'} transition-all ease-in-out `}  >\r\n                            <h1 className={`${tabIndex == 1 ? 'text-white' : 'text-gray-500'} text-lg font-semibold px-2 mt-4 border-b`}>Payment Pending Applications</h1>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12  rounded leading-5 shadow-md \">\r\n                                <HoardingUnpaidList showLoader={showLoader} />\r\n                            </div>\r\n                        </div>\r\n                        <div ref={myRef} className={`${tabIndex == 1 ? 'bg-indigo-300 z-20 drop-shadow-xl overflow-auto ' : 'bg-white'} transition-all ease-in-out `}  >\r\n                            <h1 className={`${tabIndex == 1 ? 'text-white' : 'text-gray-500'} text-lg font-semibold px-2 mt-4 border-b`}>Pending Applications</h1>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12  rounded leading-5 shadow-md \">\r\n                                <HoardingPendingList showLoader={showLoader} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div ref={myRef} className={`${tabIndex == 2 ? 'bg-indigo-300 z-20 drop-shadow-xl' : 'bg-white'} transition-all ease-in-out `}  >\r\n                            <h1 className={`${tabIndex == 2 ? 'text-white' : 'text-gray-500'} text-lg font-semibold px-2 mt-4 border-b`}>Approved Applications</h1>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12  rounded leading-5 shadow-md \">\r\n                                <HoardingApprovedApplication showLoader={showLoader} />\r\n                            </div>\r\n                        </div>\r\n                        <div ref={myRef} className={`${tabIndex == 3 ? 'bg-indigo-300 z-20 drop-shadow-xl' : 'bg-white'} transition-all ease-in-out `}  >\r\n                            <h1 className={`${tabIndex == 3 ? 'text-white' : 'text-gray-500'} text-lg font-semibold px-2 mt-4 border-b`}>Rejected Applications</h1>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12  rounded leading-5 shadow-md \">\r\n                                <HoardingRejectedApplication showLoader={showLoader} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-span-4 bg-white rounded leading-5 shadow-lg  h-screen\" >\r\n                        <AgencyNotification applicationId={id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AgencyDashboard","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction BackToAgency() {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <Link to='/agencyDashboard'>\r\n                <div className='flex-1 '>\r\n                    <button type='button' className='flex uppercase text-xs bg-indigo-500 text-white float-right font-semibold  px-2 py-1 rounded leading-5 shadow-lg'><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 h-5 mr-1\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z\" />\r\n                    </svg>\r\n                        back to dashboard</button>\r\n                </div>\r\n            </Link>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BackToAgency","import React from 'react'\r\n\r\nfunction GlobalFilterSearch({ filter, setFilter }) {\r\n  return (\r\n    <div className=\"px-1\">\r\n    Search : {' '}\r\n    <input className='border border-gray-300 px-2  bg-gray-50 shadow-lg rounded leading-5 py-1.5 ' type=\"text\" value={filter || ''} onChange={e => setFilter(e.target.value)} />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default GlobalFilterSearch","\r\nimport React, { useMemo, useState, useEffect } from 'react'\r\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table'\r\nimport { AiOutlineArrowDown } from 'react-icons/ai'\r\nimport { CSVLink } from \"react-csv\";\r\nimport { format } from 'date-fns'\r\n// import axios from 'axios'\r\nimport { AiOutlineDoubleRight, AiOutlineDoubleLeft } from 'react-icons/ai'\r\nimport GlobalFilterSearch from './GlobalFilterSearch';\r\n\r\n\r\nfunction ListTableAdvert(props) {\r\n\r\n    const [bounce, setbounce] = useState('hidden')\r\n    const columns = useMemo(() => props.columns, [])\r\n    const data = useMemo(() => props.dataList, [props.dataList])\r\n    // console.log('lll ',data.length)\r\n    useEffect(() => {\r\n        setPageSize(5)\r\n    }, [])\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        // rows,//since used pagination\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        prepareRow,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0 }\r\n    }, useGlobalFilter, useSortBy, usePagination)\r\n\r\n    const { globalFilter, pageIndex, pageSize } = state\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex mb-2 pb-2\">\r\n                <div className='flex-initial'><GlobalFilterSearch filter={globalFilter} setFilter={setGlobalFilter} /></div>\r\n                <div className='flex-initial ml-2'><button className='bg-sky-400 px-3 pr-3  shadow-lg rounded py-1 text-white hover:shadow-2xl hover:bg-green-600 text-center relative' onMouseEnter={() => setbounce('')} onMouseLeave={() => setbounce('hidden')}><CSVLink data={props.dataList}>Export</CSVLink><div className={bounce + ' absolute h-full top-3 text-sm left-0 text-center animate-bounce'}><AiOutlineArrowDown /></div></button></div>\r\n                <div className='flex-1'>{props.children}</div>\r\n\r\n            </div>\r\n            <div className=\"overflow-x-auto bg-white\">\r\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden bg-white\">\r\n                    <table {...getTableBodyProps} className=\"min-w-full leading-normal\">\r\n                        <thead className='font-bold text-left text-sm bg-violet-100 hover:bg-violet-100'>\r\n                            {\r\n                                headerGroups?.map((headerGroup) => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {\r\n                                            headerGroup.headers.map((column) => (\r\n                                                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"px-2 py-3 border-b border-gray-200 text-gray-800  text-left text-xs uppercase text-left\">{column.render('Header')}\r\n                                                    <span>{column.isSorted ? (column.isSortedDesc ? '⬆️' : '⬇️') : ''}</span></th>\r\n\r\n                                            ))\r\n                                        }\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n\r\n                        </thead>\r\n                        <tbody {...getTableBodyProps()} className=\"text-sm\">\r\n                            {/* {rows.map((row) => { */} {/**since used pagination */}\r\n                            {page?.map((row) => {\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()} className=\"bg-white shadow-md border border-slate-100 hover:bg-slate-50 \">\r\n                                        {row?.cells?.map((cell) => {\r\n                                            return <td {...cell.getCellProps()} className=\"px-2 py-2 text-sm text-left\">{cell.render('Cell')}</td>\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className='mt-3 grid grid-cols-12'>\r\n                        <div className='col-span-2 ml-2'>  <select className=\"h-10 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" value={pageSize} onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                            {[5, 10, 25, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    show {pageSize}\r\n                                </option>\r\n                            ))}\r\n\r\n                        </select></div>\r\n                        <div className='col-span-4 text-center col-start-5'>   <span >\r\n                            page {''}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{''}\r\n                        </span></div>\r\n\r\n                        <div className='col-span-4 text-right'><button className='cursor-pointer hover:bg-sky-300 p-2 hover:text-white' onClick={() => gotoPage(0)} disabled={!canPreviousPage}><AiOutlineDoubleLeft /> </button>\r\n                            <button className={(!canPreviousPage ? 'opacity-50' : 'opacity-100') + ' text-xl hover:bg-sky-300 hover:text-white'} onClick={() => previousPage()} disabled={!canPreviousPage}>⬅️</button>\r\n                            <button className={(!canNextPage ? 'opacity-50' : 'opacity-100') + ' text-xl hover:bg-sky-300 hover:text-white'} onClick={() => nextPage()} disabled={!canNextPage}>➡️</button>\r\n                            <button className='cursor-pointer hover:bg-sky-300 p-2 hover:text-white' onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>  <AiOutlineDoubleRight /></button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTableAdvert\r\n","import React from 'react'\r\nimport {FcExpired} from 'react-icons/fc'\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div className='px-20 text-center'><span className='text-center bg-red-400 text-white px-6 py-4 shadow-lg border-2 border-white'><FcExpired className='inline text-white text-2xl'/> Something Went Wrong..</span></div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ReuploadHoardingDocModal from \"./ReuploadHoardingDocModal\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ViewAllHoardingPendingList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingPendingApplicationList } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen1, setIsOpen1] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const openModal1 = () => setIsOpen1(true)\r\n    const closeModal1 = () => setIsOpen1(false)\r\n    const afterOpenModal1 = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Active\")}\r\n                        className=\"bg-indigo-500 text-xs px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n                    {cell.row.original.doc_upload_status == 0 &&\r\n                        <button\r\n                            onClick={() => docUploadModal(cell.row.values.id)}\r\n                            className=\"bg-indigo-500 text-xs ml-4 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700\r\n                        hover:text-white text-white\"\r\n                        >\r\n                            upload Document\r\n                        </button>\r\n                    }\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    const docUploadModal = (applicationId) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        setapplicationNo(applicationId)\r\n        openModal1()\r\n    }\r\n\r\n    // const onSuccess = (data) => {\r\n    //     console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n    //     {\r\n    //         data?.data?.data?.data?.length > 0 && setTableState(true);\r\n    //     }\r\n    // };\r\n\r\n    // const { isLoading, data, isError, error } = useQuery(\r\n    //     \"safinboxList\",\r\n    //     () => {\r\n    //         return axios.post(api_getHoardingPendingApplicationList, {}, ApiHeaderAdvrt());\r\n    //     },\r\n    //     {\r\n    //         onSuccess,\r\n    //         refetchOnWindowFocus: false,\r\n    //         refetchOnReconnect: false,\r\n    //     }\r\n    // );\r\n\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingPendingApplicationList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"res\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n                <div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING PENDING APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {/* {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                        <Modal\r\n                            isOpen={modalIsOpen1}\r\n                            onAfterOpen={afterOpenModal1}\r\n                            onRequestClose={closeModal1}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '70vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-violet-50 overflow-y-auto '>\r\n                                    <ReuploadHoardingDocModal data={applicationNo} closeModal={closeModal1} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewAllHoardingPendingList;","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ViewAllHoardingApprovedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingApprovedApplicationList, api_blacklistedApplication } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handleBlacklisted(cell.row.values.id)}\r\n                        className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\nhover:text-white text-white\"\r\n                    >\r\n                        Blacklisted\r\n                    </button>\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingApprovedApplicationList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"res\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    const handleBlacklisted = (applicationId) => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n        console.log(\"request body in renew...12\", applicationId)\r\n        axios.post(`${api_blacklistedApplication}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('archived response', response.data)\r\n                notify(\" success\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n                <div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING APPROVED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {/* {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewAllHoardingApprovedList;","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ViewAllHoardingRejectedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingRejectedApplicationList } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [show, setshow] = useState(false)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [tableStatus, settableStatus] = useState(false);\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <button\r\n                    onClick={() => modalAction(cell.row.values.id, \"Active\")}\r\n                    className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                >\r\n                    View\r\n                </button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingRejectedApplicationList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"res\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n                <div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING REJECTED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {/* {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                <div className=\"col-span-8\">\r\n                    <div className=\"flex flex-row bg-white mb-4 rounded leading-5\">\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                        <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING REJECTED APPLICATIONS</h1>\r\n                    </div>\r\n                    <Loader show={show} />\r\n                    {isError && <ErrorPage />}\r\n                    {!isLoading && !isError && tableState && (\r\n                        <ListTableAdvert\r\n                            assessmentType={false}\r\n                            columns={COLUMNS}\r\n                            dataList={data?.data?.data?.data}\r\n                        />\r\n                    )}\r\n                    {!isLoading && !tableState && (\r\n                        <div className=\"text-center h-56 mt-6\">\r\n                            <img\r\n                                src=\"https://cdn-icons-png.flaticon.com/512/7466/7466140.png\"\r\n                                className=\"h-36 w-36 mx-auto\"\r\n                            />{\" \"}\r\n                            <span>No data found...</span>{\" \"}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-span-4 bg-white\">\r\n                    <AgencyNotification />\r\n                </div>\r\n\r\n            </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewAllHoardingRejectedList;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport RazorpayPaymentScreen from \"../../../../../Components/RazorpayPaymentScreen\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction HoardingPaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const { api_getHoardingOrderIdForPayment } = AdvertisementApiList()\r\n    const [orderId, setorderId] = useState()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    console.log(\"payment card details\", props?.applicationDetails)\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    ///////////{*** PAYMENT METHOD ***}/////////\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data?.status == true) {\r\n            navigate(`/paymentScreen/${data.data.razorpay_payment_id}/${props?.applicationDetails?.workflow_id}`)\r\n            notify(\"Payment Successfull\", \"success\")\r\n        } else {\r\n            toast.error('Payment failed....')\r\n            notify(\"Payment Failed\", \"error\")\r\n            navigate('/advertDashboard')\r\n        }\r\n    }\r\n\r\n    const payNow = (e) => {\r\n        console.log(\"payment id on click pay\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            id: applicationId\r\n        }\r\n        axios.post(`${api_getHoardingOrderIdForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('generate order id', response.data)\r\n                if (response.data.status == true) {\r\n                    console.log(\"OrderId Generated True\", response.data)\r\n                    RazorpayPaymentScreen(response.data.data, dreturn)  //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup     \r\n                }\r\n                else {\r\n\r\n                }\r\n                setorderId(response)\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Backend Server error. Unable to Generate Order Id\");\r\n                // console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-violet-200 text-slate-50 drop-shadow-2xl border border-violet-500 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className='shadow-md shadow-violet-300 py-1 pl-3 bg-white border-gray-400 text-gray-600 flex'>Make Payment For<span className=\"font-bold text-md ml-4 uppercase \">{props?.applicationDetails?.type} </span></div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Application No. -</p>\r\n                                            <p>Applied date -</p>\r\n\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.application_no} </p>\r\n                                            <p>{props?.applicationDetails?.application_date}</p>\r\n                                            {/* <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Approve Date -</p>\r\n                                            {/* <p>Entity Name -</p> */}\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.approve_date}  </p>\r\n                                            {/* <p>{props?.applicationDetails?.entity_name} </p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg \">Payable Amount</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg bg-violet-300 px-2 \">{props?.applicationDetails?.payment_amount}</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Cancel</button>\r\n                                            <button onClick={payNow} id={props?.applicationDetails?.id} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <img src='https://cdn-icons-png.flaticon.com/256/7057/7057515.png' className=\"h-16\" />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className=\"\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default HoardingPaymentModal;\r\n","// //////////////////////////////////////////////////////////////////////////////////////\r\n// //    Author - Talib Hussain\r\n// //    Version - 1.0\r\n// //    Date - 14 july 2022\r\n// //    Revision - 1\r\n// //    Project - JUIDCO\r\n// //    Component  - PropertySafInbox (closed)\r\n// //    DESCRIPTION - PropertySafInbox Component\r\n// //////////////////////////////////////////////////////////////////////////////////////\r\nimport { useEffect, useState } from \"react\";\r\n// import { useQuery } from \"react-query\";\r\n// import axios from \"axios\";\r\n// import { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\n// import Loader from \"../../Loader\";\r\n// import AgencyNotification from \"../AgencyNotification\";\r\nimport axios from \"axios\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport HoardingPaymentModal from \"./HoardingPaymentModal\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n// import ErrorPage from \"../../../ErrorPage\";\r\n\r\n\r\nfunction ViewAllHoardingUnpaidList() {\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const { api_getHoardingUnpaidApplicationList, api_getHoardingApplicationDetailForPayment } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState([])\r\n    const [applicationIdDetail, setapplicationIdDetail] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const [tableStatus, settableStatus] = useState(false);\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        {\r\n            Header: \"Payment Amount\",\r\n            accessor: \"payment_amount\",\r\n        },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700\r\n                    hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handlePayment(cell.row.values.id)}\r\n                        className=\"bg-indigo-500 ml-4 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700\r\n                 hover:text-white text-white\"\r\n                    >\r\n                        Pay\r\n                    </button>\r\n\r\n                </>\r\n            ),\r\n        },\r\n\r\n    ];\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    const handlePayment = (appId) => {\r\n        let applicationId = appId\r\n        const requestBody = {\r\n            applicationId: applicationId\r\n        }\r\n        axios.post(`${api_getHoardingApplicationDetailForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application detail for payment 1', response)\r\n                setapplicationIdDetail(response.data.data)\r\n                setOpenPaymentModal(prev => prev + 1)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingUnpaidApplicationList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"res\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"unpaid application full list\", applicationDetail?.data)\r\n\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n\r\n                <div>\r\n                    <HoardingPaymentModal openPaymentModal={openPaymentModal} applicationDetails={applicationIdDetail} />\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING UNPAID APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.length != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {/* {tableStatus && tableStatus?.length == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            // style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewAllHoardingUnpaidList\r\n","import { height, width } from '@mui/system'\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\n// import payBg from '../../assets/images/payBg.jpg'\r\nimport payBg from '../../AdvertisementModule/images/payBg.jpg'\r\nimport AdvertisementApiList from '../AdvertisementApiList';\r\nimport axios from 'axios';\r\nimport ApiHeaderAdvrt from '../ApiHeaderAdvrt';\r\n\r\n\r\nfunction PaymentScreen() {\r\n    const { paymentid, wrkflowId } = useParams();\r\n    const { getPaymentsuccessDetails } = AdvertisementApiList();\r\n\r\n    console.log(\"id..in payment screen\", paymentid)\r\n    console.log(\"workflow id..in payment screen\", wrkflowId)\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentDetails, setpaymentDetails] = useState()\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getPaymentSuccessData()\r\n    }, [])\r\n    const getPaymentSuccessData = () => {\r\n        const requestBody = {\r\n            paymentId: paymentid,\r\n            workflowId: wrkflowId,\r\n        }\r\n        axios.post(`${getPaymentsuccessDetails}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('payment data', response)\r\n                setpaymentDetails(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"payment details\", paymentDetails)\r\n    return (\r\n        <>\r\n\r\n            {/* <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-green-100 border p-8 h-screen w-full '  style={{backgroundImage: `url(${payBg})`,backgroundBlendMode:'darken',backgroundRepeat:'no-repeat',backgroundSize:'cover',}}> */}\r\n            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1  border p-8 h-screen w-full  mt-24' >\r\n                {/* <h1 className='text-3xl font-semibold text-center'>PAYMENT SUCCESSFUL</h1> */}\r\n                <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-gray-50 w-[32rem] h-[32rem] container mx-auto  shadow-2xl z-50 opacity-100'>\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1'>\r\n                        {/* <img src='https://cdn-icons-png.flaticon.com/512/2169/2169862.png' className='h-36 mx-auto' /> */}\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1'>\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/5610/5610944.png' className='h-20 mx-auto opacity-75' />\r\n                    </div>\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 '>\r\n                        <h1 className='text-center text-2xl  text-green-500'>Payment Successful</h1>\r\n                    </div>\r\n\r\n                    <div className='grid grid-cols-2 md:grid-cols-1 lg:grid-cols-1 p-4 pt-8'>\r\n                        <div className='flex px-4'>\r\n                            <div className='flex-1'>\r\n                                <h1 className='text-gray-500 font-semibold text-md'>Payment Mode</h1>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <h1 className='float-right text-gray-500 font-semibold text-md'>{paymentDetails?.payment_details?.paymentMode}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex px-4 pt-4'>\r\n                            <div className='flex-1'>\r\n                                <h1 className='text-gray-600 font-bold text-md'>Amount Paid</h1>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <h1 className='float-right text-gray-600 font-bold text-md'>{paymentDetails?.payment_details?.amount}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex px-4 pt-4'>\r\n                            <div className='flex-1'>\r\n                                <h1 className='text-gray-500 font-semibold text-md'>Transcation No</h1>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <h1 className='float-right text-gray-500 font-semibold text-md'>{paymentDetails?.payment_details?.transactionNo}</h1>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 mb-4'>\r\n                        <div className=''>\r\n                            {/* <div className='text-center'>\r\n                                <Link to='/advertisement-dashboard'>\r\n                                    <button className='text-sm bg-indigo-500 text-white px-4 py-2 text-center'>\r\n                                        CLOSE\r\n                                    </button>\r\n                                </Link>\r\n                            </div> */}\r\n                            <div className='text-center'>\r\n                                <button className='text-md bg-indigo-500 text-white px-4 py-2 text-center' onClick={()=>navigate(`/advtPaymentReceipt/${paymentid}/${wrkflowId}`)}>\r\n                                    View Receipt\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport SelfAdvrtInformationScreen from '../../../Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../../FunctionComponent/ValidationFunction';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction BanquetMarriageHallForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [applyYearValue, setapplyYearValue] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        rule: yup.string().required('select rule'),\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.string().required('Enter mobile no.').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        hallType: yup.string().required('This field is Required'),\r\n        entityName: yup.string().required('This field is Required'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        holdingNo: yup.string().required('This field is Required'),\r\n        tradeLicenseNo: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('Enter Number'),\r\n        // latitude: yup.string().required('Enter Number'),\r\n        organizationType: yup.string().required('This field is Required'),\r\n        floorArea: yup.string().required('This field is Required'),\r\n        landDeedType: yup.string().required('This field is Required'),\r\n        waterSupplyType: yup.string().required('This field is Required'),\r\n        electricityType: yup.string().required('This field is Required'),\r\n        securityType: yup.string().required('This field is Required'),\r\n        noOfCctv: yup.string().required('Enter Number'),\r\n        noFireExtinguishers: yup.string().required('Enter Number'),\r\n        noEntryGates: yup.string().required('Enter Number'),\r\n        noExitGate: yup.string().required('Enter Number'),\r\n        noTwoWheelerParking: yup.string().required('Enter Number'),\r\n        noFourWheelerParking: yup.string().required('Enter Number'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        panNo: yup.string().required('Enter aadhar').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n    })\r\n\r\n    const initialValues = {\r\n        rule: '',\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        hallType: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        organizationType: '',\r\n        floorArea: '',\r\n        landDeedType: '',\r\n        waterSupplyType: '',\r\n        electricityType: '',\r\n        securityType: '',\r\n        noOfCctv: '',\r\n        noFireExtinguishers: '',\r\n        noEntryGates: '',\r\n        noExitGate: '',\r\n        noTwoWheelerParking: '',\r\n        noFourWheelerParking: '',\r\n        aadharNo: '',\r\n        panNo: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            console.log(\"banquetForm\", values, reviewIdName)\r\n            collectFormDataFun('banquetForm', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        { name == 'rule' && setapplyYearValue(value) }\r\n\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'panNo' && formik.setFieldValue(\"panNo\", allowCharacterNumberInput(value, formik.values.panNo, 10)) }\r\n        { name == 'floorArea' && formik.setFieldValue(\"floorArea\", allowFloatInput(value, formik.values.floorArea, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n    console.log(\"rule\", applyYearValue)\r\n    console.log(\"review\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        showLoader(true);\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list', response.data.data)\r\n                setwardList(response.data.data)\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setTimeout(() => {\r\n                    showLoader(false);\r\n                }, 500);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    console.log(\"ulb value...\", storeUlbValue)\r\n\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        showLoader(true);\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n                showLoader(false);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                showLoader(false);\r\n            })\r\n    }\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('rule', existingApplicationDetails?.rule)\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        // formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residential_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.residential_ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile)\r\n        formik.setFieldValue('hallType', existingApplicationDetails?.hall_type_id)\r\n        formik.setFieldValue('electricityType', existingApplicationDetails?.electricity_type_id)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('organizationType', existingApplicationDetails?.organization_type_id)\r\n        formik.setFieldValue('floorArea', existingApplicationDetails?.floor_area)\r\n        formik.setFieldValue('landDeedType', existingApplicationDetails?.land_deed_type_id)\r\n        formik.setFieldValue('waterSupplyType', existingApplicationDetails?.water_supply_type_id)\r\n        formik.setFieldValue('securityType', existingApplicationDetails?.security_type_id)\r\n        formik.setFieldValue('noOfCctv', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noFireExtinguishers', existingApplicationDetails?.fire_extinguisher)\r\n        formik.setFieldValue('noEntryGates', existingApplicationDetails?.entry_gate)\r\n        formik.setFieldValue('noExitGate', existingApplicationDetails?.exit_gate)\r\n        formik.setFieldValue('noTwoWheelerParking', existingApplicationDetails?.two_wheelers_parking)\r\n        formik.setFieldValue('noFourWheelerParking', existingApplicationDetails?.four_wheelers_parking)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_card)\r\n        formik.setFieldValue('panNo', existingApplicationDetails?.pan_card)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\" existing data for banquet marriage\", existingApplicationDetails)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n    console.log(\" trade License details\", liceneDetails)\r\n\r\n    return (\r\n        <>\r\n            <div className=' absolute top-2 ml-4 w-full'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12'>\r\n                                    {applyYearValue == undefined &&\r\n                                        <div className='col-span-12'>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-8'>\r\n                                                Select <span className=' font-bold  uppercase underline px-2 text-md  lg:text-2xl md:text-2xl text-gray-700'>Rule</span> From Which You Want To Proceed With The <span className=' font-bold  uppercase underline px-2 text-md lg:text-2xl md:text-2xl text-gray-700'>Application</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>Apply</h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs '>According to rule</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('rule')} >\r\n                                                            <option>select </option>\r\n                                                            <option value=\"Old Rule\">Old Rule</option>\r\n                                                            <option value=\"New Rule\">New Rule</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {applyYearValue != undefined &&\r\n                                        <div className='col-span-12 '>\r\n                                            <h1 className='text-center text-md lg:text-xl md:text-xl text-gray-600 font-semibold pt-8 '> you have selected rule <span className='font-bold uppercase underline px-2 text-md lg:text-xl md:text-xl text-violet-500'>{reviewIdName?.rule}</span> to proceed with the application.</h1>\r\n                                            {storeUlbValue == undefined ?\r\n                                                <>\r\n                                                    <h1 className='text-center text-md lg:text-xl md:text-xl font-semibold text-gray-500 p-8'>\r\n                                                        Registration of a <span className='text-gray-700 font-bold'>Marriage or a Banquet Hall</span> is mendatory under the urban local body it falls in.\r\n                                                        If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                                    </h1>\r\n\r\n\r\n                                                    <div className='w-96 h-64 mx-auto'>\r\n                                                        <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                            <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                            <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                            <div className=' '>\r\n                                                                <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                                    <option>select </option>\r\n                                                                    {ulbList?.map((items) => (\r\n                                                                        <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='animate-wiggle'>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                                :\r\n                                                <div className=' mt-4  text-center'>\r\n                                                    {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500 \">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg> */}\r\n\r\n                                                    <h1 className='text-md lg:text-xl md:text-xl text-gray-600 font-semibold '> you have selected ulb <span className='font-bold uppercase underline px-2 text-md lg:text-xl md:text-xl text-violet-500'>{reviewIdName?.ulb}</span> to proceed with the application.</h1>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8  mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')}disabled >\r\n                                                                <option>{existingApplicationDetails?.resident_ward_name} </option>\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`}disabled >\r\n                                                                <option>{existingApplicationDetails?.permanent_ward_name} </option>\r\n\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled >\r\n                                                                <option>{existingApplicationDetails?.entity_ward_name} </option>\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Hall Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('hallType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HallType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hallType && formik.errors.hallType ? formik.errors.hallType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Floor Area<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='floorArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.floorArea}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.floorArea && formik.errors.floorArea ? formik.errors.floorArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')}disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8  mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude  </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Hall Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('hallType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HallType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.hallType && formik.errors.hallType ? formik.errors.hallType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Floor Area<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='floorArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.floorArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.floorArea && formik.errors.floorArea ? formik.errors.floorArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction BanquetMarriageHallDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        // id: props?.data?.id,\r\n        // relativeName: props?.data?.relative_name,\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    // console.log(\"url\", DocUrl)\r\n    // console.log(\"path\", imgPath)\r\n    // console.log(\"document full data 1...\", props?.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    <div onClick={() => modalAction(DocUrl)}>\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                    </div>\r\n\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallDocTable","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport BanquetMarriageHallDocTable from './BanquetMarriageHallDocTable';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DocumentUploadSteps from '../../../Advertisement/DocumentUploadSteps';\r\n// import SelfAdvertisementDocTable from './SelfAdvertisementDocTable';\r\n// import * as yup from 'yup'\r\n\r\n\r\nfunction BanquetMarriageHallDocForm(props) {\r\n\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('banquetDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('banquet document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.BANQUTE_MARRIGE_HALL?.map((items, index) => (\r\n                                    <BanquetMarriageHallDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.BANQUTE_MARRIGE_HALL?.map((items, index) => (\r\n                                    <BanquetMarriageHallDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallDocForm","import React from 'react'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\nfunction ReviewFormBanquetMarriageHall(props) {\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 -ml-7 text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.licenseYear || props?.reviewIdNameData?.banquetForm?.licenseYear)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.applicantName || props?.reviewIdNameData?.banquetForm?.applicant)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.fatherName || props?.reviewIdNameData?.banquetForm?.father)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.residenceAddress || props?.reviewIdNameData?.banquetForm?.residential_address)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.residenceWardNo || props?.reviewIdNameData?.banquetForm?.resident_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.permanentAddress || props?.reviewIdNameData?.banquetForm?.permanent_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.permanentWardNo || props?.reviewIdNameData?.banquetForm?.permanent_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.mobileNo || props?.reviewIdNameData?.banquetForm?.mobile)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.email || props?.reviewIdNameData?.banquetForm?.email)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar Card No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.aadharNo || props?.reviewIdNameData?.banquetForm?.aadhar_card)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Pan Card No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.panNo || props?.reviewIdNameData?.banquetForm?.pan_card)}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.entityName || props?.reviewIdNameData?.banquetForm?.entity_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.entityAddress || props?.reviewIdNameData?.banquetForm?.entity_address)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.entityWardNo || props?.reviewIdNameData?.banquetForm?.entity_ward_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.holdingNo || props?.reviewIdNameData?.banquetForm?.holding_no)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No.</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.tradeLicenseNo || props?.reviewIdNameData?.banquetForm?.trade_license_no)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.longitude || props?.reviewIdNameData?.banquetForm?.longitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.latitude || props?.reviewIdNameData?.banquetForm?.latitude)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hall Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.hallType || props?.reviewIdNameData?.banquetForm?.hall_type_name)}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Organization Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.organizationType || props?.reviewIdNameData?.banquetForm?.organization_type_name)}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Floor Area</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.floorArea || props?.reviewIdNameData?.banquetForm?.floor_area)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Land Deed Type  </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.landDeedType || props?.reviewIdNameData?.banquetForm?.land_deed_type_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Water Supply Type </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.waterSupplyType || props?.reviewIdNameData?.banquetForm?.water_supply_type_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Electricity Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.electricityType || props?.reviewIdNameData?.banquetForm?.electricity_type_name)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Security Type</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.securityType || props?.reviewIdNameData?.banquetForm?.security_type_name)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of CCTV Camera</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noOfCctv || props?.reviewIdNameData?.banquetForm?.cctv_camera)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Fire Extinguishers </p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noFireExtinguishers || props?.reviewIdNameData?.banquetForm?.fire_extinguisher)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Entry Gates</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noEntryGates || props?.reviewIdNameData?.banquetForm?.entry_gate)}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Exit Gates</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noExitGate || props?.reviewIdNameData?.banquetForm?.exit_gate)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Two Wheelers Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noTwoWheelerParking || props?.reviewIdNameData?.banquetForm?.two_wheelers_parking)}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{nullToNA(props?.reviewIdNameData?.banquetForm?.noFourWheelerParking || props?.reviewIdNameData?.banquetForm?.four_wheelers_parking)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.banquetDoc?.map((data, index) => (\r\n                                <div className=''>\r\n                                    <>\r\n                                        <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                        <div className='flex -mt-2'>\r\n                                            <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                            <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                        </div>\r\n                                    </>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"grid grid-cols-12 w-full p-3\">\r\n                <div className='md:pl-0 col-span-6'>\r\n                    <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                </div>\r\n                <div className='col-span-6'>\r\n                    <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewFormBanquetMarriageHall","import React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport BanquetMarriageHallForm from './BanquetMarriageHallForm';\r\nimport BanquetMarriageHallDocForm from './BanquetMarriageHallDocForm';\r\nimport ReviewFormBanquetMarriageHall from './ReviewFormBanquetMarriageHall';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport AdvrtSuccessScreen from '../../../Advertisement/AdvrtSuccessScreen';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction BanquetMarriageHallFormIndex() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postBanquetApplication, api_renewBanquet_license, api_getBanquetApplicationDetailsToRenew } = AdvertisementApiList()\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'banquetForm') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitBanquetApplicationForm()\r\n    }\r\n\r\n    const submitBanquetApplicationForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postBanquetApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.banquetForm?.rule,\r\n                licenseYear: allFormData?.banquetForm?.licenseYear,\r\n                applicantName: allFormData?.banquetForm?.applicantName,\r\n                fatherName: allFormData?.banquetForm?.fatherName,\r\n                residentialAddress: allFormData?.banquetForm?.residenceAddress,\r\n                residentialWardId: allFormData?.banquetForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.banquetForm?.permanentAddress,\r\n                permanentWardId: allFormData?.banquetForm?.permanentWardNo,\r\n                email: allFormData?.banquetForm?.email,\r\n                mobile: allFormData?.banquetForm?.mobileNo,\r\n                hallType: allFormData?.banquetForm?.hallType,\r\n                entityName: allFormData?.banquetForm?.entityName,\r\n                entityAddress: allFormData?.banquetForm?.entityAddress,\r\n                entityWardId: allFormData?.banquetForm?.entityWardNo,\r\n                holdingNo: allFormData?.banquetForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.banquetForm?.tradeLicenseNo,\r\n                longitude: allFormData?.banquetForm?.longitude,\r\n                latitude: allFormData?.banquetForm?.latitude,\r\n                organizationType: allFormData?.banquetForm?.organizationType,\r\n                floorArea: allFormData?.banquetForm?.floorArea,\r\n                landDeedType: allFormData?.banquetForm?.landDeedType,\r\n                waterSupplyType: allFormData?.banquetForm?.waterSupplyType,\r\n                electricityType: allFormData?.banquetForm?.electricityType,\r\n                cctvCamera: allFormData?.banquetForm?.noOfCctv,\r\n                fireExtinguisher: allFormData?.banquetForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.banquetForm?.noEntryGates,\r\n                exitGate: allFormData?.banquetForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.banquetForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.banquetForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.banquetForm?.aadharNo,\r\n                panCard: allFormData?.banquetForm?.panNo,\r\n                securityType: allFormData?.banquetForm?.securityType,\r\n                documents: allFormData?.banquetDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewBanquet_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.banquetForm?.rule,\r\n                licenseYear: allFormData?.banquetForm?.licenseYear,\r\n                applicantName: allFormData?.banquetForm?.applicantName,\r\n                fatherName: allFormData?.banquetForm?.fatherName,\r\n                residentialAddress: allFormData?.banquetForm?.residenceAddress,\r\n                residentialWardId: allFormData?.banquetForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.banquetForm?.permanentAddress,\r\n                permanentWardId: allFormData?.banquetForm?.permanentWardNo,\r\n                email: allFormData?.banquetForm?.email,\r\n                mobile: allFormData?.banquetForm?.mobileNo,\r\n                hallType: allFormData?.banquetForm?.hallType,\r\n                entityName: allFormData?.banquetForm?.entityName,\r\n                entityAddress: allFormData?.banquetForm?.entityAddress,\r\n                entityWardId: allFormData?.banquetForm?.entityWardNo,\r\n                holdingNo: allFormData?.banquetForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.banquetForm?.tradeLicenseNo,\r\n                longitude: allFormData?.banquetForm?.longitude,\r\n                latitude: allFormData?.banquetForm?.latitude,\r\n                organizationType: allFormData?.banquetForm?.organizationType,\r\n                floorArea: allFormData?.banquetForm?.floorArea,\r\n                landDeedType: allFormData?.banquetForm?.landDeedType,\r\n                waterSupplyType: allFormData?.banquetForm?.waterSupplyType,\r\n                electricityType: allFormData?.banquetForm?.electricityType,\r\n                cctvCamera: allFormData?.banquetForm?.noOfCctv,\r\n                fireExtinguisher: allFormData?.banquetForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.banquetForm?.noEntryGates,\r\n                exitGate: allFormData?.banquetForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.banquetForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.banquetForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.banquetForm?.aadharNo,\r\n                panCard: allFormData?.banquetForm?.panNo,\r\n                securityType: allFormData?.banquetForm?.securityType,\r\n                documents: allFormData?.banquetDoc\r\n            }\r\n        }\r\n\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getBanquetApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('getting application detail for renew application.....', response.data.data)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"application details for renew\", existingApplicationDetails)\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n    console.log(\"review data in index 12\", reviewData)\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>Banquet/Marriage Hall Application</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><BanquetMarriageHallForm values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><BanquetMarriageHallDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewFormBanquetMarriageHall values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallFormIndex","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport SelfAdvrtInformationScreen from '../../../Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../../FunctionComponent/ValidationFunction';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction BanquetMarriageHallForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [applyRule, setapplyRule] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        rule: yup.string().required('select rule'),\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.string().required('Enter mobile no.').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        entityName: yup.string().required('This field is Required'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        holdingNo: yup.string().required('This field is Required'),\r\n        tradeLicenseNo: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('Enter Number'),\r\n        // latitude: yup.string().required('Enter Number'),\r\n        organizationType: yup.string().required('This field is Required'),\r\n        landDeedType: yup.string().required('This field is Required'),\r\n        waterSupplyType: yup.string().required('This field is Required'),\r\n        electricityType: yup.string().required('This field is Required'),\r\n        securityType: yup.string().required('This field is Required'),\r\n        noOfBeds: yup.string().required('Enter Number'),\r\n        noOfRooms: yup.string().required('Enter Number'),\r\n        noOfCctv: yup.string().required('Enter Number'),\r\n        noFireExtinguishers: yup.string().required('Enter Number'),\r\n        noEntryGates: yup.string().required('Enter Number'),\r\n        noExitGate: yup.string().required('Enter Number'),\r\n        noTwoWheelerParking: yup.string().required('Enter Number'),\r\n        noFourWheelerParking: yup.string().required('Enter Number'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        panNo: yup.string().required('Enter aadhar').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        floorArea: yup.string().required('This field is Required'),\r\n    })\r\n\r\n    const initialValues = {\r\n        rule: '',\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        organizationType: '',\r\n        landDeedType: '',\r\n        waterSupplyType: '',\r\n        electricityType: '',\r\n        securityType: '',\r\n        noOfBeds: '',\r\n        noOfRooms: '',\r\n        noOfCctv: '',\r\n        noFireExtinguishers: '',\r\n        noEntryGates: '',\r\n        noExitGate: '',\r\n        noTwoWheelerParking: '',\r\n        noFourWheelerParking: '',\r\n        aadharNo: '',\r\n        panNo: '',\r\n        floorArea: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            console.log(\"dharamshala\", values)\r\n            collectFormDataFun('dharamshala', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'rule' && setapplyRule(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'panNo' && formik.setFieldValue(\"panNo\", allowCharacterNumberInput(value, formik.values.panNo, 10)) }\r\n        { name == 'floorArea' && formik.setFieldValue(\"floorArea\", allowFloatInput(value, formik.values.floorArea, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"rule\", applyRule)\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    console.log(\"ulb value...\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('ward list', response.data.data)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('rule', existingApplicationDetails?.rule)\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        // formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residential_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.residential_ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('organizationType', existingApplicationDetails?.organization_type_id)\r\n        formik.setFieldValue('landDeedType', existingApplicationDetails?.land_deed_type_id)\r\n        formik.setFieldValue('waterSupplyType', existingApplicationDetails?.water_supply_type_id)\r\n        formik.setFieldValue('electricityType', existingApplicationDetails?.electricity_type_id)\r\n        formik.setFieldValue('securityType', existingApplicationDetails?.security_type_id)\r\n        formik.setFieldValue('noOfBeds', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noOfRooms', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noOfCctv', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noFireExtinguishers', existingApplicationDetails?.fire_extinguisher)\r\n        formik.setFieldValue('noEntryGates', existingApplicationDetails?.entry_gate)\r\n        formik.setFieldValue('noExitGate', existingApplicationDetails?.exit_gate)\r\n        formik.setFieldValue('noTwoWheelerParking', existingApplicationDetails?.two_wheelers_parking)\r\n        formik.setFieldValue('noFourWheelerParking', existingApplicationDetails?.four_wheelers_parking)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_card)\r\n        formik.setFieldValue('panNo', existingApplicationDetails?.pan_card)\r\n        formik.setFieldValue('floorArea', existingApplicationDetails?.floor_area)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"existing details in dharamshala\", existingApplicationDetails)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 bg-violet-50'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12'>\r\n                                    {applyRule == undefined &&\r\n                                        <div className='col-span-12'>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-8'>\r\n                                                Select <span className=' font-bold  uppercase underline px-2 text-md  lg:text-2xl md:text-2xl text-gray-700'>Rule</span> From Which You Want To Proceed With The <span className=' font-bold  uppercase underline px-2 text-md lg:text-2xl md:text-2xl text-gray-700'>Application</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>Apply</h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs '>According to rule</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('rule')} >\r\n                                                            <option>select </option>\r\n                                                            <option value=\"Old Rule\">Old Rule</option>\r\n                                                            <option value=\"New Rule\">New Rule</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {applyRule != undefined &&\r\n                                        <div className='col-span-12 '>\r\n                                            <h1 className='text-center text-md lg:text-xl md:text-xl text-gray-600 font-semibold pt-8 '> you have selected rule <span className='font-bold uppercase underline px-2 text-md lg:text-xl md:text-xl text-violet-500'>{reviewIdName?.rule}</span> to proceed with the application.</h1>\r\n                                            {storeUlbValue == undefined ?\r\n                                                <>\r\n                                                    <h1 className='text-center text-xl font-semibold text-gray-500 p-14'>\r\n                                                        Registration of a <span className='text-gray-700 font-bold'>Dharamshala</span> is mendatory under the urban local body it falls in.\r\n                                                        If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                                    </h1>\r\n\r\n\r\n                                                    <div className='w-96 h-64 mx-auto'>\r\n                                                        <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                            <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                            <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                            <div className=' '>\r\n                                                                <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                                    <option>select </option>\r\n                                                                    {ulbList?.map((items) => (\r\n                                                                        <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='animate-wiggle'>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                                :\r\n                                                <div className=' mt-4  text-center'>\r\n                                                    {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500 \">\r\n                                                <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                            </svg> */}\r\n\r\n                                                    <h1 className='text-md lg:text-xl md:text-xl text-gray-600 font-semibold '> you have selected ulb <span className='font-bold uppercase underline px-2 text-md lg:text-xl md:text-xl text-violet-500'>{reviewIdName?.ulb}</span> to proceed with the application.</h1>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>{existingApplicationDetails?.resident_ward_name}  </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} disabled className={`${inputStyle} bg-white`} >\r\n                                                                <option>{existingApplicationDetails?.permanent_ward_name} </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' disabled className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>{existingApplicationDetails?.entity_ward_name} </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Floor Area in(sq.ft)<span className='text-red-600'>*</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='floorArea' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.floorArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.floorArea && formik.errors.floorArea ? formik.errors.floorArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Beds<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfBeds' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfBeds}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfBeds && formik.errors.noOfBeds ? formik.errors.noOfBeds : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Rooms<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfRooms' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfRooms}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfRooms && formik.errors.noOfRooms ? formik.errors.noOfRooms : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Floor Area in(sq.ft)<span className='text-red-600'>*</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='floorArea' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.floorArea}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.floorArea && formik.errors.floorArea ? formik.errors.floorArea : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Beds<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfBeds' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfBeds}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfBeds && formik.errors.noOfBeds ? formik.errors.noOfBeds : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Rooms<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfRooms' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfRooms}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfRooms && formik.errors.noOfRooms ? formik.errors.noOfRooms : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageHallForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction DharamshalaDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        // id: props?.data?.id,\r\n        image: \"\",\r\n        // relativeName: props?.data?.relative_name,\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    console.log(\"document full data 1...\", props?.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    <div onClick={() => modalAction(DocUrl)}>\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                    </div>\r\n\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DharamshalaDocTable","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport DocumentUploadSteps from '../../../Advertisement/DocumentUploadSteps';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport DharamshalaDocTable from './DharamshalaDocTable';\r\n\r\nfunction DharamshalaDocForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun,type } = props?.values\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('dharamshalaDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-2 ml-4'>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.DHARAMSHALA?.map((items, index) => (\r\n                                    <DharamshalaDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.DHARAMSHALA?.map((items, index) => (\r\n                                    <DharamshalaDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DharamshalaDocForm","import React from 'react'\r\n\r\nfunction ReviewDharamshalaForm(props) {\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6 -ml-7 text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.licenseYear || props?.reviewIdNameData?.dharamshala\r\n                                        ?.licenseYear}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.applicantName || props?.reviewIdNameData?.dharamshala\r\n                                        ?.applicant}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.fatherName || props?.reviewIdNameData?.dharamshala\r\n                                        ?.father}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.residenceAddress || props?.reviewIdNameData?.dharamshala\r\n                                        ?.residential_address}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.residenceWardNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.resident_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.permanentAddress || props?.reviewIdNameData?.dharamshala\r\n                                        ?.permanent_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.permanentWardNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.permanent_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.mobileNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.mobile}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.email || props?.reviewIdNameData?.dharamshala\r\n                                        ?.email}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar Card No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.aadharNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.aadhar_card}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Pan Card No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.panNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.pan_card}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.entityName || props?.reviewIdNameData?.dharamshala\r\n                                        ?.entity_name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.entityAddress || props?.reviewIdNameData?.dharamshala\r\n                                        ?.entity_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.entityWardNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.entity_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.holdingNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.holding_no}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.tradeLicenseNo || props?.reviewIdNameData?.dharamshala\r\n                                        ?.trade_license_no}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Floor Area</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.floorArea || props?.reviewIdNameData?.dharamshala\r\n                                        ?.floor_area}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.longitude || props?.reviewIdNameData?.dharamshala\r\n                                        ?.longitude}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.latitude || props?.reviewIdNameData?.dharamshala\r\n                                        ?.latitude}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Organization Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala?.organizationType || props?.reviewIdNameData?.dharamshala\r\n                                    ?.organization_type_name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Land Deed Type  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.landDeedType || props?.reviewIdNameData?.dharamshala\r\n                                        ?.land_deed_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Water Supply Type </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.waterSupplyType || props?.reviewIdNameData?.dharamshala\r\n                                        ?.water_supply_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Electricity Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.electricityType || props?.reviewIdNameData?.dharamshala\r\n                                        ?.electricity_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Security Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.securityType || props?.reviewIdNameData?.dharamshala\r\n                                        ?.security_type_name}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of Beds</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noOfBeds || props?.reviewIdNameData?.dharamshala\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of Rooms</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noOfRooms || props?.reviewIdNameData?.dharamshala\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of CCTV Camera</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noOfCctv || props?.reviewIdNameData?.dharamshala\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Fire Extinguishers </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noFireExtinguishers || props?.reviewIdNameData?.dharamshala\r\n                                        ?.fire_extinguisher}</span>\r\n                            </div>\r\n                          \r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 p-2 ml-12'>\r\n                        <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Entry Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noEntryGates || props?.reviewIdNameData?.dharamshala\r\n                                        ?.entry_gate}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Exit Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noExitGate || props?.reviewIdNameData?.dharamshala\r\n                                        ?.exit_gate}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Two Wheelers Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noTwoWheelerParking || props?.reviewIdNameData?.dharamshala\r\n                                        ?.two_wheelers_parking}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.dharamshala\r\n                                    ?.noFourWheelerParking || props?.reviewIdNameData?.dharamshala\r\n                                        ?.four_wheelers_parking}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.dharamshalaDoc\r\n                                ?.map((data, index) => (\r\n                                    <div className=''>\r\n                                        <>\r\n                                            <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                            <div className='flex -mt-2'>\r\n                                                <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                                <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                            </div>\r\n                                        </>\r\n                                    </div>\r\n                                ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewDharamshalaForm","import React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport DharamshalaForm from './DharamshalaForm';\r\nimport DharamshalaDocForm from './DharamshalaDocForm';\r\nimport ReviewDharamshalaForm from './ReviewDharamshalaForm';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport Loader from '../../../Advertisement/Loader';\r\nimport BackButton from '../../../Advertisement/BackButton';\r\nimport AdvrtSuccessScreen from '../../../Advertisement/AdvrtSuccessScreen';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction DharamshalaIndex() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postDharamshalaApplication, api_renewDharamshala_license, api_getDharamshalaApplicationDetailsToRenew } = AdvertisementApiList()\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'dharamshala') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc)\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitDharamshalaForm()\r\n    }\r\n\r\n    const submitDharamshalaForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postDharamshalaApplication  //new apply\r\n            requestBody = {\r\n                ulbId: 2,\r\n                rule: allFormData?.dharamshala?.rule,\r\n                applicantName: allFormData?.dharamshala?.applicantName,\r\n                fatherName: allFormData?.dharamshala?.fatherName,\r\n                mobile: allFormData?.dharamshala?.mobileNo,\r\n                email: allFormData?.dharamshala?.email,\r\n                residentialAddress: allFormData?.dharamshala?.residenceAddress,\r\n                residentialWardId: allFormData?.dharamshala?.residenceWardNo,\r\n                permanentAddress: allFormData?.dharamshala?.permanentAddress,\r\n                permanentWardId: allFormData?.dharamshala?.permanentWardNo,\r\n                licenseYear: allFormData?.dharamshala?.licenseYear,\r\n                entityName: allFormData?.dharamshala?.entityName,\r\n                entityAddress: allFormData?.dharamshala?.entityAddress,\r\n                entityWardId: allFormData?.dharamshala?.entityWardNo,\r\n                holdingNo: allFormData?.dharamshala?.holdingNo,\r\n                tradeLicenseNo: allFormData?.dharamshala?.tradeLicenseNo,\r\n                longitude: allFormData?.dharamshala?.longitude,\r\n                latitude: allFormData?.dharamshala?.latitude,\r\n                floorArea: allFormData?.dharamshala?.floorArea,\r\n                organizationType: allFormData?.dharamshala?.organizationType,\r\n                landDeedType: allFormData?.dharamshala?.landDeedType,\r\n                waterSupplyType: allFormData?.dharamshala?.waterSupplyType,\r\n                electricityType: allFormData?.dharamshala?.electricityType,\r\n                securityType: allFormData?.dharamshala?.securityType,\r\n                cctvCamera: allFormData?.dharamshala?.noOfCctv,\r\n                noOfBeds: allFormData?.dharamshala?.noOfBeds,\r\n                noOfRooms: allFormData?.dharamshala?.noOfRooms,\r\n                fireExtinguisher: allFormData?.dharamshala?.noFireExtinguishers,\r\n                entryGate: allFormData?.dharamshala?.noEntryGates,\r\n                exitGate: allFormData?.dharamshala?.noExitGate,\r\n                twoWheelersParking: allFormData?.dharamshala?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.dharamshala?.noFourWheelerParking,\r\n                aadharCard: allFormData?.dharamshala?.aadharNo,\r\n                panCard: allFormData?.dharamshala?.panNo,\r\n                documents: allFormData?.dharamshalaDoc,\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewDharamshala_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.dharamshala?.rule,\r\n                applicantName: allFormData?.dharamshala?.applicantName,\r\n                fatherName: allFormData?.dharamshala?.fatherName,\r\n                mobile: allFormData?.dharamshala?.mobileNo,\r\n                email: allFormData?.dharamshala?.email,\r\n                residentialAddress: allFormData?.dharamshala?.residenceAddress,\r\n                residentialWardId: allFormData?.dharamshala?.residenceWardNo,\r\n                permanentAddress: allFormData?.dharamshala?.permanentAddress,\r\n                permanentWardId: allFormData?.dharamshala?.permanentWardNo,\r\n                licenseYear: allFormData?.dharamshala?.licenseYear,\r\n                entityName: allFormData?.dharamshala?.entityName,\r\n                entityAddress: allFormData?.dharamshala?.entityAddress,\r\n                entityWardId: allFormData?.dharamshala?.entityWardNo,\r\n                holdingNo: allFormData?.dharamshala?.holdingNo,\r\n                tradeLicenseNo: allFormData?.dharamshala?.tradeLicenseNo,\r\n                longitude: allFormData?.dharamshala?.longitude,\r\n                latitude: allFormData?.dharamshala?.latitude,\r\n                floorArea: allFormData?.dharamshala?.floorArea,\r\n                organizationType: allFormData?.dharamshala?.organizationType,\r\n                landDeedType: allFormData?.dharamshala?.landDeedType,\r\n                waterSupplyType: allFormData?.dharamshala?.waterSupplyType,\r\n                electricityType: allFormData?.dharamshala?.electricityType,\r\n                securityType: allFormData?.dharamshala?.securityType,\r\n                cctvCamera: allFormData?.dharamshala?.noOfCctv,\r\n                noOfBeds: allFormData?.dharamshala?.noOfBeds,\r\n                noOfRooms: allFormData?.dharamshala?.noOfRooms,\r\n                fireExtinguisher: allFormData?.dharamshala?.noFireExtinguishers,\r\n                entryGate: allFormData?.dharamshala?.noEntryGates,\r\n                exitGate: allFormData?.dharamshala?.noExitGate,\r\n                twoWheelersParking: allFormData?.dharamshala?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.dharamshala?.noFourWheelerParking,\r\n                aadharCard: allFormData?.dharamshala?.aadharNo,\r\n                panCard: allFormData?.dharamshala?.panNo,\r\n                documents: allFormData?.dharamshalaDoc,\r\n            }\r\n        }\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(\"failed to submit\", \"error\")\r\n\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getDharamshalaApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('dharamshala application detail for renew application.....', response)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=''>\r\n                <ToastContainer position=\"top-right\"\r\n                    autoClose={2000} />\r\n\r\n                <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                        <div className=''>\r\n                            <div className='flex flex-row '>\r\n                                <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>DHARAMSHALA REGISTRATION APPLICATION</h1>\r\n                            </div>\r\n                            <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                                You Can Get License To Advertise Your Business Name On Your Shop\r\n                            </h1>\r\n                        </div>\r\n                        <div>\r\n                            <div className='flex flex-row mt-2 float-right'>\r\n                                <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle '>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                                </strong> more screen</span>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right  ml-4' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><DharamshalaForm values={values} /></div>\r\n                    <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><DharamshalaDocForm values={values} /></div>\r\n                    <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewDharamshalaForm values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DharamshalaIndex","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport SelfAdvrtInformationScreen from '../../../Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../../FunctionComponent/ValidationFunction';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction HostelForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [applyYearValue, setapplyYearValue] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        rule: yup.string().required('select rule'),\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.string().required('Enter mobile no.').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        entityName: yup.string().required('This field is Required'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        holdingNo: yup.string().required('This field is Required'),\r\n        tradeLicenseNo: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('Enter Number'),\r\n        // latitude: yup.string().required('Enter Number'),\r\n        // establishmentType: yup.string().required('This field is Required'),\r\n        organizationType: yup.string().required('This field is Required'),\r\n        landDeedType: yup.string().required('This field is Required'),\r\n        waterSupplyType: yup.string().required('This field is Required'),\r\n        electricityType: yup.string().required('This field is Required'),\r\n        securityType: yup.string().required('This field is Required'),\r\n        hostelType: yup.string().required('This field is Required'),\r\n        messType: yup.string().required('This field is Required'),\r\n        noOfBeds: yup.string().required('Enter Number'),\r\n        noOfRooms: yup.string().required('Enter Number'),\r\n        noOfCctv: yup.string().required('Enter Number'),\r\n        noFireExtinguishers: yup.string().required('Enter Number'),\r\n        noEntryGates: yup.string().required('Enter Number'),\r\n        noExitGate: yup.string().required('Enter Number'),\r\n        noTwoWheelerParking: yup.string().required('Enter Number'),\r\n        noFourWheelerParking: yup.string().required('Enter Number'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        panNo: yup.string().required('Enter aadhar').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        isGovtInstitute: yup.string().required('This field is Required'),\r\n    })\r\n\r\n    const initialValues = {\r\n        rule: '',\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        establishmentType: '',\r\n        organizationType: '',\r\n        landDeedType: '',\r\n        waterSupplyType: '',\r\n        electricityType: '',\r\n        securityType: '',\r\n        hostelType: '',\r\n        messType: '',\r\n        noOfBeds: '',\r\n        noOfRooms: '',\r\n        noOfCctv: '',\r\n        noFireExtinguishers: '',\r\n        noEntryGates: '',\r\n        noExitGate: '',\r\n        noTwoWheelerParking: '',\r\n        noFourWheelerParking: '',\r\n        aadharNo: '',\r\n        panNo: '',\r\n        isGovtInstitute: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            console.log(\"self Advertisement ...3\", values)\r\n            collectFormDataFun('hostelForm', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        { name == 'rule' && setapplyYearValue(value) }\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'panNo' && formik.setFieldValue(\"panNo\", allowCharacterNumberInput(value, formik.values.panNo, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n\r\n    console.log(\"apply year\", applyYearValue)\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    console.log(\"ulb value...\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list', response.data.data)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('rule', existingApplicationDetails?.rule)\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        // formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residential_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.residential_ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n        formik.setFieldValue('hostelType', existingApplicationDetails?.hostel_type_id)\r\n        formik.setFieldValue('messType', existingApplicationDetails?.mess_type_id)\r\n        formik.setFieldValue('organizationType', existingApplicationDetails?.organization_type_id)\r\n        formik.setFieldValue('landDeedType', existingApplicationDetails?.land_deed_type_id)\r\n        formik.setFieldValue('waterSupplyType', existingApplicationDetails?.water_supply_type_id)\r\n        formik.setFieldValue('electricityType', existingApplicationDetails?.electricity_type_id)\r\n        formik.setFieldValue('securityType', existingApplicationDetails?.security_type_id)\r\n        formik.setFieldValue('noOfBeds', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noOfRooms', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noOfCctv', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noFireExtinguishers', existingApplicationDetails?.fire_extinguisher)\r\n        formik.setFieldValue('noEntryGates', existingApplicationDetails?.entry_gate)\r\n        formik.setFieldValue('noExitGate', existingApplicationDetails?.exit_gate)\r\n        formik.setFieldValue('noTwoWheelerParking', existingApplicationDetails?.two_wheelers_parking)\r\n        formik.setFieldValue('noFourWheelerParking', existingApplicationDetails?.four_wheelers_parking)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_card)\r\n        formik.setFieldValue('panNo', existingApplicationDetails?.pan_card)\r\n        formik.setFieldValue('floorArea', existingApplicationDetails?.floorArea)\r\n        formik.setFieldValue('isGovtInstitute', existingApplicationDetails?.is_approve_by_govt_id)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\" existing\", existingApplicationDetails)\r\n\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 bg-violet-50'>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12'>\r\n                                    {applyYearValue == undefined &&\r\n                                        <div className='col-span-12'>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-8'>\r\n                                                Select <span className=' font-bold  uppercase underline px-2 text-md  lg:text-2xl md:text-2xl text-gray-700'>Rule</span> From Which You Want To Proceed With The <span className=' font-bold  uppercase underline px-2 text-md lg:text-2xl md:text-2xl text-gray-700'>Application</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>Apply</h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs '>According to rule</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('rule')} >\r\n                                                            <option>select </option>\r\n                                                            <option value=\"Old Rule\">Old Rule</option>\r\n                                                            <option value=\"New Rule\">New Rule</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {applyYearValue != undefined &&\r\n                                        <div className='col-span-12 '>\r\n                                            {storeUlbValue == undefined ?\r\n                                                <>\r\n                                                    <h1 className='text-center text-xl font-semibold text-gray-500 p-14'>\r\n                                                        Registration of a <span className='text-gray-700 font-bold'>Lodge or Hostel</span> is mendatory under the urban local body it falls in.\r\n                                                        If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                                    </h1>\r\n\r\n\r\n                                                    <div className='w-96 h-64 mx-auto'>\r\n                                                        <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                            <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                            <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                            <div className=' '>\r\n                                                                <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                                    <option>select </option>\r\n                                                                    {ulbList?.map((items) => (\r\n                                                                        <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='animate-wiggle'>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                                :\r\n                                                <div className='flex flex-row mt-4 space-x-2  '>\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                        <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                                    </svg>\r\n\r\n                                                    <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6 border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} disabled >\r\n                                                                <option>{existingApplicationDetails?.residential_ward_name} </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} disabled >\r\n                                                                <option>{existingApplicationDetails?.permanent_ward_name} </option>\r\n\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')} disabled>\r\n                                                                <option>{existingApplicationDetails?.entity_ward_name} </option>\r\n\r\n                                                                {/* <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                   <div className='col-span-1'>\r\n                                       <p className={`${labelStyle}`}>Establishment Type<span className='text-red-600'> *</span></p>\r\n                                   </div>\r\n                                   <div className='col-span-2 mr-2 '>\r\n                                       <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('establishmentType')} >\r\n                                           <option>select </option>\r\n                                           {masterData?.paramCategories?.establishmentType?.map((items) => (\r\n                                               <option value={items?.id}>{items?.string_parameter}</option>\r\n                                           ))}\r\n                                       </select>\r\n                                       <p className='text-red-500 text-xs absolute'>{formik.touched.establishmentType && formik.errors.establishmentType ? formik.errors.organizationType : null}</p>\r\n                                   </div>\r\n                               </div> */}\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} disabled>\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Hostel Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('hostelType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HostelType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lodgeType && formik.errors.lodgeType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mess Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('messType')} disabled >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.MessType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.messType && formik.errors.messType ? formik.errors.messType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Beds<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfBeds' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfBeds}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfBeds && formik.errors.noOfBeds ? formik.errors.noOfBeds : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Rooms<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfRooms' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfRooms}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfRooms && formik.errors.noOfRooms ? formik.errors.noOfRooms : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Is School /College /university hostel has been approved by goverment<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('isGovtInstitute')} disabled>\r\n                                                                <option>select </option>\r\n                                                                <option value={1}>Yes</option>\r\n                                                                <option value={0}>No </option>\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                            <div className='col-span-1'>\r\n                                                <p className={`${labelStyle}`}>Establishment Type<span className='text-red-600'> *</span></p>\r\n                                            </div>\r\n                                            <div className='col-span-2 mr-2 '>\r\n                                                <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('establishmentType')} >\r\n                                                    <option>select </option>\r\n                                                    {masterData?.paramCategories?.establishmentType?.map((items) => (\r\n                                                        <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                <p className='text-red-500 text-xs absolute'>{formik.touched.establishmentType && formik.errors.establishmentType ? formik.errors.organizationType : null}</p>\r\n                                            </div>\r\n                                        </div> */}\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Hostel Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('hostelType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HostelType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lodgeType && formik.errors.lodgeType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mess Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('messType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.MessType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.messType && formik.errors.messType ? formik.errors.messType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Beds<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfBeds' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfBeds}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfBeds && formik.errors.noOfBeds ? formik.errors.noOfBeds : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Rooms<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfRooms' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfRooms}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfRooms && formik.errors.noOfRooms ? formik.errors.noOfRooms : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Is School /College /university hostel has been approved by goverment<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('isGovtInstitute')} >\r\n                                                                <option>select </option>\r\n                                                                <option value={1}>Yes</option>\r\n                                                                <option value={0}>No </option>\r\n\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostelForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction LodgeHostelDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    console.log(\"document full data 1...\", props?.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    <div onClick={() => modalAction(DocUrl)}>\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                    </div>\r\n\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default LodgeHostelDocTable","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport DocumentUploadSteps from '../../../Advertisement/DocumentUploadSteps';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport LodgeHostelDocTable from './HostelDocTable';\r\n\r\nfunction HostelDocForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun,type } = props?.values\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('hostelDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-2 ml-4'>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.HOSTEL?.map((items, index) => (\r\n                                    <LodgeHostelDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.HOSTEL?.map((items, index) => (\r\n                                    <LodgeHostelDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostelDocForm","import React from 'react'\r\n\r\nfunction ReviewHostel(props) {\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6  text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6  text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Ulb</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.ulb || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.ulb_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Rule</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.rule || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.rule}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.licenseYear || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.licenseYear}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.applicantName || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.applicant}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.fatherName || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.father}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.residenceAddress || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.residential_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.residenceWardNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.residential_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.permanentAddress || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.permanent_address}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.permanentWardNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.permanent_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.mobileNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.mobile}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.email || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.email}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar Card No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.aadharNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.aadhar_card}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Pan Card No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.panNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.pan_card}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.entityName || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.entity_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.entityAddress || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.entity_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.entityWardNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.entity_ward_name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.holdingNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.holding_no}</span>\r\n                            </div><div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.tradeLicenseNo || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.trade_license_no}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.longitude || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.longitude}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.latitude || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.latitude}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Hostel Type </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.hostelType || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.hostel_type}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mess Type  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.mess_type || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.mess_type}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Organization Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm?.organizationType || props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.organization_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Land Deed Type  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.landDeedType || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.land_deed_type_name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Water Supply Type </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.waterSupplyType || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.water_supply_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Electricity Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.electricityType || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.electricity_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Security Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.securityType || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.security_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of Beds</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noOfBeds || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of Rooms</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noOfRooms || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of CCTV Camera</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noOfCctv || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Fire <br />Extinguishers </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noFireExtinguishers || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.fire_extinguisher}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Entry <br /> Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noEntryGates || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.entry_gate}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Exit <br /> Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noExitGate || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.exit_gate}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Two Wheelers <br /> Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noTwoWheelerParking || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.two_wheelers_parking}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Four Wheelers <br /> Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.noFourWheelerParking || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.four_wheelers_parking}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}> Is School /College /university hostel <br /> has been approved by goverment</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.hostelForm\r\n\r\n                                    ?.isGovtInstitute || props?.reviewIdNameData?.hostelForm\r\n\r\n                                        ?.is_approve_by_govt_name}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.hostelDoc\r\n\r\n                                ?.map((data, index) => (\r\n                                    <div className=''>\r\n                                        <>\r\n                                            <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                            <div className='flex -mt-2'>\r\n                                                <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                                <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                            </div>\r\n                                        </>\r\n                                    </div>\r\n                                ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"grid grid-cols-12 w-full p-3\">\r\n                <div className='md:pl-0 col-span-6'>\r\n                    <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                </div>\r\n                <div className='col-span-6'>\r\n                    <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewHostel","import React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport Loader from '../../../Advertisement/Loader';\r\nimport BackButton from '../../../Advertisement/BackButton';\r\nimport AdvrtSuccessScreen from '../../../Advertisement/AdvrtSuccessScreen';\r\nimport HostelForm from './HostelForm';\r\nimport HostelDocForm from './HostelDocForm';\r\nimport ReviewHostel from './ReviewHostel';\r\nimport { useParams } from 'react-router-dom';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\n\r\n\r\nfunction HostelIndex() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postHostelApplication, api_renewHostel_license, api_getHostelApplicationDetailsToRenew } = AdvertisementApiList()\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'hostelForm') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc?.[0])\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitHostelForm()\r\n    }\r\n\r\n    const submitHostelForm = () => {\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postHostelApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.hostelForm?.rule,\r\n                applicantName: allFormData?.hostelForm?.applicantName,\r\n                fatherName: allFormData?.hostelForm?.fatherName,\r\n                mobile: allFormData?.hostelForm?.mobileNo,\r\n                email: allFormData?.hostelForm?.email,\r\n                residentialAddress: allFormData?.hostelForm?.residenceAddress,\r\n                residentialWardId: allFormData?.hostelForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.hostelForm?.permanentAddress,\r\n                permanentWardId: allFormData?.hostelForm?.permanentWardNo,\r\n                licenseYear: allFormData?.hostelForm?.licenseYear,\r\n                entityName: allFormData?.hostelForm?.entityName,\r\n                entityAddress: allFormData?.hostelForm?.entityAddress,\r\n                entityWardId: allFormData?.hostelForm?.entityWardNo,\r\n                holdingNo: allFormData?.hostelForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.hostelForm?.tradeLicenseNo,\r\n                longitude: allFormData?.hostelForm?.longitude,\r\n                latitude: allFormData?.hostelForm?.latitude,\r\n                organizationType: allFormData?.hostelForm?.organizationType,\r\n                landDeedType: allFormData?.hostelForm?.landDeedType,\r\n                waterSupplyType: allFormData?.hostelForm?.waterSupplyType,\r\n                electricityType: allFormData?.hostelForm?.electricityType,\r\n                securityType: allFormData?.hostelForm?.securityType,\r\n                hostelType: allFormData?.hostelForm?.hostelType,\r\n                messType: allFormData?.hostelForm?.messType,\r\n                cctvCamera: allFormData?.hostelForm?.noOfCctv,\r\n                noOfBeds: allFormData?.hostelForm?.noOfBeds,\r\n                noOfRooms: allFormData?.hostelForm?.noOfRooms,\r\n                fireExtinguisher: allFormData?.hostelForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.hostelForm?.noEntryGates,\r\n                exitGate: allFormData?.hostelForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.hostelForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.hostelForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.hostelForm?.aadharNo,\r\n                panCard: allFormData?.hostelForm?.panNo,\r\n                isApproveByGovt: allFormData?.hostelForm?.isGovtInstitute,\r\n\r\n                documents: allFormData?.hostelDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewHostel_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.hostelForm?.rule,\r\n                applicantName: allFormData?.hostelForm?.applicantName,\r\n                fatherName: allFormData?.hostelForm?.fatherName,\r\n                mobile: allFormData?.hostelForm?.mobileNo,\r\n                email: allFormData?.hostelForm?.email,\r\n                residentialAddress: allFormData?.hostelForm?.residenceAddress,\r\n                residentialWardId: allFormData?.hostelForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.hostelForm?.permanentAddress,\r\n                permanentWardId: allFormData?.hostelForm?.permanentWardNo,\r\n                licenseYear: allFormData?.hostelForm?.licenseYear,\r\n                entityName: allFormData?.hostelForm?.entityName,\r\n                entityAddress: allFormData?.hostelForm?.entityAddress,\r\n                entityWardId: allFormData?.hostelForm?.entityWardNo,\r\n                holdingNo: allFormData?.hostelForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.hostelForm?.tradeLicenseNo,\r\n                longitude: allFormData?.hostelForm?.longitude,\r\n                latitude: allFormData?.hostelForm?.latitude,\r\n                organizationType: allFormData?.hostelForm?.organizationType,\r\n                landDeedType: allFormData?.hostelForm?.landDeedType,\r\n                waterSupplyType: allFormData?.hostelForm?.waterSupplyType,\r\n                electricityType: allFormData?.hostelForm?.electricityType,\r\n                securityType: allFormData?.hostelForm?.securityType,\r\n                hostelType: allFormData?.hostelForm?.hostelType,\r\n                messType: allFormData?.hostelForm?.messType,\r\n                cctvCamera: allFormData?.hostelForm?.noOfCctv,\r\n                noOfBeds: allFormData?.hostelForm?.noOfBeds,\r\n                noOfRooms: allFormData?.hostelForm?.noOfRooms,\r\n                fireExtinguisher: allFormData?.hostelForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.hostelForm?.noEntryGates,\r\n                exitGate: allFormData?.hostelForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.hostelForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.hostelForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.hostelForm?.aadharNo,\r\n                panCard: allFormData?.hostelForm?.panNo,\r\n                isApproveByGovt: allFormData?.hostelForm?.isGovtInstitute,\r\n\r\n                documents: allFormData?.hostelDoc\r\n\r\n            }\r\n        }\r\n\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(error.response.data.message`${\"failed to submit\"}`, \"error\")\r\n\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getHostelApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('dharamshala application detail for renew application.....', response)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip  p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>HOSTEL HALL REGISTRATION APPLICATION</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HostelForm values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><HostelDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewHostel values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostelIndex","import React from 'react'\r\n\r\nfunction ReviewLodge(props) {\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun } = props?.values\r\n\r\n    let labelStyle = \"mt-6  text-xs text-gray-600\"\r\n    let inputStyle = \"mt-6  text-md text-gray-700 font-bold\"\r\n\r\n    const submitForm = () => {\r\n        props.submitFun()\r\n    }\r\n    console.log(\"data in review form...\", props?.allFormData)\r\n    console.log(\"data in review form documents...\", props?.reviewIdNameData)\r\n    return (\r\n        <>\r\n            <div className='absolute w-full ml-4 top-4 '>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto  '>\r\n                    <div className='col-span-8 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold'>APPLICATION DETAILS</h1>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Ulb</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.ulb || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.ulb}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>License Year</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.licenseYear || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.licenseYear}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Applicant Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.applicantName || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.applicant}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Father Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.fatherName || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.father}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.residenceAddress || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.residential_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Residence Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.residenceWardNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.resident_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.permanentAddress || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.permanent_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Permanent Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.permanentWardNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.permanent_ward_name}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mobile No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.mobileNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.mobile}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>E-mail</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.email || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.email}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Aadhar Card No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.aadharNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.aadhar_card}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Pan Card No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.panNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.pan_card}</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Name</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.entityName || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.entity_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Address</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.entityAddress || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.entity_address}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Entity Ward No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.entityWardNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.entity_ward_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Holding No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.holdingNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.holding_no}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Trade License No.</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.tradeLicenseNo || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.trade_license_no}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Longitude </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.longitude || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.longitude}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Latitude  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.latitude || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.latitude}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Organization Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm?.organizationType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.organization_type_name}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Land Deed Type  </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.landDeedType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.land_deed_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Water Supply Type </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.waterSupplyType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.water_supply_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Electricity Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.electricityType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.electricity_type_name}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Security Type</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.securityType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.security_type_name}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of Beds</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noOfBeds || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of Rooms</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noOfRooms || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No of CCTV Camera</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noOfCctv || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.cctv_camera}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Fire <br />Extinguishers </p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noFireExtinguishers || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.fire_extinguisher}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Entry <br /> Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noEntryGates || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.entry_gate}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Lodge Type <br /> Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.lodgeType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.lodge_type}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Mess Type <br /> Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.messType || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.mess_type}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Exit <br /> Gates</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noExitGate || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.exit_gate}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 p-2 ml-12'>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Two Wheelers <br /> Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noTwoWheelerParking || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.two_wheelers_parking}</span>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>No. of Four Wheelers <br /> Parking Space</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.noFourWheelerParking || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.four_wheelers_parking}</span>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className={`${labelStyle}`}>Rule</p>\r\n                                <span className={`${inputStyle}`}>{props?.reviewIdNameData?.lodgeForm\r\n\r\n                                    ?.rule || props?.reviewIdNameData?.lodgeForm\r\n\r\n                                        ?.rule}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* document */}\r\n                    <div className='col-span-4 border border-dashed border-violet-800 '>\r\n                        <h1 className='text-center p-3 mb-2 bg-white text-gray-600 font-sans font-semibold '>DOCUMENTS UPLOADED</h1>\r\n\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2 ml-12'>\r\n                            {props?.reviewIdNameData?.lodgeDoc\r\n\r\n                                ?.map((data, index) => (\r\n                                    <div className=''>\r\n                                        <>\r\n                                            <p className={`${labelStyle}`}>{data?.docCode} Document</p>\r\n                                            <div className='flex -mt-2'>\r\n                                                <span className={`${inputStyle} flex-1`}>{data?.image?.name}</span>\r\n                                                <span className={`mt-4  flex-1 float-right`}><img src=\"https://cdn-icons-png.flaticon.com/512/1829/1829589.png\" alt=\"Preview Image\" className={` w-8`} /></span>\r\n                                            </div>\r\n                                        </>\r\n                                    </div>\r\n                                ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-12 w-full p-3\">\r\n                    <div className='md:pl-0 col-span-6'>\r\n                        <button type=\"button\" class=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(2)}>back</button>\r\n                    </div>\r\n                    <div className='col-span-6'>\r\n                        <button type=\"submit\" class=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={submitForm}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewLodge","import React, { useEffect, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup'\r\nimport Modal from 'react-modal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport SelfAdvrtInformationScreen from '../../../Advertisement/SelfAdvertisement/SelfAdvrtInformationScreen';\r\nimport ApiHeader from '../../../../../Components/ApiList/ApiHeader';\r\nimport CitizenApplyApiList from '../../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../../Components/Common/BarLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { allowCharacterNumberInput, allowFloatInput, allowMailInput, allowNumberInput } from '../../../FunctionComponent/ValidationFunction';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nfunction LodgeForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, existingApplicationDetails, type } = props?.values\r\n\r\n    const { api_getAdvertMasterData, api_getUlbList, api_getWardList, api_getTradeLicenseDetails } = AdvertisementApiList()\r\n    const { api_getAllUlb, api_wardByUlb, } = CitizenApplyApiList()\r\n    const [masterData, setmasterData] = useState()\r\n    const [ulbList, setulbList] = useState()\r\n    const [wardList, setwardList] = useState()\r\n    const [reviewIdName, setreviewIdName] = useState({})\r\n    const [storeUlbValue, setstoreUlbValue] = useState()\r\n    const [applyYearValue, setapplyYearValue] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [licenseId, setlicenseId] = useState()\r\n    const [liceneData, setlicenseData] = useState()\r\n    const [liceneDetails, setlicenseDetails] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(true);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    let labelStyle = \"mt-6 -ml-6 text-xs text-gray-600\"\r\n    let inputStyle = \"text-xs rounded leading-5 shadow-md px-1.5 py-1 w-full h-6 md:h-8  mt-5 \"\r\n\r\n    const validationSchema = yup.object({\r\n        rule: yup.string().required('select rule'),\r\n        ulb: yup.string().required('select ulb'),\r\n        licenseYear: yup.string().required('select license year'),\r\n        applicantName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        fatherName: yup.string().required('Enter owner name').max(50, 'Enter maximum 50 characters'),\r\n        email: yup.string().email('Invalid email').required('Email is required'),\r\n        residenceAddress: yup.string().required('This field is Required'),\r\n        residenceWardNo: yup.string().required('This field is Required'),\r\n        permanentAddress: yup.string().required('This field is Required'),\r\n        permanentWardNo: yup.string().required('This field is Required'),\r\n        mobileNo: yup.string().required('Enter mobile no.').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n        entityName: yup.string().required('This field is Required'),\r\n        entityAddress: yup.string().required('This field is Required'),\r\n        entityWardNo: yup.string().required('This field is Required'),\r\n        holdingNo: yup.string().required('This field is Required'),\r\n        tradeLicenseNo: yup.string().required('This field is Required'),\r\n        // longitude: yup.string().required('Enter Number'),\r\n        // latitude: yup.string().required('Enter Number'),\r\n        // establishmentType: yup.string().required('This field is Required'),\r\n        organizationType: yup.string().required('This field is Required'),\r\n        landDeedType: yup.string().required('This field is Required'),\r\n        waterSupplyType: yup.string().required('This field is Required'),\r\n        electricityType: yup.string().required('This field is Required'),\r\n        securityType: yup.string().required('This field is Required'),\r\n        lodgeType: yup.string().required('This field is Required'),\r\n        messType: yup.string().required('This field is Required'),\r\n        noOfBeds: yup.string().required('Enter Number'),\r\n        noOfRooms: yup.string().required('Enter Number'),\r\n        noOfCctv: yup.string().required('Enter Number'),\r\n        noFireExtinguishers: yup.string().required('Enter Number'),\r\n        noEntryGates: yup.string().required('Enter Number'),\r\n        noExitGate: yup.string().required('Enter Number'),\r\n        noTwoWheelerParking: yup.string().required('Enter Number'),\r\n        noFourWheelerParking: yup.string().required('Enter Number'),\r\n        aadharNo: yup.string().required('Enter aadhar').min(12, 'Enter 12 digit number').max(12, 'Enter 12 digit number'),\r\n        panNo: yup.string().required('Enter aadhar').min(10, 'Enter 10 digit number').max(10, 'Enter 10 digit number'),\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        rule: '',\r\n        ulb: '',\r\n        licenseYear: '',\r\n        applicantName: '',\r\n        fatherName: '',\r\n        email: '',\r\n        residenceAddress: '',\r\n        residenceWardNo: '',\r\n        permanentAddress: '',\r\n        permanentWardNo: '',\r\n        mobileNo: '',\r\n        entityName: '',\r\n        entityAddress: '',\r\n        entityWardNo: '',\r\n        holdingNo: '',\r\n        tradeLicenseNo: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        // establishmentType: '',\r\n        organizationType: '',\r\n        landDeedType: '',\r\n        waterSupplyType: '',\r\n        electricityType: '',\r\n        securityType: '',\r\n        lodgeType: '',\r\n        messType: '',\r\n        noOfBeds: '',\r\n        noOfRooms: '',\r\n        noOfCctv: '',\r\n        noFireExtinguishers: '',\r\n        noEntryGates: '',\r\n        noExitGate: '',\r\n        noTwoWheelerParking: '',\r\n        noFourWheelerParking: '',\r\n        aadharNo: '',\r\n        panNo: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: values => {\r\n            console.log(\"self Advertisement\", values)\r\n            collectFormDataFun('lodgeForm', values, reviewIdName)\r\n            setFormIndex(2)\r\n        },\r\n        validationSchema\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(\"target type\", e.target.type)\r\n        console.log(\"check box name\", e.target.name)\r\n\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'ulb' && getWardListFun(value) }\r\n        { name == 'ulb' && setstoreUlbValue(value) }\r\n        { name == 'rule' && setapplyYearValue(value) }\r\n        console.log(\"ulb id 1 ...\", value)\r\n\r\n\r\n        // {****** collection names By Id ******}//\r\n        if (e.target.type == 'select-one') {\r\n            setreviewIdName({ ...reviewIdName, [name]: e.target[e.target.selectedIndex].text })\r\n        }\r\n        else {\r\n            setreviewIdName({ ...reviewIdName, [name]: value })\r\n        }\r\n\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n        { name == 'aadharNo' && formik.setFieldValue(\"aadharNo\", allowNumberInput(value, formik.values.aadharNo, 12)) }\r\n        { name == 'panNo' && formik.setFieldValue(\"panNo\", allowCharacterNumberInput(value, formik.values.panNo, 10)) }\r\n        { name == 'longitude' && formik.setFieldValue(\"longitude\", allowFloatInput(value, formik.values.longitude, 10)) }\r\n        { name == 'latitude' && formik.setFieldValue(\"latitude\", allowFloatInput(value, formik.values.latitude, 10)) }\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberInput(value, formik.values.holdingNo, 15)) }\r\n        { name == 'tradeLicenseNo' && formik.setFieldValue(\"tradeLicenseNo\", allowCharacterNumberInput(value, formik.values.tradeLicenseNo, 20)) }\r\n        { name == 'email' && formik.setFieldValue(\"email\", allowMailInput(value, formik.values.email, 100)) }\r\n    };\r\n\r\n    console.log(\"apply year\", applyYearValue)\r\n    console.log(\"review name by id in form\", reviewIdName)\r\n    console.log(\"loader\", props.showLoader)\r\n\r\n    ///////////{*** GETTING ULB DATA***}/////////\r\n    useEffect(() => {\r\n        getUlbListData()\r\n    }, [])\r\n    const getUlbListData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(`${api_getAllUlb}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ulb list in self advertisement', response.data.data)\r\n                setulbList(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"ulb list\", ulbList)\r\n\r\n    console.log(\"ulb value...\", storeUlbValue)\r\n\r\n    ///////////{*** GETTING WARD LIST***}/////////\r\n    const getWardListFun = (ulbId) => {\r\n        const requestBody = {\r\n            // ulbId: ulbId,\r\n            ulbId: 2,\r\n        }\r\n        axios.post(`${api_wardByUlb}`, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('ward list', response.data.data)\r\n                setwardList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"ward master data...\", wardList)\r\n\r\n    ///////////{*** GETTING MASTER DATA***}/////////\r\n    useEffect(() => {\r\n        getMasterDataFun()\r\n    }, [])\r\n    const getMasterDataFun = (ulbId) => {\r\n        axios.post(`${api_getAdvertMasterData}`, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('master data for self advertisement', response.data.data)\r\n                setmasterData(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n    ///////////{*** FEEDING EXISTING DATA***}/////////\r\n    useEffect(() => {\r\n\r\n        if (type == 'renew') {\r\n            feedApplicationData()\r\n            setreviewIdName(existingApplicationDetails)\r\n        }\r\n    }, [existingApplicationDetails])\r\n    const feedApplicationData = () => {\r\n        //* FEEDING DATA\r\n        formik.setFieldValue('rule', existingApplicationDetails?.rule)\r\n        formik.setFieldValue('ulb', existingApplicationDetails?.ulb_id)\r\n        // formik.setFieldValue('licenseYear', existingApplicationDetails?.license_year)\r\n        formik.setFieldValue('applicantName', existingApplicationDetails?.applicant)\r\n        formik.setFieldValue('fatherName', existingApplicationDetails?.father)\r\n        formik.setFieldValue('email', existingApplicationDetails?.email)\r\n        formik.setFieldValue('residenceAddress', existingApplicationDetails?.residential_address)\r\n        formik.setFieldValue('residenceWardNo', existingApplicationDetails?.residential_ward_id)\r\n        formik.setFieldValue('permanentAddress', existingApplicationDetails?.permanent_address)\r\n        formik.setFieldValue('permanentWardNo', existingApplicationDetails?.permanent_ward_id)\r\n        formik.setFieldValue('mobileNo', existingApplicationDetails?.mobile)\r\n        formik.setFieldValue('entityName', existingApplicationDetails?.entity_name)\r\n        formik.setFieldValue('entityAddress', existingApplicationDetails?.entity_address)\r\n        formik.setFieldValue('entityWardNo', existingApplicationDetails?.entity_ward_id)\r\n        formik.setFieldValue('holdingNo', existingApplicationDetails?.holding_no)\r\n        formik.setFieldValue('tradeLicenseNo', existingApplicationDetails?.trade_license_no)\r\n        formik.setFieldValue('longitude', existingApplicationDetails?.longitude)\r\n        formik.setFieldValue('latitude', existingApplicationDetails?.latitude)\r\n\r\n        // formik.setFieldValue('establishmentType', existingApplicationDetails?.organization_type_id)\r\n        formik.setFieldValue('lodgeType', existingApplicationDetails?.lodge_type_id)\r\n        formik.setFieldValue('messType', existingApplicationDetails?.mess_type_id)\r\n\r\n        formik.setFieldValue('organizationType', existingApplicationDetails?.organization_type_id)\r\n        formik.setFieldValue('landDeedType', existingApplicationDetails?.land_deed_type_id)\r\n        formik.setFieldValue('waterSupplyType', existingApplicationDetails?.water_supply_type_id)\r\n        formik.setFieldValue('electricityType', existingApplicationDetails?.electricity_type_id)\r\n        formik.setFieldValue('securityType', existingApplicationDetails?.security_type_id)\r\n        formik.setFieldValue('noOfBeds', existingApplicationDetails?.no_of_beds)\r\n        formik.setFieldValue('noOfRooms', existingApplicationDetails?.no_of_rooms)\r\n        formik.setFieldValue('noOfCctv', existingApplicationDetails?.cctv_camera)\r\n        formik.setFieldValue('noFireExtinguishers', existingApplicationDetails?.fire_extinguisher)\r\n        formik.setFieldValue('noEntryGates', existingApplicationDetails?.entry_gate)\r\n        formik.setFieldValue('noExitGate', existingApplicationDetails?.exit_gate)\r\n        formik.setFieldValue('noTwoWheelerParking', existingApplicationDetails?.two_wheelers_parking)\r\n        formik.setFieldValue('noFourWheelerParking', existingApplicationDetails?.four_wheelers_parking)\r\n        formik.setFieldValue('aadharNo', existingApplicationDetails?.aadhar_card)\r\n        formik.setFieldValue('panNo', existingApplicationDetails?.pan_card)\r\n        // formik.setFieldValue('floorArea', existingApplicationDetails?.floorArea)\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BarLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    console.log(\"lodge existing application data\", existingApplicationDetails)\r\n    console.log(\" master data...\", masterData)\r\n    console.log(\" License full data\", liceneData?.licenseDataById)\r\n\r\n    return (\r\n        <>\r\n            <div className='absolute w-full top-2 ml-4 '>\r\n                <form onSubmit={formik.handleSubmit} onChange={handleOnChange}>\r\n                    <div>\r\n                        <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 w-10/12  container mx-auto '>\r\n                            {type != 'renew' &&\r\n                                <div className='col-span-12'>\r\n                                    {applyYearValue == undefined &&\r\n                                        <div className='col-span-12'>\r\n                                            <h1 className='text-center text-xl font-semibold text-gray-500 p-8'>\r\n                                                Select <span className=' font-bold  uppercase underline px-2 text-md  lg:text-2xl md:text-2xl text-gray-700'>Rule</span> From Which You Want To Proceed With The <span className=' font-bold  uppercase underline px-2 text-md lg:text-2xl md:text-2xl text-gray-700'>Application</span>\r\n                                            </h1>\r\n                                            <div className='w-96 h-64 mx-auto'>\r\n                                                <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                    <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>Apply</h1>\r\n                                                    <h1 className='text-left mt-2 text-gray-500 text-xs '>According to rule</h1>\r\n                                                    <div className=' '>\r\n                                                        <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('rule')} >\r\n                                                            <option>select </option>\r\n                                                            <option value={1}>Old Rule</option>\r\n                                                            <option value={2}>New Rule</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {applyYearValue != undefined &&\r\n                                        <div className='col-span-12 '>\r\n                                            {storeUlbValue == undefined ?\r\n                                                <>\r\n                                                    <h1 className='text-center text-xl font-semibold text-gray-500 p-14'>\r\n                                                        Registration of a <span className='text-gray-700 font-bold'>Lodge or Hostel</span> is mendatory under the urban local body it falls in.\r\n                                                        If you are the owner of such a property, it need to be <span className='text-gray-700 font-bold'> registered and licensed properly.</span>\r\n                                                    </h1>\r\n\r\n\r\n                                                    <div className='w-96 h-64 mx-auto'>\r\n                                                        <div className='p-8 mt-6 bg-white w-80 h-64 mx-auto shadow-md shadow-violet-300 rounded leading-5'>\r\n                                                            <h1 className='text-left  text-gray-500 text-2xl uppercase font-bold mt-6'>select your <span className=''>ULB</span> </h1>\r\n                                                            <h1 className='text-left mt-2 text-gray-500 text-xs mb-2'>We will proceed this application based on your ulb</h1>\r\n                                                            <div className=' '>\r\n                                                                <select className={`${inputStyle} border bg-white`} {...formik.getFieldProps('ulb')} >\r\n                                                                    <option>select </option>\r\n                                                                    {ulbList?.map((items) => (\r\n                                                                        <option value={items?.id}>{items?.ulb_name}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='animate-wiggle'>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/7955/7955999.png' className='h-24 ' />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                                :\r\n                                                <div className='flex flex-row mt-4 space-x-2  '>\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 mt-1 text-gray-500\">\r\n                                                        <path d=\"M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z\" />\r\n                                                    </svg>\r\n\r\n                                                    <h1 className='text-md text-gray-600 font-semibold '> you have selected ulb <span className='text-lg font-bold   uppercase underline px-2 text-md d md:text-xl text-violet-500'>{reviewIdName.ulb}</span> to proceed with the application.</h1>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* renew application */}\r\n                        <div>\r\n                            {type == 'renew' &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`} disabled\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>{existingApplicationDetails?.resident_ward_name} </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} disabled className={`${inputStyle} bg-white`} >\r\n                                                                <option>{existingApplicationDetails?.permanent_ward_name} </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>{existingApplicationDetails?.entity_ward_name} </option>\r\n                                                                {/* {wardList?.map((items) => (\r\n                                                            <option value={items?.id}>{items?.ward_name}</option>\r\n                                                        ))} */}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Lodge Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('lodgeType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HostelType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lodgeType && formik.errors.lodgeType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mess Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} disabled {...formik.getFieldProps('messType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.MessType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.messType && formik.errors.messType ? formik.errors.messType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Beds<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfBeds' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfBeds}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfBeds && formik.errors.noOfBeds ? formik.errors.noOfBeds : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Rooms<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfRooms' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfRooms}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfRooms && formik.errors.noOfRooms ? formik.errors.noOfRooms : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                                disabled\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {/* new application */}\r\n                        <div>\r\n                            {storeUlbValue != undefined &&\r\n                                <div className={``}>\r\n                                    <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 mt-3'>\r\n                                        <div className='col-span-8'>\r\n                                            <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4  container  mx-auto'>\r\n                                                <div className='col-span-6  border border-dashed border-violet-800'>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}> License Year <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('licenseYear')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LicenseYear?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.licenseYear && formik.errors.licenseYear ? formik.errors.licenseYear : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Applicant Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='applicantName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.applicantName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.applicantName && formik.errors.applicantName ? formik.errors.applicantName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Father Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='fatherName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.fatherName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.fatherName && formik.errors.fatherName ? formik.errors.fatherName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Address <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='residenceAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.residenceAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceAddress && formik.errors.residenceAddress ? formik.errors.residenceAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Residence Ward No  <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('residenceWardNo')} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.residenceWardNo && formik.errors.residenceWardNo ? formik.errors.residenceWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='permanentAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.permanentAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentAddress && formik.errors.permanentAddress ? formik.errors.permanentAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Permanent Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select {...formik.getFieldProps('permanentWardNo')} className={`${inputStyle} bg-white`} >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.permanentWardNo && formik.errors.permanentWardNo ? formik.errors.permanentWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mobile No.<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='mobileNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.mobileNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.mobileNo && formik.errors.mobileNo ? formik.errors.mobileNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>E-mail<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='email' placeholder='' className={`${inputStyle} `}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.email}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Aadhar Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='aadharNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.aadharNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.aadharNo && formik.errors.aadharNo ? formik.errors.aadharNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Pan Card No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='panNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.panNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.panNo && formik.errors.panNo ? formik.errors.panNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Name<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityName' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityName}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityName && formik.errors.entityName ? formik.errors.entityName : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Address<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='entityAddress' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.entityAddress}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityAddress && formik.errors.entityAddress ? formik.errors.entityAddress : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Entity Ward No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select type=\"text\" name='entityWardNo' placeholder='' className={`${inputStyle} bg-white`}{...formik.getFieldProps('entityWardNo')}  >\r\n                                                                <option>select </option>\r\n                                                                {wardList?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.ward_name}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.entityWardNo && formik.errors.entityWardNo ? formik.errors.entityWardNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Holding No <span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='holdingNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.holdingNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 '>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Trade License No<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='tradeLicenseNo' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.tradeLicenseNo}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.tradeLicenseNo && formik.errors.tradeLicenseNo ? formik.errors.tradeLicenseNo : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8 mb-6'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Longitude </p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='longitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.longitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.longitude && formik.errors.longitude ? formik.errors.longitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-span-6 p-1 border border-dashed border-violet-800'>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Latitude</p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"text\" name='latitude' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.latitude}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.latitude && formik.errors.latitude ? formik.errors.latitude : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Organization Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('organizationType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.OrganizationType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.organizationType && formik.errors.organizationType ? formik.errors.organizationType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Land Deed Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('landDeedType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.LandDeedType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.landDeedType && formik.errors.landDeedType ? formik.errors.landDeedType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Water Supply Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('waterSupplyType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.WaterSupplyType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.waterSupplyType && formik.errors.waterSupplyType ? formik.errors.waterSupplyType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Electricity Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('electricityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.ElectricityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.electricityType && formik.errors.electricityType ? formik.errors.electricityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Security Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('securityType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.SecutityType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.securityType && formik.errors.securityType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Lodge Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('lodgeType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.HostelType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.lodgeType && formik.errors.lodgeType ? formik.errors.securityType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>Mess Type<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <select className={`${inputStyle} bg-white`} {...formik.getFieldProps('messType')} >\r\n                                                                <option>select </option>\r\n                                                                {masterData?.paramCategories?.MessType?.map((items) => (\r\n                                                                    <option value={items?.id}>{items?.string_parameter}</option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.messType && formik.errors.messType ? formik.errors.messType : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Beds<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfBeds' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfBeds}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfBeds && formik.errors.noOfBeds ? formik.errors.noOfBeds : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of Rooms<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfRooms' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfRooms}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfRooms && formik.errors.noOfRooms ? formik.errors.noOfRooms : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No of CCTV Camera<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noOfCctv' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noOfCctv}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noOfCctv && formik.errors.noOfCctv ? formik.errors.noOfCctv : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Fire Extinguishers<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFireExtinguishers' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFireExtinguishers}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFireExtinguishers && formik.errors.noFireExtinguishers ? formik.errors.noFireExtinguishers : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Entry Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noEntryGates' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noEntryGates}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noEntryGates && formik.errors.noEntryGates ? formik.errors.noEntryGates : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Exit Gates<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noExitGate' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noExitGate}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noExitGate && formik.errors.noExitGate ? formik.errors.noExitGate : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of TWo Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noTwoWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noTwoWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noTwoWheelerParking && formik.errors.noTwoWheelerParking ? formik.errors.noTwoWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='grid grid-cols-3 md:grid-cols-3 lg:grid-cols-3 ml-8'>\r\n                                                        <div className='col-span-1'>\r\n                                                            <p className={`${labelStyle}`}>No. of Four Wheelers Parking Space<span className='text-red-600'> *</span></p>\r\n                                                        </div>\r\n                                                        <div className='col-span-2 mr-2 '>\r\n                                                            <input type=\"number\" name='noFourWheelerParking' placeholder='' className={`${inputStyle}`}\r\n                                                                onChange={formik.handleChange}\r\n                                                                value={formik.values.noFourWheelerParking}\r\n                                                            />\r\n                                                            <p className='text-red-500 text-xs absolute'>{formik.touched.noFourWheelerParking && formik.errors.noFourWheelerParking ? formik.errors.noFourWheelerParking : null}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='float-right p-2'>\r\n                                                <button type=\"submit\" className=\"text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\">Save & Next</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='col-span-4 hidden md:block lg:block'>\r\n                                            <div className='-mt-20'>\r\n                                                <SelfAdvrtInformationScreen />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LodgeForm","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction LodgeDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        // alert(url)\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        docCode: props?.data?.docCode,\r\n        ownerDtlId: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"values\", values);\r\n            setimgPath(values)\r\n            props.collectAllDataFun(props.mykey, { image: imageFile, docCode: values.docCode, ownerDtlId: values.ownerDtlId });\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"url\", DocUrl)\r\n    console.log(\"path\", imgPath)\r\n    console.log(\"document full data 1...\", props?.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            {/* <div className=\"mr-2  p-2\">\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/4725/4725970.png' alt=\"doc\" className='w-6 opacity-75' />\r\n                            </div> */}\r\n                            <span className={`${labelStyle}`} >\r\n                                {props?.data?.document_name}\r\n                                {props?.data?.docType == 'R' &&\r\n                                    < span className='text-red-600'> *</span>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                <>\r\n                                    <div onClick={() => modalAction(DocUrl)}>\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                        {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                    </div>\r\n\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' accept=\".png, .jpg, .jpeg, .pdf\" name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" webkitdirectory onChange={formik.handleChange} />\r\n                                {/* onChange={(e) => setDocPath(e.target.files)}  */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                    < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                        <span className='text-xs'>upload</span>\r\n                                    </button> :\r\n                                    <>\r\n                                        <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                            <span className='text-xs'>re-upload</span>\r\n                                        </button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n            {/* <iframe className='w-full h-full' src={DocUrl} frameborder=\"0\">\r\n                <object data={DocUrl} width=\"300\" height=\"300\"></object>\r\n                <img src={DocUrl} />\r\n            </iframe> */}\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default LodgeDocTable","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport DocumentUploadSteps from '../../../Advertisement/DocumentUploadSteps';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport LodgeDocTable from './LodgeDocTable';\r\n\r\nfunction LodgeDocForm(props) {\r\n\r\n    const { setFormIndex, showLoader, collectFormDataFun, toastFun, type } = props?.values\r\n\r\n    const { api_getSelfAdvertDocList } = AdvertisementApiList()\r\n    const [collectDoc, setcollectDoc] = useState([]);\r\n    const [docList, setdocList] = useState()\r\n    const [renewDocList, setrenewDocList] = useState()\r\n\r\n    const collectAllData = (key, formData) => {\r\n        console.log(\"prev data in document\", collectDoc);\r\n        // IF PASSED INDEX ALREADY EXISTS THEN REPLACE THE INDEX WITH NEW VALUE INSTEAD OF ADDING\r\n        if (collectDoc[key] !== undefined) {\r\n            console.log('inside index match...')\r\n            collectDoc[key] = formData\r\n            return\r\n        }\r\n        setcollectDoc([...collectDoc, formData]);\r\n    };\r\n    console.log(\"all data doc\", collectDoc)\r\n\r\n    const handleDocument = () => {\r\n        collectFormDataFun('lodgeDoc', collectDoc)\r\n        setFormIndex(3)\r\n    }\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getSelfAdvertDocList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('self advertisement document list', response.data)\r\n                if (type == 'renew') {\r\n                    setrenewDocList(response.data)\r\n                }\r\n                else {\r\n                    setdocList(response.data)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"document list\", docList)\r\n\r\n    return (\r\n        <>\r\n            {/* upload document */}\r\n            <div className='absolute w-full top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container  mx-auto pb-8 p-2 '>\r\n                    <div className='col-span-8 p-1 border border-dashed border-violet-800'>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-4 lg:grid-cols-4 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.LODGE?.map((items, index) => (\r\n                                    <LodgeDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                                {renewDocList?.LODGE?.map((items, index) => (\r\n                                    <LodgeDocTable data={items} collectAllDataFun={collectAllData} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-12 w-full p-3\">\r\n                            <div className='md:pl-0 col-span-6'>\r\n                                <button type=\"button\" class=\"py-2 px-4 text-xs inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => setFormIndex(1)}>back</button>\r\n                            </div>\r\n                            <div className='col-span-6'>\r\n                                <button type=\"button\" className=\"float-right text-xs py-2 px-4 inline-block text-center mb-3 rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white hover:bg-green-600 hover:ring-0 hover:border-green-600 focus:bg-green-600 focus:border-green-600 focus:outline-none focus:ring-0\" onClick={handleDocument}>Save & Next</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-3\">\r\n                            <span className=\"bg-red-100 px-4 py-1.5 rounded-sm shadow-sm text-xs\">👉Document Type accepted JPEG, PNG, JPG, PDF 👈</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4'>\r\n                        <div className='-mt-20'>\r\n                            <DocumentUploadSteps />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LodgeDocForm","import React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\n\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport Loader from '../../../Advertisement/Loader';\r\nimport BackButton from '../../../Advertisement/BackButton';\r\nimport AdvrtSuccessScreen from '../../../Advertisement/AdvrtSuccessScreen';\r\nimport ReviewLodge from './ReviewLodge';\r\nimport LodgeForm from './LodgeForm';\r\nimport LodgeDocForm from './LodgeDocForm';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction LodgeIndex() {\r\n    const [formIndex, setFormIndex] = useState(1) //formindex specifies type of form  at index 1 ...\r\n    const [allFormData, setAllFormData] = useState([])\r\n    const [responseScreen, setresponseScreen] = useState()\r\n    const [reviewData, setreviewData] = useState({})\r\n    const [show, setshow] = useState(false)\r\n    const [existingApplicationDetails, setexistingApplicationDetails] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const { id, type } = useParams();\r\n    console.log(\"self advertisement param\", id)\r\n    console.log(\"self advertisement param\", type)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const { api_postLodgeApplication, api_renewLodge_license, api_getLodgeApplicationDetailsToRenew } = AdvertisementApiList()\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    ///////////{*** COLLECTING ALL FORM DATA***}/////////\r\n    const collectAllFormData = (key, formData, reviewIdName) => {\r\n        console.log('prev of all Data', allFormData)\r\n        console.log(\"review name by id in index...\", reviewIdName)\r\n        setAllFormData({ ...allFormData, [key]: formData })\r\n\r\n        if (key == 'lodgeForm') {\r\n            console.log(\"data collecting by key\", key, 'formData', formData, 'reviewData', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: reviewIdName })\r\n        }\r\n        else {\r\n            console.log('data not in review ===', key, '===', formData, 'preview...', reviewIdName)\r\n            setreviewData({ ...reviewData, [key]: formData })\r\n        }\r\n    }\r\n    console.log(\"all form data in index\", allFormData)\r\n    console.log(\"all form data in index for doc\", allFormData?.selfAdvertisementDoc?.[0])\r\n\r\n\r\n    ///// SUBMIT FORM /////\r\n    const submitButtonToggle = () => {\r\n        console.log('final form ready to submit...', allFormData)\r\n        submitLodgeForm()\r\n    }\r\n\r\n    const submitLodgeForm = () => {\r\n\r\n        setisLoading(true)\r\n\r\n        let url\r\n        let requestBody\r\n        if (type == 'newapply') {\r\n            url = api_postLodgeApplication  //new apply\r\n            requestBody = {\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.lodgeForm?.rule,\r\n                applicantName: allFormData?.lodgeForm?.applicantName,\r\n                fatherName: allFormData?.lodgeForm?.fatherName,\r\n                mobile: allFormData?.lodgeForm?.mobileNo,\r\n                email: allFormData?.lodgeForm?.email,\r\n                residentialAddress: allFormData?.lodgeForm?.residenceAddress,\r\n                residentialWardId: allFormData?.lodgeForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.lodgeForm?.permanentAddress,\r\n                permanentWardId: allFormData?.lodgeForm?.permanentWardNo,\r\n                licenseYear: allFormData?.lodgeForm?.licenseYear,\r\n                entityName: allFormData?.lodgeForm?.entityName,\r\n                entityAddress: allFormData?.lodgeForm?.entityAddress,\r\n                entityWardId: allFormData?.lodgeForm?.entityWardNo,\r\n                holdingNo: allFormData?.lodgeForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.lodgeForm?.tradeLicenseNo,\r\n                longitude: allFormData?.lodgeForm?.longitude,\r\n                latitude: allFormData?.lodgeForm?.latitude,\r\n                organizationType: allFormData?.lodgeForm?.organizationType,\r\n                landDeedType: allFormData?.lodgeForm?.landDeedType,\r\n                waterSupplyType: allFormData?.lodgeForm?.waterSupplyType,\r\n                electricityType: allFormData?.lodgeForm?.electricityType,\r\n                securityType: allFormData?.lodgeForm?.securityType,\r\n                lodgeType: allFormData?.lodgeForm?.lodgeType,\r\n                messType: allFormData?.lodgeForm?.messType,\r\n                cctvCamera: allFormData?.lodgeForm?.noOfCctv,\r\n                noOfBeds: allFormData?.lodgeForm?.noOfBeds,\r\n                noOfRooms: allFormData?.lodgeForm?.noOfRooms,\r\n                fireExtinguisher: allFormData?.lodgeForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.lodgeForm?.noEntryGates,\r\n                exitGate: allFormData?.lodgeForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.lodgeForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.lodgeForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.lodgeForm?.aadharNo,\r\n                panCard: allFormData?.lodgeForm?.panNo,\r\n\r\n                documents: allFormData?.lodgeDoc\r\n            }\r\n        }\r\n        if (type == 'renew') {\r\n            url = api_renewLodge_license;//\"renew url\";\r\n            requestBody = {\r\n                applicationId: id,\r\n                // ulbId: allFormData?.selfAdvertisement?.ulb,\r\n                ulbId: 2,\r\n                rule: allFormData?.lodgeForm?.rule,\r\n                applicantName: allFormData?.lodgeForm?.applicantName,\r\n                fatherName: allFormData?.lodgeForm?.fatherName,\r\n                mobile: allFormData?.lodgeForm?.mobileNo,\r\n                email: allFormData?.lodgeForm?.email,\r\n                residentialAddress: allFormData?.lodgeForm?.residenceAddress,\r\n                residentialWardId: allFormData?.lodgeForm?.residenceWardNo,\r\n                permanentAddress: allFormData?.lodgeForm?.permanentAddress,\r\n                permanentWardId: allFormData?.lodgeForm?.permanentWardNo,\r\n                licenseYear: allFormData?.lodgeForm?.licenseYear,\r\n                entityName: allFormData?.lodgeForm?.entityName,\r\n                entityAddress: allFormData?.lodgeForm?.entityAddress,\r\n                entityWardId: allFormData?.lodgeForm?.entityWardNo,\r\n                holdingNo: allFormData?.lodgeForm?.holdingNo,\r\n                tradeLicenseNo: allFormData?.lodgeForm?.tradeLicenseNo,\r\n                longitude: allFormData?.lodgeForm?.longitude,\r\n                latitude: allFormData?.lodgeForm?.latitude,\r\n                organizationType: allFormData?.lodgeForm?.organizationType,\r\n                landDeedType: allFormData?.lodgeForm?.landDeedType,\r\n                waterSupplyType: allFormData?.lodgeForm?.waterSupplyType,\r\n                electricityType: allFormData?.lodgeForm?.electricityType,\r\n                securityType: allFormData?.lodgeForm?.securityType,\r\n                lodgeType: allFormData?.lodgeForm?.lodgeType,\r\n                messType: allFormData?.lodgeForm?.messType,\r\n                cctvCamera: allFormData?.lodgeForm?.noOfCctv,\r\n                noOfBeds: allFormData?.lodgeForm?.noOfBeds,\r\n                noOfRooms: allFormData?.lodgeForm?.noOfRooms,\r\n                fireExtinguisher: allFormData?.lodgeForm?.noFireExtinguishers,\r\n                entryGate: allFormData?.lodgeForm?.noEntryGates,\r\n                exitGate: allFormData?.lodgeForm?.noExitGate,\r\n                twoWheelersParking: allFormData?.lodgeForm?.noTwoWheelerParking,\r\n                fourWheelersParking: allFormData?.lodgeForm?.noFourWheelerParking,\r\n                aadharCard: allFormData?.lodgeForm?.aadharNo,\r\n                panCard: allFormData?.lodgeForm?.panNo,\r\n\r\n                documents: allFormData?.lodgeDoc\r\n            }\r\n        }\r\n        console.log('request body...', requestBody)\r\n        axios.post(`${url}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('response after data submitted', response.data.data)\r\n                setresponseScreen(response.data.data)\r\n                setisLoading(false)\r\n                notify(\"submitted successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n                notify(error.response.data.message`${\"failed to submit\"}`, \"error\")\r\n\r\n            })\r\n    }\r\n\r\n    // passing values in components\r\n    const values = {\r\n        setFormIndex: setFormIndex,\r\n        showLoader: showLoader,\r\n        collectFormDataFun: collectAllFormData,\r\n        toastFun: notify,\r\n        type: type,\r\n        existingApplicationDetails: existingApplicationDetails,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setapplicationType(type)\r\n        if (type == 'renew') {\r\n            fetchApplicationDetails()\r\n        }\r\n    }, [])\r\n    const fetchApplicationDetails = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        let requestBody = {\r\n            applicationId: id,\r\n        }\r\n\r\n        console.log('renew application id', requestBody)\r\n        axios.post(`${api_getLodgeApplicationDetailsToRenew}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('dharamshala application detail for renew application.....', response)\r\n                setexistingApplicationDetails(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('==2 details by id error...', error)\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    console.log(\"response screen\", responseScreen)\r\n    if (responseScreen?.status == true) {\r\n        return (\r\n            <>\r\n                <AdvrtSuccessScreen responseScreenData={responseScreen} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='overflow-x-clip p-4 mt-3 container mx-auto h-screen'>\r\n                <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 bg-white p-2 rounded-md shadow-md shadow-violet-200  '>\r\n                    <div className=''>\r\n                        <div className='flex flex-row '>\r\n                            <h1 className='text-2xl ml-4 text-gray-600 font-sans font-semibold'>LODGE HALL REGISTRATION APPLICATION</h1>\r\n                        </div>\r\n                        <h1 className='text-xs ml-3 p-1 text-gray-600 font-sans'>\r\n                            You Can Get License To Advertise Your Business Name On Your Shop\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <div className='flex flex-row mt-2 float-right'>\r\n                            <span className='text-md font-bold md:text-xl text-violet-600 text-center  transition-all animate-wiggle'>&emsp; <strong className='text-2xl text-violet-600 '>{3 - formIndex}\r\n                            </strong> more screen</span>\r\n                            <img src='https://cdn-icons-png.flaticon.com/512/2376/2376320.png' className='h-10 mr-4  opacity-80 float-right ml-4' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${formIndex == 1 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><LodgeForm values={values} /></div>\r\n                <div className={`${formIndex == 2 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><LodgeDocForm values={values} /></div>\r\n                <div className={`${formIndex == 3 ? 'translate-x-0' : 'translate-x-full'} transition-all`}><ReviewLodge values={values} reviewIdNameData={reviewData} allFormData={allFormData} submitFun={submitButtonToggle} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LodgeIndex","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\n\r\n\r\nfunction BanquetMarriageApplicationFullDetails(props) {\r\n\r\n    const { api_getBanquetAppliedApplicationDetail, api_getBanquetAppliedDocumentList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n    console.log(\"application data in list application\", props.data)\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [documentList, setdocumentList] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const applicationId = props.data\r\n    const applicationType = props.applicationType\r\n\r\n\r\n    console.log(\"application id..1\", applicationId)\r\n    console.log(\"application type\", applicationType)\r\n\r\n\r\n    const handleClose = () => {\r\n        props.closeModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        console.log(\"application no through props..\", props?.data)\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        console.log(\"request body for application full detail\", requestBody)\r\n        axios.post(`${api_getBanquetAppliedApplicationDetail}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application view details 1', response)\r\n                setapplicationDetail(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"details of application...1\", applicationDetail?.fullDetailsData\r\n    )\r\n\r\n    ///////////{*** GET UPLOADED DOCUMENT***}/////////\r\n    useEffect(() => {\r\n        getAppliedDocumentList()\r\n    }, [])\r\n    const getAppliedDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        axios.post(`${api_getBanquetAppliedDocumentList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('document list 22', response.data.data)\r\n                setdocumentList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"document list...2\", documentList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-violet-400 shadow-lg rounded leading-5'>\r\n                <div className=' shadow-md shadow-violet-200 p-2 '>\r\n                    <h1 className='text-2xl px-4 font-semibold text-gray-700 '>Application Details</h1>\r\n                    <h1 className='text-xs px-4 text-gray-500'>Review your application</h1>\r\n                    <button className='float-right -mt-9 mr-4' onClick={handleClose}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 bg-red-400 text-white  shadow-lg  rounded-full\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                <div className='ml-96'>\r\n                    {/* <Loader show={ props.showLoader(false)} /> */}\r\n                </div>\r\n                {props.showLoader}\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 p-4 gap-4'>\r\n                    <div className='col-span-7 '>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 p-4 bg-violet-100 rounded leading-5'>\r\n                            <div className='flex '>\r\n                                <h1 className='font-normal text-md '>Application No.</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.application_no}</h1>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <h1 className='font-normal text-md '>Apply Date</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.apply_date}</h1>\r\n                            </div>\r\n                        </div>\r\n                        {applicationDetail?.fullDetailsData?.dataArray?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 container mx-auto bg-white rounded leading-5 p-2 mt-4'>\r\n                                {data?.data?.map((data) => (\r\n                                    <div className='bg-violet-100 border border-white p-2'>\r\n                                        <h1 className='font-bold text-lg text-gray-900 '>{data?.value || 'N/A'} </h1>\r\n                                        <h1 className=' font-normal text-sm text-gray-600 '>{data?.displayString}</h1>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                    <div className='col-span-5 bg-white rounded leading-5'>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-violet-100 p-4 rounded leading-5 container'>\r\n                            <div className='   '>\r\n                                <h1 className='font-semibold text-gray-800 text-lg text-center '>Documents Uploaded</h1>\r\n                            </div>\r\n                        </div>\r\n                        {documentList?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-4 bg-white  rounded leading-5'>\r\n                                <div className='flex  bg-violet-100'>\r\n                                    <h1 className='flex-1 font-semibold text-sm text-gray-600 p-6 uppercase'>{data?.doc_val}</h1>\r\n                                    <h1 className='flex-1 '>\r\n                                        <embed className='w-16 h-16 float-right' src={`${BackendUrlAdvt}/${data?.doc_path}`} />\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriageApplicationFullDetails","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { nullToNA } from \"../../../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport RazorpayPaymentScreen from \"../../../../../Components/RazorpayPaymentScreen\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction BanquetMarriagePaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const { api_getBanquetOrderIdForPayment } = AdvertisementApiList()\r\n    const [orderId, setorderId] = useState()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    console.log(\"payment card details\", props?.applicationDetails)\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    ///////////{*** PAYMENT METHOD ***}/////////\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data?.status == true) {\r\n            navigate(`/paymentScreen/${data.data.razorpay_payment_id}/${props?.applicationDetails?.workflow_id}`)\r\n            notify(\"Payment Successfull\", \"success\")\r\n        } else {\r\n            toast.error('Payment failed....')\r\n            notify(\"Payment Failed\", \"error\")\r\n            navigate('/advertDashboard')\r\n        }\r\n    }\r\n\r\n    const payNow = (e) => {\r\n        props.showLoader(true)\r\n        console.log(\"payment id on click pay\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            id: applicationId\r\n        }\r\n        axios.post(`${api_getBanquetOrderIdForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('generate order id', response.data)\r\n                if (response.data.status == true) {\r\n                    console.log(\"OrderId Generated True\", response.data)\r\n                    RazorpayPaymentScreen(response.data.data, dreturn)  //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup     \r\n                }\r\n                else {\r\n\r\n                }\r\n                setorderId(response)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Backend Server error. Unable to Generate Order Id\");\r\n                // console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-violet-200 text-slate-50 drop-shadow-2xl border border-violet-500 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className='shadow-md shadow-violet-300 py-1 pl-3 bg-white border-gray-400 text-gray-600 flex'>Make Payment For<span className=\"font-bold text-md ml-4 uppercase \">{nullToNA(props?.applicationDetails?.type)} </span></div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Application No. -</p>\r\n                                            <p>Applied date -</p>\r\n\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{nullToNA(props?.applicationDetails?.application_no)} </p>\r\n                                            <p>{nullToNA(props?.applicationDetails?.application_date)}</p>\r\n                                            {/* <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Applicant Name -</p>\r\n                                            <p>Entity Name -</p>\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{nullToNA(props?.applicationDetails?.applicant)}  </p>\r\n                                            <p>{nullToNA(props?.applicationDetails?.entity_name)} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg \">Payable Amount</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg bg-violet-300 px-2 \">{nullToNA(props?.applicationDetails?.payment_amount)}</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Cancel</button>\r\n                                            <button onClick={payNow} id={props?.applicationDetails?.id} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <img src='https://cdn-icons-png.flaticon.com/256/7057/7057515.png' className=\"h-16\" />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className=\"\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default BanquetMarriagePaymentModal;\r\n","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ReuploadBanquetDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const { api_postBanquetReuploadedDocument } = AdvertisementApiList()\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        id: props?.data?.id,\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n\r\n            axios.post(`${api_postBanquetReuploadedDocument}`, values, ApiHeaderAdvrt())\r\n                .then(function (response) {\r\n                    console.log('re-uploaded document', response.data.data)\r\n                    notify(\"uploaded successfully\", \"success\")\r\n                    // setdocList(response.data.data)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('errorrr.... ', error);\r\n                    notify(\"failed to upload\", \"error\")\r\n                })\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"reupload doc \", props.data)\r\n    return (\r\n\r\n        <div>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`}> {props?.data?.doc_val} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            <div onClick={() => modalAction(DocUrl)}>\r\n                                <img src={`${BackendUrlAdvt}/${props?.data?.doc_path}`} alt=\"Preview Image\" className={`${labelStyle} w-8`} />\r\n                            </div>\r\n                            {props?.data?.verify_status == 2 &&\r\n                                <div>\r\n                                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                        <>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                                ?\r\n                                                <div onClick={() => modalAction(DocUrl)}>\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                </div>\r\n\r\n                                                :\r\n                                                <>\r\n                                                    <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                        <div>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0 mt-2\">\r\n                                {props?.data?.verify_status == 0 && <h1 className='bg-amber-200 text-center  w-28 text-xs rounded-full text-amber-800 shadow-md'>Pending</h1>}\r\n                                {props?.data?.verify_status == 1 && <h1 className='bg-green-200 text-center w-28 text-xs rounded-full text-green-800 shadow-md'>Verified</h1>}\r\n                                {props?.data?.verify_status == 2 && <h1 className='bg-red-200 text-center w-28 text-xs rounded-full text-red-800 shadow-md '>Rejected</h1>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm mt-2\">\r\n                            {props?.data?.verify_status == 2 ?\r\n                                <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                    {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0'>\r\n                                            <span className='text-xs'>upload</span>\r\n                                        </button> :\r\n                                        <>\r\n                                            <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                            < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                                <span className='text-xs'>re-upload</span>\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                :\r\n                                < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white focus:outline-none focus:ring-0' disabled>\r\n                                    <span className='text-xs'>uploaded</span>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ReuploadBanquetDocTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ReuploadBanquetDocTable from './ReuploadBanquetDocTable'\r\n\r\n\r\n\r\n\r\nfunction ReuploadBanquetDocModal(props) {\r\n\r\n    const { api_getBanquetReuploadDoc } = AdvertisementApiList()\r\n    const [docList, setdocList] = useState()\r\n\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: props?.data,\r\n            // workflowId: props?.workflowId,\r\n        }\r\n        axios.post(`${api_getBanquetReuploadDoc}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('re-uploaded document list', response.data.data)\r\n                setdocList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"application id\", props.data)\r\n    console.log(\"workflow id 1\", props.workflowId)\r\n    return (\r\n        <>\r\n            <div className=' top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8 p-2 mt-12'>\r\n                    <div className='col-span-12'><h1 className='text-xl'>Upload Rejected Document</h1></div>\r\n                    <div className='col-span-12 border border-dashed border-violet-800 '>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Status</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.map((items, index) => (\r\n                                    <ReuploadBanquetDocTable data={items} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReuploadBanquetDocModal","import Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import AdvertPaymentModal from '../AdvertPaymentModal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport ViewAppliedApplication from '../../../Advertisement/ViewAppliedApplication';\r\nimport BanquetMarriageApplicationFullDetails from './BanquetMarriageApplicationFullDetails';\r\nimport BanquetMarriagePaymentModal from './BanquetMarriagePaymentModal';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport ReuploadBanquetDocModal from './ReuploadBanquetDocModal';\r\n\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n        overflowY: \"scroll\"\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction BanquetMarriagePendingApplicationList(props) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const { api_getBanquetAppliedApplicationList, api_getBanquetApprovedApplicationList, api_getBanquetRejectedApplicationList, api_getBanquetApplicationDetailForPayment } = AdvertisementApiList()\r\n\r\n    const [applyList, setapplyList] = useState('hidden')\r\n    const [appliedApplication, setappliedApplication] = useState()\r\n    const [approvedApplication, setapprovedApplication] = useState()\r\n    const [rejectedApplication, setrejectedApplication] = useState()\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const [applicationIdDetail, setapplicationIdDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen1, setIsOpen1] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const openModal1 = () => setIsOpen1(true)\r\n    const closeModal1 = () => setIsOpen1(false)\r\n    const afterOpenModal1 = () => { }\r\n\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    console.log(\"application no. for modal\", applicationNo)\r\n\r\n\r\n    const docUploadModal = (applicationId) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        setapplicationNo(applicationId)\r\n        openModal1()\r\n    }\r\n\r\n\r\n    const showApplyList = () => {\r\n        applyList == 'hidden' ? setapplyList('') : setapplyList('hidden')\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getBanquetAppliedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in Banquet/Marriage Hall', response.data.data)\r\n                setappliedApplication(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    ///////////{*** APPROVED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApprovedApplicationList()\r\n    }, [])\r\n    const getApprovedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getBanquetApprovedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('banquet approved 12', response.data.data)\r\n                setapprovedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    console.log(\"approved application list...\", approvedApplication)\r\n\r\n    ///////////{*** REJECTED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getRejectedApplicationList()\r\n    }, [])\r\n    const getRejectedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getBanquetRejectedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('rejected application in Banquet/Marriage Hall', response.data.data)\r\n                setrejectedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    const handlePayment = (e) => {\r\n        console.log(\"application id\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            applicationId: applicationId\r\n        }\r\n        axios.post(`${api_getBanquetApplicationDetailForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application detail for payment 1', response.data.data)\r\n                setapplicationIdDetail(response.data.data)\r\n                setOpenPaymentModal(prev => prev + 1)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application details for payment 2\", applicationIdDetail)\r\n    console.log(\"rejected application list...\", rejectedApplication)\r\n    console.log(\"approved application list...\", approvedApplication)\r\n    console.log(\"application  list...1\", appliedApplication?.data)\r\n    console.log(\"application  no.\", applicationNo)\r\n\r\n    return (\r\n        <>\r\n            {/***** section 3 ******/}\r\n            <div className=''>\r\n                <BanquetMarriagePaymentModal openPaymentModal={openPaymentModal} applicationDetails={applicationIdDetail} showLoader={props.showLoader} />\r\n            </div>\r\n\r\n            <div className=''>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 bg-white mb-4 shadow-md p-4  '>\r\n                    <div className='col-span-12'>\r\n                        {tabIndex == 1 && <h1 className='flex-1 '>Banquet / Marriage<span className='text-indigo-500 underline'>Pending Application</span> </h1>}\r\n                        {tabIndex == 2 && <h1 className='flex-1 '>Banquet / Marriage<span className='text-indigo-500 underline'>Approved Application</span></h1>}\r\n                        {tabIndex == 3 && <h1 className='flex-1 '>Banquet / Marriage<span className='text-indigo-500 underline'>Rejected Application</span></h1>}\r\n                    </div>\r\n                    <div className='col-span-12 text-left'>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(1)}>Pending Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(2)}>Approved Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(3)}>Rejected Application</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* pending application list for Banquet/Marriage Hall */}\r\n                {tabIndex == 1 &&\r\n                    <div>\r\n                        {appliedApplication == undefined && appliedApplication == null && appliedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Pending Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {appliedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Banquet/Marriage Hall</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3  p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='justify-end'>\r\n                                                {items?.doc_upload_status == 0 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => docUploadModal(items?.id)}>upload Document</button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {/* approved application list for Banquet/Marriage Hall */}\r\n                {tabIndex == 2 &&\r\n                    <div>\r\n                        {approvedApplication == undefined && approvedApplication == null && approvedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Approved Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {approvedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Banquet/Marriage Hall</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                            <h1 className='text-xs'>License No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.license_no)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1  p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                {items?.renew_option == 1 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={() => navigate(`/marriage-hall/${items?.id}/renew`)}>\r\n                                                        Renew License\r\n                                                    </button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>\r\n                                                    View\r\n                                                </button>\r\n                                                {items.payment_status == 1 ?\r\n                                                    <h1 className='text-xs font-BreeSerif text-green-500'><span><button className='float-right  shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white' onClick={() => navigate('/approvalLetter')}>Download Approval Letter</button></span></h1>\r\n                                                    :\r\n                                                    <button type=\"button\" id={items?.id} value={items?.payment_amount} class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-green-500 px-2 py-1 text-white\" onClick={handlePayment}>Pay</button>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n\r\n                {/* rejected  application list for Banquet/Marriage Hall */}\r\n                {tabIndex == 3 &&\r\n                    <div>\r\n                        {rejectedApplication == undefined && rejectedApplication == null && rejectedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Rejected Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {rejectedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Banquet/Marriage Hall</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                <button type=\"button\" id={items?.temp_id\r\n                                                } value='Reject' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto '>\r\n                        <BanquetMarriageApplicationFullDetails data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            {/*if document is BTC then reupload document */}\r\n            <Modal\r\n                isOpen={modalIsOpen1}\r\n                onAfterOpen={afterOpenModal1}\r\n                onRequestClose={closeModal1}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '50vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-violet-50 overflow-y-auto '>\r\n                        <ReuploadBanquetDocModal data={applicationNo} closeModal={closeModal1} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BanquetMarriagePendingApplicationList","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\n\r\n\r\nfunction HostelApplicationFullDetails(props) {\r\n\r\n    const { api_getHostelAppliedApplicationDetail, api_getHostelAppliedDocumentList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n    console.log(\"application data in list application\", props.data)\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [documentList, setdocumentList] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const applicationId = props.data\r\n    const applicationType = props.applicationType\r\n\r\n\r\n    console.log(\"application id..1\", applicationId)\r\n    console.log(\"application type\", applicationType)\r\n\r\n\r\n    const handleClose = () => {\r\n        props.closeModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        console.log(\"application no through props..\", props?.data)\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        console.log(\"request body for application full detail\", requestBody)\r\n        axios.post(`${api_getHostelAppliedApplicationDetail}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application view details 1', response)\r\n                setapplicationDetail(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"details of application...1\", applicationDetail?.fullDetailsData\r\n    )\r\n\r\n    ///////////{*** GET UPLOADED DOCUMENT***}/////////\r\n    useEffect(() => {\r\n        getAppliedDocumentList()\r\n    }, [])\r\n    const getAppliedDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        axios.post(`${api_getHostelAppliedDocumentList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('document list 22', response.data.data)\r\n                setdocumentList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n\r\n    console.log(\"document list...2\", documentList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-violet-400 shadow-lg rounded leading-5'>\r\n                <div className=' shadow-md shadow-violet-200 p-2 '>\r\n                    <h1 className='text-2xl px-4 font-semibold text-gray-700 '>Application Details</h1>\r\n                    <h1 className='text-xs px-4 text-gray-500'>Review your application</h1>\r\n                    <button className='float-right -mt-9 mr-4' onClick={handleClose}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 bg-red-400 text-white  shadow-lg  rounded-full\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                <div className='ml-96'>\r\n                    {/* <Loader show={ props.showLoader(false)} /> */}\r\n                </div>\r\n                {props.showLoader}\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 p-4 gap-4'>\r\n                    <div className='col-span-7 '>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 p-4 bg-violet-100 rounded leading-5'>\r\n                            <div className='flex '>\r\n                                <h1 className='font-normal text-md '>Application No.</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.application_no}</h1>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <h1 className='font-normal text-md '>Apply Date</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.apply_date}</h1>\r\n                            </div>\r\n                        </div>\r\n                        {applicationDetail?.fullDetailsData?.dataArray?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 container mx-auto bg-white rounded leading-5 p-2 mt-4'>\r\n                                {data?.data?.map((data) => (\r\n                                    <div className='bg-violet-100 border border-white p-2'>\r\n                                        <h1 className='font-bold text-lg text-gray-900 '>{data?.value || 'N/A'} </h1>\r\n                                        <h1 className=' font-normal text-sm text-gray-600 '>{data?.displayString}</h1>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                    <div className='col-span-5 bg-white rounded leading-5'>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-violet-100 p-4 rounded leading-5 container'>\r\n                            <div className='   '>\r\n                                <h1 className='font-semibold text-gray-800 text-lg text-center '>Documents Uploaded</h1>\r\n                            </div>\r\n                        </div>\r\n                        {documentList?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-4 bg-white  rounded leading-5'>\r\n                                <div className='flex  bg-violet-100'>\r\n                                    <h1 className='flex-1 font-semibold text-sm text-gray-600 p-6 uppercase'>{data?.doc_val}</h1>\r\n                                    <h1 className='flex-1 '>\r\n                                        <embed className='w-16 h-16 float-right' src={`${BackendUrlAdvt}/${data?.doc_path}`} />\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostelApplicationFullDetails","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport RazorpayPaymentScreen from \"../../../../../Components/RazorpayPaymentScreen\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction HostelPaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const { api_getHostelOrderIdForPayment } = AdvertisementApiList()\r\n    const [orderId, setorderId] = useState()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    console.log(\"payment card details\", props?.applicationDetails?.id)\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    ///////////{*** PAYMENT METHOD ***}/////////\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data?.status == true) {\r\n            navigate(`/paymentScreen/${data.data.razorpay_payment_id}/${props?.applicationDetails?.workflow_id}`)\r\n            notify(\"Payment Successfull\", \"success\")\r\n        } else {\r\n            toast.error('Payment failed....')\r\n            notify(\"Payment Failed\", \"error\")\r\n            navigate('/advertDashboard')\r\n        }\r\n    }\r\n\r\n    const payNow = (e) => {\r\n        props.showLoader(true)\r\n        console.log(\"payment id on click pay\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            id: applicationId\r\n        }\r\n        axios.post(`${api_getHostelOrderIdForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('generate order id', response.data)\r\n                if (response.data.status == true) {\r\n                    console.log(\"OrderId Generated True\", response.data)\r\n                    RazorpayPaymentScreen(response.data.data, dreturn)  //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup     \r\n                }\r\n                else {\r\n\r\n                }\r\n                setorderId(response)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Backend Server error. Unable to Generate Order Id\");\r\n                // console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-violet-200 text-slate-50 drop-shadow-2xl border border-violet-500 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className='shadow-md shadow-violet-300 py-1 pl-3 bg-white border-gray-400 text-gray-600 flex'>Make Payment For<span className=\"font-bold text-md ml-4 uppercase \">{props?.applicationDetails?.type} </span></div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Application No. -</p>\r\n                                            <p>Applied date -</p>\r\n\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.application_no} </p>\r\n                                            <p>{props?.applicationDetails?.application_date}</p>\r\n                                            {/* <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Applicant Name -</p>\r\n                                            <p>Entity Name -</p>\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.applicant}  </p>\r\n                                            <p>{props?.applicationDetails?.entity_name} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg \">Payable Amount</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg bg-violet-300 px-2 \">{props?.applicationDetails?.payment_amount}</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Cancel</button>\r\n                                            <button onClick={payNow} id={props?.applicationDetails?.id} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <img src='https://cdn-icons-png.flaticon.com/256/7057/7057515.png' className=\"h-16\" />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className=\"\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default HostelPaymentModal;\r\n","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ReuploadHostelDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const { api_postHostelReuploadedDocument } = AdvertisementApiList()\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        id: props?.data?.id,\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n\r\n            axios.post(`${api_postHostelReuploadedDocument}`, values, ApiHeaderAdvrt())\r\n                .then(function (response) {\r\n                    console.log('re-uploaded document', response.data.data)\r\n                    // setdocList(response.data.data)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('errorrr.... ', error);\r\n                })\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"reupload doc \", props.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`}> {props?.data?.doc_val} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            <div onClick={() => modalAction(DocUrl)}>\r\n                                <img src={`${BackendUrlAdvt}/${props?.data?.doc_path}`} alt=\"Preview Image\" className={`${labelStyle} w-8`} />\r\n                            </div>\r\n                            {props?.data?.verify_status == 2 &&\r\n                                <div>\r\n                                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                        <>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                                ?\r\n                                                <div onClick={() => modalAction(DocUrl)}>\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                </div>\r\n\r\n                                                :\r\n                                                <>\r\n                                                    <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                        <div>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0 mt-2\">\r\n                                {props?.data?.verify_status == 0 && <h1 className='bg-amber-200 text-center  w-28 text-xs rounded-full text-amber-800 shadow-md'>Pending</h1>}\r\n                                {props?.data?.verify_status == 1 && <h1 className='bg-green-200 text-center w-28 text-xs rounded-full text-green-800 shadow-md'>Verified</h1>}\r\n                                {props?.data?.verify_status == 2 && <h1 className='bg-red-200 text-center w-28 text-xs rounded-full text-red-800 shadow-md '>Rejected</h1>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm mt-2\">\r\n                            {props?.data?.verify_status == 2 ?\r\n                                <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                    {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0'>\r\n                                            <span className='text-xs'>upload</span>\r\n                                        </button> :\r\n                                        <>\r\n                                            <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                            < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                                <span className='text-xs'>re-upload</span>\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                :\r\n                                < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white focus:outline-none focus:ring-0' disabled>\r\n                                    <span className='text-xs'>uploaded</span>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ReuploadHostelDocTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ReuploadHostelDocTable from './ReuploadHostelDocTable'\r\n\r\nfunction ReuploadHostelDocModal(props) {\r\n\r\n    const { api_getHostelReuploadDoc } = AdvertisementApiList()\r\n    const [docList, setdocList] = useState()\r\n\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: props?.data,\r\n            // workflowId: props?.workflowId,\r\n        }\r\n        axios.post(`${api_getHostelReuploadDoc}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('re-uploaded document list', response.data.data)\r\n                setdocList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"application id\", props.data)\r\n    console.log(\"workflow id 1\", props.workflowId)\r\n    return (\r\n        <>\r\n            <div className=' top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8 p-2 mt-12'>\r\n                    <div className='col-span-12'><h1 className='text-xl'>Upload Rejected Document</h1></div>\r\n                    <div className='col-span-12 border border-dashed border-violet-800 '>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Status</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.map((items, index) => (\r\n                                    <ReuploadHostelDocTable data={items} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReuploadHostelDocModal","import Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import AdvertPaymentModal from '../AdvertPaymentModal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport ViewAppliedApplication from '../../../Advertisement/ViewAppliedApplication';\r\nimport HostelApplicationFullDetails from './HostelApplicationFullDetails';\r\nimport HostelPaymentModal from './HostelPaymentModal';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport ReuploadHostelDocModal from './ReuploadHostelDocModal';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n        overflowY: \"scroll\"\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HostelPendingApplicationList(props) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const { api_getHostelAppliedApplicationList, api_getHostelApprovedApplicationList, api_getHostelRejectedApplicationList, api_getHostelApplicationDetailForPayment } = AdvertisementApiList()\r\n\r\n    const [applyList, setapplyList] = useState('hidden')\r\n    const [appliedApplication, setappliedApplication] = useState()\r\n    const [approvedApplication, setapprovedApplication] = useState()\r\n    const [rejectedApplication, setrejectedApplication] = useState()\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const [applicationIdDetail, setapplicationIdDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen1, setIsOpen1] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const openModal1 = () => setIsOpen1(true)\r\n    const closeModal1 = () => setIsOpen1(false)\r\n    const afterOpenModal1 = () => { }\r\n\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    console.log(\"application no. for modal\", applicationNo)\r\n\r\n    const docUploadModal = (applicationId) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        setapplicationNo(applicationId)\r\n        openModal1()\r\n    }\r\n\r\n\r\n    const showApplyList = () => {\r\n        applyList == 'hidden' ? setapplyList('') : setapplyList('hidden')\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHostelAppliedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in Hostel', response.data.data)\r\n                setappliedApplication(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n\r\n            })\r\n    }\r\n\r\n    ///////////{*** APPROVED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApprovedApplicationList()\r\n    }, [])\r\n    const getApprovedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHostelApprovedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in self advertisement', response.data.data)\r\n                setapprovedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n\r\n            })\r\n    }\r\n\r\n    console.log(\"approved application list...\", approvedApplication)\r\n\r\n    ///////////{*** REJECTED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getRejectedApplicationList()\r\n    }, [])\r\n    const getRejectedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getHostelRejectedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('rejected application in self advertisement', response.data.data)\r\n                setrejectedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n\r\n            })\r\n    }\r\n\r\n    const handlePayment = (e) => {\r\n        console.log(\"application id\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            applicationId: applicationId\r\n        }\r\n        axios.post(`${api_getHostelApplicationDetailForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application detail for payment 1', response.data.data)\r\n                setapplicationIdDetail(response.data.data)\r\n                setOpenPaymentModal(prev => prev + 1)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application details for payment 2\", applicationIdDetail)\r\n\r\n    console.log(\"rejected application list...\", rejectedApplication)\r\n    console.log(\"application  list...1\", appliedApplication?.data)\r\n    console.log(\"application  no.\", applicationNo)\r\n\r\n    return (\r\n        <>\r\n            {/***** section 3 ******/}\r\n            <div className=''>\r\n                <HostelPaymentModal openPaymentModal={openPaymentModal} applicationDetails={applicationIdDetail} showLoader={props.showLoader} />\r\n            </div>\r\n\r\n            <div className=''>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 bg-white mb-4 shadow-md p-4  '>\r\n                    <div className='col-span-12'>\r\n                        {tabIndex == 1 && <h1 className='flex-1 '>Hostel <span className='text-indigo-500 underline'>Pending Application</span> </h1>}\r\n                        {tabIndex == 2 && <h1 className='flex-1 '>Hostel <span className='text-indigo-500 underline'>Approved Application</span></h1>}\r\n                        {tabIndex == 3 && <h1 className='flex-1 '>Hostel <span className='text-indigo-500 underline'>Rejected Application</span></h1>}\r\n                    </div>\r\n                    <div className='col-span-12 text-left'>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(1)}>Pending Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(2)}>Approved Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(3)}>Rejected Application</button>\r\n                    </div>\r\n                </div>\r\n               \r\n                {/* pending application list for self advertisement */}\r\n                {tabIndex == 1 &&\r\n                    <div>\r\n                        {appliedApplication == undefined && appliedApplication == null && appliedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Pending Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {appliedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Hostel</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3  p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='justify-end'>\r\n                                                {items?.doc_upload_status == 0 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => docUploadModal(items?.id)}>upload Document</button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {/* approved application list for Hostel */}\r\n                {tabIndex == 2 &&\r\n                    <div>\r\n                        {approvedApplication == undefined && approvedApplication == null && approvedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Approved Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {approvedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Hostel</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                            <h1 className='text-xs'>License No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.license_no)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1  p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                {/* {items?.renew_option == 1 && */}\r\n                                                <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={() => navigate(`/hostel/${items?.id}/renew`)}>\r\n                                                    Renew License\r\n                                                </button>\r\n                                                {/* } */}\r\n                                                <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>\r\n                                                    View\r\n                                                </button>\r\n                                                {items.payment_status == 1 ?\r\n                                                    <h1 className='text-xs font-BreeSerif text-green-500'><span><button className='float-right  shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white' onClick={() => navigate('/approvalLetter')}>Download Approval Letter</button></span></h1>\r\n                                                    :\r\n                                                    <button type=\"button\" id={items?.id} value={items?.payment_amount} class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-green-500 px-2 py-1 text-white\" onClick={handlePayment}>Pay</button>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n\r\n                {/* rejected  application list for Hostel */}\r\n                {tabIndex == 3 &&\r\n                    <div>\r\n                        {rejectedApplication == undefined && rejectedApplication == null && rejectedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Rejected Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {rejectedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Hostel</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                <button type=\"button\" id={items?.temp_id\r\n                                                } value='Reject' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto '>\r\n                        <HostelApplicationFullDetails data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={modalIsOpen1}\r\n                onAfterOpen={afterOpenModal1}\r\n                onRequestClose={closeModal1}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '50vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-violet-50 overflow-y-auto '>\r\n                        <ReuploadHostelDocModal data={applicationNo} closeModal={closeModal1} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostelPendingApplicationList","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\n\r\n\r\nfunction DharamshalaApplicationFullDetails(props) {\r\n\r\n    const { api_getDharamshalaAppliedApplicationDetail, api_getDharamshalaAppliedDocumentList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n    console.log(\"application data in list application\", props.data)\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [documentList, setdocumentList] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const applicationId = props.data\r\n    const applicationType = props.applicationType\r\n\r\n\r\n    console.log(\"application id..1\", applicationId)\r\n    console.log(\"application type\", applicationType)\r\n\r\n\r\n    const handleClose = () => {\r\n        props.closeModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        console.log(\"application no through props..\", props?.data)\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        console.log(\"request body for application full detail\", requestBody)\r\n        axios.post(`${api_getDharamshalaAppliedApplicationDetail}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application view details 1', response)\r\n                setapplicationDetail(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"details of application...1\", applicationDetail?.fullDetailsData\r\n    )\r\n\r\n    ///////////{*** GET UPLOADED DOCUMENT***}/////////\r\n    useEffect(() => {\r\n        getAppliedDocumentList()\r\n    }, [])\r\n    const getAppliedDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        axios.post(`${api_getDharamshalaAppliedDocumentList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('document list 22', response.data.data)\r\n                setdocumentList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"document list...2\", documentList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-violet-400 shadow-lg rounded leading-5'>\r\n                <div className=' shadow-md shadow-violet-200 p-2 '>\r\n                    <h1 className='text-2xl px-4 font-semibold text-gray-700 '>Application Details</h1>\r\n                    <h1 className='text-xs px-4 text-gray-500'>Review your application</h1>\r\n                    <button className='float-right -mt-9 mr-4' onClick={handleClose}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 bg-red-400 text-white  shadow-lg  rounded-full\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                <div className='ml-96'>\r\n                    {/* <Loader show={ props.showLoader(false)} /> */}\r\n                </div>\r\n                {props.showLoader}\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 p-4 gap-4'>\r\n                    <div className='col-span-7 '>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 p-4 bg-violet-100 rounded leading-5'>\r\n                            <div className='flex '>\r\n                                <h1 className='font-normal text-md '>Application No.</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{nullToNA(applicationDetail?.application_no)}</h1>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <h1 className='font-normal text-md '>Apply Date</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{nullToNA(applicationDetail?.apply_date)}</h1>\r\n                            </div>\r\n                        </div>\r\n                        {applicationDetail?.fullDetailsData?.dataArray?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 container mx-auto bg-white rounded leading-5 p-2 mt-4'>\r\n                                {data?.data?.map((data) => (\r\n                                    <div className='bg-violet-100 border border-white p-2'>\r\n                                        <h1 className='font-bold text-lg text-gray-900 '>{nullToNA(data?.value)} </h1>\r\n                                        <h1 className=' font-normal text-sm text-gray-600 '>{data?.displayString}</h1>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                    <div className='col-span-5 bg-white rounded leading-5'>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-violet-100 p-4 rounded leading-5 container'>\r\n                            <div className='   '>\r\n                                <h1 className='font-semibold text-gray-800 text-lg text-center '>Documents Uploaded</h1>\r\n                            </div>\r\n                        </div>\r\n                        {documentList?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-4 bg-white  rounded leading-5'>\r\n                                <div className='flex  bg-violet-100'>\r\n                                    <h1 className='flex-1 font-semibold text-sm text-gray-600 p-6 uppercase'>{data?.doc_val}</h1>\r\n                                    <h1 className='flex-1 '>\r\n                                        <embed className='w-16 h-16 float-right' src={`${BackendUrlAdvt}/${data?.doc_path}`} />\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DharamshalaApplicationFullDetails","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport RazorpayPaymentScreen from \"../../../../../Components/RazorpayPaymentScreen\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction DharamshalaPaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const { api_getDharamshalaOrderIdForPayment } = AdvertisementApiList()\r\n    const [orderId, setorderId] = useState()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    console.log(\"payment card details\", props?.applicationDetails?.id)\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    ///////////{*** PAYMENT METHOD ***}/////////\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data?.status == true) {\r\n            navigate(`/paymentScreen/${data.data.razorpay_payment_id}/${props?.applicationDetails?.workflow_id}`)\r\n            notify(\"Payment Successfull\", \"success\")\r\n        } else {\r\n            toast.error('Payment failed....')\r\n            notify(\"Payment Failed\", \"error\")\r\n            navigate('/advertDashboard')\r\n        }\r\n    }\r\n\r\n    const payNow = (e) => {\r\n        props.showLoader(true)\r\n        console.log(\"payment id on click pay\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            id: applicationId\r\n        }\r\n        axios.post(`${api_getDharamshalaOrderIdForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('generate order id', response.data)\r\n                if (response.data.status == true) {\r\n                    console.log(\"OrderId Generated True\", response.data)\r\n                    RazorpayPaymentScreen(response.data.data, dreturn)  //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup     \r\n                }\r\n                else {\r\n\r\n                }\r\n                setorderId(response)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Backend Server error. Unable to Generate Order Id\");\r\n                // console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-violet-200 text-slate-50 drop-shadow-2xl border border-violet-500 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className='shadow-md shadow-violet-300 py-1 pl-3 bg-white border-gray-400 text-gray-600 flex'>Make Payment For<span className=\"font-bold text-md ml-4 uppercase \">{props?.applicationDetails?.type} </span></div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Application No. -</p>\r\n                                            <p>Applied date -</p>\r\n\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.application_no} </p>\r\n                                            <p>{props?.applicationDetails?.application_date}</p>\r\n                                            {/* <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Applicant Name -</p>\r\n                                            <p>Entity Name -</p>\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.applicant}  </p>\r\n                                            <p>{props?.applicationDetails?.entity_name} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg \">Payable Amount</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg bg-violet-300 px-2 \">{props?.applicationDetails?.payment_amount}</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Cancel</button>\r\n                                            <button onClick={payNow} id={props?.applicationDetails?.id} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <img src='https://cdn-icons-png.flaticon.com/256/7057/7057515.png' className=\"h-16\" />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className=\"\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default DharamshalaPaymentModal;\r\n","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ReuploadDharamshalaDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const { api_postDharamshalaReuploadedDocument } = AdvertisementApiList()\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        id: props?.data?.id,\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n\r\n            axios.post(`${api_postDharamshalaReuploadedDocument}`, values, ApiHeaderAdvrt())\r\n                .then(function (response) {\r\n                    console.log('re-uploaded document', response.data.data)\r\n                    // setdocList(response.data.data)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('errorrr.... ', error);\r\n                })\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"reupload doc \", props.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`}> {props?.data?.doc_val} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            <div onClick={() => modalAction(DocUrl)}>\r\n                                <img src={`${BackendUrlAdvt}/${props?.data?.doc_path}`} alt=\"Preview Image\" className={`${labelStyle} w-8`} />\r\n                            </div>\r\n                            {props?.data?.verify_status == 2 &&\r\n                                <div>\r\n                                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                        <>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                                ?\r\n                                                <div onClick={() => modalAction(DocUrl)}>\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                </div>\r\n\r\n                                                :\r\n                                                <>\r\n                                                    <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                        <div>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                        <div className=\"form-group col-span-4 md:col-span-1 md:px-0 mt-2\">\r\n                                {props?.data?.verify_status == 0 && <h1 className='bg-amber-200 text-center  w-28 text-xs rounded-full text-amber-800 shadow-md'>Pending</h1>}\r\n                                {props?.data?.verify_status == 1 && <h1 className='bg-green-200 text-center w-28 text-xs rounded-full text-green-800 shadow-md'>Verified</h1>}\r\n                                {props?.data?.verify_status == 2 && <h1 className='bg-red-200 text-center w-28 text-xs rounded-full text-red-800 shadow-md '>Rejected</h1>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm mt-2\">\r\n                            {props?.data?.verify_status == 2 ?\r\n                                <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                    {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0'>\r\n                                            <span className='text-xs'>upload</span>\r\n                                        </button> :\r\n                                        <>\r\n                                            <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                            < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                                <span className='text-xs'>re-upload</span>\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                :\r\n                                < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white focus:outline-none focus:ring-0' disabled>\r\n                                    <span className='text-xs'>uploaded</span>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ReuploadDharamshalaDocTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ReuploadDharamshalaDocTable from './ReuploadDharamshalaDocTable'\r\n\r\nfunction ReuploadDharamshalaDocModal(props) {\r\n\r\n    const { api_getDharamshalaReuploadDoc } = AdvertisementApiList()\r\n    const [docList, setdocList] = useState()\r\n\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: props?.data,\r\n            // workflowId: props?.workflowId,\r\n        }\r\n        axios.post(`${api_getDharamshalaReuploadDoc}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('re-uploaded document list', response.data.data)\r\n                setdocList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"application id\", props.data)\r\n    console.log(\"workflow id 1\", props.workflowId)\r\n    return (\r\n        <>\r\n            <div className=' top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8 p-2 mt-12'>\r\n                    <div className='col-span-12'><h1 className='text-xl'>Upload Rejected Document</h1></div>\r\n                    <div className='col-span-12 border border-dashed border-violet-800 '>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Status</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.map((items, index) => (\r\n                                    <ReuploadDharamshalaDocTable data={items} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReuploadDharamshalaDocModal","import Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import AdvertPaymentModal from '../AdvertPaymentModal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport ViewAppliedApplication from '../../../Advertisement/ViewAppliedApplication';\r\nimport DharamshalaApplicationFullDetails from './DharamshalaApplicationFullDetails';\r\nimport DharamshalaPaymentModal from './DharamshalaPaymentModal';\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\nimport ReuploadDharamshalaDocModal from './ReuploadDharamshalaDocModal';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n        overflowY: \"scroll\"\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction DharamshalaPendingApplicationList(props) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const { api_getDharamshalaAppliedApplicationList, api_getDharamshalaApprovedApplicationList, api_getDharamshalaRejectedApplicationList, api_getDharamshalaApplicationDetailForPayment } = AdvertisementApiList()\r\n\r\n    const [applyList, setapplyList] = useState('hidden')\r\n    const [appliedApplication, setappliedApplication] = useState()\r\n    const [approvedApplication, setapprovedApplication] = useState()\r\n    const [rejectedApplication, setrejectedApplication] = useState()\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const [applicationIdDetail, setapplicationIdDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen1, setIsOpen1] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const openModal1 = () => setIsOpen1(true)\r\n    const closeModal1 = () => setIsOpen1(false)\r\n    const afterOpenModal1 = () => { }\r\n\r\n\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    console.log(\"application no. for modal\", applicationNo)\r\n\r\n    const docUploadModal = (applicationId) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        setapplicationNo(applicationId)\r\n        openModal1()\r\n    }\r\n\r\n    const showApplyList = () => {\r\n        applyList == 'hidden' ? setapplyList('') : setapplyList('hidden')\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getDharamshalaAppliedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in Dharamshala', response.data.data)\r\n                setappliedApplication(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n\r\n            })\r\n    }\r\n\r\n    ///////////{*** APPROVED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApprovedApplicationList()\r\n    }, [])\r\n    const getApprovedApplicationList = () => {\r\n\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getDharamshalaApprovedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in self advertisement 133', response.data.data)\r\n                setapprovedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n\r\n            })\r\n    }\r\n\r\n    console.log(\"approved application list...\", approvedApplication)\r\n\r\n    ///////////{*** REJECTED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getRejectedApplicationList()\r\n    }, [])\r\n    const getRejectedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getDharamshalaRejectedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('rejected application in self advertisement', response.data.data)\r\n                setrejectedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    const handlePayment = (e) => {\r\n        console.log(\"application id\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            applicationId: applicationId\r\n        }\r\n        axios.post(`${api_getDharamshalaApplicationDetailForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application detail for payment 1', response.data.data)\r\n                setapplicationIdDetail(response.data.data)\r\n                setOpenPaymentModal(prev => prev + 1)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application details for payment 2\", applicationIdDetail)\r\n    console.log(\"rejected application list...\", rejectedApplication)\r\n    console.log(\"application  list...1\", appliedApplication?.data)\r\n    console.log(\"application  no.\", applicationNo)\r\n\r\n    return (\r\n        <>\r\n            {/***** section 3 ******/}\r\n            <div className=''>\r\n                <DharamshalaPaymentModal openPaymentModal={openPaymentModal} applicationDetails={applicationIdDetail} showLoader={props.showLoader} />\r\n            </div>\r\n\r\n            <div className=''>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 bg-white mb-4 shadow-md p-4  '>\r\n                    <div className='col-span-12'>\r\n                        {tabIndex == 1 && <h1 className='flex-1 '>Dharamshala <span className='text-indigo-500 underline'>Pending Application</span> </h1>}\r\n                        {tabIndex == 2 && <h1 className='flex-1 '>Dharamshala <span className='text-indigo-500 underline'>Approved Application</span></h1>}\r\n                        {tabIndex == 3 && <h1 className='flex-1 '>Dharamshala <span className='text-indigo-500 underline'>Rejected Application</span></h1>}\r\n                    </div>\r\n                    <div className='col-span-12 text-left'>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(3)}>Rejected Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(2)}>Approved Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(1)}>Pending Application</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* pending application list for self advertisement */}\r\n                {tabIndex == 1 &&\r\n                    <div>\r\n                        {appliedApplication == undefined && appliedApplication == null && appliedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Pending Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {appliedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Dharamshala</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3  p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='justify-end'>\r\n                                                {items?.doc_upload_status == 0 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => docUploadModal(items?.id)}>upload Document</button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {/* approved application list for Dharamshala */}\r\n                {tabIndex == 2 &&\r\n                    <div>\r\n                        {approvedApplication == undefined && approvedApplication == null && approvedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Approved Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {approvedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Dharamshala</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                            <h1 className='text-xs'>License No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.license_no)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1  p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                {items?.renew_option == 1 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={() => navigate(`/dharamshala/${items?.id}/renew`)}>\r\n                                                        Renew License\r\n                                                    </button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>\r\n                                                    View\r\n                                                </button>\r\n                                                {items.payment_status == 1 ?\r\n                                                    <h1 className='text-xs font-BreeSerif text-green-500'><span><button className='float-right  shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white' onClick={() => navigate('/approvalLetter')}>Download Approval Letter</button></span></h1>\r\n                                                    :\r\n                                                    <button type=\"button\" id={items?.id} value={items?.payment_amount} class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-green-500 px-2 py-1 text-white\" onClick={handlePayment}>Pay</button>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n\r\n                {/* rejected  application list for Dharamshala */}\r\n                {tabIndex == 3 &&\r\n                    <div>\r\n                        {rejectedApplication == undefined && rejectedApplication == null && rejectedApplication?.data?.length == 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Rejected Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {rejectedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Dharamshala</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                <button type=\"button\" id={items?.temp_id\r\n                                                } value='Reject' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto '>\r\n                        <DharamshalaApplicationFullDetails data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            {/*if document is BTC then reupload document */}\r\n            <Modal\r\n                isOpen={modalIsOpen1}\r\n                onAfterOpen={afterOpenModal1}\r\n                onRequestClose={closeModal1}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '50vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-violet-50 overflow-y-auto '>\r\n                        <ReuploadDharamshalaDocModal data={applicationNo} closeModal={closeModal1} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DharamshalaPendingApplicationList","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt'\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ServerErrorCard from '../../../ServerErrorCard'\r\n\r\n\r\nfunction LodgeApplicationFullDetails(props) {\r\n\r\n    const { api_getLodgeAppliedApplicationDetail, api_getLodgeAppliedDocumentList } = AdvertisementApiList()\r\n\r\n    let labelStyle = \"mt-6 -ml-7 text-xs text-gray-600 font-semibold\"\r\n    let inputStyle = \"mt-6 -ml-7 mb-2 text-sm text-gray-800 text-left font-bold\"\r\n    console.log(\"application data in list application\", props.data)\r\n\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [documentList, setdocumentList] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const applicationId = props.data\r\n    const applicationType = props.applicationType\r\n\r\n\r\n    console.log(\"application id..1\", applicationId)\r\n    console.log(\"application type\", applicationType)\r\n\r\n\r\n    const handleClose = () => {\r\n        props.closeModal()\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        console.log(\"application no through props..\", props?.data)\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        console.log(\"request body for application full detail\", requestBody)\r\n        axios.post(`${api_getLodgeAppliedApplicationDetail}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application view details 1', response)\r\n                setapplicationDetail(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    console.log(\"details of application...1\", applicationDetail?.fullDetailsData\r\n    )\r\n\r\n    ///////////{*** GET UPLOADED DOCUMENT***}/////////\r\n    useEffect(() => {\r\n        getAppliedDocumentList()\r\n    }, [])\r\n    const getAppliedDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n            type: applicationType,\r\n        }\r\n        axios.post(`${api_getLodgeAppliedDocumentList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('document list 22', response.data.data)\r\n                setdocumentList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"document list...2\", documentList)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='border border-violet-400 shadow-lg rounded leading-5'>\r\n                <div className=' shadow-md shadow-violet-200 p-2 '>\r\n                    <h1 className='text-2xl px-4 font-semibold text-gray-700 '>Application Details</h1>\r\n                    <h1 className='text-xs px-4 text-gray-500'>Review your application</h1>\r\n                    <button className='float-right -mt-9 mr-4' onClick={handleClose}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 bg-red-400 text-white  shadow-lg  rounded-full\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                <div className='ml-96'>\r\n                    {/* <Loader show={ props.showLoader(false)} /> */}\r\n                </div>\r\n                {props.showLoader}\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 p-4 gap-4'>\r\n                    <div className='col-span-7 '>\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 p-4 bg-violet-100 rounded leading-5'>\r\n                            <div className='flex '>\r\n                                <h1 className='font-normal text-md '>Application No.</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.application_no}</h1>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <h1 className='font-normal text-md '>Apply Date</h1>\r\n                                <h1 className='font-bold text-lg text-gray-900 ml-4 -mt-1'>{applicationDetail?.apply_date}</h1>\r\n                            </div>\r\n                        </div>\r\n                        {applicationDetail?.fullDetailsData?.dataArray?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 container mx-auto bg-white rounded leading-5 p-2 mt-4'>\r\n                                {data?.data?.map((data) => (\r\n                                    <div className='bg-violet-100 border border-white p-2'>\r\n                                        <h1 className='font-bold text-lg text-gray-900 '>{data?.value || 'N/A'} </h1>\r\n                                        <h1 className=' font-normal text-sm text-gray-600 '>{data?.displayString}</h1>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                    <div className='col-span-5 bg-white rounded leading-5'>\r\n                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-violet-100 p-4 rounded leading-5 container'>\r\n                            <div className='   '>\r\n                                <h1 className='font-semibold text-gray-800 text-lg text-center '>Documents Uploaded</h1>\r\n                            </div>\r\n                        </div>\r\n                        {documentList?.map((data) => (\r\n                            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-4 bg-white  rounded leading-5'>\r\n                                <div className='flex  bg-violet-100'>\r\n                                    <h1 className='flex-1 font-semibold text-sm text-gray-600 p-6 uppercase'>{data?.doc_val}</h1>\r\n                                    <h1 className='flex-1 '>\r\n                                        <embed className='w-16 h-16 float-right' src={`${BackendUrlAdvt}/${data?.doc_path}`} />\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LodgeApplicationFullDetails","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport RazorpayPaymentScreen from \"../../../../../Components/RazorpayPaymentScreen\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction LodgePaymentModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const { api_getLodgeOrderIdForPayment } = AdvertisementApiList()\r\n    const [orderId, setorderId] = useState()\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (props.openPaymentModal > 0) setIsOpen(true);\r\n    }, [props.openPaymentModal]);\r\n\r\n    console.log(\"payment card details\", props?.applicationDetails?.id)\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // props.refetchListOfRoles();\r\n    }\r\n\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    ///////////{*** PAYMENT METHOD ***}/////////\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data?.status == true) {\r\n            navigate(`/paymentScreen/${data.data.razorpay_payment_id}/${props?.applicationDetails?.workflow_id}`)\r\n            notify(\"Payment Successfull\", \"success\")\r\n        } else {\r\n            toast.error('Payment failed....')\r\n            notify(\"Payment Failed\", \"error\")\r\n            navigate('/advertDashboard')\r\n        }\r\n    }\r\n\r\n    const payNow = (e) => {\r\n        props.showLoader(true)\r\n        console.log(\"payment id on click pay\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            id: applicationId\r\n        }\r\n        axios.post(`${api_getLodgeOrderIdForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('generate order id', response.data)\r\n                if (response.data.status == true) {\r\n                    console.log(\"OrderId Generated True\", response.data)\r\n                    RazorpayPaymentScreen(response.data.data, dreturn)  //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup     \r\n                }\r\n                else {\r\n\r\n                }\r\n                setorderId(response)\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Backend Server error. Unable to Generate Order Id\");\r\n                // console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n\r\n                setTimeout(() => {\r\n                    props.showLoader(false);\r\n                }, 500);\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className=\"bg-violet-200 text-slate-50 drop-shadow-2xl border border-violet-500 p-5 m-5 rounded-md\"  >\r\n                    <div className=''>\r\n                        <div className='shadow-md shadow-violet-300 py-1 pl-3 bg-white border-gray-400 text-gray-600 flex'>Make Payment For<span className=\"font-bold text-md ml-4 uppercase \">{props?.applicationDetails?.type} </span></div>\r\n\r\n                        <div className=\"md:flex block w-full h-56\">\r\n                            <div className='grid grid-cols-12 px-8 pt-3 leading-8 '>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Application No. -</p>\r\n                                            <p>Applied date -</p>\r\n\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.application_no} </p>\r\n                                            <p>{props?.applicationDetails?.application_date}</p>\r\n                                            {/* <p>{props?.OrderResponse?.applicationType}</p>\r\n                                            <p>&emsp;{props?.OrderResponse?.licenceForYears} year <small>(s)</small></p>\r\n                                            <p>{props?.OrderResponse?.applyDate == null ? JSON.stringify(new Date()).slice(1, 11) : props?.OrderResponse?.applyDate}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <p>Applicant Name -</p>\r\n                                            <p>Entity Name -</p>\r\n                                        </div>\r\n                                        <div className='col-span-6 text-gray-500 font-bold'>\r\n                                            <p>{props?.applicationDetails?.applicant}  </p>\r\n                                            <p>{props?.applicationDetails?.entity_name} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg \">Payable Amount</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <h1 className=\"font-bold text-lg bg-violet-300 px-2 \">{props?.applicationDetails?.payment_amount}</h1>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <button onClick={closeModal} className='mx-2 bg-red-600 hover:bg-red-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Cancel</button>\r\n                                            <button onClick={payNow} id={props?.applicationDetails?.id} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm  rounded-sm shadow-xl'>Pay Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='md:col-span-6 col-span-12'>\r\n                                    <div className='grid grid-cols-12'>\r\n                                        <div className='col-span-6  text-gray-600'>\r\n                                            <img src='https://cdn-icons-png.flaticon.com/256/7057/7057515.png' className=\"h-16\" />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className=\"\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default LodgePaymentModal;\r\n","// import { Modal } from '@mui/material';\r\nimport Modal from 'react-modal';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport BackendUrlAdvt from '../../../../../Components/ApiList/BackendUrlAdvt';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'gray',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ReuploadLodgeDocTable(props) {\r\n\r\n\r\n    let labelStyle = \" text-xs  text-gray-600\"\r\n    let inputStyle = \"border shadow-md px-1.5 py-1 rounded-lg w-48\"\r\n\r\n    const { api_postLodgeReuploadedDocument } = AdvertisementApiList()\r\n\r\n    const [imgPath, setimgPath] = useState()\r\n    const [DocUrl, setDocUrl] = useState('')\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [imageFile, setimageFile] = useState()\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (url) => {\r\n        setDocUrl(url)\r\n        openModal()\r\n    }\r\n\r\n    const initialValues = {\r\n        image: \"\",\r\n        id: props?.data?.id,\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values) => {\r\n            console.log(\"image file\", values);\r\n            setimgPath(values)\r\n\r\n            axios.post(`${api_postLodgeReuploadedDocument}`, values, ApiHeaderAdvrt())\r\n                .then(function (response) {\r\n                    console.log('re-uploaded document', response.data.data)\r\n                    // setdocList(response.data.data)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('errorrr.... ', error);\r\n                })\r\n        }\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let file = e.target.files[0]\r\n\r\n        setimageFile(file)\r\n        console.log(\"image file\", imageFile)\r\n\r\n        { name == \"image\" && handleFile(file) }\r\n    };\r\n\r\n    const handleFile = (file) => {\r\n        formik.setFieldValue(\"image\", file);\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setDocUrl(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        console.log(\"file checker \", DocUrl)\r\n    }\r\n\r\n    console.log(\"reupload doc \", props.data)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}\r\n                onChange={handleOnChange}\r\n                encType=\"multipart/form-data\">\r\n\r\n                <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 \">\r\n                    <div className='px-1'>\r\n                        <div className=\"\">\r\n                            <span className={`${labelStyle}`}> {props?.data?.doc_val} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\" >\r\n                            <div onClick={() => modalAction(DocUrl)}>\r\n                                <img src={`${BackendUrlAdvt}/${props?.data?.doc_path}`} alt=\"Preview Image\" className={`${labelStyle} w-8`} />\r\n                            </div>\r\n                            {props?.data?.verify_status == 2 &&\r\n                                <div>\r\n                                    {imgPath?.image?.name == null || imgPath?.image?.name == undefined || imgPath?.image?.name == '' ? <img src='https://cdn-icons-png.flaticon.com/512/4194/4194756.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} /> :\r\n                                        <>\r\n                                            {imgPath?.image?.name?.split('.').pop() == \"pdf\" || imgPath?.image?.name?.split('.').pop() == \"jpg\" || imgPath?.image?.name?.split('.').pop() == \"jpeg\" || imgPath?.image?.name?.split('.').pop() == \"png\"\r\n                                                ?\r\n                                                <div onClick={() => modalAction(DocUrl)}>\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"pdf\" && <img src='https://cdn-icons-png.flaticon.com/512/3997/3997593.png' alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"jpeg\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719824.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                    {imgPath?.image?.name?.split('.').pop() == \"png\" && <img src=\"https://cdn-icons-png.flaticon.com/512/5719/5719894.png\" alt=\"Preview Image\" className={`${labelStyle} w-8`} />}\r\n                                                </div>\r\n\r\n                                                :\r\n                                                <>\r\n                                                    <Tooltip className='bg-gray-500 text-xs text-white' content=\"Does not support this file extension\">\r\n                                                        <div>\r\n                                                            <img src='https://cdn-icons-png.flaticon.com/512/8316/8316660.png' className={`${labelStyle} w-8 mx-auto`} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                <input type='file' name='image' className=\"form-control block w-full px-3 py-1.5 mb-3 text-base md:text-xs font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none cursor-pointer shadow-md w-36\" onChange={formik.handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm\">\r\n                            <div className=\"form-group col-span-4 md:col-span-1 md:px-0 mt-2\">\r\n                                {props?.data?.verify_status == 0 && <h1 className='bg-amber-200 text-center  w-28 text-xs rounded-full text-amber-800 shadow-md'>Pending</h1>}\r\n                                {props?.data?.verify_status == 1 && <h1 className='bg-green-200 text-center w-28 text-xs rounded-full text-green-800 shadow-md'>Verified</h1>}\r\n                                {props?.data?.verify_status == 2 && <h1 className='bg-red-200 text-center w-28 text-xs rounded-full text-red-800 shadow-md '>Rejected</h1>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='px-1'>\r\n                        <div className=\"flex items-center justify-center font-semibold text-sm mt-2\">\r\n                            {props?.data?.verify_status == 2 ?\r\n                                <div className=\"form-group col-span-4 md:col-span-1 md:px-0\">\r\n                                    {imgPath?.image == null || imgPath?.image == undefined || imgPath?.image == '' ?\r\n                                        < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0'>\r\n                                            <span className='text-xs'>upload</span>\r\n                                        </button> :\r\n                                        <>\r\n                                            <p className='text-xs text-teal-500 font-bold font-BreeSerif'> Uploaded...</p>\r\n                                            < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 hover:text-white hover:bg-indigo-600 hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0' >\r\n                                                <span className='text-xs'>re-upload</span>\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                :\r\n                                < button type='submit' className='py-0 px-2 text-[0.7rem] inline-block text-center  rounded leading-5 text-gray-100 bg-green-500 border border-green-500 hover:text-white focus:outline-none focus:ring-0' disabled>\r\n                                    <span className='text-xs'>uploaded</span>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form >\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0\" style={{ 'width': '40vw', 'height': '80vh' }}>\r\n                    <iframe className='w-full h-full' src={DocUrl} frameborder=\"1\">\r\n                        {/* <object data={DocUrl} width=\"200\" height=\"200\"></object> */}\r\n                        <img className='' src={DocUrl} />\r\n                    </iframe>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ReuploadLodgeDocTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport AdvertisementApiList from '../../../AdvertisementApiList'\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt'\r\nimport ReuploadLodgeDocTable from './ReuploadLodgeDocTable'\r\n\r\nfunction ReuploadLodgeDocModal(props) {\r\n\r\n    const { api_getLodgeReuploadDoc } = AdvertisementApiList()\r\n    const [docList, setdocList] = useState()\r\n\r\n\r\n    ///////////{*** GET DOCUMENT LIST***}/////////\r\n    useEffect(() => {\r\n        getDocumentList()\r\n    }, [])\r\n    const getDocumentList = () => {\r\n        const requestBody = {\r\n            applicationId: props?.data,\r\n            // workflowId: props?.workflowId,\r\n        }\r\n        axios.post(`${api_getLodgeReuploadDoc}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('re-uploaded document list', response.data.data)\r\n                setdocList(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n    console.log(\"application id\", props.data)\r\n    console.log(\"workflow id 1\", props.workflowId)\r\n    return (\r\n        <>\r\n            <div className=' top-4 ml-4 '>\r\n                <div className=' grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pb-8 p-2 mt-12'>\r\n                    <div className='col-span-12'><h1 className='text-xl'>Upload Rejected Document</h1></div>\r\n                    <div className='col-span-12 border border-dashed border-violet-800 '>\r\n                        <div className=\"p-1\">\r\n                            <div class=\"grid grid-cols-1 md:grid-cols-5 lg:grid-cols-5 gap-1 p-1 bg-white\">\r\n                                <div>\r\n                                    <h1 className='text-left  text-lg ml-12 text-gray-600 font-sans font-semibold '>Document</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Preview</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Upload</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Status</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className='text-center text-lg ml-4 text-gray-600 font-sans font-semibold'>Action</h1>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                {docList?.map((items, index) => (\r\n                                    <ReuploadLodgeDocTable data={items} mykey={index} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReuploadLodgeDocModal","import Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import AdvertPaymentModal from '../AdvertPaymentModal';\r\nimport AdvertisementApiList from '../../../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../../../ApiHeaderAdvrt';\r\nimport ViewAppliedApplication from '../../../Advertisement/ViewAppliedApplication';\r\nimport LodgeApplicationFullDetails from './LodgeApplicationFullDetails';\r\nimport LodgePaymentModal from './LodgePaymentModal';\r\nimport { nullToNA } from '../../../../../Components/Common/PowerUps/PowerupFunctions';\r\nimport ReuploadLodgeDocModal from './ReuploadLodgeDocModal';\r\nimport BrandLoader from '../../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../../Components/GlobalData/CommonModal';\r\nimport ServerErrorCard from '../../../ServerErrorCard';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n        overflowY: \"scroll\"\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction LodgePendingApplicationList(props) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const { api_getLodgeAppliedApplicationList, api_getLodgeApprovedApplicationList, api_getLodgeRejectedApplicationList, api_getLodgeApplicationDetailForPayment } = AdvertisementApiList()\r\n\r\n    const [applyList, setapplyList] = useState('hidden')\r\n    const [appliedApplication, setappliedApplication] = useState()\r\n    const [approvedApplication, setapprovedApplication] = useState()\r\n    const [rejectedApplication, setrejectedApplication] = useState()\r\n    const [openPaymentModal, setOpenPaymentModal] = useState(0)\r\n    const [applicationIdDetail, setapplicationIdDetail] = useState()\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalIsOpen1, setIsOpen1] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n    const openModal1 = () => setIsOpen1(true)\r\n    const closeModal1 = () => setIsOpen1(false)\r\n    const afterOpenModal1 = () => { }\r\n\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n    console.log(\"application no. for modal\", applicationNo)\r\n\r\n    const docUploadModal = (applicationId) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        setapplicationNo(applicationId)\r\n        openModal1()\r\n    }\r\n\r\n    const showApplyList = () => {\r\n        applyList == 'hidden' ? setapplyList('') : setapplyList('hidden')\r\n    }\r\n\r\n    ///////////{*** GET APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getLodgeAppliedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in Lodge', response.data.data)\r\n                setappliedApplication(response.data.data)\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                setisLoading(false)\r\n\r\n            })\r\n    }\r\n\r\n    ///////////{*** APPROVED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getApprovedApplicationList()\r\n    }, [])\r\n    const getApprovedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getLodgeApprovedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('applied application in self advertisement', response.data.data)\r\n                setapprovedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    console.log(\"approved application list...\", approvedApplication)\r\n\r\n    ///////////{*** REJECTED APPLICATION LIST***}/////////\r\n    useEffect(() => {\r\n        getRejectedApplicationList()\r\n    }, [])\r\n    const getRejectedApplicationList = () => {\r\n        const requestBody = {\r\n            // deviceId: \"selfAdvert\",\r\n        }\r\n        axios.post(`${api_getLodgeRejectedApplicationList}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('rejected application in self advertisement', response.data.data)\r\n                setrejectedApplication(response.data.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    const handlePayment = (e) => {\r\n        console.log(\"application id\", e.target.id)\r\n        let applicationId = e.target.id\r\n        const requestBody = {\r\n            applicationId: applicationId\r\n        }\r\n        axios.post(`${api_getLodgeApplicationDetailForPayment}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('application detail for payment 1', response.data.data)\r\n                setapplicationIdDetail(response.data.data)\r\n                setOpenPaymentModal(prev => prev + 1)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n            })\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application details for payment 2\", applicationIdDetail)\r\n\r\n    console.log(\"rejected application list...\", rejectedApplication)\r\n    console.log(\"application  list...1\", appliedApplication?.data)\r\n    console.log(\"application  no.\", applicationNo)\r\n\r\n    return (\r\n        <>\r\n            {/***** section 3 ******/}\r\n            <div className=''>\r\n                <LodgePaymentModal openPaymentModal={openPaymentModal} applicationDetails={applicationIdDetail} showLoader={props.showLoader} />\r\n            </div>\r\n\r\n            <div className=''>\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 bg-white mb-4 shadow-md p-4  '>\r\n                    <div className='col-span-12'>\r\n                        {tabIndex == 1 && <h1 className='flex-1 '>Lodge <span className='text-indigo-500 underline'>Pending Application</span> </h1>}\r\n                        {tabIndex == 2 && <h1 className='flex-1 '>Lodge <span className='text-indigo-500 underline'>Approved Application</span></h1>}\r\n                        {tabIndex == 3 && <h1 className='flex-1 '>Lodge <span className='text-indigo-500 underline'>Rejected Application</span></h1>}\r\n                    </div>\r\n                    <div className='col-span-12 text-left'>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(1)}>Pending Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(2)}>Approved Application</button>\r\n                        <button type='button' className='text-xs md:text-sm lg:text-sm bg-indigo-300 px-1 py-0 mr-2 text-indigo-600 border border-indigo-500  rounded leading-5  focus:bg-indigo-500  focus:shadow-lg focus:text-white darks:bg-white' onClick={() => settabIndex(3)}>Rejected Application</button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* pending application list for self advertisement */}\r\n                {tabIndex == 1 &&\r\n                    <div>\r\n                        {appliedApplication == undefined && appliedApplication == null && appliedApplication?.data?.length === 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Pending Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {appliedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Lodge</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3  p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='justify-end'>\r\n                                                {items?.doc_upload_status == 0 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => docUploadModal(items?.id)}>upload Document</button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Active' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {/* approved application list for Lodge */}\r\n                {tabIndex == 2 &&\r\n                    <div>\r\n                        {approvedApplication == undefined && approvedApplication == null && approvedApplication?.data?.length === 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Approved Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {approvedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Lodge</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n                                            <h1 className='text-xs'>License No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.license_no)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1  p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                {items?.renew_option == 1 &&\r\n                                                    <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={() => navigate(`/lodge/${items?.id}/renew`)}>\r\n                                                        Renew License\r\n                                                    </button>\r\n                                                }\r\n                                                <button type=\"button\" id={items?.id} value='Approve' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>\r\n                                                    View\r\n                                                </button>\r\n                                                {items.payment_status == 1 ?\r\n                                                    <h1 className='text-xs font-BreeSerif text-green-500'><span><button className='float-right  shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white' onClick={() => navigate('/approvalLetter')}>Download Approval Letter</button></span></h1>\r\n                                                    :\r\n                                                    <button type=\"button\" id={items?.id} value={items?.payment_amount} class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-green-500 px-2 py-1 text-white\" onClick={handlePayment}>Pay</button>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n\r\n                {/* rejected  application list for Lodge */}\r\n                {tabIndex == 3 &&\r\n                    <div>\r\n                        {rejectedApplication == undefined && rejectedApplication == null && rejectedApplication?.data?.length === 0 ?\r\n                            <>\r\n                                <h1 className='text-center text-2xl text-gray-500'>No Rejected Application Found ... </h1>\r\n                                <img src='https://cdn-icons-png.flaticon.com/512/7466/7466140.png' className='mx-auto h-36 mt-4' />\r\n\r\n                            </>\r\n                            :\r\n                            <div className=''>\r\n                                {rejectedApplication?.data?.map((items) => (\r\n                                    <div className='col-span-3 p-3 h-auto mb-4 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl  '>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 bg-yellow-500  w-36 -ml-3 rounded-r-lg shadow-md top-0 absolute '>\r\n                                            <h1 className='text-xs  text-center text-white '>Lodge</h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Application No. :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_no)}</span></h1>\r\n                                            <h1 className='text-xs'>Applicant Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.applicant)}</span></h1>\r\n                                            <h1 className='text-xs'>Apply Date :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.application_date)}</span></h1>\r\n                                        </div>\r\n                                        <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 p-2'>\r\n                                            <h1 className='text-xs'>Entity Name :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_name)}</span></h1>\r\n                                            <h1 className='text-xs'>Entity Address :- <span className='font-bold text-sm text-gray-700'>{nullToNA(items?.entity_address)\r\n                                            }</span></h1>\r\n\r\n                                        </div>\r\n\r\n                                        <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 p-2'>\r\n                                            <div className='flex-1 justify-end'>\r\n                                                <button type=\"button\" id={items?.temp_id\r\n                                                } value='Reject' class=\"float-right text-xs   shadow-lg mr-2 rounded leading-5 border-gray-50 bg-indigo-500 px-2 py-1 text-white\" onClick={(e) => modalAction(items?.id, e.target.value)}>View</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-white overflow-y-auto '>\r\n                        <LodgeApplicationFullDetails data={applicationNo} applicationType={applicationType} showLoader={props.showLoader} closeModal={closeModal} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={modalIsOpen1}\r\n                onAfterOpen={afterOpenModal1}\r\n                onRequestClose={closeModal1}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div class=\"mx-auto px-0 overflow-y-auto\" style={{ 'width': '50vw', 'height': '100%' }}>\r\n                    <div className='h-[44rem] bg-violet-50 overflow-y-auto '>\r\n                        <ReuploadLodgeDocModal data={applicationNo} closeModal={closeModal1} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LodgePendingApplicationList","import Modal from 'react-modal';\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Tooltip } from '@material-tailwind/react';\r\nimport AdvertisementApiList from '../AdvertisementApiList';\r\nimport ApiHeaderAdvrt from '../ApiHeaderAdvrt';\r\nimport Loader from '../Advertisement/Loader';\r\nimport AdvertisementNotification from '../Advertisement/AdvertisementNotification';\r\nimport BanquetMarriagePendingApplicationList from './MarketingModules/BanquetMarriageHall/BanquetMarriagePendingApplicationList';\r\nimport HostelPendingApplicationList from './MarketingModules/Hostel/HostelPendingApplicationList';\r\nimport DharamshalaPendingApplicationList from './MarketingModules/Dharmsala/DharamshalaPendingApplicationList';\r\nimport LodgePendingApplicationList from './MarketingModules/Lodge/LodgePendingApplicationList';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction MarketingDashboard() {\r\n    const navigate = useNavigate()\r\n    const { api_getAppliedApplicationList } = AdvertisementApiList()\r\n\r\n    const [applyList, setapplyList] = useState('hidden')\r\n    // const [appliedApplication, setappliedApplication] = useState()\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [tabIndex, settabIndex] = useState(1)\r\n    const [show, setshow] = useState(false)\r\n\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n\r\n    const modalAction = (e) => {\r\n        // alert(e.target.id)\r\n        let applicationId = e.target.id\r\n        setapplicationNo(applicationId)\r\n        openModal()\r\n    }\r\n    console.log(\"application no. for modal\", applicationNo)\r\n\r\n    const showApplyList = () => {\r\n        applyList == 'hidden' ? setapplyList('') : setapplyList('hidden')\r\n    }\r\n\r\n\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    // console.log(\"application list...1\", appliedApplication)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container mx-auto py-12 '>\r\n                <div className=''>\r\n                    <Loader show={show} />\r\n                </div>\r\n                {/***** section 1 ******/}\r\n                <div className=' px-4 py-2 m-2 bg-white shadow-md shadow-violet-200'>\r\n                    <div className='flex justify-start rounded leading-5  w-full '>\r\n                        <div className=''>\r\n                            <img src='https://cdn.dribbble.com/users/1092072/screenshots/3306775/cubeloader2.2.gif' className='h-16 w-16  ' />\r\n                        </div>\r\n                        <div className='p-2 '>\r\n                            <h1 className=' text-2xl  font-semibold text-gray-700 '> Marketing   Dashboard</h1>\r\n                            <h1 className='text-xs  text-gray-500 '>You Can Get License To Advertise Your Business Name </h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/***** section 2 ******/}\r\n                <div className={` grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12  mx-auto gap-4 -mt-2 p-4 `}>\r\n                    <div className='col-span-3 p-3 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl ' >\r\n                        <div className=''>\r\n                            <div className='text-indigo-500'>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6 mx-auto\">\r\n                                    <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                    <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                    <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                                </svg>\r\n                            </div>\r\n                            <h1 className='text-lg text-center font-semibold  text-gray-700 '>Banquet/Marriage Hall Registration</h1>\r\n                            <p className='text-xs text-center text-gray-600'>You can apply for Marriage/Banquet Hall</p>\r\n                            <div className='text-center'>\r\n                                <button type=\"button\" class=\"text-xs  mt-2 p-0 px-4 inline-block text-center mb-1 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 bg-gradient-to-b from-indigo-400 to-indigo-600  hover:from-indigo-500 hover:to-indigo-600 focus:from-indigo-400 focus:to-indigo-600 hover:text-white hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => navigate(`/marriage-hall/${0}/newapply`)}>Apply Here</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-3 p-3 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl '>\r\n                        <div className='text-indigo-500'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6 mx-auto\">\r\n                                <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h1 className='text-lg text-center font-semibold text-gray-700 '>Hostel Registration</h1>\r\n                        <p className='text-xs text-center text-gray-600'>You can apply for Hostel </p>\r\n                        <div className='text-center'>\r\n                            <button type=\"button\" class=\"text-xs  mt-2 p-0 px-4 inline-block text-center mb-1 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 bg-gradient-to-b from-indigo-400 to-indigo-600  hover:from-indigo-500 hover:to-indigo-600 focus:from-indigo-400 focus:to-indigo-600 hover:text-white hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => navigate(`/hostel/${0}/newapply`)}>Apply Here</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-3 p-3 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl '>\r\n                        <div className='text-indigo-500'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6 mx-auto\">\r\n                                <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h1 className='text-lg text-center font-semibold  text-gray-700 '>Lodge Registration</h1>\r\n                        <p className='text-xs text-center text-gray-600'>You can apply for Lodge</p>\r\n                        <div className='text-center'>\r\n                            <button type=\"button\" class=\"text-xs mt-2 p-0 px-4 inline-block text-center mb-1 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 bg-gradient-to-b from-indigo-400 to-indigo-600  hover:from-indigo-500 hover:to-indigo-600 focus:from-indigo-400 focus:to-indigo-600 hover:text-white hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => navigate(`/lodge/${0}/newapply`)}>Apply Here</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-3 p-3 shadow-lg rounded leading-5 bg-white transform transition duration-300 ease-in-out hover:-translate-y-2 hover:shadow-xl '>\r\n                        <div className='text-indigo-500'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6 mx-auto\">\r\n                                <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <h1 className='text-lg text-center font-semibold  text-gray-700 '>Dharamshala Registration</h1>\r\n                        <p className='text-xs text-center text-gray-600'>You can apply for Dharamshala</p>\r\n                        <div className='text-center'>\r\n                            <button type=\"button\" class=\"text-xs  mt-2 p-0 px-4 inline-block text-center mb-1 rounded leading-5 text-gray-100 bg-indigo-500 border border-indigo-500 bg-gradient-to-b from-indigo-400 to-indigo-600  hover:from-indigo-500 hover:to-indigo-600 focus:from-indigo-400 focus:to-indigo-600 hover:text-white hover:ring-0 hover:border-indigo-600 focus:bg-indigo-600 focus:border-indigo-600 focus:outline-none focus:ring-0\" onClick={() => navigate(`/dharamshala/${0}/newapply`)}>Apply Here</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/***** pending section 3 ******/}\r\n                <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12  mx-auto gap-4 -mt-4 p-4 '>\r\n                    <div className='col-span-8 '>\r\n                        <div className='border-b border-violet-500'>\r\n                            <div className='flex justify-start bg-white rounded leading-5  w-full  shadow-lg '>\r\n                                <div className='px-4 py-4 '>\r\n                                    <h1 className=' text-lg  font-semibold text-gray-500'>List Of All Applied Application </h1>\r\n                                    {/* <h1 className='text-xs  text-gray-500 '>You Can Get License To Advertise Your Business Name </h1> */}\r\n                                </div>\r\n                                <div className='pt-4  md:flex lg:flex space-x-8 '>\r\n                                    <span>\r\n                                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Banquet/Marriage Hall Applications\">\r\n                                            <button type='button' onClick={() => settabIndex(1)} className='focus:outline-none focus:ring focus:ring-violet-300 '>\r\n                                                {/* <span className='font-bold text-gray-700 mr-7'>5</span> */}\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 p-1  ml-2  rounded-full text-pink-500 bg-pink-100 darks:bg-pink-900 darks:bg-opacity-40  shadow-lg\">\r\n                                                    <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                                    <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                                    <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                                                </svg>\r\n                                                <h1 className='text-xs text-center text-indigo-500'>click</h1>\r\n                                            </button>\r\n\r\n                                        </Tooltip>\r\n                                    </span>\r\n\r\n                                    <span>\r\n                                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Hostel Applications\">\r\n                                            <button type='button' onClick={() => settabIndex(2)} className='focus:outline-none focus:ring focus:ring-violet-300'>\r\n                                                {/* <span className='font-bold text-gray-700 mr-7'>0</span> */}\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 p-1  ml-2  rounded-full text-indigo-500 bg-indigo-100 darks:bg-indigo-900  darks:bg-opacity-40  shadow-lg\">\r\n                                                    <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                                    <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                                    <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                                                </svg>\r\n                                                <h1 className='text-xs text-center text-indigo-500'>click</h1>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </span>\r\n                                    <span>\r\n                                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Lodge Applications\">\r\n                                            <button type='button' onClick={() => settabIndex(3)} className='focus:outline-none focus:ring focus:ring-violet-300'>\r\n                                                {/* <span className='font-bold text-gray-700 mr-7'>0</span> */}\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 p-1  ml-2 rounded-full text-green-500 bg-green-100 darks:bg-green-900 darks:bg-opacity-40  shadow-lg\">\r\n                                                    <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                                    <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                                    <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                                                </svg>\r\n                                                <h1 className='text-xs text-center text-indigo-500'>click</h1>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </span>\r\n                                    <span>\r\n                                        <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Dharamshala Applications\">\r\n                                            <button type='button' onClick={() => settabIndex(4)} className='focus:outline-none focus:ring focus:ring-violet-300'>\r\n                                                {/* <span className='font-bold text-gray-700 mr-7'>0</span> */}\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-8 h-8 p-1 ml-2 rounded-full text-yellow-500 bg-yellow-100 darks:bg-yellow-900 darks:bg-opacity-40  shadow-lg\">\r\n                                                    <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\r\n                                                    <path fill-rule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clip-rule=\"evenodd\" />\r\n                                                    <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\r\n                                                </svg>\r\n                                                <h1 className='text-xs text-center text-indigo-500'>click</h1>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='py-4'>\r\n                            {tabIndex == 1 &&\r\n                                <div>\r\n                                    <BanquetMarriagePendingApplicationList showLoader={showLoader} />\r\n                                </div>\r\n                            }\r\n                            {tabIndex == 2 &&\r\n                                <div>\r\n                                    <HostelPendingApplicationList showLoader={showLoader} />\r\n                                </div>\r\n                            }\r\n                            {tabIndex == 3 &&\r\n                                <div>\r\n                                    <LodgePendingApplicationList showLoader={showLoader} />\r\n                                </div>\r\n                            }\r\n                            {tabIndex == 4 &&\r\n                                <div>\r\n                                    <DharamshalaPendingApplicationList showLoader={showLoader} />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-span-4  bg-white shadow-lg rounded leading-5'>\r\n                        <AdvertisementNotification />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarketingDashboard","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Tooltip } from \"@material-tailwind/react\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingRenewList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_postHoardingRenewList, api_archivedApplication } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <div>\r\n                        <button\r\n                            onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                            className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                        >\r\n                            View\r\n                        </button>\r\n                        {cell.row.original.renew_option == 1 &&\r\n                            <button\r\n                                onClick={() => navigate(`/hoarding/${id}/${cell.row.values.id}/renew`)}\r\n                                className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\"\r\n                            >\r\n                                Renew\r\n                            </button>\r\n                        }\r\n\r\n                        {cell.row.original.renew_option == \"Expired\" &&\r\n                            <button\r\n                                className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\" disabled\r\n                            >\r\n                                Expired\r\n                            </button>\r\n                        }\r\n                        {cell.row.original.renew_option == \"Expired\" &&\r\n                            <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Archived\">\r\n                                <button\r\n                                    onClick={() => handleArchived(cell.row.values.id)}\r\n                                    className=\"bg-indigo-500 float-right px-2 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-5 h-5\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\" clip-rule=\"evenodd\" />\r\n                                    </svg>\r\n\r\n                                    {/* Archived */}\r\n                                </button>\r\n                            </Tooltip>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </>\r\n\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_postHoardingRenewList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                // console.log(\"renew list\", res.data.data.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    console.log(\"application renew list\",)\r\n    const handleArchived = (applicationId) => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n        console.log(\"request body in renew...12\", applicationId)\r\n        axios.post(`${api_archivedApplication}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('archived response', response.data)\r\n                notify(\"Archived successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                notify(\"failed to archived\", \"error\")\r\n            })\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application data in renew list 12\", applicationDetail)\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">RENEW APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {tableStatus && tableStatus?.data != null &&\r\n                        // {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                         {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } \r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingRenewList;","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingArchivedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingArchivedList } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [show, setshow] = useState(false)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <div>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingArchivedList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"archived list\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">ARCHIVED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {tableStatus && tableStatus?.data != null &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingArchivedList;","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingBlacklistedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingBlacklistedList } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <div>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingBlacklistedList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"blacklisted list\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">BLACKLISTED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {tableStatus && tableStatus?.data != null &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingBlacklistedList;","\r\nimport React, { useState, useEffect } from 'react'\r\n// import QRCode from \"react-qr-code\";\r\n// import axios from 'axios'\r\nimport { AiFillPrinter } from 'react-icons/ai'\r\n// import { Link, useNavigate, useParams } from 'react-router-dom';\r\n// import { useRef } from 'react';\r\n// import QrCode from '../../../Trade/tradeComponent/QrCode';\r\n\r\nclass ComponentToPrint extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"paymentData...1\", this.props?.paymentData)\r\n\r\n        return (\r\n            <>\r\n                <div id=\"printableArea\">\r\n                    <div>\r\n                        <div className='md:px-0 flex-1 '>\r\n                            {/* <button onClick={() => window.print()} className=\"float-right pl-4 pr-6 py-1 bg-sky-400 text-white font-medium text-xs leading-tight uppercase rounded  hover:bg-amber-100 hover: focus: focus:outline-none focus:ring-0  active: transition duration-150 ease-in-out\">\r\n                            <AiFillPrinter className='inline text-lg' />\r\n                            print\r\n                        </button> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=''>\r\n                        <div>\r\n                            {/* <NonBlockingLoader show={show} /> */}\r\n\r\n                            <div className='border-2 border-dashed border-gray-600  bg-white p-6 w-[250mm] h-auto ml-12 md:mx-auto lg:mx-auto  container  mt-12 pb-12'>\r\n                                <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 '>\r\n                                    <div className=''>\r\n                                        <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Jharkhand_Rajakiya_Chihna.svg/1200px-Jharkhand_Rajakiya_Chihna.svg.png' className='h-20 mx-auto' />\r\n                                    </div>\r\n                                    {/* <div className=''>\r\n                                    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Jharkhand_Rajakiya_Chihna.svg/1200px-Jharkhand_Rajakiya_Chihna.svg.png' alt=\"\" className='w-[15rem] h-[15rem]  absolute z-10 bg-transparent opacity-20 mt-[8rem] ml-[20rem]  rounded-full border' />\r\n                                </div> */}\r\n                                </div>\r\n\r\n                                {/* rmc */}\r\n                                <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2 '>\r\n                                    <div className=''>\r\n                                        <h1 className='font-bold text-2xl text-center '>RANCHI MUNICIPAL CORPORATION</h1>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* holding tax */}\r\n                                <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2 '>\r\n                                    <div className='mx-auto'>\r\n                                        <h1 className='font-semibold text-xl text-center text-gray-800 border border-gray-700 w-[20rem] '> PAYMENT RECEIPT</h1>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* detail section 1 */}\r\n                                <div>\r\n                                    <table className='w-full  p-2 mt-1'>\r\n                                        <tr className=''>\r\n                                            <td className=' '>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>Transcation No. :</h1>\r\n                                                    <h1 className='flex font-sans font-semibold  pl-2'> {this.props?.paymentData?.payment_details?.transactionNo}</h1>\r\n                                                </div>\r\n\r\n                                            </td>\r\n                                            <td className=' '>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>Date :</h1>\r\n                                                    <h1 className='flex font-sans font-semibold pl-2 '>{this.props?.paymentData?.payment_date}</h1>\r\n                                                </div>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n\r\n\r\n                                {/* detail section 2 */}\r\n                                <div>\r\n                                    <table className='w-full  p-2 mt-4'>\r\n                                        <tr className=''>\r\n                                            <td className=' '>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>Received From Mr/Mrs/Miss :</h1>\r\n                                                    <h1 className='flex font-sans font-semibold  pl-2'>{this.props?.paymentData?.entity_name}</h1>\r\n                                                </div>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>Address :</h1>\r\n                                                    <h1 className='flex font-sans font-semibold pl-2 '>{this.props?.paymentData?.address}</h1>\r\n                                                </div>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>A Sum of Rs.  :</h1>\r\n                                                    <h1 className='flex font-sans font-semibold pl-2 border-b border-dashed border-gray-600 px-2'>{this.props?.paymentData?.payment_amount}</h1>\r\n                                                </div>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>(in words ):</h1>\r\n                                                    <h1 className='flex font-sans font-semibold pl-2 border-b border-dashed border-gray-600 '>{this.props?.paymentData?.inWords}</h1>\r\n                                                </div>\r\n                                                <div className='flex p-1 text-xl'>\r\n                                                    <h1 className='flex text-gray-900 font-sans '>towards : <span className=' font-sans font-semibold ml-1'>{this.props?.paymentData?.towards}</span></h1>\r\n                                                    <h1 className='flex text-gray-900 font-sans  ml-8 '>Vide :<span className=' font-sans font-semibold ml-1'> {this.props?.paymentData?.payment_details?.paymentMode} </span></h1>\r\n                                                </div>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                {/* Qr code*/}\r\n                                <div>\r\n                                    <table className='w-full mt-10 '>\r\n                                        <tr className=''>\r\n                                            {/* <td className=' '>\r\n                                            <div className=''>\r\n                                                <QrCode value={this.props?.qrValue} size='64' />\r\n                                                <QrCode url='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Jharkhand_Rajakiya_Chihna.svg/1200px-Jharkhand_Rajakiya_Chihna.svg.png' size='64' />\r\n                                            </div>\r\n                                            <div className='flex '>\r\n                                                <h1 className='flex text-gray-900 font-sans text-xl'>For Details Please Visit : udhd.jharkhand.gov.in</h1>\r\n                                            </div>\r\n                                            <div className='flex '>\r\n                                                <h1 className='flex text-gray-900 font-sans text-xl'>Or Call us at 1800 8904115 or 0651-3500700</h1>\r\n                                            </div>\r\n                                        </td> */}\r\n                                            <td className='float-right mt-16'>\r\n                                                <div className='flex '>\r\n                                                    <h1 className='flex text-gray-900 font-sans text-xl'>Signature</h1>\r\n                                                </div>\r\n                                                {/* <div className='flex'>\r\n                                                <h1 className='flex text-gray-900 font-sans text-xl'>Sri Publication & Stationers Pvt Ltd</h1>\r\n                                            </div> */}\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                {/* computer generated text */}\r\n                                {/* <div className='grid grid-col-1 md:grid-col-12 lg:grid-col-12 p-2 mt-2'>\r\n                                    <div className=''>\r\n                                        <h1 className='font-semibold text-xl text-center '>**This is a computer-generated receipt and it does not require a signature.**</h1>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default ComponentToPrint","import axios from 'axios';\r\n\r\n// import { contextVar } from 'Components/Context/Context';\r\n\r\nimport React, { useRef, useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactToPrint from 'react-to-print-advanced';\r\nimport AdvertisementApiList from '../AdvertisementApiList';\r\nimport ComponentToPrint from './AdvtPaymentReceipt';\r\nimport useSetTitle from '../../../Components/GlobalData/UseSetTitle';\r\nimport ApiHeader from '../../../Components/ApiList/ApiHeader';\r\n\r\n\r\n\r\nfunction AdvtPaymentReceiptIndex() {\r\n\r\n    ///////{***✅ payment Id from use param...***}///////\r\n    const { paymentId, wrkflowId } = useParams()\r\n   \r\n\r\n    console.log(\"param transcation id ..\", paymentId)\r\n    console.log(\"param wrkflow id ..\", wrkflowId)\r\n\r\n    const { getPaymentsuccessDetails } = AdvertisementApiList();\r\n\r\n    const componentRef = useRef();\r\n    const [paymentData, setpaymentData] = useState();\r\n    // SETTING GLOBAL TITLE AT ONCE USING CUSTOM HOOK\r\n    useSetTitle('Payment Receipt')\r\n\r\n    useEffect(() => {\r\n        fetchPaymentData();\r\n    }, [])\r\n\r\n    const fetchPaymentData = () => {\r\n        const requestBody = {\r\n            paymentId: paymentId,\r\n            workflowId: wrkflowId,\r\n        }\r\n\r\n        console.log('before fetch payment receipt....', requestBody)\r\n        axios.post(`${getPaymentsuccessDetails}`, requestBody, ApiHeader())\r\n            .then((response) => {\r\n                // console.log(\"payment data\", response.data.data);\r\n                console.log(\"payment data 2\", response);\r\n                if (response.data.status) {\r\n\r\n                    setpaymentData(response.data.data);\r\n                } else {\r\n                \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    console.log(\"payment data\", paymentData)\r\n\r\n    return (\r\n        <div>\r\n            {/* <NonBlockingLoader show={show} /> */}\r\n            {/* {\r\n                show && <BarLoader />\r\n            } */}\r\n            <ReactToPrint\r\n                trigger={() => <button className='bg-sky-200 px-4 py-1 text-md font-semibold'>Print</button>}\r\n                content={() => componentRef.current}\r\n            />\r\n            {/* <ComponentToPrint module={module} ref={componentRef} paymentData={paymentData} /> */}\r\n            <ComponentToPrint ref={componentRef} paymentData={paymentData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvtPaymentReceiptIndex","import React from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport SelfAdvertisementIndexForm from './SelfAdvertisement/SelfAdvertisementIndexForm'\r\nimport MovableVehicleIndexForm from './MovableVehicle/MovableVehicleIndexForm'\r\nimport PrivateLandIndexForm from './PrivateLand/PrivateLandIndexForm'\r\nimport AgencyDetailIndexForm from './Agency/AgencyDetailIndexForm'\r\nimport AdvertisementDashboard from './AdvertisementDashboard'\r\nimport HoardingIndex from './Agency/Hoarding/HoardingIndex'\r\nimport SelfApprovalIndexForm from './SelfPrintable/SelfApprovalIndexForm'\r\nimport AgencyDashboard from './Agency/AgencyDashboard/AgencyDashboard'\r\nimport ViewAllHoardingPendingList from './Agency/Hoarding/ViewAllHoardingPendingList'\r\nimport ViewAllHoardingApprovedList from './Agency/Hoarding/ViewAllHoardingApprovedList'\r\nimport ViewAllHoardingRejectedList from './Agency/Hoarding/ViewAllHoardingRejectedList'\r\nimport ViewAllHoardingUnpaidList from './Agency/Hoarding/ViewAllHoardingUnpaidList'\r\nimport PaymentScreen from './PaymentScreen'\r\nimport BanquetMarriageHallFormIndex from '../marketing/MarketingModules/BanquetMarriageHall/BanquetMarriageHallFormIndex'\r\nimport DharamshalaIndex from '../marketing/MarketingModules/Dharmsala/DharamshalaIndex'\r\nimport HostelIndex from '../marketing/MarketingModules/Hostel/HostelIndex'\r\nimport LodgeIndex from '../marketing/MarketingModules/Lodge/LodgeIndex'\r\nimport MarketingDashboard from '../marketing/MarketingDashboard'\r\nimport HoardingRenewList from './Agency/AgencyDashboard/HoardingRenewList'\r\nimport HoardingArchivedList from './Agency/AgencyDashboard/HoardingArchivedList'\r\nimport HoardingBlacklistedList from './Agency/AgencyDashboard/HoardingBlacklistedList'\r\nimport AdvtPaymentReceiptIndex from './AdvtPaymentReceiptIndex'\r\n\r\n\r\n\r\nfunction AdvertisementRoutes() {\r\n    return (\r\n        <>\r\n            <div className=''>\r\n                <Routes>\r\n                    {/*//////////// Advertisement routes/////////////// */}\r\n                    {/* <Route path=\"/advertDashboard\" element={<AdvertisementDashboard />} /> */}\r\n                    <Route path=\"/selfAdvrt/:id/:type\" element={<SelfAdvertisementIndexForm />} />\r\n                    <Route path=\"/movableVehicle/:id/:type\" element={<MovableVehicleIndexForm />} />\r\n                    <Route path=\"/privateLand/:id/:type\" element={<PrivateLandIndexForm />} />\r\n                    <Route path=\"/agency/:id/:type\" element={<AgencyDetailIndexForm />} />\r\n                    <Route path=\"/agencyDashboard/:id\" element={<AgencyDashboard />} />\r\n                    <Route path=\"/hoarding/:ulbId/:applicationId/:type\" element={<HoardingIndex />} />\r\n                    {/* <Route path=\"/hoarding\" element={<HoardingIndex />} /> */}\r\n                    <Route path=\"/paymentScreen/:paymentid/:wrkflowId\" element={<PaymentScreen />} />\r\n                    <Route path=\"/advtPaymentReceipt/:paymentId/:wrkflowId\" element={<AdvtPaymentReceiptIndex/>} />\r\n                    <Route path=\"/approvalLetter/:id/:workflowId\" element={<SelfApprovalIndexForm />} />\r\n                    {/* <Route path=\"/paymentSuccess\" element={<PaymentSuccessScreen />} /> */}\r\n                    <Route path=\"/hoarding-pending-list\" element={<ViewAllHoardingPendingList />} />\r\n                    <Route path=\"/hoarding-approved-list\" element={<ViewAllHoardingApprovedList />} />\r\n                    <Route path=\"/hoarding-Rejected-list\" element={<ViewAllHoardingRejectedList />} />\r\n                    <Route path=\"/hoarding-Unpaid-list\" element={<ViewAllHoardingUnpaidList />} />\r\n                    <Route path=\"/hoarding-Renew-list/:id\" element={<HoardingRenewList />} />\r\n                    <Route path=\"/hoarding-archived-list\" element={<HoardingArchivedList />} />\r\n                    <Route path=\"/hoarding-blacklisted-list\" element={<HoardingBlacklistedList />} />\r\n\r\n                    <Route path=\"/marketingDashboard\" element={<MarketingDashboard />} />\r\n\r\n\r\n                    {/*//////////// Marketing routes/////////////// */}\r\n                    <Route path=\"/marriage-hall/:id/:type\" element={<BanquetMarriageHallFormIndex />} />\r\n                    <Route path=\"/dharamshala/:id/:type\" element={<DharamshalaIndex />} />\r\n                    <Route path=\"/hostel/:id/:type\" element={<HostelIndex />} />\r\n                    <Route path=\"/lodge/:id/:type\" element={<LodgeIndex />} />\r\n\r\n\r\n                </Routes>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdvertisementRoutes","\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n"],"names":["ApiHeader","token","window","localStorage","getItem","timeout","headers","Authorization","Accept","className","style","tittleStyle","labelStyle","divStyle","xmlns","fill","viewBox","stroke","class","d","src","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","useState","imgPath","setimgPath","DocUrl","setDocUrl","modalIsOpen","setIsOpen","imageFile","setimageFile","modalAction","url","initialValues","image","docCode","data","ownerDtlId","formik","useFormik","onSubmit","values","console","log","collectAllDataFun","mykey","handleFile","file","setFieldValue","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","onChange","e","name","target","value","files","encType","document_name","docType","undefined","alt","split","pop","onClick","Tooltip","type","accept","handleChange","isOpen","onAfterOpen","onRequestClose","contentLabel","frameborder","setFormIndex","collectFormDataFun","showLoader","toastFun","api_getSelfAdvertDocList","AdvertisementApiList","collectDoc","setcollectDoc","docList","setdocList","renewDocList","setrenewDocList","collectAllData","key","formData","useEffect","getDocumentList","axios","deviceId","ApiHeaderAdvrt","then","response","catch","error","SELF_ADVERT","map","items","index","api_getAdvertisementCategory","advtCategory","setadvtCategory","getHoardingCategoryList","descriptions","existingApplicationDetails","api_getAdvertMasterData","api_getUlbList","api_getWardList","api_getTradeLicenseDetails","CitizenApplyApiList","api_getAllUlb","api_wardByUlb","masterData","setmasterData","ulbList","setulbList","wardList","setwardList","reviewIdName","setreviewIdName","storeUlbValue","setstoreUlbValue","liceneData","liceneDetails","tabIndex","settabIndex","isLoading","setisLoading","erroState","seterroState","inputStyle","validationSchema","yup","ulb","required","licenseYear","applicantName","max","fatherName","email","residenceAddress","residenceWardNo","permanentAddress","permanentWardNo","mobileNo","aadharNo","min","entityName","entityAddress","entityWardNo","installationLocation","brandDisplayName","gstNo","displayArea","displayType","holdingNo","tradeLicenseNo","longitude","latitude","advrtCategory","enableReinitialize","useSetTitle","getUlbListData","getWardListFun","ulbId","requestBody","getMasterDataFun","getCategoryList","feedApplicationData","ulb_id","license_year","applicant","father","residence_address","ward_id","permanent_address","permanent_ward_id","mobile_no","aadhar_no","entity_name","entity_address","entity_ward_id","installation_location","brand_display_name","trade_license_no","gst_no","holding_no","display_area","display_type","advt_category","BarLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","licenseDataById","selectedIndex","text","allowNumberInput","allowCharacterNumberInput","allowFloatInput","allowMailInput","getFieldProps","id","ulb_name","paramCategories","LicenseYear","string_parameter","touched","errors","placeholder","disabled","ward_name","permanent_ward_name","entity_ward_name","selected","InstallationLocation","DisplayType","allFormData","reviewIdNameData","nullToNA","selfAdvertisement","license_year_name","advt_category_name","selfAdvertisementDoc","submitFun","useNavigate","responseScreenData","ApplicationNo","to","formIndex","setAllFormData","responseScreen","setresponseScreen","reviewData","setreviewData","setshow","setexistingApplicationDetails","setapplicationType","useParams","api_postSelfAdvertApplication","api_renewSelfAdvt_license","api_getApplicationDetailsToRenew","notify","toastData","toast","submitSelfAdvertForm","wardId","permanentWardId","entityWardId","documents","applicationId","val","fetchApplicationDetails","status","BrandLoader","position","autoClose","webkitdirectory","MOVABLE_VEHICLE","getTypologyList","typologyList","settypologyList","licenseFrom","licenseTo","vehicleNo","vehicleName","vehicleType","brandDisplayedInVehicle","frontArea","rearArea","sideOneArea","topArea","typology","typologyListFun","err","license_from","license_to","vehicle_no","vehicle_name","vehicle_type_id","brand_display","front_area","rear_area","side_area","top_area","display_type_id","typology_id","VehicleTypes","filter","Type","item","movableVehicle","vehicle_type","movableVehicleDoc","api_postMovableVehicleApplication","api_renewMovableVehicle_license","api_getMovableApplicationDetailsToRenew","submitMovableVehicleForm","mobile","brandDisplayed","sideArea","PRIVATE_LAND","entityWard","brandDisplayeName","brandDisplayeAddress","totalDisplayArea","noOfHoarding","holdingNoBrandDisplay","setTimeout","brand_display_address","no_of_hoardings","installation_location_id","holding_brand_display_address","privateLand","privateLandDoc","api_postPrivateLandApplication","api_renewPrivateLand_license","api_getPrivateApplicationDetailsToRenew","submitPrivateLandForm","brandDisplayAddress","brandDisplayHoldingNo","noOfHoardings","entityType","address","officialTelephone","fax","panNo","blacklisted","pendingCourtCase","pendingAmount","applicationNo","entity_type","telephone","pan_no","pending_court_case","pending_amount","application_no","checked","entity_type_name","EntityType","AGENCY","agency","agencyDirector","agencyDoc","directorData","setdirectorData","formToggleStatus","setformToggleStatus","AddMore","setAddMore","setdirectorDataVisibility","directorPreviewList","setdirectorPreviewList","resetForm","directors","length","previewDirector","director_name","director_mobile","director_email","scope","alert","current","ct","indexOf","handleRemove","api_postAgencyApplication","api_getAgencyDetails","api_renew_license","submitAgencyForm","officeTelephone","AgencyDetailForm","AgencyDetailDocForm","ReviewAgencyApplication","getHoardingCategory","hoardingCategory","sethoardingCategory","subtype","api_getDistrictList","districtList","location","zone","lengthOfHoarding","widthOfHoarding","areaOfBoard","landmark","propertyType","facing","materialType","illumination","lisenseYear","ownerName","ownerAddress","ownerCity","ownerPhone","ownerWhatsappNo","width","area","property_type","property_owner_name","property_owner_address","property_owner_city","property_owner_mobile_no","property_owner_whatsapp_no","material","illumination_id","zone_id","Jharkhand","AgencyHordingLicense","AGENCY_HORDING_LICENSE","hoarding1","typology_name","illumination_name","hoardingDoc","api_postHoardingApplication","api_renewHoarding_license","api_getHoardingApplicationDetailsToRenew","submitHoardingApplication","zoneId","HordingType","displayLocation","indicateFacing","displayLandMark","propertyOwnerName","propertyOwnerAddress","propertyOwnerCity","propertyOwnerWhatsappNo","propertyOwnerMobileNo","ComponentToPrint","this","paymentData","reciept_no","approve_date","applicant_name","license_start_date","license_no","React","workflowId","getApprovalLetterDetails","componentRef","useRef","setpaymentData","fetchPaymentData","trigger","ref","profileDetail","setprofileDetail","navigate","notification","hoardingNo","action","showPayment","showMessage","getAgencyDetails","expiry_date","warning","api_getHoardingApplicationFullDetail","api_getHoardingAppliedDocumentList","applicationDetail","setapplicationDetail","documentList","setdocumentList","applicationType","closeModal","getApplicationDetail","fullDetailsData","getAppliedDocumentList","apply_date","dataArray","displayString","doc_val","BackendUrlAdvt","doc_path","api_getHoardingApprovedApplicationList","setapplicationNo","slice","application_date","api_postHoardingReuploadedDocument","verify_status","api_getHoardingReuploadDoc","api_getHoardingPendingApplicationList","modalIsOpen1","setIsOpen1","closeModal1","docUploadModal","doc_upload_status","api_getHoardingRejectedApplicationList","api_getHoardingUnpaidApplicationList","options","chart","subtitle","BarGraphComponent","chartType","height","fun","api_getAgencyDashboardData","agencyDashboard","setagencyDashboard","myRef","executeScroll","scrollIntoView","countUnpaideAppl","totalUnpaid","countPendindAppl","totalPending","countApprovedAppl","totalApproved","countRejectAppl","totalRejected","setFilter","bounce","setbounce","columns","useMemo","dataList","setPageSize","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableBodyProps","getTableProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","prepareRow","pageOptions","gotoPage","pageCount","state","setGlobalFilter","globalFilter","pageSize","onMouseEnter","onMouseLeave","CSVLink","children","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Number","tableStatus","settableStatus","COLUMNS","Header","Cell","accessor","original","res","assessmentType","api_blacklistedApplication","handleBlacklisted","background","api_getHoardingOrderIdForPayment","setorderId","openPaymentModal","applicationDetails","dreturn","razorpay_payment_id","workflow_id","payment_amount","RazorpayPaymentScreen","api_getHoardingApplicationDetailForPayment","applicationIdDetail","setapplicationIdDetail","setOpenPaymentModal","handlePayment","appId","prev","paymentid","wrkflowId","getPaymentsuccessDetails","paymentDetails","setpaymentDetails","getPaymentSuccessData","paymentId","payment_details","paymentMode","amount","transactionNo","applyYearValue","setapplyYearValue","rule","hallType","organizationType","floorArea","landDeedType","waterSupplyType","electricityType","securityType","noOfCctv","noFireExtinguishers","noEntryGates","noExitGate","noTwoWheelerParking","noFourWheelerParking","residential_address","residential_ward_id","hall_type_id","electricity_type_id","organization_type_id","floor_area","land_deed_type_id","water_supply_type_id","security_type_id","cctv_camera","fire_extinguisher","entry_gate","exit_gate","two_wheelers_parking","four_wheelers_parking","aadhar_card","pan_card","resident_ward_name","HallType","OrganizationType","LandDeedType","WaterSupplyType","ElectricityType","SecutityType","BANQUTE_MARRIGE_HALL","banquetForm","hall_type_name","organization_type_name","land_deed_type_name","water_supply_type_name","electricity_type_name","security_type_name","banquetDoc","api_postBanquetApplication","api_renewBanquet_license","api_getBanquetApplicationDetailsToRenew","submitBanquetApplicationForm","residentialAddress","residentialWardId","cctvCamera","fireExtinguisher","entryGate","exitGate","twoWheelersParking","fourWheelersParking","aadharCard","panCard","applyRule","setapplyRule","noOfBeds","noOfRooms","DHARAMSHALA","dharamshala","dharamshalaDoc","api_postDharamshalaApplication","api_renewDharamshala_license","api_getDharamshalaApplicationDetailsToRenew","submitDharamshalaForm","DharamshalaForm","hostelType","messType","isGovtInstitute","establishmentType","hostel_type_id","mess_type_id","is_approve_by_govt_id","residential_ward_name","HostelType","lodgeType","MessType","HOSTEL","hostelForm","hostel_type","mess_type","is_approve_by_govt_name","hostelDoc","api_postHostelApplication","api_renewHostel_license","api_getHostelApplicationDetailsToRenew","submitHostelForm","isApproveByGovt","message","lodgeForm","lodge_type","lodgeDoc","lodge_type_id","no_of_beds","no_of_rooms","LODGE","api_postLodgeApplication","api_renewLodge_license","api_getLodgeApplicationDetailsToRenew","submitLodgeForm","api_getBanquetAppliedApplicationDetail","api_getBanquetAppliedDocumentList","api_getBanquetOrderIdForPayment","api_postBanquetReuploadedDocument","api_getBanquetReuploadDoc","overflowY","api_getBanquetAppliedApplicationList","api_getBanquetApprovedApplicationList","api_getBanquetRejectedApplicationList","api_getBanquetApplicationDetailForPayment","appliedApplication","setappliedApplication","approvedApplication","setapprovedApplication","rejectedApplication","setrejectedApplication","getApplicationList","getApprovedApplicationList","getRejectedApplicationList","renew_option","payment_status","temp_id","api_getHostelAppliedApplicationDetail","api_getHostelAppliedDocumentList","api_getHostelOrderIdForPayment","api_postHostelReuploadedDocument","api_getHostelReuploadDoc","api_getHostelAppliedApplicationList","api_getHostelApprovedApplicationList","api_getHostelRejectedApplicationList","api_getHostelApplicationDetailForPayment","api_getDharamshalaAppliedApplicationDetail","api_getDharamshalaAppliedDocumentList","api_getDharamshalaOrderIdForPayment","api_postDharamshalaReuploadedDocument","api_getDharamshalaReuploadDoc","api_getDharamshalaAppliedApplicationList","api_getDharamshalaApprovedApplicationList","api_getDharamshalaRejectedApplicationList","api_getDharamshalaApplicationDetailForPayment","api_getLodgeAppliedApplicationDetail","api_getLodgeAppliedDocumentList","api_getLodgeOrderIdForPayment","api_postLodgeReuploadedDocument","api_getLodgeReuploadDoc","api_getLodgeAppliedApplicationList","api_getLodgeApprovedApplicationList","api_getLodgeRejectedApplicationList","api_getLodgeApplicationDetailForPayment","api_getAppliedApplicationList","show","Loader","AdvertisementNotification","api_postHoardingRenewList","api_archivedApplication","handleArchived","api_getHoardingArchivedList","api_getHoardingBlacklistedList","payment_date","inWords","towards","path","element","AgencyDetailIndexForm","currentValue","oldValue","re","test"],"sourceRoot":""}