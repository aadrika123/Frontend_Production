{"version":3,"file":"static/js/4119.4c8bef73.chunk.js","mappings":"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","sources":["Pages/Water/ViewConsumer/WaterDemandPayment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { MdTag } from 'react-icons/md'\r\nimport moment from 'moment'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList'\r\n\r\n\r\nconst WaterDemandPayment = () => {\r\n    const [applicationFullData, setApplicationFullData] = useState()\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [demandData, setDemandData] = useState()\r\n\r\n    const [demandCalculationData, setDemandCalculationData] = useState()\r\n    const [fromDate, setFromDate] = useState()\r\n    const [uptoDate, setUptoDate] = useState()\r\n\r\n\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    // useSetTitle('Water Demand Payment')\r\n\r\n\r\n    const { api_waterApprovedApplicationDetails, api_waterListDemand, api_waterDemandCalculation, api_waterDemandPayment, header } = WaterApiList();\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail() //Fetch Application Details\r\n        getDemandListDetails() //Fetch All Due Demand List\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        demandCalculation()\r\n    }, [uptoDate, fromDate])\r\n\r\n    const demandCalculation = () => {// Demand Calculation Api called\r\n\r\n        if (uptoDate == \"\") return setDemandCalculationData()\r\n        if (fromDate == \"\") return setDemandCalculationData()\r\n\r\n        setIsLoading(true)\r\n\r\n        const payload = {\r\n            \"consumerId\": id,\r\n            \"demandFrom\": fromDate,\r\n            \"demandUpto\": uptoDate\r\n        }\r\n\r\n        axios.post(api_waterDemandCalculation, payload, header)\r\n            .then(function (response) {\r\n                console.log('water demand calculation Details', response.data.data)\r\n                setDemandCalculationData(response.data.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error : water calculating demand', error)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    const getApplicationDetail = () => {\r\n        setIsLoading(true)\r\n        axios.post(api_waterApprovedApplicationDetails, { id: id }, header)\r\n            .then(function (response) {\r\n                console.log('water Approved Application Details', response.data.data)\r\n                setApplicationFullData(response.data.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error : water Approved Application Details', error)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const getDemandListDetails = () => {\r\n        axios.post(api_waterListDemand, { \"ConsumerId\": id }, header)\r\n            .then((res) => {\r\n                console.log(\"Fetched Water Demand List\", res.data.data)\r\n                setDemandData(res.data.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Exception while fetching Water Demand\", err)\r\n            })\r\n    }\r\n\r\n\r\n    const submitForm = (data) => {\r\n\r\n        const payload = {\r\n            'consumerId': id,\r\n            'demandFrom': fromDate,\r\n            'demandUpto': fromDate,\r\n            'amount': demandCalculationData?.totalPayAmount,\r\n        }\r\n\r\n        console.log(\"final submit\", payload)\r\n\r\n        // return\r\n\r\n        axios.post(api_waterDemandPayment, payload, header)\r\n            .then((res) => {\r\n                if (res.data.status) {\r\n                    getDemandListDetails()\r\n                    console.log(\"Demand Paid Successfully\", res)\r\n                } else {\r\n                    console.log(\"Failed to paid Demand.\", res)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Exception while Demand payment\", err)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    //Formik Start\r\n\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        monthFrom: yup.string().required('Require Field'),\r\n        monthUpto: yup.string().required('Require Field'),\r\n        // remarks: yup.string().required('Require Field'),\r\n\r\n\r\n    })\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            monthFrom: '',\r\n            monthUpto: '',\r\n            penalty: '',\r\n            rebate: '',\r\n            advanced: '',\r\n        },\r\n\r\n        onSubmit: (values, resetForm) => {\r\n            // console.log(\"Form Data\", values)\r\n            submitForm(values)\r\n        }\r\n        , validationSchema\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n\r\n        { (name == 'monthFrom') && setFromDate(value) }\r\n        { (name == 'monthUpto') && setUptoDate(value) }\r\n\r\n    }\r\n\r\n    //Formik END\r\n\r\n\r\n    // Filter Data Demand upto should be greater than demand upto\r\n    const filterDate = demandData?.consumerDemands?.filter(item => moment(item.demand_upto, 'YYYY-MM-DD').format('yy-MM').toString() >= moment(fromDate, 'YYYY-MM-DD').format('yy-MM'));\r\n    // const filterDate =  demandData?.consumerDemands?.filter(item =>  item.demand_upto >= fromDate);\r\n\r\n    // console.log(\"filterDate\",fromDate, moment(fromDate, 'YYYY-MM-DD').format('MMyy'))\r\n    // console.log(\"filterDate\", filterDate)\r\n    return (\r\n        <>\r\n            {/* {isLoading && <BarLoader />} */}\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-2 container mx-auto w-full'>\r\n\r\n                <div className=\"col-span-12 rounded-lg p-4\">\r\n\r\n                    {/* Basic  details */}\r\n                    <div className='p-4'>\r\n                        <div className=''>\r\n                            <h1 className='px-1 font-semibold font-serif  text-gray-500'><MdTag className=\"inline\" /> Basic Details</h1>\r\n                            <div className='py-6 mt-2 bg-white rounded-lg shadow-xl p-4'>\r\n                                <div className=\"flex space-x-5 pl-4 \">\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-semibold text-sm'>{applicationFullData?.ulb_name ? applicationFullData?.ulb_name : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>ULB Name</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.ward_name ? applicationFullData?.ward_name : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Ward No.</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.consumer_no ? applicationFullData?.consumer_no : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Consumer No</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.connection_through ? applicationFullData?.connection_through : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Connection Through</div>\r\n                                    </div>\r\n                                    {applicationFullData?.connection_through == 'SAF' ?\r\n                                        <div className='flex-1'>\r\n                                            <div className='font-semibold text-md'>{applicationFullData?.saf_no ? applicationFullData?.saf_no : \"N/A\"}</div>\r\n                                            <div className='text-gray-500 text-xs'>SAF No</div>\r\n                                        </div> :\r\n                                        <div className='flex-1'>\r\n                                            <div className='font-semibold text-md'>{applicationFullData?.holding_no ? applicationFullData?.holding_no : \"N/A\"}</div>\r\n                                            <div className='text-gray-500 text-xs'>Holding No</div>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-semibold text-md'>{applicationFullData?.owner_char_type ? applicationFullData?.owner_char_type : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Ownership Type</div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <>\r\n                        <div className='mt-5 p-4'>\r\n                            <h1 className='px-1 font-semibold font-serif text-gray-500'><MdTag className=\"inline\" />Due Demand Details</h1>\r\n\r\n                            <table className='min-w-full leading-normal mt-2 bg-white rounded-lg shadow-xl p-4'>\r\n                                <thead className='font-bold text-left text-sm border text-gray-800 bg-white'>\r\n                                    <tr>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">#</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand From</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand Upto</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand Amount</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Penalty</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Connection Type</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Payable Amount </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-sm\">\r\n\r\n                                    <>\r\n                                        {demandData?.consumerDemands?.map((items, i) => (\r\n                                            <tr className=\"bg-white shadow-xl border-b border-gray-200\">\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{i + 1}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.demand_from ? moment(items?.demand_from, 'YYYY-MM-DD').format('DD-MMM-yy') : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.demand_upto ? moment(items?.demand_upto, 'YYYY-MM-DD').format('DD-MMM-yy') : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.balance_amount ? items?.balance_amount : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.penalty ? items?.penalty : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.connection_type ? items?.connection_type : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.amount ? '₹ ' + items?.amount : \"N/A\"}</td>\r\n\r\n                                            </tr>\r\n                                        ))}\r\n                                    </>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </>\r\n\r\n\r\n                    <div className=\"col-span-12 rounded-lg p-4\">\r\n                        <div className='py-6 mt-2 bg-white rounded-lg shadow-xl border border-y-gray-200 p-4'>\r\n                            <form onSubmit={formik.handleSubmit} onChange={handleChange} className=\"p-4 relative\">\r\n\r\n                                <div className=\"grid grid-cols-12\">\r\n\r\n                                    {/* Forms */}\r\n\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\" mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Month From</label>\r\n                                        <select {...formik.getFieldProps('monthFrom')} type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {demandData?.consumerDemands?.map((item, index) => (\r\n                                                <option key={index} value={item.demand_from}>{moment(item.demand_from, 'YYYY-MM-DD').format('MMM-yy')}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.monthFrom && formik.errors.monthFrom ? formik.errors.monthFrom : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\" mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Month Upto</label>\r\n                                        <select {...formik.getFieldProps('monthUpto')} type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {filterDate?.map((item, index) => (\r\n                                                <option key={index} value={item.demand_upto}>{moment(item.demand_upto, 'YYYY-MM-DD').format('MMM-yy')}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.monthUpto && formik.errors.monthUpto ? formik.errors.monthUpto : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Total Demand</label>\r\n                                        <input {...formik.getFieldProps('amount')} value={demandCalculationData?.totalDemand || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.amount && formik.errors.amount ? formik.errors.amount : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Penalty</label>\r\n                                        <input {...formik.getFieldProps('penalty')} value={demandCalculationData?.totalPenalty || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.penalty && formik.errors.penalty ? formik.errors.penalty : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Rebate</label>\r\n                                        <input {...formik.getFieldProps('rebate')} value={demandCalculationData?.totalRebate || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.rebate && formik.errors.rebate ? formik.errors.rebate : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Advanced</label>\r\n                                        <input {...formik.getFieldProps('advanced')} value={demandCalculationData?.totalAdvance || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.advanced && formik.errors.advanced ? formik.errors.advanced : null}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-4 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <p>Remain Advance : <span className='text-orange-700 font-semibold'>{demandCalculationData?.remaningAdvanceAmount || 0}</span></p>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-4 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <p> Payable Amount : <span className='text-green-700 font-semibold'>{demandCalculationData?.totalPayAmount ? '₹' + demandCalculationData?.totalPayAmount : 0}</span></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-span-12 grid grid-cols-2 mt-10\">\r\n\r\n                                        <div className=''></div>\r\n                                        <div className='md:pl-10 text-right space-x-5'>\r\n                                            <button type='button' onClick={() => navigate(-1)} className=\" px-6 py-2.5 bg-sky-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-sky-700 hover:shadow-lg focus:bg-sky-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Back</button>\r\n                                            <button type='submit' className=\" px-6 py-2.5 bg-indigo-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-indigo-600 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Pay Tax</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaterDemandPayment"],"names":["useState","applicationFullData","setApplicationFullData","setIsLoading","demandData","setDemandData","demandCalculationData","setDemandCalculationData","fromDate","setFromDate","uptoDate","setUptoDate","id","useParams","navigate","useNavigate","WaterApiList","api_waterApprovedApplicationDetails","api_waterListDemand","api_waterDemandCalculation","api_waterDemandPayment","header","useEffect","getApplicationDetail","getDemandListDetails","demandCalculation","payload","axios","then","response","console","log","data","catch","error","res","err","validationSchema","yup","monthFrom","required","monthUpto","formik","useFormik","enableReinitialize","initialValues","penalty","rebate","advanced","onSubmit","values","resetForm","totalPayAmount","status","submitForm","filterDate","consumerDemands","filter","item","moment","demand_upto","format","toString","className","ulb_name","ward_name","consumer_no","connection_through","saf_no","holding_no","owner_char_type","map","items","i","demand_from","balance_amount","connection_type","amount","handleSubmit","onChange","e","name","target","value","getFieldProps","type","index","touched","errors","totalDemand","disabled","totalPenalty","totalRebate","totalAdvance","remaningAdvanceAmount","onClick"],"sourceRoot":""}