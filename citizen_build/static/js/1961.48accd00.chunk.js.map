{"version":3,"file":"static/js/1961.48accd00.chunk.js","mappings":"kWAiCMA,EAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,gBAAiB,QACjBC,OAAQ,SAGhBC,IAAAA,cAAoB,SA+OpB,UA7OA,SAA2BC,GACvB,OAAoCC,EAAAA,EAAAA,WAAS,GAAM,eACnD,GADiB,KAAe,MACIA,EAAAA,EAAAA,WAAS,IAAM,eACnD,GADiB,KAAe,MAC+BC,EAAAA,EAAAA,MAAvDC,EAAyB,EAAzBA,0BAA2BC,EAAuB,EAAvBA,wBACnC,GAAkDH,EAAAA,EAAAA,YAAU,eAArDI,EAAiB,KAAEC,EAAoB,KAC9C,GAAsCL,EAAAA,EAAAA,WAAS,GAAM,eAA9CM,EAAW,KAAEC,EAAc,KAClC,GAA8CP,EAAAA,EAAAA,YAAU,eAAjDQ,EAAe,KAAEC,EAAkB,KAC1C,GAA0CT,EAAAA,EAAAA,YAAU,eAA7CU,EAAa,KAAEC,EAAgB,KACtC,GAAwBX,EAAAA,EAAAA,WAAS,GAAM,eAA1BY,GAAF,KAAS,MACpB,GAAkCZ,EAAAA,EAAAA,WAAS,GAAM,eAA1Ca,EAAS,KAAEC,EAAY,KAC9B,GAAkCd,EAAAA,EAAAA,WAAS,GAAM,eAA1Ce,EAAS,KAAEC,EAAY,KAE9B,GAAiChB,EAAAA,EAAAA,WAAS,GAAM,eAAzCiB,EAAW,KAAEC,GAAS,KAEvBC,GAAa,WAAH,OAASD,IAAU,EAAM,EAGzC,IAAwClB,EAAAA,EAAAA,YAAU,iBAC1CoB,IADW,MAAiB,OACrBC,EAAAA,EAAAA,MAAPD,IACRE,QAAQC,IAAI,cAAeH,IAE3B,IAGMI,GAAS,SAACC,EAAWC,GACvBC,EAAAA,GAAAA,UACY,WAARD,GACAC,EAAAA,GAAAA,QAAcF,GAEN,SAARC,GACAC,EAAAA,GAAAA,MAAYF,EAEpB,EACMG,IAAWC,EAAAA,EAAAA,MAEXC,GAAU,CACZ,CACIC,OAAQ,IAERC,KAAM,gBAAGC,EAAG,EAAHA,IAAG,OAAO,gBAAKC,UAAU,OAAM,SAAED,EAAIE,MAAQ,GAAQ,GAElE,CACIJ,OAAQ,iBACRK,SAAU,kBAEd,CACIL,OAAQ,cACRK,SAAU,oBAGd,CACIL,OAAQ,SACRK,SAAU,KACVJ,KAAM,gBAAGK,EAAI,EAAJA,KAAI,OACT,+BACI,4BACI,mBACIC,QAAS,kBAAMC,GAAYF,EAAKJ,IAAIO,OAAOpB,GAAI,UAAU,EACzDc,UAAU,yHACM,kBAIe,GAAlCG,EAAKJ,IAAIQ,SAASC,eACf,mBACIJ,QAAS,kBAAMV,GAAS,aAAD,OAAcR,GAAE,YAAIiB,EAAKJ,IAAIO,OAAOpB,GAAE,UAAS,EACtEc,UAAU,8HACA,mBAMiB,WAAlCG,EAAKJ,IAAIQ,SAASC,eACf,mBACIR,UAAU,8HACCS,UAAQ,uBAKQ,WAAlCN,EAAKJ,IAAIQ,SAASC,eACf,SAAC,EAAAE,QAAO,CAACV,UAAU,oCAAoC7C,QAAQ,WAAU,UACrE,mBACIiD,QAAS,kBAAMO,GAAeR,EAAKJ,IAAIO,OAAOpB,GAAG,EACjDc,UAAU,0IACJ,UAEN,gBAAKY,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,UAAS,UAC3F,iBAAM,YAAU,UAAUC,EAAE,kSAAkS,YAAU,sBAU7V,IAMTX,GAAc,SAACY,EAAe3C,GAChCc,QAAQC,IAAI,6CAA8C4B,GAC1D7B,QAAQC,IAAI,+CAAgDf,GAC5DG,EAAiBwC,GACjB1C,EAAmBD,GAhGCU,IAAU,EAkGlC,GAoCAkC,EAAAA,EAAAA,YAAU,WAxBNpC,GAAa,GACbF,GAAa,GACbuC,EAAAA,GAAAA,KAAWnD,EAA2B,CAAC,GAAGoD,EAAAA,EAAAA,MACrCC,MAAK,SAACC,GAECA,EAAIC,KAAKC,SACTrD,EAAqBmD,EAAIC,KAAKA,MAC9BlD,GAAe,GACfO,GAAa,GAKrB,IACC6C,OAAM,SAACC,GACJtC,QAAQC,IAAIqC,GACZ5C,GAAa,GACbF,GAAa,EACjB,GAQR,GAAG,IAEHQ,QAAQC,IAAI,yBAA0BnB,GACtC,IAAMyC,GAAiB,SAACM,GACpB,IAAMU,EAAc,CAChBV,cAAeA,GAEnB7B,QAAQC,IAAI,6BAA8B4B,GAC1CE,EAAAA,GAAAA,KAAW,GAAD,OAAIlD,GAA2B0D,GAAaP,EAAAA,EAAAA,MACjDC,MAAK,SAAUO,GACZxC,QAAQC,IAAI,oBAAqBuC,EAASL,MAC1CjC,GAAO,wBAAyB,UACpC,IACCmC,OAAM,SAAUI,GACbzC,QAAQC,IAAI,eAAgBwC,GAC5BvC,GAAO,qBAAsB,QACjC,GAER,EAEA,OAAIX,GAEI,+BACI,SAAC,IAAW,MAIpBE,GAEI,SAAC,IAAW,WACR,SAAC,IAAe,CAACiD,MAAM,iBAAiBC,KAAK,yDAAyDC,WAAW,iBAAiBC,UAAU,0BAKxJ7C,QAAQC,IAAI,oCAAqCnB,IAG7C,iCACI,SAAC,KAAc,CAACgE,SAAS,YACrBC,UAAW,OAEf,gBAAKnC,UAAU,0DAAyD,UACpE,4BAEI,gBAAKA,UAAU,iFAAgF,UAC3F,gBAAKA,UAAU,kBAAiB,UAC5B,iBAAKA,UAAU,6EAA4E,WACvF,gBAAKoC,IAAI,0DAA0DpC,UAAU,oBAC7E,eAAIA,UAAU,0CAAyC,wCAInE,iBAAKA,UAAU,uBAAsB,UAEhC5B,IACG,SAAC,IAAe,CACZiE,gBAAgB,EAChBC,QAAS1C,GACT2C,SAA2B,OAAjBrE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBqD,OAGpCnD,GAAoC,OAAV,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAamD,QACzB,gBAAKvB,UAAU,iDAAgD,yBAIvE,gBAAKA,UAAU,mBAAkB,UAC7B,SAAC,IAAK,CACFwC,OAAQzD,EACR0D,YA5MD,WAAQ,EA6MPC,eAAgBzD,GAChB0D,MAAOzF,EACP0F,aAAa,gBAAe,UAE5B,gBAAK7B,MAAM,8DAA8D4B,MAAO,CAAE,MAAS,OAAQ,OAAU,QAAS,UAClH,gBAAK3C,UAAU,qCAAoC,UAC/C,SAAC,IAA6B,CAACuB,KAAM/C,EAAeF,gBAAiBA,EAAiBuE,WA7MnG,SAACC,GAChBpE,EAAQoE,EACZ,EA2M8I7D,WAAYA,qBAS9J,C","sources":["Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingRenewList.jsx"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Tooltip } from \"@material-tailwind/react\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingRenewList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_postHoardingRenewList, api_archivedApplication } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <div>\r\n                        <button\r\n                            onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                            className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                        >\r\n                            View\r\n                        </button>\r\n                        {cell.row.original.renew_option == 1 &&\r\n                            <button\r\n                                onClick={() => navigate(`/hoarding/${id}/${cell.row.values.id}/renew`)}\r\n                                className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\"\r\n                            >\r\n                                Renew\r\n                            </button>\r\n                        }\r\n\r\n                        {cell.row.original.renew_option == \"Expired\" &&\r\n                            <button\r\n                                className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\" disabled\r\n                            >\r\n                                Expired\r\n                            </button>\r\n                        }\r\n                        {cell.row.original.renew_option == \"Expired\" &&\r\n                            <Tooltip className='bg-gray-300 text-xs text-gray-900' content=\"Archived\">\r\n                                <button\r\n                                    onClick={() => handleArchived(cell.row.values.id)}\r\n                                    className=\"bg-indigo-500 float-right px-2 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n              hover:text-white text-white\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-5 h-5\">\r\n                                        <path fill-rule=\"evenodd\" d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\" clip-rule=\"evenodd\" />\r\n                                    </svg>\r\n\r\n                                    {/* Archived */}\r\n                                </button>\r\n                            </Tooltip>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </>\r\n\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_postHoardingRenewList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                // console.log(\"renew list\", res.data.data.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    console.log(\"application renew list\", applicationDetail)\r\n    const handleArchived = (applicationId) => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n        console.log(\"request body in renew...12\", applicationId)\r\n        axios.post(`${api_archivedApplication}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('archived response', response.data)\r\n                notify(\"Archived successfully\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                notify(\"failed to archived\", \"error\")\r\n            })\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    console.log(\"application data in renew list 12\", applicationDetail)\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">RENEW APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus || tableStatus?.data != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingRenewList;"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","useState","AdvertisementApiList","api_postHoardingRenewList","api_archivedApplication","applicationDetail","setapplicationDetail","tableStatus","settableStatus","applicationType","setapplicationType","applicationNo","setapplicationNo","setshow","isLoading","setisLoading","erroState","seterroState","modalIsOpen","setIsOpen","closeModal","id","useParams","console","log","notify","toastData","type","toast","navigate","useNavigate","COLUMNS","Header","Cell","row","className","index","accessor","cell","onClick","modalAction","values","original","renew_option","disabled","Tooltip","handleArchived","xmlns","viewBox","fill","class","d","applicationId","useEffect","axios","ApiHeaderAdvrt","then","res","data","status","catch","err","requestBody","response","error","title","desc","buttonText","buttonUrl","position","autoClose","src","assessmentType","columns","dataList","isOpen","onAfterOpen","onRequestClose","style","contentLabel","showLoader","val"],"sourceRoot":""}