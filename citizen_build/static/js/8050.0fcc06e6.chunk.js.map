{"version":3,"file":"static/js/8050.0fcc06e6.chunk.js","mappings":"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","sources":["Pages/Water/ApplyFromScreens/AccordionPage.js","Pages/Water/ApplyFromScreens/WaterAfterSubmit.js","Pages/Water/ApplyFromScreens/MessageModal.js","Pages/Water/ApplyFromScreens/WaterFormScreen1.js","Pages/Water/ApplyFromScreens/WaterScteen0Ulb.js","Pages/Water/WaterApply.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport const AccordionPage = () => {\r\n    return (\r\n        <Accordion>\r\n            <AccordionItem toggle=\"panel-1\" className=\"bg-indigo-500 text-white\">\r\n                How to Apply ?\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-1\">\r\n                <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n                    minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n                    aliquip ex ea commodo consequat.\r\n                </p>\r\n                <p>\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n                    accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae\r\n                    ab illo inventore veritatis et quasi architecto beatae vitae dicta\r\n                    sunt explicabo.\r\n                </p>\r\n            </AccordionPanel>\r\n            <AccordionItem toggle=\"panel-2\" className=\"bg-indigo-500 text-white\">\r\n                Which documents need to submit ?\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-2\">\r\n                <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec\r\n                    odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla\r\n                    quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent\r\n                    mauris. Fusce nec tellus sed augue semper porta.\r\n                </p>\r\n                <p>\r\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui\r\n                    blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\r\n                    et quas molestias excepturi sint occaecati cupiditate non provident,\r\n                    similique sunt in culpa qui officia deserunt mollitia animi.\r\n                </p>\r\n            </AccordionPanel>\r\n            <AccordionItem toggle=\"panel-3\" className=\"bg-indigo-500 text-white\">\r\n                Accordion Group Item #3\r\n            </AccordionItem>\r\n            <AccordionPanel id=\"panel-3\">\r\n                <p className=\"mb-4\">\r\n                    dales ligula in libero. Sed dignissim lacinia nunc. Curabitur tortor.\r\n                    Pellentesque nibh. Aenean quam. In scelerisque sem at dolor. Maecenas\r\n                    mattis. Sed convallis tristique sem. Proin ut ligula vel nunc egestas\r\n                    porttitor. Morbi lectus risus, iaculis.\r\n                </p>\r\n                <p>\r\n                    Nulla metus metus, ullamcorper vel, tincidunt sed, euismod in, nibh.\r\n                    Quisque volutpat condimentum velit. Class aptent taciti sociosqu ad\r\n                    litora torquent per conubia nostra, per inceptos himenaeos. Nam nec\r\n                    ante.\r\n                </p>\r\n            </AccordionPanel>\r\n        </Accordion>\r\n    );\r\n};\r\n\r\n/* Logic */\r\n\r\nconst Context = React.createContext({});\r\n\r\nfunction Accordion({ children }) {\r\n    const [selected, setSelected] = React.useState();\r\n\r\n    const toggleItem = React.useCallback(\r\n        (id) => () => {\r\n            setSelected((prevState) => (prevState !== id ? id : ''));\r\n        },\r\n        [],\r\n    );\r\n    return (\r\n        <Context.Provider value={{ selected, toggleItem }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\n//custom hook to consume all accordion values\r\nconst useAccordion = () => React.useContext(Context);\r\n\r\nconst style = {\r\n    item: `block focus:outline-none border-b my-2 p-3`,\r\n    panel: `overflow-hidden md:overflow-x-hidden transition-height ease duration-300 text-gray-600`,\r\n};\r\n\r\nfunction AccordionItem({ toggle, children, className }) {\r\n    const { selected, toggleItem } = useAccordion();\r\n    return (\r\n        <div\r\n            role=\"button\"\r\n            onClick={toggleItem(toggle)}\r\n            className={`${style.item} ${className}`}\r\n        >\r\n            {children}\r\n            <span className=\"float-right\">\r\n                {selected === toggle ? <AngleUpIcon /> : <AngleDownIcon />}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AccordionPanel({ children, id }) {\r\n    const { selected } = useAccordion();\r\n    const ref = React.useRef();\r\n    const inlineStyle =\r\n        selected === id ? { height: ref.current?.scrollHeight } : { height: 0 };\r\n\r\n    return (\r\n        <div ref={ref} id={id} className={style.panel} style={inlineStyle}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AngleUpIcon = () => (\r\n    <svg\r\n        fill=\"white\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 320 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"mt-1 h-4\"\r\n    >\r\n        <path d=\"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\" />\r\n    </svg>\r\n);\r\n\r\nconst AngleDownIcon = () => (\r\n    <svg\r\n        stroke=\"currentColor\"\r\n        fill=\"white\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 320 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"mt-1 h-4\"\r\n    >\r\n        <path d=\"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\" />\r\n    </svg>\r\n);","import axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList'\r\nimport CitizenApplyApiList from '../../../Components/CitizenApplyApiList'\r\nimport AxiosInterceptors from '../../../Components/GlobalData/AxiosInterceptors'\r\n\r\nfunction WaterAfterSubmit(props) {\r\n\r\n    const { api_getProfileDetails } = CitizenApplyApiList()\r\n    const { header } = WaterApiList();\r\n\r\n    const navigate = useNavigate()\r\n\r\n    console.log(\"props in waterAfterSubmit\", props)\r\n\r\n\r\n    // Fething logedin user phone no\r\n\r\n    useEffect(() => {\r\n        console.log(\"== 1 == UseEffect Called\")\r\n        AxiosInterceptors.get(`${api_getProfileDetails}`, header)\r\n            .then(function (response) {\r\n                console.log('getdata for my profile ....', response.data.data)\r\n                if (response.data.status) {\r\n                    console.log(\"== 2 == After Getting user data and status true\")\r\n                    if (props?.data?.applicationNo) {\r\n                        sendWhatsAppMessage(response.data.data.mobile, props?.data?.applicationNo)\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('getdata for my profile errorrr.... ', error);\r\n            })\r\n    }, [props])\r\n\r\n\r\n    ////////// ==> WhatsApp Start\r\n\r\n\r\n    const sendWhatsAppMessage = (mobile, AppNo) => {\r\n        console.log(\"== 3 == Whatsapp function Called\", mobile, AppNo)\r\n        // const mobile = mobile;\r\n        const module = \"Water\";\r\n\r\n        const accessToken = process.env.REACT_APP_WP_ACCESS_TOKEN;\r\n        const phoneNoId = '103215889230412';\r\n\r\n        // console.log(\"Values\", number, type, parameter)\r\n        const mobileNo = +91 + mobile;\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${accessToken}` }\r\n        };\r\n\r\n        const bodyParameterSimple = {  // This is for send message directly without variables\r\n\r\n            messaging_product: \"whatsapp\",\r\n            to: mobileNo,\r\n            \"type\": \"template\",\r\n            \"template\": {\r\n                \"name\": \"judco_service_application_reg\",\r\n                \"language\": {\r\n                    \"code\": \"en_US\",\r\n                    \"policy\": \"deterministic\"\r\n                },\r\n                \"components\": [\r\n                    {\r\n                        \"type\": \"body\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"type\": \"text\",\r\n                                \"text\": module\r\n                            },\r\n                            {\r\n                                \"type\": \"text\",\r\n                                \"text\": AppNo\r\n                            }\r\n                        ]\r\n                    },\r\n\r\n\r\n                ]\r\n            }\r\n        };\r\n\r\n        AxiosInterceptors.post(`https://graph.facebook.com/v14.0/${phoneNoId}/messages`, bodyParameterSimple, config)\r\n            .then((res) => console.log(\"Water WhatsApp message Sent Succfully\", res))\r\n            .catch((err) => console.log(\"Error While Water Sendign WhatsApp Message\", err));\r\n\r\n    }\r\n\r\n\r\n\r\n    ////////// ==> WhatsApp END\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className='mt-8 mb-2 font-serif font-semibold text-gray-600'></h1>\r\n            <div className=\"block p-4 md:py-6 shadow-lg bg-indigo-100 border border-indigo-300 rounded  mx-auto \">\r\n                <div className='text-center space-y-4'>\r\n                    <p className='font-semibold'>Your Application has been Submitted Successfully.</p>\r\n                    <p><span className='text-sm'> Application No </span><span className='text-indigo-600 font-semibold'>{props?.data?.applicationNo}</span></p>\r\n                    <button onClick={() => navigate('/water-dashboard')} className='bg-white hover:bg-indigo-600 hover:text-white text-indigo-700  border border-indigo-600 mx-2 rounded-sm text-sm px-4 py-2 shadow-xl'>Dashboard</button>\r\n                    <button onClick={() => navigate(`/water-doc-upload/${props?.data?.applicationId}`)} className='bg-indigo-600 hover:bg-indigo-700 text-white mx-2 rounded-sm text-sm px-4 py-2 shadow-xl'>Upload Document</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaterAfterSubmit","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrFormClose } from \"react-icons/gr\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"30%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction MessageModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        props?.message && setIsOpen(true)\r\n    }, [props?.message])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                shouldCloseOnOverlayClick={false} // disable outside click close\r\n            >\r\n                <div className=\"p-10 py-12 border border-indigo-300 bg-indigo-300\">\r\n                    <p onClick={closeModal} className=\"absolute right-8 top-6 cursor-pointer capitalize text-white font-light hover:underline\">\r\n                        close\r\n                    </p>\r\n\r\n                    <div>\r\n                        {props?.message}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default MessageModal;\r\n","//////////////////{*****}//////////////////////////////////////////\r\n// >Author - swati sharma\r\n// >Version - 1.0\r\n// >Date - 7 oct 2022\r\n// >Revision - 1\r\n// >Project - JUIDCO\r\n// >Component  - Water Apply WaterFormScreen1\r\n// >DESCRIPTION - WaterFormScreen1 Component\r\n//////////////////{*****}//////////////////////////////////////////\r\n\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { GoInfo } from 'react-icons/go'\r\nimport { useFormik, Formik, Form, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { getCurrentDate, allowFloatInput, allowNumberInput, allowCharacterInput } from '../../../Components/Common/PowerUps/PowerupFunctions'\r\nimport axios from 'axios'\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\n\r\nimport { FcElectroDevices } from 'react-icons/fc'\r\nimport { FcHome } from 'react-icons/fc'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList'\r\nimport BarLoader from '../../../Components/Common/BarLoader'\r\nimport { contextVar } from '../../../Components/ContextVar'\r\nimport MessageModal from './MessageModal'\r\nimport AxiosInterceptors from '../../../Components/GlobalData/AxiosInterceptors'\r\n\r\n\r\nfunction WaterFormScreen1(props) {\r\n    const [propertyTypeStatusToggle, setpropertyTypeStatusToggle] = useState(false)\r\n    const [barLoader, setBarLoader] = useState(false)\r\n    const [fetchedSafHoldingData, setFetchedSafHoldingData] = useState()\r\n    const [ownerRecord, setOwnerRecord] = useState([])\r\n    // const [finalOwnerData, setFinalOwnerData] = useState()\r\n    const [formApplyError, setFormApplyError] = useState()\r\n    const [ownerFieldError, setOwnerFieldError] = useState()\r\n    const [isTenant, setIsTenant] = useState(false)\r\n    const [listOfSafHolding, setListOfSafHolding] = useState()\r\n    const [isFoundHoldingSaf, setIsFoundHoldingSaf] = useState(false)\r\n    const [messageModal, setMessageModal] = useState(false)\r\n    const [formSubmitLoader, setFormSubmitLoader] = useState(false)\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    const inputContainerStyle = `form-group col-span-4 md:col-span-1 mb-6 md:px-4`\r\n    const inputLabelStyle = `form-label inline-block mb-1 text-gray-600 text-sm font-semibold`\r\n    const commonInputStyle = `form-control block w-full px-3 py-2 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none shadow-sm`\r\n\r\n\r\n    const { api_NewWaterConnection, header, api_getHoldingSafOfLogin, api_getSafHoldingDetails, api_userProfileDetails } = WaterApiList()\r\n\r\n\r\n\r\n\r\n    const finalSubmitData = (data) => {\r\n        setFormSubmitLoader(true)\r\n\r\n        const payload = {\r\n            \"ulbId\": props?.selectedUlbId,\r\n            \"connectionTypeId\": data?.typeofConnection,\r\n            \"propertyTypeId\": data?.propertyType,\r\n            \"ownerType\": data?.ownerType,\r\n            \"category\": data?.categoryType,\r\n            \"pipelineTypeId\": data?.pipelineType,\r\n            \"connection_through\": data?.connectionThrough,\r\n            \"landmark\": \"Landmark\",\r\n            \"saf_no\": data?.safHolding,\r\n            \"holdingNo\": data?.selectedSafHol,\r\n            \"wardId\": data?.new_ward_mstr_id,\r\n            \"areaSqft\": data?.totalArea,\r\n            \"address\": data?.address,\r\n            \"pin\": data?.pincode,\r\n            \"tenant\": ownerRecord,\r\n            \"owners\": fetchedSafHoldingData?.owners\r\n        }\r\n\r\n        console.log(\"Payload Data\", data)\r\n        console.log(\"Final Payload\", payload)\r\n\r\n        // setTimeout(() => {\r\n        //     setFormSubmitLoader(false)\r\n        // }, 5000);\r\n\r\n        // return\r\n\r\n        AxiosInterceptors.post(api_NewWaterConnection, payload, header)\r\n            .then((res) => {\r\n                if (res.data.status == true) {\r\n                    console.log(\"Data Really Saved\", res)\r\n                    props.screen1Data(res.data.data)\r\n                    notify(\"Application Applied Successfully\", \"success\")\r\n                } else {\r\n                    console.log(\"False While Water Apply\", res)\r\n                    setFormApplyError(\"Error While Apply : \" + res?.data?.message)\r\n                    notify(\"Error While Apply Form\", \"error\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error while Water Apply\", err)\r\n                setFormApplyError(\"Exception While Apply\" || \"Something went Wrong\")\r\n                notify(\"Something Went Wrong\", \"error\")\r\n            })\r\n\r\n        console.log(\"Final Payload\", payload)\r\n    }\r\n\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        typeofConnection: yup.string().required('Require'),\r\n        connectionThrough: yup.string().required('Require'),\r\n        ownerType: yup.string().required('Require'),\r\n        propertyType: yup.string().required('Require'),\r\n        selectedSafHol: yup.string().required('Require'),\r\n\r\n        // ownerName: yup.string().required('Require'),\r\n        // guardianName: yup.string().required('Require'),\r\n        // mobileNo: yup.string().required('Require'),\r\n\r\n\r\n        // categoryType: yup.string().when('propertyType', {\r\n        //     is: '1',\r\n        //     then: yup.string().required('Field is required')\r\n        // }),\r\n    })\r\n\r\n    const navigate = useNavigate()\r\n    const initialValues = {\r\n        typeofConnection: '',\r\n        connectionThrough: '',\r\n        ownerType: '',\r\n        propertyType: '',\r\n        categoryType: '',\r\n        pipelineType: '',\r\n        wardNo: '',\r\n        totalArea: '',\r\n        pincode: '',\r\n        address: '',\r\n        safNo: '',\r\n        holdingNo: '',\r\n        selectedSafHol: ''\r\n    }\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, resetForm) => {\r\n\r\n            // if (!safHolding) {\r\n            //     setFetchedSafHoldingData({ \"message\": 'This Filed is Require' })\r\n            //     return\r\n            // }\r\n\r\n            // if (!fetchedSafHoldingData?.areaInSqFt) {\r\n            //     setFetchedSafHoldingData({ \"message\": 'No Data Found' })\r\n            //     return\r\n            // }\r\n            console.log(\"Value.....\", values)\r\n            finalSubmitData(values)\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n\r\n        setFormApplyError(\"\") // Remove previous error when any filed changes\r\n\r\n\r\n        { name === 'propertyType' && ((value == '1') ? setpropertyTypeStatusToggle(true) : setpropertyTypeStatusToggle(false)) }\r\n        // { name === 'propertyType' && ((value == '7') ? setFlatCountToggle(true) : setFlatCountToggle(false)) }\r\n        // { name === 'connectionThrough' && ((value == '1') ? setHoldingtoggle(true) : setHoldingtoggle(false)) }\r\n        // { name === 'connectionThrough' && ((value == '2') ? setSafToggle(true) : setSafToggle(false)) }\r\n        { name === 'ownerType' && ((value == '2') ? setIsTenant(true) : setIsTenant(false)) }\r\n\r\n\r\n        // //allow restricted inputs\r\n        // { name == 'mobileTowerArea' && formik.setFieldValue(\"mobileTowerArea\", allowFloatInput(value, formik.values.mobileTowerArea, 20)) } //(currentValue,oldValue,max,isCapital)\r\n\r\n        // { name == 'khataNo' && formik.setFieldValue(\"khataNo\", allowNumberInput(value, formik.values.khataNo, 100)) }\r\n        // { name == 'bindingBookNo' && formik.setFieldValue(\"bindingBookNo\", allowNumberInput(value, formik.values.bindingBookNo, 100)) }\r\n        { name == 'pincode' && formik.setFieldValue(\"pincode\", allowNumberInput(value, formik.values.pincode, 6)) }\r\n        // { name == 'flatCount' && formik.setFieldValue(\"flatCount\", allowNumberInput(value, formik.values.flatCount, 4)) }\r\n        // { name == 'accountNo' && formik.setFieldValue(\"accountNo\", allowNumberInput(value, formik.values.accountNo, 100)) }\r\n        { name == 'ownerName' && formik.setFieldValue(\"ownerName\", allowCharacterInput(value, formik.values.ownerName, 60)) }\r\n        { name == 'guardianName' && formik.setFieldValue(\"guardianName\", allowCharacterInput(value, formik.values.guardianName, 60)) }\r\n        { name == 'mobileNo' && formik.setFieldValue(\"mobileNo\", allowNumberInput(value, formik.values.mobileNo, 10)) }\r\n\r\n        // { name == 'totalArea' && formik.setFieldValue(\"totalArea\", totalAreaInSqFt) }\r\n    };\r\n\r\n\r\n    const getListOfHoldingSafLoginUser = () => { // Get Holding and SAF list from login user.\r\n\r\n        formik.setFieldValue(\"selectedSafHol\", ''); // Reset Dropdown value when dropdown re-select\r\n\r\n        console.log(\"formik.values.connectionThrough\", formik.values.connectionThrough)\r\n\r\n        if (formik.values.connectionThrough == 1) {\r\n            var type = \"holding\"\r\n        } else if (formik.values.connectionThrough == 2) {\r\n            var type = \"saf\"\r\n        } else {\r\n            return setIsFoundHoldingSaf(false)\r\n        }\r\n        setBarLoader(true)\r\n        AxiosInterceptors.post(api_getHoldingSafOfLogin, { type: type, ulbId: props?.selectedUlbId }, header)\r\n            .then((res) => {\r\n                if (res.data.status) {\r\n                    setIsFoundHoldingSaf(true)\r\n                    console.log(\"List of Holding SAF\", res)\r\n                    setListOfSafHolding(res?.data?.data)\r\n                    notify(res.data.data.length + \" \" + type + \" Found\", \"success\")\r\n                    setBarLoader(false)\r\n                } else {\r\n                    setIsFoundHoldingSaf(false)\r\n                    notify(\"No \" + type + \" Found\", \"error\")\r\n                    console.log(\"Error/No \" + type + \" Found\", res)\r\n                    setMessageModal(\"No \" + type + \" Found\")\r\n                    setBarLoader(false)\r\n                    setFormApplyError(\"No \" + type + \" found against this account\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                notify(\"Something Went Wrong\", \"error\")\r\n                setIsFoundHoldingSaf(false)\r\n                console.log(\"Error while getting holding saf\", err)\r\n                setBarLoader(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getListOfHoldingSafLoginUser()\r\n    }, [formik.values.connectionThrough])\r\n\r\n    useEffect(() => {\r\n        handleSafHolding()\r\n    }, [formik.values.selectedSafHol])\r\n\r\n    const handleSafHolding = () => { // Search Holding / SAF from Database\r\n\r\n        setOwnerRecord([]) // Clear List of Applicatant Details\r\n\r\n        // if (!safHolding) {\r\n        //     return\r\n        // }\r\n\r\n        clearFormData()\r\n        setBarLoader(true)\r\n\r\n        const payload = {\r\n            \"connectionThrough\": formik.values.connectionThrough,\r\n            \"id\": formik.values.selectedSafHol,\r\n            \"ulbId\": props?.selectedUlbId\r\n        }\r\n\r\n        AxiosInterceptors.post(api_getSafHoldingDetails, payload, header)\r\n            .then((res) => {\r\n                console.log(\"Response of holding/saf\", res)\r\n                if (res.data.status == true) {\r\n                    setBarLoader(false)\r\n                    setFetchedSafHoldingData(res?.data?.data)\r\n\r\n                    formik.setFieldValue(\"totalArea\", res?.data?.data?.areaInSqFt);\r\n                    formik.setFieldValue(\"address\", res?.data?.data?.prop_address);\r\n                    formik.setFieldValue(\"pincode\", res?.data?.data?.prop_pin_code);\r\n                    formik.setFieldValue(\"new_ward_mstr_id\", res?.data?.data?.new_ward_mstr_id);\r\n                    formik.setFieldValue(\"new_ward_no\", res?.data?.data?.new_ward_no);\r\n\r\n                    formik.setFieldValue(\"ownerName\", res?.data?.data?.owner_name);\r\n                    formik.setFieldValue(\"guardianName\", res?.data?.data?.guardian_name);\r\n                    formik.setFieldValue(\"mobileNo\", res?.data?.data?.mobile_no);\r\n                    // formik.setFieldValue(\"email\", res?.data?.data?.email || userProfileData?.email);\r\n                    formik.setFieldValue(\"ownerType\", 1);\r\n\r\n                    // Add owneres in list\r\n\r\n                    // setOwnerRecord(res?.data?.data?.owners);\r\n                }\r\n                if (res.data.status == false) {\r\n                    console.log(\"NO data......\" + formik.values.connectionThrough)\r\n                    setFormApplyError(\"No Data found against : \" + formik.values.selectedSafHol, \"error\")\r\n                    notify(\"No Data found against : \" + formik.values.selectedSafHol, \"error\")\r\n                    setMessageModal(\"No Data found against : \" + formik.values.selectedSafHol)\r\n                    setFetchedSafHoldingData({ \"message\": 'Please enter valid no.' })\r\n                    setBarLoader(false)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Failed to Saf Holding \", err)\r\n                setFetchedSafHoldingData({ \"message\": 'Error While Fetching Data' })\r\n                // setFormApplyError(\"Failed to fetch data.\")\r\n                setBarLoader(false)\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {   // Clear SAF/Holding Field\r\n        // setSafHolding(\"\")\r\n        clearFormData()\r\n    }, [formik.values.connectionThrough])\r\n\r\n    const clearFormData = () => {   // Clear All Fields\r\n        setFetchedSafHoldingData('');\r\n        setIsTenant('');\r\n\r\n        formik.setFieldValue(\"totalArea\", '');\r\n        formik.setFieldValue(\"address\", '');\r\n        formik.setFieldValue(\"pincode\", '');\r\n        formik.setFieldValue(\"new_ward_no\", '');\r\n        formik.setFieldValue(\"new_ward_mstr_id\", '');\r\n        formik.setFieldValue(\"ownerName\", '');\r\n        formik.setFieldValue(\"guardianName\", '');\r\n        formik.setFieldValue(\"mobileNo\", '');\r\n    }\r\n\r\n\r\n    const handleRemove = (index) => { // Remove tenant from list\r\n        // alert('Confirm ?');\r\n        const confirmed = window.confirm('Are you sure you want to delete this tenant?');\r\n        console.log('key ', index);\r\n        if (confirmed) {\r\n            setOwnerRecord(current =>\r\n                current.filter(record => {\r\n                    if (current.indexOf(record) == index) {\r\n                        console.log('value matched at ', index)\r\n                    } else {\r\n                        return record\r\n                    }\r\n                }),\r\n            );\r\n            notify(\"Tenant deleted\", \"info\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleMultipleOwner = () => { // Handle Multiple Owner\r\n\r\n        console.log(\"formik.values.ownerName \", formik.values.ownerName, \", Type\", typeof (formik.values.ownerName))\r\n\r\n        if (formik.values.ownerName == \"\" || formik.values.ownerName == undefined) {\r\n            return setOwnerFieldError({ \"ownerName\": \"Require\" })\r\n        }\r\n        if (formik.values.guardianName == \"\" || formik.values.guardianName == undefined) {\r\n            return setOwnerFieldError({ \"guardianName\": \"Require\" })\r\n        }\r\n        if (formik.values.mobileNo == \"\" || formik.values.mobileNo == undefined) {\r\n            return setOwnerFieldError({ \"mobileNo\": \"Require\" })\r\n        }\r\n\r\n\r\n        const value = {\r\n            ownerName: formik.values.ownerName,\r\n            guardianName: formik.values.guardianName,\r\n            email: formik.values.email,\r\n            mobileNo: formik.values.mobileNo,\r\n        }\r\n\r\n        setOwnerRecord([...ownerRecord, value]);\r\n        notify(\"Tenant Added\", \"info\")\r\n        setOwnerFieldError()\r\n        formik.setFieldValue(\"ownerName\", '');\r\n        formik.setFieldValue(\"guardianName\", '');\r\n        formik.setFieldValue(\"email\", '');\r\n        formik.setFieldValue(\"mobileNo\", '');\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {barLoader && <BarLoader />}\r\n            {<MessageModal message={messageModal} />}\r\n            <p className='mt-6'></p>\r\n            <div className=\"block p-4 md:py-6 shadow-lg bg-white border border-gray-200 rounded-md mx-auto\">\r\n\r\n                <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-4\">\r\n                        <div className=\"col-span-4 grid grid-cols-1 md:grid-cols-4\">\r\n\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Connection Through</label>\r\n                                <select {...formik.getFieldProps('connectionThrough')} className={`${commonInputStyle} cursor-pointer `}>\r\n                                    <option value=\"\"> Select </option>\r\n                                    <option value=\"1\">Holding No.</option>\r\n                                    <option value=\"2\">SAF No.</option>\r\n                                </select>\r\n                                <p className='text-red-500 text-xs'>{formik.touched.connectionThrough && formik.errors.connectionThrough ? formik.errors.connectionThrough : null}</p>\r\n                            </div>\r\n\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Holding/SAF</label>\r\n                                <select disabled={!isFoundHoldingSaf} {...formik.getFieldProps('selectedSafHol')} className={`${commonInputStyle} ${isFoundHoldingSaf ? \"cursor-pointer\" : \"cursor-not-allowed\"}  `}>\r\n                                    <option value=\"\"> Select </option>\r\n                                    {listOfSafHolding && listOfSafHolding?.map((item, i) => (\r\n                                        <option key={i} value={item?.new_holding_no || item?.saf_no}>{item?.new_holding_no || item?.saf_no}</option>\r\n                                    ))}\r\n\r\n                                </select>\r\n                                <p className='text-red-500 text-xs'>{formik.touched.selectedSafHol && formik.errors.selectedSafHol ? formik.errors.selectedSafHol : null}</p>\r\n                            </div>\r\n\r\n\r\n                            {/* <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*\r\n                                </small>\r\n                                    {!holdingtoggle && !safToggle && \"Select Connection Through\"}\r\n                                    {holdingtoggle && \"Enter Holding No.\"}\r\n                                    {safToggle && \"Enter SAF No.\"}\r\n                                </label>\r\n\r\n                                {safToggle || holdingtoggle ?\r\n                                    <input type=\"text\" required value={safHolding} onBlur={handleSafHolding} onChange={(e) => setSafHolding(e.target.value)} name=\"holdingNo\" className={`${commonInputStyle} `} />\r\n                                    : <input type=\"text\" disabled className={`${commonInputStyle} bg-gray-100 `} />\r\n                                }\r\n                                <p className='text-red-500 text-xs'>{formik.touched.holdingNo && formik.errors.holdingNo ? formik.errors.holdingNo : null}</p>\r\n                                {fetchedSafHoldingData && <p className='text-red-400 text-sm'>{fetchedSafHoldingData?.message}</p>}\r\n                            </div> */}\r\n\r\n\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Type of Request</label>\r\n                                <select {...formik.getFieldProps('typeofConnection')} className={`${commonInputStyle} cursor-pointer `}>\r\n                                    <option value=\"\">select</option>\r\n                                    <option value=\"1\">New Connection</option>\r\n                                    <option value=\"2\">Regularization</option>\r\n                                </select>\r\n                                <p className='text-red-500 text-xs'>{formik.touched.typeofConnection && formik.errors.typeofConnection ? formik.errors.typeofConnection : null}</p>\r\n                            </div>\r\n\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Owner Type</label>\r\n\r\n                                {fetchedSafHoldingData?.tenanted ?\r\n                                    <select {...formik.getFieldProps('ownerType')} className={`${commonInputStyle} `}>\r\n                                        <option value=\"\">select</option>\r\n                                        <option value=\"1\">Owner</option>\r\n                                        <option value=\"2\">Tenant</option>\r\n                                    </select>\r\n                                    :\r\n                                    <div>\r\n                                        <input type=\"text\" disabled value=\"Owner\" className={`${commonInputStyle} bg-gray-100`} />\r\n                                    </div>\r\n\r\n                                }\r\n                                <p className='text-red-500 text-xs'>{formik.touched.ownerType && formik.errors.ownerType ? formik.errors.ownerType : null}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-span-4 grid grid-cols-3\">\r\n                            <div className={`${inputContainerStyle}`}>\r\n\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Property Type</label>\r\n                                <select {...formik.getFieldProps('propertyType')} className={`${commonInputStyle} cursor-pointer `}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {\r\n                                        fetchedSafHoldingData?.usageType?.length > 0 &&\r\n                                        fetchedSafHoldingData?.usageType?.map((item) => (\r\n                                            <option value={item.id}>{item.usageType}</option>\r\n                                        ))\r\n                                    }\r\n                                    {/* <option value=\"7\">Apartment / Multistory Building</option> */}\r\n\r\n                                </select>\r\n                                <p className='text-red-500 text-xs'>{formik.touched.propertyType && formik.errors.propertyType ? formik.errors.propertyType : null}</p>\r\n                            </div>\r\n\r\n                            {/* {flatCountToggle ?\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Flat Count</label>\r\n                                    <input type=\"text\" {...formik.getFieldProps('flatCount')} className={`${commonInputStyle}`} />\r\n\r\n                                    <p className='text-red-500 text-xs'>{formik.touched.flatCount && formik.errors.flatCount ? formik.errors.flatCount : null}</p>\r\n                                </div>                                : */}\r\n\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Category Type</label>\r\n                                <select disabled={!propertyTypeStatusToggle} {...formik.getFieldProps('categoryType')} type=\"text\" className={`${commonInputStyle} ${!propertyTypeStatusToggle && 'bg-gray-300 opacity-30'}`}  >\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"APL\">APL</option>\r\n                                    <option value=\"BPL\">BPL</option>\r\n                                </select>\r\n                                <p className='text-red-500 text-xs'>{formik.touched.categoryType && formik.errors.categoryType ? formik.errors.categoryType : null}</p>\r\n                            </div>\r\n\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">*</small>Pipeline Type</label>\r\n                                <select disabled={!propertyTypeStatusToggle} {...formik.getFieldProps('pipelineType')} type=\"date\" className={`${commonInputStyle} ${!propertyTypeStatusToggle && 'bg-gray-300 opacity-30'}`}  >\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"2\">New Pipeline</option>\r\n                                    <option value=\"1\">Old Pipeline</option>\r\n                                </select>\r\n                                <p className='text-red-500 text-xs'>{formik.touched.pipelineType && formik.errors.pipelineType ? formik.errors.pipelineType : null}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-span-4 grid grid-cols-3\">\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small>Ward No.</label>\r\n\r\n                                <div>\r\n                                    <input disabled type=\"text\" {...formik.getFieldProps('new_ward_no')} className={`${commonInputStyle} bg-gray-100 `} />\r\n                                    <input type=\"hidden\" {...formik.getFieldProps('wardNo')} className={`${commonInputStyle} bg-gray-100 `} />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small>Total Area(Sq.Ft.)</label>\r\n                                <input disabled type=\"text\" {...formik.getFieldProps('totalArea')} className={`${commonInputStyle} bg-gray-100 `} />\r\n                                <p className='text-red-500 text-xs'>{formik.touched.totalArea && formik.errors.totalArea ? formik.errors.totalArea : null}</p>\r\n                            </div>\r\n\r\n                            {/* <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small>Landmark</label>\r\n                                <input type=\"text\" {...formik.getFieldProps('landmark')} className={`${commonInputStyle}`} />\r\n                                <p className='text-red-500 text-xs'>{formik.touched.landmark && formik.errors.landmark ? formik.errors.landmark : null}</p>\r\n                            </div> */}\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small>Pincode</label>\r\n                                <input type=\"text\" disabled {...formik.getFieldProps('pincode')} className={`${commonInputStyle} bg-gray-100`} />\r\n                                <p className='text-red-500 text-xs'>{formik.touched.pincode && formik.errors.pincode ? formik.errors.pincode : null}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-span-4 grid grid-cols-1\">\r\n                            <div className={`${inputContainerStyle}`}>\r\n                                <label className={`${inputLabelStyle}`}><small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small>Address</label>\r\n                                <textarea type=\"text\" disabled {...formik.getFieldProps('address')} className={`${commonInputStyle} bg-gray-100`} />\r\n                                <p className='text-red-500 text-xs'>{formik.touched.address && formik.errors.address ? formik.errors.address : null}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* List of Property Owners */}\r\n                        {fetchedSafHoldingData?.owners &&\r\n                            <div className=\"col-span-4 grid grid-cols-1\">\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <div className='p-2 bg-indigo-500 rounded text-white'>\r\n                                        <p className='font-semibold text-gray-200 flex text-xs'> <span className='mt-0.5 mr-1'>< GoInfo /></span> List of Owner(s) from Property</p>\r\n                                        {/* <p className='font-semibold text-gray-200 text-xs'>Lorem ipsum dolor sit amet consectetur, adipisicing elit.</p> */}\r\n                                    </div>\r\n                                    <table class=\"table-auto w-full mt-4 border rounded-md shadow-md\">\r\n                                        <thead class=\"text-xs text-left text-gray-900 bg-indigo-300\">\r\n                                            <tr>\r\n                                                <th></th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Sl</div>\r\n                                                </th>\r\n\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Applicant Name</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Guardian Name</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Phone No</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Email</div>\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody class=\"text-sm divide-y divide-gray-100\">\r\n                                            <>\r\n                                                {\r\n                                                    fetchedSafHoldingData?.owners?.map((items, index) => (\r\n                                                        <tr>\r\n                                                            <td></td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"font-semibold text-gray-800 text-left text-xs\">\r\n                                                                    {index + 1}.\r\n                                                                </div>\r\n                                                            </td>\r\n\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"font-medium text-gray-800 text-left text-xs\">\r\n                                                                    {items?.ownerName ? items?.ownerName : \"N/A\"}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"text-left\">\r\n                                                                    {items?.guardianName ? items?.guardianName : \"N/A\"}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"text-left font-medium text-gray-800  text-xs\">\r\n                                                                    {items?.mobileNo ? items?.mobileNo : \"N/A\"}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"font-medium text-gray-800 text-left text-xs\">\r\n                                                                    {items?.email ? items?.email : \"N/A\"}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))}\r\n                                            </>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"col-span-4 grid grid-cols-1\">\r\n                            {ownerRecord.length == 0 ? <p className='text-center font-semibold text-sm  text-red-500'></p> :\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <div className='p-2 bg-yellow-200 rounded'>\r\n                                        <p className='font-semibold text-gray-800 flex'> <span className='mt-0.5 mr-1'>< GoInfo /></span> List of Tenant</p>\r\n                                        <p className='text-sm font-semibold text-gray-700'>You can add or remove water Tenant from below actions.</p>\r\n                                    </div>\r\n                                    <table class=\"table-auto w-full mt-4 border rounded-md shadow-md\">\r\n                                        <thead class=\"text-xs text-left text-gray-900 bg-sky-300\">\r\n                                            <tr>\r\n                                                <th></th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Sl</div>\r\n                                                </th>\r\n\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Applicant Name</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Guardian Father</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Phone No</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\"\">Email</div>\r\n                                                </th>\r\n                                                <th class=\"p-2\">\r\n                                                    <div class=\" text-center\">Delete</div>\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody class=\"text-sm divide-y divide-gray-100\">\r\n                                            <>\r\n                                                {\r\n                                                    ownerRecord?.map((items, index) => (\r\n                                                        <tr>\r\n                                                            <td></td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"font-semibold text-gray-800 text-left text-xs\">\r\n                                                                    {index + 1}.\r\n                                                                </div>\r\n                                                            </td>\r\n\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"font-medium text-gray-800 text-left text-xs\">\r\n                                                                    {items?.ownerName}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"text-left\">\r\n                                                                    {items?.guardianName}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"text-left font-medium text-gray-800  text-xs\">\r\n                                                                    {items?.mobileNo}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"p-2\">\r\n                                                                <div class=\"font-medium text-gray-800 text-left text-xs\">\r\n                                                                    {items?.email}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td class=\"\">\r\n                                                                <div class=\"flex justify-center\">\r\n                                                                    <button type='button' onClick={() => handleRemove(index)} >\r\n                                                                        {/* <button type='button' > */}\r\n                                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-4 h-4 text-red-500 hover:text-red-700\">\r\n                                                                            <path fill-rule=\"evenodd\" d=\"M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z\" clip-rule=\"evenodd\" />\r\n                                                                        </svg>\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </td>\r\n\r\n                                                        </tr>\r\n                                                    ))}\r\n                                            </>\r\n                                        </tbody>\r\n\r\n                                    </table>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n\r\n                        {/* Tenant Applicant Details */}\r\n                        {isTenant &&\r\n                            <div className=\"col-span-4 grid grid-cols-4\">\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <label className={`${inputLabelStyle}`}>Applicant Name <small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small></label>\r\n                                    <input type=\"text\" {...formik.getFieldProps('ownerName')} className={`${commonInputStyle} `} onChange={formik.handleChange} />\r\n                                    {/* <p className='text-red-500 text-xs'>{formik.touched.ownerName && formik.errors.ownerName ? formik.errors.ownerName : null}</p> */}\r\n                                    <p className='text-red-500 text-xs'>{ownerFieldError?.ownerName && ownerFieldError?.ownerName}</p>\r\n                                </div>\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <label className={`${inputLabelStyle}`}>Guardian Name <small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small></label>\r\n                                    <input type=\"text\" {...formik.getFieldProps('guardianName')} className={`${commonInputStyle}`} onChange={formik.handleChange} />\r\n                                    <p className='text-red-500 text-xs'>{ownerFieldError?.guardianName && ownerFieldError?.guardianName}</p>\r\n                                </div>\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <label className={`${inputLabelStyle}`}>Mobile No <small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small></label>\r\n                                    <input type=\"text\" {...formik.getFieldProps('mobileNo')} className={`${commonInputStyle}`} onChange={formik.handleChange} />\r\n                                    <p className='text-red-500 text-xs'>{ownerFieldError?.mobileNo && ownerFieldError?.mobileNo}</p>\r\n                                </div>\r\n                                <div className={`${inputContainerStyle}`}>\r\n                                    <label className={`${inputLabelStyle}`}>Email Id </label>\r\n                                    <input {...formik.getFieldProps('email')} className={`${commonInputStyle}`} onChange={formik.handleChange} />\r\n                                    <p className='text-red-500 text-xs'>{formik.touched.email && formik.errors.email ? formik.errors.email : null}</p>\r\n                                </div>\r\n\r\n                                <div className='col-span-4 grid grid-cols-1'>\r\n                                    <div className='col-span-4'>\r\n                                        <div className='float-right mr-4 -mt-4 mb-5'>\r\n                                            <button type=\"button\" onClick={handleMultipleOwner} className=\"bg-cyan-500 hover:bg-cyan-400 text-sm text-white px-3 py-1 rounded\" >Add</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"col-span-4 mb-3\">\r\n                            <div className='text-center text-red-600 font-semibold'>\r\n                                {formApplyError && \"Error : \" + formApplyError}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-4\">\r\n                            <div className='flex justify-center'>\r\n                                {formSubmitLoader ?\r\n                                  <p className='font-medium'>Form Submitting..</p>\r\n                                    : <div className='space-x-8'>\r\n                                        <button type=\"button\" onClick={() => navigate(-1)} className=\" px-12 py-2.5 bg-red-600 text-white font-medium text-sm leading-tight  rounded  hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-red-800 active:shadow-lg transition duration-150 ease-in-out\">Cancel</button>\r\n                                        <button type=\"submit\" className=\" px-12 py-2.5 bg-indigo-600 text-white font-medium text-sm leading-tight  rounded  hover:bg-indigo-700 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out\">Submit Form</button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaterFormScreen1","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  -\r\n//    DESCRIPTION -\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\nimport WaterApiList from \"../../../Components/ApiList/WaterApiList\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport { string } from \"yup\";\r\nimport Select from 'react-select';\r\nimport { contextVar } from \"../../../Components/ContextVar\";\r\n\r\n\r\nconst customStyles = {\r\n  overlay: {\r\n    // background: \"rgba(0, 0, 0, 0.5)\",\r\n    background: \"#e6e6fc\",\r\n    // overflowY: \"scroll\"\r\n  },\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"none\",\r\n    height: \"600px\", //or maxHeight\r\n  },\r\n};\r\n\r\nfunction WaterScteen0Ulb(props) {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const [ulbList, setUlbList] = useState();\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const { api_ulbList } = WaterApiList();\r\n  const { notify } = useContext(contextVar)\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (props.openUlbModal == 0) setIsOpen(true);\r\n  }, [props.openUlbModal]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(api_ulbList)\r\n      .then(\r\n        (res) => (console.log(\"ULB LIsts...\", res), setUlbList(res.data.data))\r\n      )\r\n      .catch((err) => console.log(\"Error while fetching ulblist\", err));\r\n  }, []);\r\n\r\n  function afterOpenModal() { }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    navigate(-1);\r\n  }\r\n\r\n  const payNow = () => {\r\n    if (!selectedOption.id) {\r\n      return setSelectedOption(null);\r\n    } else {\r\n      // setValidULB(true);\r\n      notify(\"ULB Selected\", \"success\")\r\n      console.log(\"Start Button Clicked..\");\r\n      props.nextScreen();\r\n      props.setSelectedUlb(selectedOption);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  console.log(\"selectedOption\", selectedOption);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"container\">\r\n          <div class=\"relative w-full h-full max-w-3xl md:h-auto border-indigo-600 shadow-indigo-200 shadow-sm rounded\">\r\n            <div class=\"relative bg-white rounded-lg shadow \">\r\n              <div class=\"flex items-start justify-between p-4 border-b rounded-t darks:border-gray-600\">\r\n                <h3 class=\"text-base md:text-xl font-semibold text-gray-900 darks:text-white\"> Applying For Water Connection </h3>\r\n                <button\r\n                  onClick={closeModal}\r\n                  class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center darks:hover:bg-gray-600 darks:hover:text-white\"\r\n                  data-modal-hide=\"defaultModal\"\r\n                >\r\n                  <svg\r\n                    aria-hidden=\"true\"\r\n                    class=\"w-5 h-5\"\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                      clip-rule=\"evenodd\"\r\n                    ></path>\r\n                  </svg>\r\n                  <span class=\"sr-only\">Close modal</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"p-6 space-y-5\">\r\n                <p class=\"md:text-sm leading-relaxed text-gray-500 text-xs\">\r\n                  Welcome to the new water connection application form under the Water User Charges Management System. ULBs committed to providing you with safe and reliable water services. This form is designed to make it easy for citizen to apply for a new water connection..\r\n                </p>\r\n                <p class=\"md:text-sm leading-relaxed text-gray-500 text-xs\">\r\n                  To process your application, we require certain documents, such as proof of ownership or tenancy, and information about the property where you want the water connection and documentation from all applicants. Please ensure that you provide accurate and complete information to avoid any delays in the application process.\r\n                </p>\r\n                <p class=\"md:text-sm leading-relaxed text-gray-500 text-xs\">\r\n                  Please read the instructions carefully and provide accurate and complete information to avoid delays in the assessment process. If you have any questions or need assistance, please contact your ULB or citizen helpline number.\r\n                </p>\r\n              </div>\r\n\r\n\r\n\r\n              <div className=\"block md:flex justify-center space-x-4\">\r\n                <div className=\"font-semibold text-center\">Please Select Your ULB</div>\r\n\r\n                <div className=\"md:w-1/2 w-auto mr-5\">\r\n                  <Select\r\n                    defaultValue={selectedOption}\r\n                    onChange={setSelectedOption}\r\n                    getOptionLabel={option => option.ulb_name}\r\n                    getOptionValue={option => option.id}\r\n                    options={ulbList}\r\n                    isClearable={true}\r\n                    isLoading={!ulbList}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"text-center\">\r\n                {selectedOption && selectedOption?.id != \"\" ? (\r\n                  <p>\r\n                    You are applying for\r\n                    <span className=\"text-indigo-500 mx-2\">\r\n                      {selectedOption?.ulb_name}\r\n                    </span>{\" \"}\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-red-500 py-2 mx-2\"> Please Select Your ULB</p>\r\n                )}\r\n              </div>\r\n\r\n              <div class=\"flex flex-row-reverse items-center p-6 border-t border-gray-200 rounded-b\">\r\n                <button\r\n                  onClick={payNow}\r\n                  disabled={!selectedOption?.id}\r\n                  class=\"mx-2 text-white disabled:bg-gray-500 disabled:scale-100 bg-indigo-700 hover:bg-indigo-800 focus:ring-4 focus:outline-none focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center darks:bg-indigo-600 darks:hover:bg-indigo-700 darks:focus:ring-indigo-800\"\r\n                >\r\n                  START\r\n                </button>\r\n                <button\r\n                  onClick={closeModal}\r\n                  class=\"mx-2 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 rounded-lg border border-red-200 text-sm font-medium px-5 py-2.5 focus:z-10 \"\r\n                >\r\n                  CANCEL\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterScteen0Ulb;\r\n","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - \r\n//    DESCRIPTION -\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useState } from 'react'\r\nimport { AccordionPage } from './ApplyFromScreens/AccordionPage';\r\nimport WaterAfterSubmit from './ApplyFromScreens/WaterAfterSubmit';\r\nimport WaterFormScreen1 from './ApplyFromScreens/WaterFormScreen1';\r\nimport WaterScteen0Ulb from './ApplyFromScreens/WaterScteen0Ulb';\r\n\r\nfunction WaterApply() {\r\n\r\n  const [currentScreenNo, setCurrentScreenNo] = useState(0)\r\n  const [waterApplicationNo, setWaterApplicationNo] = useState()\r\n  const [selectedUlb, setSelectedUlb] = useState()\r\n\r\n  const screen1Data = (data) => {\r\n    console.log(\"Screen 1 Data After Apply Water\", data)\r\n    setWaterApplicationNo(data)\r\n    setCurrentScreenNo(2)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <WaterScteen0Ulb openUlbModal={currentScreenNo} nextScreen={() => setCurrentScreenNo(1)} setSelectedUlb={(e) => setSelectedUlb(e)} />\r\n      <div className=\"grid grid-cols-12 gap-10\">\r\n\r\n        <div className=\"md:col-span-9 col-span-12\">\r\n          <p className=\"border p-2 bg-indigo-500 text-gray-200 rounded shadow-md\">You are applying <span className='font-semibold'> Water Connection </span> for <span className='font-semibold text-gray-100'>{selectedUlb?.ulb_name}</span></p>\r\n          <div className={`${currentScreenNo == 1 ? 'block' : 'hidden'} `}>   <WaterFormScreen1 screen1Data={screen1Data} selectedUlbId={selectedUlb?.id} /></div>\r\n          <div className={`${currentScreenNo == 2 ? 'block' : 'hidden'} `}>   <WaterAfterSubmit data={waterApplicationNo} /></div>\r\n        </div>\r\n\r\n\r\n        <div className=\"md:col-span-3 col-span-12\">\r\n          <p className=\"border-2 border-indigo-400 p-2 text-center bg-white text-xl shadow-md\"> Frequently Asked Questions </p>\r\n          <AccordionPage />\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WaterApply"],"names":["AccordionPage","_jsxs","Accordion","children","_jsx","AccordionItem","toggle","className","AccordionPanel","id","Context","React","_ref","_React$useState","_React$useState2","_slicedToArray","selected","setSelected","toggleItem","prevState","Provider","value","useAccordion","style","item","panel","_ref2","_useAccordion","role","onClick","concat","AngleUpIcon","AngleDownIcon","_ref3","_ref$current","ref","inlineStyle","height","current","scrollHeight","fill","strokeWidth","viewBox","xmlns","d","stroke","props","_props$data3","api_getProfileDetails","CitizenApplyApiList","header","WaterApiList","navigate","useNavigate","console","log","useEffect","AxiosInterceptors","then","response","_props$data","_props$data2","data","status","applicationNo","sendWhatsAppMessage","mobile","catch","error","AppNo","mobileNo","config","headers","Authorization","process","REACT_APP_WP_ACCESS_TOKEN","bodyParameterSimple","messaging_product","to","res","err","_Fragment","_props$data4","applicationId","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","modalIsOpen","setIsOpen","closeModal","message","Modal","isOpen","onAfterOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","_fetchedSafHoldingDat","_fetchedSafHoldingDat2","_fetchedSafHoldingDat3","_useState","useState","_useState2","propertyTypeStatusToggle","setpropertyTypeStatusToggle","_useState3","_useState4","barLoader","setBarLoader","_useState5","_useState6","fetchedSafHoldingData","setFetchedSafHoldingData","_useState7","_useState8","ownerRecord","setOwnerRecord","_useState9","_useState10","formApplyError","setFormApplyError","_useState11","_useState12","ownerFieldError","setOwnerFieldError","_useState13","_useState14","isTenant","setIsTenant","_useState15","_useState16","listOfSafHolding","setListOfSafHolding","_useState17","_useState18","isFoundHoldingSaf","setIsFoundHoldingSaf","_useState19","_useState20","messageModal","setMessageModal","_useState21","_useState22","formSubmitLoader","setFormSubmitLoader","notify","useContext","contextVar","inputContainerStyle","inputLabelStyle","commonInputStyle","_WaterApiList","api_NewWaterConnection","api_getHoldingSafOfLogin","api_getSafHoldingDetails","validationSchema","api_userProfileDetails","yup","typeofConnection","required","connectionThrough","ownerType","propertyType","selectedSafHol","formik","useFormik","initialValues","categoryType","pipelineType","wardNo","totalArea","pincode","address","safNo","holdingNo","enableReinitialize","onSubmit","values","resetForm","payload","selectedUlbId","safHolding","new_ward_mstr_id","owners","_res$data","screen1Data","finalSubmitData","setFieldValue","type","ulbId","_res$data2","length","getListOfHoldingSafLoginUser","handleSafHolding","clearFormData","_res$data3","_res$data4","_res$data4$data","_res$data5","_res$data5$data","_res$data6","_res$data6$data","_res$data7","_res$data7$data","_res$data8","_res$data8$data","_res$data9","_res$data9$data","_res$data10","_res$data10$data","_res$data11","_res$data11$data","areaInSqFt","prop_address","prop_pin_code","new_ward_no","owner_name","guardian_name","mobile_no","BarLoader","MessageModal","handleSubmit","onChange","event","name","target","allowNumberInput","allowCharacterInput","ownerName","guardianName","_objectSpread","getFieldProps","touched","errors","disabled","map","i","new_holding_no","saf_no","tenanted","usageType","GoInfo","class","items","index","email","confirmed","window","confirm","filter","record","indexOf","handleRemove","handleChange","undefined","_toConsumableArray","overlay","backgroundColor","ulbList","setUlbList","selectedOption","setSelectedOption","api_ulbList","openUlbModal","axios","Select","defaultValue","getOptionLabel","option","ulb_name","getOptionValue","options","isClearable","isLoading","nextScreen","setSelectedUlb","currentScreenNo","setCurrentScreenNo","waterApplicationNo","setWaterApplicationNo","selectedUlb","WaterScteen0Ulb","e","WaterFormScreen1","WaterAfterSubmit"],"sourceRoot":""}