{"version":3,"file":"static/js/7363.49f29798.chunk.js","mappings":"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","sources":["Components/GlobalData/UseSetTitle.js","Pages/AdvertisementModule/ServerErrorCard.js","Pages/Contents/CitizenSafForm/PaymentReceipt2/SafPaymentReceiptIndex.js"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport { contextVar } from '../ContextVar'\r\n\r\nfunction useSetTitle({title, status}) {\r\n\r\n    const { settitleText, settitleStatus } = React.useContext(contextVar)\r\n    useEffect(() => {\r\n        settitleText(title)\r\n        settitleStatus(status)\r\n    }, [])\r\n\r\n\r\n}\r\n\r\nexport default useSetTitle","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Component  - ServerErrorCard\r\n// DESCRIPTION - This component is rendered when there is some error in hitting the api to show text like server is busy..\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineReload } from 'react-icons/ai'\r\n\r\nfunction ServerErrorCard(props) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div class=\"items-center justify-center p-10 bg-white shadow-xl\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex rounded-full bg-red-100 p-4\">\r\n            <div class=\"rounded-full stroke-red-600 bg-red-200 p-4\">\r\n              <svg class=\"w-16 h-16\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 8H6.01M6 16H6.01M6 12H18C20.2091 12 22 10.2091 22 8C22 5.79086 20.2091 4 18 4H6C3.79086 4 2 5.79086 2 8C2 10.2091 3.79086 12 6 12ZM6 12C3.79086 12 2 13.7909 2 16C2 18.2091 3.79086 20 6 20H14\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M17 16L22 21M22 16L17 21\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" p-10\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">{props?.title}</div>\r\n            <p class=\"text-slate-600 mt-1 lg:text-lg\">{props?.desc}</p>\r\n            <div className=\"text-center mt-10\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => window.location.reload()}><AiOutlineReload className=\"inline mr-2\" />Reload</button>\r\n              <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(props?.buttonUrl)}>{props?.buttonText}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServerErrorCard","import axios from 'axios';\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactToPrint from 'react-to-print-advanced';\r\nimport ApiHeader from '../../../../Components/ApiList/ApiHeader';\r\nimport CitizenApplyApiList from '../../../../Components/CitizenApplyApiList';\r\nimport BarLoader from '../../../../Components/Common/BarLoader';\r\nimport BrandLoader from '../../../../Components/Common/BrandLoader';\r\nimport CommonModal from '../../../../Components/GlobalData/CommonModal';\r\nimport useSetTitle from '../../../../Components/GlobalData/UseSetTitle';\r\nimport ServerErrorCard from '../../../AdvertisementModule/ServerErrorCard';\r\nimport NonBlockingLoader from '../NonBlockingLoader';\r\nimport ComponentToPrint from './SafPaymentReceipt';\r\n\r\n\r\nfunction SafPaymentReceiptIndex() {\r\n\r\n    ///////{***âœ… payment Id from use param...***}///////\r\n    const { paymentId, module } = useParams()\r\n    console.log(\"param payment id ..\", paymentId)\r\n    let title\r\n    if (module == 'saf') {\r\n        title = \"SAF Receipt\"\r\n    } else {\r\n        title = \"Holding Receipt\"\r\n    }\r\n    useSetTitle(title)\r\n\r\n    const componentRef = useRef();\r\n    const [paymentData, setpaymentData] = useState();\r\n    const [show, setshow] = useState(false)\r\n    const [erroState, seterroState] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n    // const [paymentId, setpaymentId] = useState('pay_KiI7acuJomb5eq');\r\n\r\n    // const { licenseId, tranId } = useParams();\r\n\r\n    const { api_getPaymentData, api_getHoldingReceiptUrl } = CitizenApplyApiList()\r\n\r\n    useEffect(() => {\r\n        fetchPaymentData();\r\n    }, [])\r\n\r\n    const fetchPaymentData = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n\r\n        let token = window.localStorage.getItem('token')\r\n        const header = {\r\n            headers:\r\n            {\r\n                Authorization: `Bearer ${token}`,\r\n                Accept: 'application/json',\r\n            }\r\n        }\r\n        let url\r\n        let requestBody\r\n        if (module == 'holding') {\r\n            url = api_getHoldingReceiptUrl\r\n            requestBody = {\r\n                // HERE paymentId is transaction no\r\n                tranNo: paymentId\r\n            }\r\n        } else {\r\n            url = api_getPaymentData\r\n            requestBody = {\r\n                tranNo: paymentId\r\n            }\r\n        }\r\n        console.log('before fetch payment receipt....', requestBody)\r\n        axios.post(url, requestBody, ApiHeader())\r\n            .then((response) => {\r\n                // console.log(\"payment data\", response.data.data);\r\n                console.log(\"payment data at receipt.....\", response);\r\n                if (response.data.status) {\r\n\r\n                    setpaymentData(response.data.data);\r\n\r\n                } else {\r\n                    seterroState(true)\r\n                }\r\n                setisLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                seterroState(true)\r\n                setisLoading(false)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ReactToPrint\r\n                trigger={() => <button></button>}\r\n                content={() => componentRef.current}\r\n            />\r\n            <ComponentToPrint module={module} ref={componentRef} paymentData={paymentData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SafPaymentReceiptIndex"],"names":["title","status","React","contextVar","settitleText","settitleStatus","useEffect","props","navigate","useNavigate","class","viewBox","fill","xmlns","d","className","desc","onClick","window","location","reload","buttonUrl","buttonText","useParams","paymentId","module","console","log","useSetTitle","componentRef","useRef","useState","paymentData","setpaymentData","erroState","seterroState","isLoading","setisLoading","CitizenApplyApiList","api_getPaymentData","api_getHoldingReceiptUrl","fetchPaymentData","url","requestBody","token","localStorage","getItem","tranNo","axios","ApiHeader","then","response","data","catch","error","trigger","content","current","ref"],"sourceRoot":""}