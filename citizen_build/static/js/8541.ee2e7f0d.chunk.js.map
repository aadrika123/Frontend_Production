{"version":3,"file":"static/js/8541.ee2e7f0d.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/Hoarding/ViewAllHoardingApprovedList.jsx"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport HoardingApplicationFullDetail from \"./HoardingApplicationFullDetail\";\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction ViewAllHoardingApprovedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingApprovedApplicationList, api_blacklistedApplication } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    const [show, setshow] = useState(false)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n    const notify = (toastData, type) => {\r\n        toast.dismiss();\r\n        if (type == 'success') {\r\n            toast.success(toastData)\r\n        }\r\n        if (type == 'error') {\r\n            toast.error(toastData)\r\n        }\r\n    };\r\n\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handleBlacklisted(cell.row.values.id)}\r\n                        className=\"bg-indigo-500 px-3 py-1 ml-2 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\nhover:text-white text-white\"\r\n                    >\r\n                        Blacklisted\r\n                    </button>\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    const getApplicationList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.post(api_getHoardingApprovedApplicationList, {}, ApiHeaderAdvrt())\r\n            .then((res) => {\r\n                console.log(\"res\", res.data);\r\n                if (res.data.status) {\r\n                    setapplicationDetail(res.data.data);\r\n                    settableStatus(true);\r\n                    setisLoading(false)\r\n                } else {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n    // const showLoader = (val) => {\r\n    //     setshow(val);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getApplicationList()\r\n    }, [])\r\n\r\n    const handleBlacklisted = (applicationId) => {\r\n        const requestBody = {\r\n            applicationId: applicationId,\r\n        }\r\n        console.log(\"request body in renew...12\", applicationId)\r\n        axios.post(`${api_blacklistedApplication}`, requestBody, ApiHeaderAdvrt())\r\n            .then(function (response) {\r\n                console.log('archived response', response.data)\r\n                notify(\" success\", \"success\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log('errorrr.... ', error);\r\n                notify(\"failed to submit\", \"error\")\r\n            })\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={2000} />\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-16'>\r\n                <div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">HOARDING APPROVED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null && */}\r\n                        {tableStatus &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {/* {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewAllHoardingApprovedList;"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","useState","AdvertisementApiList","api_getHoardingApprovedApplicationList","api_blacklistedApplication","applicationDetail","setapplicationDetail","tableStatus","settableStatus","applicationType","setapplicationType","applicationNo","setapplicationNo","setshow","isLoading","setisLoading","erroState","seterroState","modalIsOpen","setIsOpen","closeModal","notify","toastData","type","toast","COLUMNS","Header","Cell","row","className","index","accessor","cell","onClick","modalAction","values","id","handleBlacklisted","applicationId","console","log","useEffect","axios","ApiHeaderAdvrt","then","res","data","status","catch","err","requestBody","response","error","title","desc","buttonText","buttonUrl","position","autoClose","src","assessmentType","columns","dataList","isOpen","onAfterOpen","onRequestClose","style","contentLabel","class","showLoader","val"],"sourceRoot":""}