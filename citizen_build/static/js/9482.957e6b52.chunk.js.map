{"version":3,"file":"static/js/9482.957e6b52.chunk.js","mappings":"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","sources":["Components/GlobalData/LocalBrowserData.js","Pages/Property/PaymentCard.js","Pages/Property/PropertyPayment.js"],"sourcesContent":["export const name = localStorage.getItem('citizenName')\r\nexport const mobile = localStorage.getItem('citizenMobile')\r\n","import { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport rupee from '../../Components/Media/rupee.png'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nimport BarLoader from '../../Components/Common/BarLoader'\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  allowFloatInput,\r\n  allowCharacterNumberInput,\r\n  allowCharacterNumberSpaceCommaInput,\r\n  allowCharacterSpaceCommaInput,\r\n  nullToNA,\r\n  nullToZero,\r\n  indianAmount,\r\n} from \"../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport RazorpayPaymentScreen from \"../../Components/RazorpayPaymentScreen\";\r\nimport CitizenApplyApiList from \"../../Components/CitizenApplyApiList\";\r\nimport ApiHeader from \"../../Components/ApiList/ApiHeader\";\r\nimport PaymentTranscationScreen from \"../../Components/PaymentTranscationScreen\";\r\nimport { name, mobile } from '../../Components/GlobalData/LocalBrowserData'\r\nimport { BiRupee } from 'react-icons/bi'\r\nimport { allowNumberInput } from \"../AdvertisementModule/FunctionComponent/ValidationFunction\";\r\nimport BottomErrorCard from \"../../Components/BottomErrorCard\";\r\n\r\n\r\nfunction PaymentCard(props) {\r\n  const {\r\n    propertyGenerateOrderId,\r\n    propertyGenerateHoldingOrderId,\r\n    propertyGenerateOrderIdDirect,\r\n    api_getTransactionNoForReceipt,\r\n    api_postPropertyPayment,\r\n    api_postSafPayment,\r\n  } = CitizenApplyApiList();\r\n  const { id, moduleType, userType } = useParams();\r\n  const [responseScreenStatus, setResponseScreenStatus] = useState(\"\");\r\n  const [isLoading, setisLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  // SETTING GLOBAL TITLE AT ONCE USING CUSTOM HOOK\r\n\r\n  const [formHide, setFormHide] = useState(false);\r\n  const [paymentMode, setPaymentMode] = useState();\r\n  const [advanceStatus, setadvanceStatus] = useState(false);\r\n  const [currentTransactionNo, setcurrentTransactionNo] = useState(null);\r\n  const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n  // const validationSchema = yup.object({\r\n  //   paymentUptoYear: yup.string().required(\"Select payment upto year\"),\r\n  //   paymentUptoQuarter: yup.string().required(\"Enter payment upto quarter\"),\r\n  //   paymentMode: yup.string().required(\"select payment mode\"),\r\n\r\n  //   remarks: yup.string().required(\"Enter remarks\"),\r\n  //   bankName: yup.string(),\r\n  //   branchName: yup.string(),\r\n  //   cheque_dd_no: yup.string(),\r\n  //   cheque_dd_date: yup.string(),\r\n\r\n  //   payAdvance: yup.string(),\r\n  //   advanceAmount: yup.string(),\r\n  // });\r\nlet validationSchema\r\n  if (moduleType == 'holding' || moduleType=='direct') {\r\n    validationSchema = yup.object({\r\n      paymentUptoYear: yup.string().required('Select Payment upto year'),\r\n      paymentUptoQuarter: yup.string().required('Select payment upt quarter'),\r\n      paymentMode: yup.string(),\r\n\r\n      remarks: yup.string().required('Enter remarks'),\r\n      payAdvance: yup.string(),\r\n      advanceAmount: yup.string().when('payAdvance', {\r\n        is: true,\r\n        then: yup.string().required('Enter advance amount')\r\n      }),\r\n\r\n\r\n    })\r\n  }\r\n  if (moduleType == 'saf') {\r\n    validationSchema = yup.object({\r\n      paymentUptoYear: yup.string(),\r\n      paymentUptoQuarter: yup.string(),\r\n      paymentMode: yup.string(),\r\n\r\n      remarks: yup.string(),\r\n\r\n      payAdvance: yup.string(),\r\n      advanceAmount: yup.string(),\r\n\r\n\r\n    })\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      paymentUptoYear: \"\",\r\n      paymentUptoQuarter: \"\",\r\n      paymentMode: \"ONLINE\",\r\n\r\n      remarks: \"\",\r\n      payAdvance: \"\",\r\n      advanceAmount: \"\",\r\n    },\r\n\r\n    onSubmit: (values, resetForm) => {\r\n      console.log(\"values at submit payment\", values);\r\n        getOrderId();\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const toggleForm = (e) => {\r\n    console.log(\"checkbox is changing \", e.target.checked);\r\n    setFormHide(e.target.checked);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    {\r\n      name == \"paymentMode\" && setPaymentMode(value);\r\n    }\r\n    {\r\n      name == \"payAdvance\" && setadvanceStatus(e.target.checked);\r\n    }\r\n\r\n    { (name == 'paymentUptoQuarter') && props?.fetchDemandDetail(value, formik.values.paymentUptoYear) }\r\n\r\n    { name == 'remarks' && formik.setFieldValue(\"remarks\", allowCharacterSpaceCommaInput(value, formik.values.remarks, 100)) }\r\n    { name == 'bankName' && formik.setFieldValue(\"bankName\", allowCharacterSpaceCommaInput(value, formik.values.bankName, 100)) }\r\n    { name == 'branchName' && formik.setFieldValue(\"branchName\", allowCharacterSpaceCommaInput(value, formik.values.branchName, 100)) }\r\n    { name == 'cheque_dd_no' && formik.setFieldValue(\"cheque_dd_no\", allowCharacterNumberInput(value, formik.values.cheque_dd_no, 20)) }\r\n    { name == 'advanceAmount' && formik.setFieldValue(\"advanceAmount\", allowNumberInput(value, formik.values.advanceAmount, 10)) }\r\n\r\n  };\r\n\r\n  //// PAYMENT METHOD  ////\r\n  const dreturn = (data) => {\r\n    // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n    console.log(\"all transaciton response.... =>\", data);\r\n    setResponseScreenStatus(data.status);\r\n    // return\r\n    if (data?.status) {\r\n      fetchTransactionNo(data?.data);\r\n      toast.success(\"Payment Success....\");\r\n    } else {\r\n      toast.error(\"Payment failed....\");\r\n    }\r\n  };\r\n\r\n  // FETCHING TRANSACTION NO TO PASS TO RECEIPT\r\n  const fetchTransactionNo = (data) => {\r\n    let requestBody = {\r\n      orderId: data?.razorpay_order_id,\r\n      paymentId: data?.razorpay_payment_id,\r\n    };\r\n    axios\r\n      .post(api_getTransactionNoForReceipt, requestBody, ApiHeader())\r\n      .then(function (response) {\r\n        setcurrentTransactionNo(response?.data?.data?.transaction_no)\r\n        console.log(\"transaction no get response...\", response?.data);\r\n        // return\r\n        // navigate(\r\n        //   `/paymentReceipt/${response?.data?.data?.transaction_no}/${moduleType == \"saf\" ? \"saf\" : \"holding\"\r\n        //   }`\r\n        // );\r\n        setisLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"transaction no get error...\", error);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  // FUNCTION FOR PAYMENT OTHER THAN ONLINE MODE\r\n  const makePayment = (data) => {\r\n    let url;\r\n    let requestBody = {\r\n      id: id,\r\n      amount: props?.paymentDetails?.totalDues,\r\n      paymentMode: data?.paymentMode,\r\n      chequeDate: data?.cheque_dd_date,\r\n      bankName: data?.bankName,\r\n      branchName: data?.branchName,\r\n      chequeNo: data?.cheque_dd_no,\r\n    };\r\n\r\n    if (moduleType == \"holding\") {\r\n      url = api_postPropertyPayment;\r\n    }\r\n    if (moduleType == \"direct\") {\r\n      url = api_postPropertyPayment;\r\n    }\r\n    if (moduleType == \"saf\") {\r\n      url = api_postSafPayment;\r\n    }\r\n\r\n    console.log(\"before make payment..\", requestBody);\r\n    // return\r\n    axios\r\n      .post(url, requestBody, ApiHeader())\r\n      .then(function (response) {\r\n        console.log(\"property payment response...\", response?.data);\r\n        // return\r\n        navigate(\r\n          `/paymentReceipt/${response?.data?.transaction_no}/${moduleType}`\r\n        );\r\n        setisLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"property payment error..\", error);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  console.log(\"demand details => \", props?.safPaymentDetailsData?.isPayable)\r\n\r\n  const getOrderId = async () => {\r\n    // This Function is used to Order Id Generation\r\n    // props.showLoader(true)\r\n    setisLoading(true)\r\n    let url\r\n    let orderIdPayload\r\n    if (moduleType == 'holding') {\r\n      url = propertyGenerateHoldingOrderId\r\n      orderIdPayload = {\r\n        propId: id,\r\n        amount: props?.paymentDetails?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n    if (moduleType == 'saf') {\r\n      url = propertyGenerateOrderId\r\n      orderIdPayload = {\r\n        id: id,\r\n        amount: props?.safPaymentDetailsData?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n\r\n    if (moduleType == 'direct') {\r\n      url = propertyGenerateOrderIdDirect\r\n      orderIdPayload = {\r\n        propId: id,\r\n        amount: props?.paymentDetails?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n\r\n    console.log('name....', name, '....mobile..', mobile)\r\n\r\n    // setLoader(true)\r\n\r\n    console.log(\r\n      \"orderidpayload at payment before...\",\r\n      orderIdPayload,\r\n      \"moduleId..\",\r\n      moduleType\r\n    );\r\n    axios\r\n      .post(url, orderIdPayload, ApiHeader()) // This API will generate Order ID\r\n      .then((res) => {\r\n        console.log(\"Order Id Response \", res?.data);\r\n        if (res?.data?.status === true) {\r\n          console.log(\"OrderId Generated True\", res?.data?.data);\r\n          RazorpayPaymentScreen(res?.data?.data, dreturn); //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup\r\n         \r\n\r\n        }\r\n        else {\r\n          // props.showLoader(false)\r\n          activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n        }\r\n        setisLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n        console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n        setisLoading(false)\r\n\r\n        // props.showLoader(false)\r\n      });\r\n  };\r\n\r\n  const activateBottomErrorCard = (state, msg) => {\r\n    seterroMessage(msg)\r\n    seterroState(state)\r\n\r\n}\r\n\r\n  if (responseScreenStatus == true) {\r\n    return (\r\n      <>\r\n        <div className=\"w-full h-full bg-white p-20\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">Your payment has been successfully done !</div>\r\n            <div className=\"text-center mt-6\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/paymentReceipt/${currentTransactionNo}/${moduleType == \"saf\" ? \"saf\" : \"holding\"}`)}>View Receipt</button>\r\n              {moduleType != \"direct\" && <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/propApplicationDetails/${id}`)}>View Application</button>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n\r\n        isLoading && <BarLoader />\r\n      }\r\n       {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n      <ToastContainer position=\"top-right\"\r\n        autoClose={2000} />\r\n      <div className={` block p-4 mt-4 w-full md:py-4 md:px-40 md:pb-0 md:pt-0 rounded-lg shadow-lg bg-white md:w-full mx-auto  overflow-x-auto mb-20 `}>\r\n        {/* <h1 className='px-2 font-semibold mt-0 bg-sky-100 text-center text-gray-700 font-serif py-2 text-lg shadow-lg border border-white'>SAF Payment</h1> */}\r\n\r\n        <div className=\" block p-4 w-full md:py-6 rounded-lg bg-white mx-auto \">\r\n          {/* <h1 className='mb-2 text-gray-600'><img src={rupee} alt=\"rupee-image\" className='w-5 inline' /> Demand Amount - <span className='font-semibold text-lg text-gray-800'>2000</span></h1> */}\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            onChange={handleChange}\r\n            className=\"p-4 relative\"\r\n          >\r\n            <div className=\"grid grid-cols-12\">\r\n              {moduleType != \"saf\" && (\r\n                <>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Upto Year\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentUptoYear\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {props?.paymentDetails?.paymentUptoYrs?.map(\r\n                        (data, index) => (\r\n                          <option\r\n                            selected={index == 0 ? true : false}\r\n                            value={data}\r\n                          >\r\n                            {data}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentUptoYear &&\r\n                        formik.errors.paymentUptoYear\r\n                        ? formik.errors.paymentUptoYear\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Upto Quarter\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentUptoQuarter\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {props?.paymentDetails?.paymentUptoQtrs?.map(\r\n                        (data, index) => (\r\n                          <option\r\n                            selected={index == 0 ? true : false}\r\n                            value={data}\r\n                          >\r\n                            {data}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentUptoQuarter &&\r\n                        formik.errors.paymentUptoQuarter\r\n                        ? formik.errors.paymentUptoQuarter\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Mode\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentMode\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      {/* IF USER TYPE IS DIRECT CITIZEN THEN DON'T SHOW OTHER PAYMENT MEHTOD */}\r\n                      {/* {\r\n                    userType != 'direct' &&\r\n                    <>\r\n                      <option value=\"CASH\" >Cash</option>\r\n                      <option value=\"CHEQUE\" >Cheque</option>\r\n                      <option value=\"DD\" >DD</option>\r\n                    </>\r\n                  } */}\r\n                      <option value=\"ONLINE\">Online</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentMode && formik.errors.paymentMode\r\n                        ? formik.errors.paymentMode\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* IF USER TYPE IS NOT DIRECT CITIZEN THEN ONLY SHOW REMARKS */}\r\n                  {userType != \"direct\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                        <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        Remarks\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"remarks\")}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        placeholder=\"Enter new ward no.\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.remarks && formik.errors.remarks\r\n                          ? formik.errors.remarks\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* toggle inputs of payment mode */}\r\n                  {(paymentMode == \"CHEQUE\" || paymentMode == \"DD\") && (\r\n                    <>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Bank Name\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"bankName\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.bankName && formik.errors.bankName\r\n                            ? formik.errors.bankName\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Branch Name\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"branchName\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.branchName && formik.errors.branchName\r\n                            ? formik.errors.branchName\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Cheque/DD No\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"cheque_dd_no\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.cheque_dd_no &&\r\n                            formik.errors.cheque_dd_no\r\n                            ? formik.errors.cheque_dd_no\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Cheque/DD Date\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"cheque_dd_date\")}\r\n                          type=\"date\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.cheque_dd_date &&\r\n                            formik.errors.cheque_dd_date\r\n                            ? formik.errors.cheque_dd_date\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* pay advance */}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <input\r\n                      {...formik.getFieldProps(\"payAdvance\")}\r\n                      id=\"checked-checkbox\"\r\n                      type=\"checkbox\"\r\n                      class=\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 cursor-pointer\"\r\n                    />\r\n                    <label\r\n                      for=\"checked-checkbox\"\r\n                      class=\"ml-2 text-sm font-medium text-gray-900 darks:text-gray-300\"\r\n                    >\r\n                      Pay Advance\r\n                    </label>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.payAdvance && formik.errors.payAdvance\r\n                        ? formik.errors.payAdvance\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {advanceStatus && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                        <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        Advance amount\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"advanceAmount\")}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        placeholder=\"Enter new ward no.\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.advanceAmount &&\r\n                          formik.errors.advanceAmount\r\n                          ? formik.errors.advanceAmount\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* line break */}\r\n              <div className=\"col-span-12\"></div>\r\n\r\n              {/* text details */}\r\n              {/* SHOW IN CASE OF HOLDING */}\r\n              {moduleType != \"saf\" && (\r\n                <div className=\"bg-white col-span-12 grid grid-cols-12 pt-6 mb-4 border border-gray-200\">\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Total Tax :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.safPaymentDetailsData?.totalTax)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.paymentDetails?.rebateAmt)}\r\n                    </span>\r\n                  </div>\r\n                  {moduleType == \"saf\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <span>Late Assessment Penalty :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold\">\r\n                        {indianAmount(props?.paymentDetails?.lateAssPenalty)}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Special Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.paymentDetails?.specialRebateAmt)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>1% Penalty :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.paymentDetails?.onePercPenalty)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <div className=\"w-2/3\">\r\n                      <span>Total Payable Amount :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold text-xl\">\r\n                        {indianAmount(props?.paymentDetails?.payableAmount)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* SHOW IN CASE OF SAF */}\r\n              {moduleType == \"saf\" && (\r\n                <div className=\"bg-white col-span-12 grid grid-cols-12 pt-6 mb-4 border border-gray-200\">\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Total Tax :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.safPaymentDetailsData?.totalTax)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.safPaymentDetailsData?.rebateAmt)}\r\n                    </span>\r\n                  </div>\r\n                  {moduleType == \"saf\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <span>Late Assessment Penalty :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold\">\r\n                        {indianAmount(props?.safPaymentDetailsData?.lateAssessmentPenalty)}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Special Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.safPaymentDetailsData?.specialRebateAmt)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>1% Penalty :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {indianAmount(props?.safPaymentDetailsData?.totalOnePercPenalty)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <div className=\"w-2/3\">\r\n                      <span>Total Payable Amount :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold text-xl\">\r\n                        {indianAmount(props?.safPaymentDetailsData?.payableAmount)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"col-span-12 grid grid-cols-2 mt-10\">\r\n                <div className=\"\"></div>\r\n                <div className=\"md:pl-10 text-right\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"ml-4 font-bold px-6 py-2 bg-indigo-500 text-white  text-sm leading-tight uppercase rounded  hover:bg-indigo-700 hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out shadow-xl border border-white\"\r\n                  >\r\n                    <span className=\"mr-2\">Pay</span> \r\n                    {/* <BiRupee className=\"inline mr-0 ml-2\" /> */}\r\n                    {moduleType == 'saf' && indianAmount(props?.safPaymentDetailsData?.payableAmount)}\r\n                    {moduleType != 'saf' && indianAmount(props?.paymentDetails?.payableAmount)}\r\n                  </button>\r\n                  {/* {userType != 'direct' && <button type='submit' className=\" px-6 py-2.5 bg-green-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Pay Tax</button>} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentCard;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport BarLoader from \"../../Components/Common/BarLoader\";\r\nimport ApiHeader from \"../../Components/ApiList/ApiHeader\";\r\nimport PropertyApiList from \"../../Components/ApiList/PropertyApiList\";\r\nimport PaymentCard from \"./PaymentCard\";\r\nimport CitizenApplyApiList from \"../../Components/CitizenApplyApiList\";\r\nimport BrandLoader from \"../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../AdvertisementModule/ServerErrorCard\";\r\nimport { nullToNA } from \"../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport useSetTitle from \"../../Components/GlobalData/UseSetTitle\";\r\nimport AxiosInterceptors from \"../../Components/GlobalData/AxiosInterceptors\";\r\n\r\nfunction PropertyPayment(props) {\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [isLoading2, setisLoading2] = useState(false);\r\n    const [applicationFullData, setapplicationFullData] = useState()\r\n    const [demandDetail, setdemandDetail] = useState()\r\n    const [fullData, setfullData] = useState()\r\n    const [loader, setLoader] = useState(false) // Used when click on Pay Now\r\n    const [erroState, seterroState] = useState(false);\r\n    const [tranNo, settranNo] = useState(null)\r\n\r\n\r\n    const { id, moduleType } = useParams()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { zeroDemandPayment, api_getDirectHoldingDemandById, api_getHoldingDemandById, api_getsafDemandById } = CitizenApplyApiList();\r\n\r\n    const fetchDemandDetail = (fQtr = null, fYear = null) => {\r\n        seterroState(false)\r\n        let url\r\n        let requestBody\r\n\r\n        if (moduleType == 'holding') {\r\n            url = api_getHoldingDemandById\r\n            requestBody = {\r\n                propId: id,\r\n                fYear: fYear,\r\n                qtr: fQtr\r\n            }\r\n        }\r\n        if (moduleType == 'saf') {\r\n            url = api_getsafDemandById\r\n            requestBody = {\r\n                id: id\r\n            }\r\n        }\r\n        if (moduleType == 'direct') {\r\n            url = api_getDirectHoldingDemandById\r\n            requestBody = {\r\n                propId: id,\r\n                fYear: fYear,\r\n                qtr: fQtr\r\n            }\r\n        }\r\n\r\n\r\n        if (fQtr !== null) {\r\n            setisLoading2(true)\r\n        } else {\r\n            setisLoading(true)\r\n        }\r\n\r\n        console.log(\"before hit => \", requestBody, url)\r\n\r\n        AxiosInterceptors.post(url, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('payment details data...', response?.data)\r\n                setdemandDetail(response?.data?.data)\r\n                setfullData(response?.data)\r\n                if (response?.data?.data?.paymentStatus == 1) {\r\n                    navigate(`/viewDemand/${id}`)\r\n                }\r\n                if (fQtr !== null) {\r\n                    setisLoading2(false)\r\n                } else {\r\n                    setisLoading(false)\r\n                }\r\n                if (response?.data?.data?.amounts?.isPayable == false) {\r\n                    submitDemand()\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('payment details error...', error)\r\n                seterroState(true)\r\n                if (fQtr !== null) {\r\n                    setisLoading2(false)\r\n                } else {\r\n                    setisLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const submitDemand = () => {\r\n\r\n        setisLoading(true)\r\n        seterroState(false)\r\n\r\n        let body = {\r\n            id: id,\r\n            paymentMode: \"Online\"\r\n        }\r\n\r\n        AxiosInterceptors.post(zeroDemandPayment, body, ApiHeader())\r\n            .then((res) => {\r\n                console.log('response zero payment => ', res)\r\n                if (res?.data?.status) {\r\n                    console.log('response zero payment => ', res?.data?.data)\r\n                    settranNo(res?.data?.data?.TransactionNo)\r\n                } else {\r\n                    console.log('false status response zero payment => ', res)\r\n                    seterroState(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log('error zero payment => ', err)\r\n                seterroState(true)\r\n            })\r\n            .finally(() => setisLoading(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDemandDetail()\r\n    }, [id, moduleType])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            // <CommonModal>\r\n            <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            // </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading2 && <BarLoader />}\r\n            {/* <div className=\" font-bold text-2xl pb-4 md:py-4\">Holding Deactivation</div> */}\r\n\r\n            <div className={moduleType == 'direct' && \" p-4 mt-10\"}>\r\n                <div className='w-full bg-white shadow-xl mb-6'>\r\n                    <div className='py-6 mt-2 rounded-lg shadow-lg p-4'>\r\n                        <div className=\"flex flex-col md:flex-row space-y-2 md:space-x-5 pl-4 \">\r\n                            {moduleType != 'saf' && <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.holding_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Holding No.</div>\r\n                            </div>}\r\n                            {moduleType == 'saf' && <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.saf_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Application No.(Saf No)</div>\r\n                            </div>}\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.old_ward_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Ward No.</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-lg'>{nullToNA(demandDetail?.basicDetails?.old_ward_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>New Ward No</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.ownership_type)}</div>\r\n                                <div className='text-gray-500 text-xs'>Ownership Type</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.property_type)}</div>\r\n                                <div className='text-gray-500 text-xs'>Property Type</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col md:flex-row space-y-2 md:space-x-10  pl-4 mt-4\">\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.zone_mstr_id)}</div>\r\n                                <div className='text-gray-500 text-xs'>Zone</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.is_mobile_tower)}</div>\r\n                                <div className='text-gray-500 text-xs'>Property has Mobile Tower(s) ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.is_hoarding_board)} </div>\r\n                                <div className='text-gray-500 text-xs'>Property has Hoarding Board(s) ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.is_petrol_pump)}</div>\r\n                                <div className='text-gray-500 text-xs'>Is property a Petrol Pump ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm' >{nullToNA(demandDetail?.basicDetails?.is_water_harvesting)}</div>\r\n                                <div className='text-gray-500 text-xs'>Rainwater harvesting provision ?</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    {\r\n                        demandDetail?.amounts?.isPayable ?\r\n                            <PaymentCard fetchDemandDetail={fetchDemandDetail} safPaymentDetailsData={demandDetail?.amounts} paymentDetails={demandDetail?.duesList} ulbId={demandDetail?.basicDetails?.ulb_id} />\r\n                            :\r\n                            <div className=\"w-full h-full bg-white p-20\">\r\n                                <div>\r\n                                    <div className=\"text-center font-semibold text-3xl\">Your application is successfully submitted !</div>\r\n                                    <div className=\"text-center mt-6\">\r\n                                        <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/paymentReceipt/${tranNo}/${moduleType == \"saf\" ? \"saf\" : \"holding\"}`)}>View Receipt</button>\r\n                                        {moduleType != \"direct\" && <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/propApplicationDetails/${id}`)}>View Application</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full h-40 md:none\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PropertyPayment;\r\n"],"names":["name","localStorage","getItem","mobile","props","_props$safPaymentDeta","_props$paymentDetails4","_props$paymentDetails5","_props$paymentDetails6","_props$paymentDetails7","_props$safPaymentDeta3","_props$paymentDetails8","_props$paymentDetails9","_props$paymentDetails10","_props$paymentDetails11","_props$paymentDetails12","_props$safPaymentDeta4","_props$safPaymentDeta5","_props$safPaymentDeta6","_props$safPaymentDeta7","_props$safPaymentDeta8","_props$safPaymentDeta9","_props$safPaymentDeta10","_props$paymentDetails13","validationSchema","_CitizenApplyApiList","CitizenApplyApiList","propertyGenerateOrderId","propertyGenerateHoldingOrderId","propertyGenerateOrderIdDirect","api_getTransactionNoForReceipt","_useParams","api_postPropertyPayment","api_postSafPayment","useParams","id","moduleType","userType","_useState","useState","_useState2","_slicedToArray","responseScreenStatus","setResponseScreenStatus","_useState3","_useState4","isLoading","setisLoading","navigate","useNavigate","_useState5","_useState6","_useState7","_useState8","paymentMode","setPaymentMode","_useState9","_useState10","advanceStatus","setadvanceStatus","_useState11","_useState12","currentTransactionNo","setcurrentTransactionNo","_useState13","_useState14","erroState","seterroState","_useState15","_useState16","erroMessage","seterroMessage","yup","paymentUptoYear","required","paymentUptoQuarter","remarks","payAdvance","advanceAmount","when","is","then","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","getOrderId","dreturn","data","status","fetchTransactionNo","toast","requestBody","orderId","razorpay_order_id","paymentId","razorpay_payment_id","axios","ApiHeader","response","_response$data","_response$data$data","transaction_no","catch","error","safPaymentDetailsData","isPayable","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","orderIdPayload","_props$paymentDetails2","_props$safPaymentDeta2","_props$paymentDetails3","wrap","_context","prev","next","propId","amount","paymentDetails","payableAmount","contact","res","_res$data","_res$data2","_res$data3","RazorpayPaymentScreen","activateBottomErrorCard","err","stop","apply","arguments","state","msg","_jsx","_Fragment","children","className","_jsxs","onClick","concat","BarLoader","BottomErrorCard","errorTitle","ToastContainer","position","autoClose","handleSubmit","onChange","e","target","value","checked","fetchDemandDetail","setFieldValue","allowCharacterSpaceCommaInput","bankName","branchName","allowCharacterNumberInput","cheque_dd_no","allowNumberInput","_objectSpread","getFieldProps","type","paymentUptoYrs","map","index","selected","touched","errors","paymentUptoQtrs","placeholder","cheque_dd_date","class","for","indianAmount","totalTax","rebateAmt","lateAssPenalty","specialRebateAmt","onePercPenalty","lateAssessmentPenalty","totalOnePercPenalty","_demandDetail$basicDe","_demandDetail$basicDe2","_demandDetail$basicDe3","_demandDetail$basicDe4","_demandDetail$basicDe5","_demandDetail$basicDe6","_demandDetail$basicDe7","_demandDetail$basicDe8","_demandDetail$basicDe9","_demandDetail$basicDe10","_demandDetail$basicDe11","_demandDetail$amounts","_demandDetail$basicDe12","isLoading2","setisLoading2","demandDetail","setdemandDetail","setfullData","tranNo","settranNo","zeroDemandPayment","api_getDirectHoldingDemandById","api_getHoldingDemandById","api_getsafDemandById","fQtr","length","undefined","fYear","qtr","AxiosInterceptors","_response$data2","_response$data2$data","_response$data3","_response$data3$data","_response$data3$data$","paymentStatus","amounts","submitDemand","body","_res$data3$data","TransactionNo","finally","useEffect","BrandLoader","ServerErrorCard","title","desc","buttonText","buttonUrl","nullToNA","basicDetails","holding_no","saf_no","old_ward_no","ownership_type","property_type","zone_mstr_id","is_mobile_tower","is_hoarding_board","is_petrol_pump","is_water_harvesting","PaymentCard","duesList","ulbId","ulb_id"],"sourceRoot":""}