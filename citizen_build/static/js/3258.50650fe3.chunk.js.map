{"version":3,"file":"static/js/3258.50650fe3.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/ServerErrorCard.js","Pages/Contents/CitizenSafForm/SafFormReview/TopTabs.js","Pages/DetailsFactory/DetailsFactory.js"],"sourcesContent":["// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Component  - ServerErrorCard\r\n// DESCRIPTION - This component is rendered when there is some error in hitting the api to show text like server is busy..\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineReload } from 'react-icons/ai'\r\n\r\nfunction ServerErrorCard(props) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div class=\"items-center justify-center p-10 bg-white shadow-xl\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex rounded-full bg-red-100 p-4\">\r\n            <div class=\"rounded-full stroke-red-600 bg-red-200 p-4\">\r\n              <svg class=\"w-16 h-16\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 8H6.01M6 16H6.01M6 12H18C20.2091 12 22 10.2091 22 8C22 5.79086 20.2091 4 18 4H6C3.79086 4 2 5.79086 2 8C2 10.2091 3.79086 12 6 12ZM6 12C3.79086 12 2 13.7909 2 16C2 18.2091 3.79086 20 6 20H14\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M17 16L22 21M22 16L17 21\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" p-10\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">{props?.title}</div>\r\n            <p class=\"text-slate-600 mt-1 lg:text-lg\">{props?.desc}</p>\r\n            <div className=\"text-center mt-10\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => window.location.reload()}><AiOutlineReload className=\"inline mr-2\" />Reload</button>\r\n              <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(props?.buttonUrl)}>{props?.buttonText}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServerErrorCard","import { useNavigate, useParams } from \"react-router-dom\"\r\nimport {BiRupee} from 'react-icons/bi'\r\nimport { BiRightArrowAlt } from 'react-icons/bi'\r\nimport { nullToNA } from \"../../../../Components/Common/PowerUps/PowerupFunctions\"\r\n\r\n\r\nfunction TopTabs(props) {\r\n    const navigate = useNavigate()\r\n    const {id,btc}  = useParams()\r\n    console.log('id direct at topnav...',id)\r\n    // conditons :\r\n    // # for saf application\r\n    // 1 property details\r\n    // 2 demand details\r\n    // 3 upload documents\r\n\r\n    // # for holding\r\n    // 1 property details\r\n    // 2 payment history\r\n    // 3 demand details\r\n    let properyDetailsRoute = ''\r\n    let demandDetailsRoute = ''\r\n    let paymentHistoryRoute = ''\r\n    let uplodDocRoute = ''\r\n\r\n    if (props?.type == 'application') {\r\n        properyDetailsRoute = `/propApplicationDetails/${id}`\r\n        demandDetailsRoute = `/viewDemand/${id}`\r\n        uplodDocRoute = `/safdocumentupload/${id}/${btc}`\r\n    } else {\r\n        properyDetailsRoute = `/holdingPropertyDetails/${id}`\r\n        demandDetailsRoute = `/viewDemandHoldingProperty/${id}`\r\n        paymentHistoryRoute = `/holding-transactions/${id}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col-reverse gap-y-4 md:flex-row md:py-2 justify-center items-center\">\r\n                <div className=\"flex-1 flex font-bold text-md text-gray-700\">\r\n                  {props?.title}\r\n                  {props?.payButton && <button onClick={() => navigate(`/property-payment/${id}/${props?.type == 'holding' ? 'holding' : 'saf'}`)} type=\"button\" className=\"ml-4 font-bold px-6 py-1 bg-indigo-500 text-white  text-sm leading-tight uppercase rounded  hover:bg-indigo-700 hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out shadow-xl border border-white\">Pay Tax <span><BiRightArrowAlt className=\"inline font-bold text-xl\" /></span> </button>}\r\n                </div>\r\n                <div className=\"flex flex-wrap md:flex-nowrap justify-between gap-y-2 md:justify-right items-center\">\r\n                    <button className={`mr-4 ${props?.active == 'property' ? 'bg-indigo-500  text-white' : 'bg-white border border-indigo-500 text-indigo-500'} px-4 py-1 shadow-lg hover:scale-105 rounded-sm text-sm md:text-base`} onClick={() => navigate(properyDetailsRoute)}>Property-Details</button>\r\n\r\n                    <button className={`mr-4 ${props?.active == 'demand' ? 'bg-indigo-500  text-white' : 'bg-white border border-indigo-500 text-indigo-500'} px-4 py-1 shadow-lg hover:scale-105 rounded-sm text-sm md:text-base`} onClick={() => navigate(demandDetailsRoute)}>Demand-Details</button>\r\n\r\n                    {props?.type == 'holding' && <button className={`mr-4 ${props?.active == 'payment' ? 'bg-indigo-500  text-white' : 'bg-white border border-indigo-500 text-indigo-500'} px-4 py-1 shadow-lg hover:scale-105 rounded-sm text-sm md:text-base`} onClick={() => navigate(paymentHistoryRoute)}>Payment-History</button>}\r\n\r\n                    {(props?.type == 'application' || btc == true || btc == 'true') && <button className={`${props?.active == 'document' ? 'bg-indigo-500  text-white' : 'bg-white border border-indigo-500 text-indigo-500'} px-4 py-1 shadow-lg hover:scale-105 rounded-sm text-sm md:text-base`} onClick={() => navigate(uplodDocRoute)}>Upload-Documents</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopTabs","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport CitizenApplyApiList from '../../Components/CitizenApplyApiList'\r\nimport building from '../../Components/Media/building.png'\r\nimport folders from '../../Components/Media/folders.png'\r\nimport TopTabs from '../Contents/CitizenSafForm/SafFormReview/TopTabs'\r\nimport BarLoader from '../../Components/Common/BarLoader'\r\nimport ApiHeader from '../../Components/ApiList/ApiHeader'\r\nimport BrandLoader from '../../Components/Common/BrandLoader'\r\nimport CommonModal from '../../Components/GlobalData/CommonModal'\r\nimport ServerErrorCard from '../AdvertisementModule/ServerErrorCard'\r\nimport { nullToNA } from '../../Components/Common/PowerUps/PowerupFunctions'\r\n\r\n\r\nfunction DetailsFactory(props) {\r\n\r\n    // DIRECT ACCESSING ID FROM PARAM\r\n    const { id } = useParams()\r\n\r\n    const [applicationFullData, setapplicationFullData] = useState()\r\n    const [showDetails, setshowDetails] = useState(false)\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const getApplicationDetail = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios[props?.detailRules?.api?.api_getAppicationFullDetail?.method](props?.detailRules?.api?.api_getAppicationFullDetail?.url, { applicationId: id }, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('view full details...', response?.data)\r\n                if (response?.data?.status) {\r\n                    setapplicationFullData(response?.data?.data)\r\n                } else {\r\n                    seterroState(true)\r\n                }\r\n                setisLoading(false)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='w-full md:w-4/5 mx-auto md:px-6'>\r\n                <div className='pt-10'>\r\n                    {props?.detailRules?.filters?.topButtons && <TopTabs title={`${props?.detailRules?.detailInfo?.title} - ${applicationFullData?.application_no}`} type=\"application\" id={id} safNo={applicationFullData?.saf_no} active=\"property\" />}\r\n                    {props?.detailRules?.filters?.topButtons == false &&\r\n                        <div>\r\n                            <span className='font-bold text-gray-800 text-2xl'>\r\n                                {props?.detailRules?.detailInfo?.title}\r\n                            </span>\r\n                        </div>}\r\n                </div>\r\n\r\n                <div className='flex flex-row flex-wrap justify-center'>\r\n                    <div class=\"rounded-lg pt-4 z-50 w-full\">\r\n                        <div className=''>\r\n\r\n                            <div className=\"text-gray-700 py-6 \">\r\n                                <div className=\"grid md:grid-cols-2 text-sm bg-white shadow-lg rounded-sm py-4\">\r\n                                    {\r\n                                        applicationFullData?.fullDetailsData?.cardArray?.data?.map((data) => (\r\n                                            <div className=\"grid grid-cols-2\">\r\n                                                <div className=\"px-4 py-2 font-semibold\">{nullToNA(data?.displayString)} : </div>\r\n                                                <div className=\"px-4 py-2\">{nullToNA(data?.value)}</div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"block bg-indigo-500 border-2  shadow-lg text-white text-sm font-semibold rounded-lg  focus:outline-none focus:shadow-outline  hover:shadow-xs p-3 py-2 hover:bg-indigo-600 hover:text-white my-4\"\r\n                                    onClick={() => setshowDetails(!showDetails)}\r\n                                >\r\n                                    {showDetails ? 'Hide Full Details' : 'Show Full Details'}\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* basic details */}\r\n                            {\r\n                                showDetails && <>\r\n                                    {applicationFullData?.fullDetailsData?.dataArray?.map((data) => (\r\n                                        <div className=\"\">\r\n                                            <div className=\"container mx-auto mb-0 mt-1  py-1 \">\r\n                                                <div className=\"md:flex no-wrap \">\r\n                                                    <div className=\"w-full\">\r\n                                                        <div className=\"py-3 rounded-sm\">\r\n                                                            <div className=\"flex items-center pl-0 space-x-2 font-semibold text-gray-900 leading-8 mb-2\">\r\n                                                                <div className=\"tracking-wide flex-1\"><img src={folders} alt=\"pin\" className='w-5 inline' /> {data?.headerTitle}</div>\r\n                                                            </div>\r\n                                                            <div className='shadow-lg rounded-lg  py-6 bg-white'>\r\n                                                                <div className=\"grid grid-cols-10 space-y-2  pl-4 \">\r\n                                                                    {data?.data?.map((data) => (\r\n                                                                        <div className='col-span-2 text-xs'>\r\n                                                                            <div className='font-bold text-sm'>{nullToNA(data?.value) }</div>\r\n                                                                            <div className='text-gray-500'>{nullToNA(data?.displayString)}</div>\r\n                                                                        </div>\r\n                                                                    ))}\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {\r\n                                        applicationFullData?.fullDetailsData?.tableArray?.map((data) => (\r\n                                            <div className=\"\" >\r\n                                                <div className=\"container mx-auto mb-0 mt-1 py-1 \">\r\n                                                    <div className=\"md:flex no-wrap\">\r\n                                                        <div className=\"w-full\">\r\n                                                            <div className=\"0 py-3 rounded-sm\">\r\n                                                                <div className=\"flex items-center pl-0 space-x-2 font-semibold text-gray-900 leading-8 mb-2\">\r\n                                                                    <span className=\"tracking-wide\"><img src={building} alt=\"building image\" className='inline w-4' /> {data?.headerTitle}</span>\r\n                                                                </div>\r\n\r\n                                                                <>\r\n                                                                    <table className='min-w-full leading-normal mt-2 bg-sky-5 shadow-lg rounded-lg'>\r\n                                                                        <thead className='font-bold text-left text-sm bg-white text-gray-600'>\r\n                                                                            <tr>\r\n                                                                                <th className=\"px-2 py-3 border-b border-gray-200  text-xs capitalize text-left\">#</th>\r\n                                                                                {data?.tableHead?.map((head) => (\r\n                                                                                    <th className=\"px-2 py-3 border-b border-gray-200  text-xs capitalize text-left\">{head}</th>\r\n                                                                                ))}\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody className=\"text-sm\">\r\n\r\n                                                                            <>\r\n                                                                                {data?.tableData?.map((dataIn, index) => (\r\n                                                                                    <tr className=\"bg-white  border-b border-gray-200\">\r\n                                                                                        <td className=\"px-2 py-2 text-sm text-left\">{index + 1}</td>\r\n                                                                                        {dataIn?.map((dataIn2) => (\r\n                                                                                            <td className=\"px-2 py-2 text-sm text-left\">{dataIn2 || 'N/A'}</td>\r\n                                                                                        ))}\r\n                                                                                    </tr>\r\n                                                                                ))}\r\n                                                                            </>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailsFactory"],"names":["props","navigate","useNavigate","class","viewBox","fill","xmlns","d","className","title","desc","onClick","window","location","reload","buttonUrl","buttonText","useParams","id","btc","console","log","properyDetailsRoute","demandDetailsRoute","paymentHistoryRoute","uplodDocRoute","type","payButton","active","useState","applicationFullData","setapplicationFullData","showDetails","setshowDetails","isLoading","setisLoading","erroState","seterroState","useEffect","axios","detailRules","api","api_getAppicationFullDetail","method","url","applicationId","ApiHeader","then","response","data","status","catch","error","getApplicationDetail","filters","topButtons","detailInfo","application_no","safNo","saf_no","fullDetailsData","cardArray","map","nullToNA","displayString","value","dataArray","src","folders","alt","headerTitle","tableArray","building","tableHead","head","tableData","dataIn","index","dataIn2"],"sourceRoot":""}