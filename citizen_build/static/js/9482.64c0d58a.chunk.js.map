{"version":3,"file":"static/js/9482.64c0d58a.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/FunctionComponent/ValidationFunction.jsx","Pages/AdvertisementModule/ServerErrorCard.js","Components/GlobalData/LocalBrowserData.js","Pages/Property/PaymentCard.js","Pages/Property/PropertyPayment.js"],"sourcesContent":["\r\n//function to get current date\r\nexport const getCurrentDate = () => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear()\r\n    let month = String(cDate.getMonth() + 1)\r\n    let day = String(cDate.getDate())\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullDate = `${year}-${month}-${day}`\r\n    return fullDate\r\n}\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom before date from current date\r\nexport const getBeforeDate = (beforeYear, beforeMonth, beforeDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() - beforeYear\r\n    let month = String((cDate.getMonth() + 1) - beforeMonth)\r\n    let day = String(cDate.getDate() - beforeDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n//glitch if month=12, current=8 then =8-12 wrong\r\n//restriction (3-parameter, month<=11, year<=364)\r\n//function to get custom after date from current date\r\nexport const getAfterDate = (afterYear, afterMonth, afterDay) => {\r\n    let cDate = new Date()\r\n    let year = cDate.getFullYear() + afterYear\r\n    let month = String((cDate.getMonth() + 1) + afterMonth)\r\n    let day = String(cDate.getDate() + afterDay)\r\n\r\n    { month.length < 2 && (month = `0${month}`) }\r\n    { day.length < 2 && (day = `0${day}`) }\r\n\r\n    let fullBeforeDate = `${year}-${month}-${day}`\r\n    return fullBeforeDate\r\n}\r\n\r\n//have to work on this comman get data format, very usefull\r\n// const getCurrentYMD = () => {\r\n//     let cDate = new Date()\r\n//     let year = cDate.getFullYear()\r\n//     let month = String(cDate.getMonth() + 1)\r\n//     let day = String(cDate.getDate())\r\n\r\n//     { month.length < 2 && (month = `0${month}`) }\r\n//     { day.length < 2 && (day = `0${day}`) }\r\n\r\n//     let fullFormattedDate = `${year}-${month}-${day}`\r\n//     let allDates = {\r\n//         year,\r\n//         month,\r\n//         day,\r\n//         fullFormattedDate\r\n//     }\r\n//     return allDates\r\n// }\r\n\r\nexport const returnCapitalize = (currentValue) => {\r\n    let capitalizeValue = currentValue.toUpperCase()\r\n    return capitalizeValue\r\n}\r\nexport const allowFloatInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^\\d*\\.?\\d*$/;  //number + one dot\r\n    if (currentValue === '' || re.test(currentValue)) //test for float input only one dot allowed\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b]+$/;     //number\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowNumberCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[0-9\\b,]+$/;     //number + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test\r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[a-zA-Z\\s]*$/;  //character + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z,! ]*$/; //character + space + comma\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowMailInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    const re = /^[\\a-zA-Z0-9@.!]*$/;    //character + number \r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9! ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\nexport const allowCharacterNumberSpaceCommaInput = (currentValue, oldValue, max = null) => {\r\n    if (currentValue.length > max)  //stop if max value and return oldvalue\r\n        return oldValue\r\n\r\n    // const re = /^[\\.a-zA-Z0-9,! ]*$/; //character + number + space + dot + comma\r\n    const re = /^[\\a-zA-Z0-9!, ]*$/;    //character + number + space\r\n    if (currentValue === '' || re.test(currentValue)) //test \r\n        return currentValue\r\n    else\r\n        return oldValue\r\n}\r\n","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Component  - ServerErrorCard\r\n// DESCRIPTION - This component is rendered when there is some error in hitting the api to show text like server is busy..\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineReload } from 'react-icons/ai'\r\n\r\nfunction ServerErrorCard(props) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div class=\"items-center justify-center p-10 bg-white shadow-xl\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex rounded-full bg-red-100 p-4\">\r\n            <div class=\"rounded-full stroke-red-600 bg-red-200 p-4\">\r\n              <svg class=\"w-16 h-16\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 8H6.01M6 16H6.01M6 12H18C20.2091 12 22 10.2091 22 8C22 5.79086 20.2091 4 18 4H6C3.79086 4 2 5.79086 2 8C2 10.2091 3.79086 12 6 12ZM6 12C3.79086 12 2 13.7909 2 16C2 18.2091 3.79086 20 6 20H14\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M17 16L22 21M22 16L17 21\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" p-10\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">{props?.title}</div>\r\n            <p class=\"text-slate-600 mt-1 lg:text-lg\">{props?.desc}</p>\r\n            <div className=\"text-center mt-10\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => window.location.reload()}><AiOutlineReload className=\"inline mr-2\" />Reload</button>\r\n              <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(props?.buttonUrl)}>{props?.buttonText}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServerErrorCard","export const name = localStorage.getItem('citizenName')\r\nexport const mobile = localStorage.getItem('citizenMobile')\r\n","import { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport rupee from '../../Components/Media/rupee.png'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nimport BarLoader from '../../Components/Common/BarLoader'\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  allowFloatInput,\r\n  allowCharacterNumberInput,\r\n  allowCharacterNumberSpaceCommaInput,\r\n  allowCharacterSpaceCommaInput,\r\n  nullToNA,\r\n  nullToZero,\r\n} from \"../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport RazorpayPaymentScreen from \"../../Components/RazorpayPaymentScreen\";\r\nimport CitizenApplyApiList from \"../../Components/CitizenApplyApiList\";\r\nimport ApiHeader from \"../../Components/ApiList/ApiHeader\";\r\nimport PaymentTranscationScreen from \"../../Components/PaymentTranscationScreen\";\r\nimport { name, mobile } from '../../Components/GlobalData/LocalBrowserData'\r\nimport { BiRupee } from 'react-icons/bi'\r\nimport { allowNumberInput } from \"../AdvertisementModule/FunctionComponent/ValidationFunction\";\r\n\r\n\r\nfunction PaymentCard(props) {\r\n  const {\r\n    propertyGenerateOrderId,\r\n    propertyGenerateHoldingOrderId,\r\n    propertyGenerateOrderIdDirect,\r\n    api_getTransactionNoForReceipt,\r\n    api_postPropertyPayment,\r\n    api_postSafPayment,\r\n  } = CitizenApplyApiList();\r\n  const { id, moduleType, userType } = useParams();\r\n  const [responseScreenStatus, setResponseScreenStatus] = useState(\"\");\r\n  const [isLoading, setisLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  console.log(\r\n    \"saf submit response data at payment...\",\r\n    props.safSubmitResponse\r\n  );\r\n\r\n\r\n  // SETTING GLOBAL TITLE AT ONCE USING CUSTOM HOOK\r\n\r\n  const [formHide, setFormHide] = useState(false);\r\n  const [paymentMode, setPaymentMode] = useState();\r\n  const [advanceStatus, setadvanceStatus] = useState(false);\r\n  const [currentTransactionNo, setcurrentTransactionNo] = useState(null);\r\n  // const validationSchema = yup.object({\r\n  //   paymentUptoYear: yup.string().required(\"Select payment upto year\"),\r\n  //   paymentUptoQuarter: yup.string().required(\"Enter payment upto quarter\"),\r\n  //   paymentMode: yup.string().required(\"select payment mode\"),\r\n\r\n  //   remarks: yup.string().required(\"Enter remarks\"),\r\n  //   bankName: yup.string(),\r\n  //   branchName: yup.string(),\r\n  //   cheque_dd_no: yup.string(),\r\n  //   cheque_dd_date: yup.string(),\r\n\r\n  //   payAdvance: yup.string(),\r\n  //   advanceAmount: yup.string(),\r\n  // });\r\nlet validationSchema\r\n  if (moduleType == 'holding' || moduleType=='direct') {\r\n    validationSchema = yup.object({\r\n      paymentUptoYear: yup.string().required('Select Payment upto year'),\r\n      paymentUptoQuarter: yup.string().required('Select payment upt quarter'),\r\n      paymentMode: yup.string(),\r\n\r\n      remarks: yup.string().required('Enter remarks'),\r\n      payAdvance: yup.string(),\r\n      advanceAmount: yup.string().when('payAdvance', {\r\n        is: true,\r\n        then: yup.string().required('Enter advance amount')\r\n      }),\r\n\r\n\r\n    })\r\n  }\r\n  if (moduleType == 'saf') {\r\n    validationSchema = yup.object({\r\n      paymentUptoYear: yup.string(),\r\n      paymentUptoQuarter: yup.string(),\r\n      paymentMode: yup.string().required('select payment mode'),\r\n\r\n      remarks: yup.string().required('Enter remarks'),\r\n\r\n      payAdvance: yup.string(),\r\n      advanceAmount: yup.string().when('payAdvance', {\r\n        is: true,\r\n        then: yup.string().required('Enter advance amount')\r\n      }),\r\n\r\n\r\n    })\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      paymentUptoYear: \"\",\r\n      paymentUptoQuarter: \"\",\r\n      paymentMode: \"ONLINE\",\r\n\r\n      remarks: \"\",\r\n      payAdvance: \"\",\r\n      advanceAmount: \"\",\r\n    },\r\n\r\n    onSubmit: (values, resetForm) => {\r\n      console.log(\"values at submit payment\", values);\r\n        getOrderId();\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const toggleForm = (e) => {\r\n    console.log(\"checkbox is changing \", e.target.checked);\r\n    setFormHide(e.target.checked);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    {\r\n      name == \"paymentMode\" && setPaymentMode(value);\r\n    }\r\n    {\r\n      name == \"payAdvance\" && setadvanceStatus(e.target.checked);\r\n    }\r\n\r\n    { (name == 'paymentUptoQuarter') && props?.fetchDemandDetail(value, formik.values.paymentUptoYear) }\r\n\r\n    { name == 'remarks' && formik.setFieldValue(\"remarks\", allowCharacterSpaceCommaInput(value, formik.values.remarks, 100)) }\r\n    { name == 'bankName' && formik.setFieldValue(\"bankName\", allowCharacterSpaceCommaInput(value, formik.values.bankName, 100)) }\r\n    { name == 'branchName' && formik.setFieldValue(\"branchName\", allowCharacterSpaceCommaInput(value, formik.values.branchName, 100)) }\r\n    { name == 'cheque_dd_no' && formik.setFieldValue(\"cheque_dd_no\", allowCharacterNumberInput(value, formik.values.cheque_dd_no, 20)) }\r\n    { name == 'advanceAmount' && formik.setFieldValue(\"advanceAmount\", allowNumberInput(value, formik.values.advanceAmount, 10)) }\r\n\r\n  };\r\n\r\n  //// PAYMENT METHOD  ////\r\n  const dreturn = (data) => {\r\n    // In (DATA) this function returns the Paymen Status, Message and Other Response data form Razorpay Server\r\n    console.log(\"all transaciton response.... =>\", data);\r\n    setResponseScreenStatus(data.status);\r\n    // return\r\n    if (data?.status) {\r\n      fetchTransactionNo(data?.data);\r\n      toast.success(\"Payment Success....\");\r\n    } else {\r\n      toast.error(\"Payment failed....\");\r\n    }\r\n  };\r\n\r\n  // FETCHING TRANSACTION NO TO PASS TO RECEIPT\r\n  const fetchTransactionNo = (data) => {\r\n    let requestBody = {\r\n      orderId: data?.razorpay_order_id,\r\n      paymentId: data?.razorpay_payment_id,\r\n    };\r\n    axios\r\n      .post(api_getTransactionNoForReceipt, requestBody, ApiHeader())\r\n      .then(function (response) {\r\n        setcurrentTransactionNo(response?.data?.data?.transaction_no)\r\n        console.log(\"transaction no get response...\", response?.data);\r\n        // return\r\n        // navigate(\r\n        //   `/paymentReceipt/${response?.data?.data?.transaction_no}/${moduleType == \"saf\" ? \"saf\" : \"holding\"\r\n        //   }`\r\n        // );\r\n        setisLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"transaction no get error...\", error);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  // FUNCTION FOR PAYMENT OTHER THAN ONLINE MODE\r\n  const makePayment = (data) => {\r\n    let url;\r\n    let requestBody = {\r\n      id: id,\r\n      amount: props?.paymentDetails?.totalDues,\r\n      paymentMode: data?.paymentMode,\r\n      chequeDate: data?.cheque_dd_date,\r\n      bankName: data?.bankName,\r\n      branchName: data?.branchName,\r\n      chequeNo: data?.cheque_dd_no,\r\n    };\r\n\r\n    if (moduleType == \"holding\") {\r\n      url = api_postPropertyPayment;\r\n    }\r\n    if (moduleType == \"direct\") {\r\n      url = api_postPropertyPayment;\r\n    }\r\n    if (moduleType == \"saf\") {\r\n      url = api_postSafPayment;\r\n    }\r\n\r\n    console.log(\"before make payment..\", requestBody);\r\n    // return\r\n    axios\r\n      .post(url, requestBody, ApiHeader())\r\n      .then(function (response) {\r\n        console.log(\"property payment response...\", response?.data);\r\n        // return\r\n        navigate(\r\n          `/paymentReceipt/${response?.data?.transaction_no}/${moduleType}`\r\n        );\r\n        setisLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"property payment error..\", error);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  const getOrderId = async () => {\r\n    // This Function is used to Order Id Generation\r\n    // props.showLoader(true)\r\n    setisLoading(true)\r\n    let url\r\n    let orderIdPayload\r\n    if (moduleType == 'holding') {\r\n      url = propertyGenerateHoldingOrderId\r\n      orderIdPayload = {\r\n        propId: id,\r\n        amount: props?.paymentDetails?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n    if (moduleType == 'saf') {\r\n      url = propertyGenerateOrderId\r\n      orderIdPayload = {\r\n        id: id,\r\n        amount: props?.safPaymentDetailsData?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n\r\n    if (moduleType == 'direct') {\r\n      url = propertyGenerateOrderIdDirect\r\n      orderIdPayload = {\r\n        propId: id,\r\n        amount: props?.paymentDetails?.payableAmount,\r\n        name: name,\r\n        contact: mobile\r\n\r\n      }\r\n    }\r\n\r\n    console.log('name....', name, '....mobile..', mobile)\r\n\r\n    // setLoader(true)\r\n\r\n    console.log(\r\n      \"orderidpayload at payment before...\",\r\n      orderIdPayload,\r\n      \"moduleId..\",\r\n      moduleType\r\n    );\r\n    axios\r\n      .post(url, orderIdPayload, ApiHeader()) // This API will generate Order ID\r\n      .then((res) => {\r\n        console.log(\"Order Id Response \", res?.data);\r\n        if (res?.data?.status === true) {\r\n          console.log(\"OrderId Generated True\", res?.data?.data);\r\n          RazorpayPaymentScreen(res?.data?.data, dreturn); //Send Response Data as Object (amount, orderId, ulbId, departmentId, applicationId, workflowId, userId, name, email, contact) will call razorpay payment function to show payment popup\r\n          setTimeout(() => {\r\n            // props.showLoader(false)\r\n          }, 500)\r\n\r\n\r\n        }\r\n        else {\r\n          // props.showLoader(false)\r\n        }\r\n        setisLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        toast.error('Unable to generated order id...')\r\n        console.log(\"ERROR :-  Unable to Generate Order Id \", err)\r\n        setisLoading(false)\r\n\r\n        // props.showLoader(false)\r\n      });\r\n  };\r\n\r\n \r\n\r\n  if (responseScreenStatus == true) {\r\n    return (\r\n      <>\r\n        <div className=\"w-full h-full bg-white p-20\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">Your payment has been successfully done !</div>\r\n            <div className=\"text-center mt-6\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/paymentReceipt/${currentTransactionNo}/${moduleType == \"saf\" ? \"saf\" : \"holding\"\r\n                }`)}>View Receipt</button>\r\n              {moduleType != \"direct\" && <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(`/propApplicationDetails/${id}`)}>View Application</button>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n\r\n        isLoading && <BarLoader />\r\n      }\r\n      <ToastContainer position=\"top-right\"\r\n        autoClose={2000} />\r\n      <div className={` block p-4 mt-4 w-full md:py-4 md:px-40 md:pb-0 md:pt-0 rounded-lg shadow-lg bg-white md:w-full mx-auto  overflow-x-auto mb-20 `}>\r\n        {/* <h1 className='px-2 font-semibold mt-0 bg-sky-100 text-center text-gray-700 font-serif py-2 text-lg shadow-lg border border-white'>SAF Payment</h1> */}\r\n\r\n        <div className=\" block p-4 w-full md:py-6 rounded-lg bg-white mx-auto \">\r\n          {/* <h1 className='mb-2 text-gray-600'><img src={rupee} alt=\"rupee-image\" className='w-5 inline' /> Demand Amount - <span className='font-semibold text-lg text-gray-800'>2000</span></h1> */}\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            onChange={handleChange}\r\n            className=\"p-4 relative\"\r\n          >\r\n            <div className=\"grid grid-cols-12\">\r\n              {moduleType != \"saf\" && (\r\n                <>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Upto Year\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentUptoYear\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {props?.paymentDetails?.paymentUptoYrs?.map(\r\n                        (data, index) => (\r\n                          <option\r\n                            selected={index == 0 ? true : false}\r\n                            value={data}\r\n                          >\r\n                            {data}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentUptoYear &&\r\n                        formik.errors.paymentUptoYear\r\n                        ? formik.errors.paymentUptoYear\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Upto Quarter\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentUptoQuarter\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {props?.paymentDetails?.paymentUptoQtrs?.map(\r\n                        (data, index) => (\r\n                          <option\r\n                            selected={index == 0 ? true : false}\r\n                            value={data}\r\n                          >\r\n                            {data}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentUptoQuarter &&\r\n                        formik.errors.paymentUptoQuarter\r\n                        ? formik.errors.paymentUptoQuarter\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                      <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                        *\r\n                      </small>\r\n                      Payment Mode\r\n                    </label>\r\n                    <select\r\n                      {...formik.getFieldProps(\"paymentMode\")}\r\n                      type=\"text\"\r\n                      className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                    >\r\n                      {/* IF USER TYPE IS DIRECT CITIZEN THEN DON'T SHOW OTHER PAYMENT MEHTOD */}\r\n                      {/* {\r\n                    userType != 'direct' &&\r\n                    <>\r\n                      <option value=\"CASH\" >Cash</option>\r\n                      <option value=\"CHEQUE\" >Cheque</option>\r\n                      <option value=\"DD\" >DD</option>\r\n                    </>\r\n                  } */}\r\n                      <option value=\"ONLINE\">Online</option>\r\n                    </select>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.paymentMode && formik.errors.paymentMode\r\n                        ? formik.errors.paymentMode\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* IF USER TYPE IS NOT DIRECT CITIZEN THEN ONLY SHOW REMARKS */}\r\n                  {userType != \"direct\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                        <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        Remarks\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"remarks\")}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        placeholder=\"Enter new ward no.\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.remarks && formik.errors.remarks\r\n                          ? formik.errors.remarks\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* toggle inputs of payment mode */}\r\n                  {(paymentMode == \"CHEQUE\" || paymentMode == \"DD\") && (\r\n                    <>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Bank Name\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"bankName\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.bankName && formik.errors.bankName\r\n                            ? formik.errors.bankName\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Branch Name\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"branchName\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.branchName && formik.errors.branchName\r\n                            ? formik.errors.branchName\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Cheque/DD No\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"cheque_dd_no\")}\r\n                          type=\"text\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.cheque_dd_no &&\r\n                            formik.errors.cheque_dd_no\r\n                            ? formik.errors.cheque_dd_no\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                          <small className=\" mt-1 text-sm font-semibold text-red-600 inline \">\r\n                            *\r\n                          </small>\r\n                          Cheque/DD Date\r\n                        </label>\r\n                        <input\r\n                          {...formik.getFieldProps(\"cheque_dd_date\")}\r\n                          type=\"date\"\r\n                          className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md cursor-pointer\"\r\n                          placeholder=\"Enter new ward no.\"\r\n                        />\r\n                        <span className=\"text-red-600 absolute text-xs\">\r\n                          {formik.touched.cheque_dd_date &&\r\n                            formik.errors.cheque_dd_date\r\n                            ? formik.errors.cheque_dd_date\r\n                            : null}\r\n                        </span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* pay advance */}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <input\r\n                      {...formik.getFieldProps(\"payAdvance\")}\r\n                      id=\"checked-checkbox\"\r\n                      type=\"checkbox\"\r\n                      class=\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 cursor-pointer\"\r\n                    />\r\n                    <label\r\n                      for=\"checked-checkbox\"\r\n                      class=\"ml-2 text-sm font-medium text-gray-900 darks:text-gray-300\"\r\n                    >\r\n                      Pay Advance\r\n                    </label>\r\n                    <span className=\"text-red-600 absolute text-xs\">\r\n                      {formik.touched.payAdvance && formik.errors.payAdvance\r\n                        ? formik.errors.payAdvance\r\n                        : null}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {advanceStatus && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                        <small className=\"block mt-1 text-sm font-semibold text-red-600 inline \">\r\n                          *\r\n                        </small>\r\n                        advance amount\r\n                      </label>\r\n                      <input\r\n                        {...formik.getFieldProps(\"advanceAmount\")}\r\n                        type=\"text\"\r\n                        className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                        placeholder=\"Enter new ward no.\"\r\n                      />\r\n                      <span className=\"text-red-600 absolute text-xs\">\r\n                        {formik.touched.advanceAmount &&\r\n                          formik.errors.advanceAmount\r\n                          ? formik.errors.advanceAmount\r\n                          : null}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* line break */}\r\n              <div className=\"col-span-12\"></div>\r\n\r\n              {/* text details */}\r\n              {/* SHOW IN CASE OF HOLDING */}\r\n              {moduleType != \"saf\" && (\r\n                <div className=\"bg-white col-span-12 grid grid-cols-12 pt-6 mb-4 border border-gray-200\">\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.paymentDetails?.rebateAmt)}\r\n                    </span>\r\n                  </div>\r\n                  {moduleType == \"saf\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <span>Late Assessment Penalty :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold\">\r\n                        {nullToZero(props?.paymentDetails?.lateAssPenalty)}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Special Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.paymentDetails?.rebatePerc)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>1% Penalty :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.paymentDetails?.onePercPenalty)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <div className=\"w-2/3\">\r\n                      <span>Total Payable Amount :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold text-xl\">\r\n                        {nullToZero(props?.paymentDetails?.payableAmount)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* SHOW IN CASE OF SAF */}\r\n              {moduleType == \"saf\" && (\r\n                <div className=\"bg-white col-span-12 grid grid-cols-12 pt-6 mb-4 border border-gray-200\">\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.safPaymentDetailsData?.rebateAmount)}\r\n                    </span>\r\n                  </div>\r\n                  {moduleType == \"saf\" && (\r\n                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                      <span>Late Assessment Penalty :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold\">\r\n                        {nullToZero(props?.safPaymentDetailsData?.lateAssessmentPenalty)}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>Special Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.safPaymentDetailsData?.specialRebateAmount)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <span>1% Penalty Rebate :</span>{\" \"}\r\n                    <span className=\"font-mono font-semibold\">\r\n                      {nullToZero(props?.safPaymentDetailsData?.totalOnePercPenalty)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                    <div className=\"w-2/3\">\r\n                      <span>Total Payable Amount :</span>{\" \"}\r\n                      <span className=\"font-mono font-semibold text-xl\">\r\n                        {nullToZero(props?.safPaymentDetailsData?.payableAmount)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"col-span-12 grid grid-cols-2 mt-10\">\r\n                <div className=\"\"></div>\r\n                <div className=\"md:pl-10 text-right\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"ml-4 font-bold px-6 py-2 bg-indigo-500 text-white  text-sm leading-tight uppercase rounded  hover:bg-indigo-700 hover:shadow-lg focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out shadow-xl border border-white\"\r\n                  >\r\n                    Pay <BiRupee className=\"inline mr-0 ml-2\" />\r\n                    {moduleType == 'saf' && nullToNA(props?.safPaymentDetailsData?.payableAmount)}\r\n                    {moduleType != 'saf' && nullToNA(props?.paymentDetails?.payableAmount)}\r\n                  </button>\r\n                  {/* {userType != 'direct' && <button type='submit' className=\" px-6 py-2.5 bg-green-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Pay Tax</button>} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentCard;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BarLoader from \"../../Components/Common/BarLoader\";\r\nimport ApiHeader from \"../../Components/ApiList/ApiHeader\";\r\nimport PropertyApiList from \"../../Components/ApiList/PropertyApiList\";\r\nimport PaymentCard from \"./PaymentCard\";\r\nimport CitizenApplyApiList from \"../../Components/CitizenApplyApiList\";\r\nimport BrandLoader from \"../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../AdvertisementModule/ServerErrorCard\";\r\nimport { nullToNA } from \"../../Components/Common/PowerUps/PowerupFunctions\";\r\n\r\nfunction PropertyPayment(props) {\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [isLoading2, setisLoading2] = useState(false);\r\n    const [applicationFullData, setapplicationFullData] = useState()\r\n    const [demandDetail, setdemandDetail] = useState()\r\n    const [fullData, setfullData] = useState()\r\n    const [loader, setLoader] = useState(false) // Used when click on Pay Now\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n\r\n    const { id, moduleType } = useParams()\r\n\r\n    const { propertyGenerateHoldingOrderId, api_getDirectHoldingDemandById, api_getHoldingDemandById, api_getsafDemandById } = CitizenApplyApiList();\r\n\r\n    const fetchDemandDetail = (fYear = null, fQtr = null) => {\r\n        seterroState(false)\r\n        let url\r\n        let requestBody\r\n\r\n        if (moduleType == 'holding') {\r\n            url = api_getHoldingDemandById\r\n            requestBody = {\r\n                propId: id,\r\n                fYear: fYear,\r\n                qtr: fQtr\r\n            }\r\n        }\r\n        if (moduleType == 'saf') {\r\n            url = api_getsafDemandById\r\n            requestBody = {\r\n                id: id\r\n            }\r\n        }\r\n        if (moduleType == 'direct') {\r\n            url = api_getDirectHoldingDemandById\r\n            requestBody = {\r\n                propId: id,\r\n                fYear: fYear,\r\n                qtr: fQtr\r\n            }\r\n        }\r\n\r\n\r\n        if (fQtr !== null) {\r\n            setisLoading2(true)\r\n        } else {\r\n            setisLoading(true)\r\n        }\r\n\r\n        axios.post(url, requestBody, ApiHeader())\r\n            .then(function (response) {\r\n                console.log('payment details data...', response?.data)\r\n                setdemandDetail(response?.data?.data)\r\n                setfullData(response?.data)\r\n                if (fQtr !== null) {\r\n                    setisLoading2(false)\r\n                } else {\r\n                    setisLoading(false)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('payment details error...', error)\r\n                seterroState(true)\r\n                if (fQtr !== null) {\r\n                    setisLoading2(false)\r\n                } else {\r\n                    setisLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDemandDetail()\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading2 && <BarLoader />}\r\n            {/* <div className=\" font-bold text-2xl pb-4 md:py-4\">Holding Deactivation</div> */}\r\n\r\n            <div className=\"p-10\">\r\n                <div className='w-full bg-white shadow-xl mb-6'>\r\n                    <div className='py-6 mt-2 rounded-lg shadow-lg p-4'>\r\n                        <div className=\"flex flex-col md:flex-row space-y-2 md:space-x-5 pl-4 \">\r\n                            {moduleType != 'saf' && <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.holding_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Holding No.</div>\r\n                            </div>}\r\n                            {moduleType == 'saf' && <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.saf_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Application No.(Saf No)</div>\r\n                            </div>}\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.old_ward_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>Ward No.</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-lg'>{nullToNA(demandDetail?.basicDetails?.old_ward_no)}</div>\r\n                                <div className='text-gray-500 text-xs'>New Ward No</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.ownership_type)}</div>\r\n                                <div className='text-gray-500 text-xs'>Ownership Type</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.property_type)}</div>\r\n                                <div className='text-gray-500 text-xs'>Property Type</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col md:flex-row space-y-2 md:space-x-10  pl-4 mt-4\">\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.zone_mstr_id)}</div>\r\n                                <div className='text-gray-500 text-xs'>Zone</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm'>{nullToNA(demandDetail?.basicDetails?.is_mobile_tower)}</div>\r\n                                <div className='text-gray-500 text-xs'>Property has Mobile Tower(s) ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.is_hoarding_board)} </div>\r\n                                <div className='text-gray-500 text-xs'>Property has Hoarding Board(s) ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-semibold text-md'>{nullToNA(demandDetail?.basicDetails?.is_petrol_pump)}</div>\r\n                                <div className='text-gray-500 text-xs'>Is property a Petrol Pump ?</div>\r\n                            </div>\r\n                            <div className='flex-1'>\r\n                                <div className='font-bold text-sm' >{nullToNA(demandDetail?.basicDetails?.is_water_harvesting)}</div>\r\n                                <div className='text-gray-500 text-xs'>Rainwater harvesting provision ?</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <PaymentCard fetchDemandDetail={fetchDemandDetail} safPaymentDetailsData={demandDetail?.amounts} paymentDetails={demandDetail?.duesList} ulbId={demandDetail?.basicDetails?.ulb_id} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full h-40 md:none\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PropertyPayment;\r\n"],"names":["allowFloatInput","currentValue","oldValue","max","length","re","test","allowNumberInput","allowCharacterNumberInput","allowMailInput","props","navigate","useNavigate","class","viewBox","fill","xmlns","d","className","title","desc","onClick","window","location","reload","buttonUrl","buttonText","name","localStorage","getItem","mobile","CitizenApplyApiList","propertyGenerateOrderId","propertyGenerateHoldingOrderId","propertyGenerateOrderIdDirect","api_getTransactionNoForReceipt","api_postPropertyPayment","api_postSafPayment","useParams","id","moduleType","userType","useState","responseScreenStatus","setResponseScreenStatus","isLoading","setisLoading","console","log","safSubmitResponse","validationSchema","paymentMode","setPaymentMode","advanceStatus","setadvanceStatus","currentTransactionNo","setcurrentTransactionNo","yup","paymentUptoYear","required","paymentUptoQuarter","remarks","payAdvance","advanceAmount","when","is","then","formik","useFormik","initialValues","onSubmit","values","resetForm","getOrderId","dreturn","data","status","fetchTransactionNo","toast","requestBody","orderId","razorpay_order_id","paymentId","razorpay_payment_id","axios","ApiHeader","response","transaction_no","catch","error","url","orderIdPayload","propId","amount","paymentDetails","payableAmount","contact","safPaymentDetailsData","res","RazorpayPaymentScreen","setTimeout","err","BarLoader","position","autoClose","handleSubmit","onChange","e","target","value","checked","fetchDemandDetail","setFieldValue","allowCharacterSpaceCommaInput","bankName","branchName","cheque_dd_no","getFieldProps","type","paymentUptoYrs","map","index","selected","touched","errors","paymentUptoQtrs","placeholder","cheque_dd_date","for","nullToZero","rebateAmt","lateAssPenalty","rebatePerc","onePercPenalty","rebateAmount","lateAssessmentPenalty","specialRebateAmount","totalOnePercPenalty","nullToNA","isLoading2","setisLoading2","demandDetail","setdemandDetail","setfullData","erroState","seterroState","api_getDirectHoldingDemandById","api_getHoldingDemandById","api_getsafDemandById","fYear","fQtr","qtr","useEffect","BrandLoader","CommonModal","ServerErrorCard","basicDetails","holding_no","saf_no","old_ward_no","ownership_type","property_type","zone_mstr_id","is_mobile_tower","is_hoarding_board","is_petrol_pump","is_water_harvesting","amounts","duesList","ulbId","ulb_id"],"sourceRoot":""}