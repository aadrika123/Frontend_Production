{"version":3,"file":"static/js/3265.10fec4bb.chunk.js","mappings":"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","sources":["Pages/Property/CitizenAuth/SearchHolding.js","Components/ApiList/Constants.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { RiFilter2Line } from \"react-icons/ri\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport BarLoader from \"../../../Components/Common/BarLoader\";\r\nimport ApiHeader from \"../../../Components/ApiList/ApiHeader\";\r\nimport { contextVar } from \"../../../Components/ContextVar\";\r\nimport { allowCharacterNumberSlashInput, nullToNA } from \"../../../Components/Common/PowerUps/PowerupFunctions\";\r\nimport PropertyApiList from \"../../../Components/ApiList/PropertyApiList\";\r\nimport OtpCard from \"./OtpCard\";\r\nimport CitizenApplyApiList from \"../../../Components/CitizenApplyApiList\";\r\nimport useSetTitle from \"../../../Components/GlobalData/UseSetTitle\";\r\nimport BrandLoader from \"../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../AdvertisementModule/ServerErrorCard\";\r\nimport { apiTimeout } from \"../../../Components/ApiList/Constants\";\r\nimport BottomErrorCard from \"../../../Components/BottomErrorCard\";\r\n\r\n\r\nfunction SearchHolding() {\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const [readymadeListData, setreadymadeListData] = useState();\r\n    const [readymadeListStatus, setreadymadeListStatus] = useState(false);\r\n    const [selectedPropId, setselectedPropId] = useState(null);\r\n    const [selectedUlbId, setselectedUlbId] = useState(null);\r\n    const [dataInfo, setdataInfo] = useState('');\r\n    const [ulbList, setulbList] = useState();\r\n    const { notify } = useContext(contextVar)\r\n    const [otpCardStatus, setotpCardStatus] = useState(false)\r\n    const [verifedMobileNo, setverifedMobileNo] = useState(null)\r\n    const [erroState, seterroState] = useState(false);\r\n    const [erroMessage, seterroMessage] = useState(null);\r\n\r\n\r\n    useSetTitle('Search Property')\r\n    const { api_searchDirectHolding } = PropertyApiList();\r\n    const { api_getAllUlb, api_sendMobileOtp } = CitizenApplyApiList()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // FUNCTION TO GET PROPERTY DETAILS\r\n    const fetchData = (data) => {\r\n        seterroState(false)\r\n        setdataInfo('')\r\n        setreadymadeListStatus(false)\r\n        setisLoading(true)\r\n        const requestBody = {\r\n            holdingNo: data?.holdingNo,\r\n            ulbId: data?.ulbId,\r\n        };\r\n        console.log('before fetch holding details....', requestBody)\r\n        axios\r\n            .post(api_searchDirectHolding, requestBody)\r\n            .then((res) => {\r\n                console.log('search property list', res?.data)\r\n                if (res?.data?.status) {\r\n                    setreadymadeListData(res?.data?.data)\r\n                    setreadymadeListStatus(true)\r\n                    setdataInfo('')\r\n                    setselectedUlbId(requestBody?.ulbId)\r\n                    // TO CHANGE THE URL TO REFETCH DATA WHEN COME BACK\r\n                    // changeUrl(`/admin/search/fresh/${encodeURIComponent(data?.filterBy)}/${encodeURIComponent(data?.parameter)}`)\r\n                } else {\r\n                    notify('This holding no does not exits!', 'error')\r\n                    setdataInfo('Data not found. Please enter a valid holding no. or related ULB')\r\n                }\r\n                setisLoading(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error while fetching Filter Data\", err)\r\n                notify('Something went wrong!!', 'error')\r\n                setdataInfo('Network problem.')\r\n                activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                setisLoading(false)\r\n                setreadymadeListStatus(false)\r\n            });\r\n    };\r\n\r\n\r\n    const validationSchema = yup.object({\r\n        holdingNo: yup.string().required(\"This is a required field !\"),\r\n        ulbId: yup.string().required(\"Select ULB\"),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            holdingNo: \"\",\r\n            ulbId: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log('at submit form.....', values)\r\n            fetchData(values);\r\n        },\r\n        validationSchema,\r\n    });\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        { name == 'holdingNo' && formik.setFieldValue(\"holdingNo\", allowCharacterNumberSlashInput(value, formik.values.holdingNo, 16)) }\r\n    };\r\n\r\n    //  FUNCTION WHICH SENDS OTP TO REGISTERED MOBILE NO\r\n    const sendOtp = (passedMobileNo = null) => {\r\n        console.log('passed mobile no.....')\r\n        setisLoading(true)\r\n        let requestBody\r\n        if (passedMobileNo == null) {\r\n            requestBody = {\r\n                mobileNo: verifedMobileNo\r\n            }\r\n        } else {\r\n            requestBody = {\r\n                mobileNo: passedMobileNo\r\n            }\r\n        }\r\n\r\n        console.log('before send otp. of direct search..', requestBody)\r\n        axios\r\n            .post(api_sendMobileOtp, requestBody)\r\n            .then((response) => {\r\n                console.log('otp send response', response?.data)\r\n                if (response?.data?.status) {\r\n                    setotpCardStatus(true)\r\n                    notify('OTP is send to your mobile no.', 'success')\r\n                } else {\r\n                    notify(response?.data?.message, 'error')\r\n                    activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                }\r\n                setisLoading(false)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error otp send\", err)\r\n                activateBottomErrorCard(true, 'Error occured. Please try again later.')\r\n                setisLoading(false)\r\n            });\r\n    }\r\n\r\n    // FUNCTION TO FETCH ULB LIST\r\n    const fetchULBList = () => {\r\n        seterroState(false)\r\n        setisLoading(true)\r\n        axios.get(api_getAllUlb, { timeout: apiTimeout })\r\n            .then(function (response) {\r\n                console.log('ulb list. at..', response?.data)\r\n                if (response?.data?.status) {\r\n                    setulbList(response?.data?.data)\r\n                } else {\r\n                    seterroState(true)\r\n                }\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('ulb list error.... ', error);\r\n                seterroState(true)\r\n                setisLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchULBList()\r\n    }, []);\r\n\r\n    const callback = () => {\r\n        notify('Mobile no. has been verified successfully !', 'success')\r\n        navigate(`/viewDemandHoldingPropertyDirect/${selectedPropId}`)\r\n    }\r\n\r\n    const closeOtpModal = () => {\r\n        setotpCardStatus(false)\r\n    }\r\n\r\n    const activateBottomErrorCard = (state, msg) => {\r\n        seterroMessage(msg)\r\n        seterroState(state)\r\n\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n                <div className='min-h-screen'></div>\r\n            </>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    if (otpCardStatus) {\r\n        return (\r\n            <OtpCard closeOtpModal={closeOtpModal} bottomNaviation={true} headTitle=\"Pay Property Tax\" reSendOtp={sendOtp} verifedMobileNo={verifedMobileNo} callback={callback} setotpCardStatus={setotpCardStatus} />\r\n        )\r\n    }\r\n\r\n    if (!otpCardStatus) {\r\n        return (\r\n\r\n\r\n            <>\r\n\r\n                {\r\n                    isLoading && <BarLoader />\r\n                }\r\n                 {erroState && <BottomErrorCard activateBottomErrorCard={activateBottomErrorCard} errorTitle={erroMessage} />}\r\n\r\n\r\n                <div className=\"px-2 md:px-10\">\r\n                    <div className=\"border shadow-xl bg-white mt-6\">\r\n                        <div className=\"flex ml-5 mt-2 \">\r\n                            <p className=\"font-semibold text-3xl ml-4 mt-1 text-gray-600\">\r\n                                Search Property\r\n                            </p>\r\n                        </div>\r\n                        <form onSubmit={formik.handleSubmit} onChange={handleChange}>\r\n                            <div className=\"flex flex-col md:flex-row justify-center my-5 m-10 \">\r\n\r\n                                <div className={`form-group col-span-12 mb-4 md:px-10`}>\r\n                                    <label className={`form-label inline-block mb-1 text-gray-600 text-sm font-semibold`}>ULB<small className=\"mt-1 text-sm font-semibold text-red-600 inline \">*</small></label>\r\n                                    <select id='basic_details_1' {...formik.getFieldProps('ulbId')} className={`form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none shadow-md cursor-pointer `}>\r\n                                        <option value=\"\" disabled selected>Select</option>\r\n                                        {\r\n                                            ulbList?.map((data) => (\r\n                                                <option value={data.id}>{data.ulb_name}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    <span className=\"text-red-600 absolute text-xs\">{formik.touched.ulbId && formik.errors.ulbId ? formik.errors.ulbId : null}</span>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">\r\n                                        Holding No.<span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        {...formik.getFieldProps('holdingNo')}\r\n                                        className=\" w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                    />\r\n                                    <p className=\"text-red-500 text-xs\">\r\n                                        {formik.touched.holdingNo && formik.errors.holdingNo\r\n                                            ? formik.errors.holdingNo\r\n                                            : null}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"mt-4 md:px-10\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"w-full border border-indigo-500 bg-indigo-600 hover:bg-indigo-500 text-white hover:text-black shadow-lg rounded-sm text-base font-semibold px-5 m-3 py-1\"\r\n                                    >\r\n                                        <p className=\"flex text-center justify-center items-center\">\r\n                                            <RiFilter2Line className=\"inline mr-2\" />\r\n                                            Search record\r\n                                        </p>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {/* View Search Result in List Table */}\r\n\r\n                    </div>\r\n                    <div className=\"mt-10\">\r\n                        {readymadeListStatus && readymadeListData?.length != 0 &&\r\n                            // <ListTable columns={COLUMNS} dataList={readymadeListData} />\r\n                            <div className='col-span-10 bg-gray-50 p-4 overflow-x-scroll'>\r\n                                <div className='flex flex-row'>\r\n                                    <h1 className='px-1 font-semibold font-serif text-2xl mt-4'>All Transcations</h1>\r\n                                </div>\r\n\r\n                                <table className='min-w-full leading-normal mt-10'>\r\n                                    <thead className='font-bold text-left text-sm bg-indigo-50 text-gray-600'>\r\n                                        <tr>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">#</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">ACTION</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">OWNER'S NAME</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">HOLDING NO</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">NEW HOLDING NO</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">MOBILE NO</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">WARD NO.</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">ULB</th>\r\n                                            <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">ADDRESS</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"text-sm\">\r\n\r\n                                        <>\r\n                                            {readymadeListData?.map((data) => (\r\n                                                <tr className=\"bg-white shadow-lg border-b border-gray-200\">\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">1</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\"> <button\r\n                                                        onClick={() => {\r\n                                                            setselectedPropId(data.id)\r\n                                                            setverifedMobileNo(data?.mobile_no)\r\n                                                            sendOtp(data?.mobile_no)\r\n                                                        }}\r\n                                                        className=\"bg-sky-200 px-3 py-1 rounded-lg shadow-lg hover:shadow-xl hover:bg-sky-800 hover:text-white text-black\"\r\n                                                    >\r\n                                                        View\r\n                                                    </button></td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.owner_name)}</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.holding_no)}</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.new_holding_no)}</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.mobile_no)}</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.ward_name)}</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.ulb)}</td>\r\n                                                    <td className=\"px-2 py-2 text-sm text-left\">{nullToNA(data?.prop_address)}</td>\r\n\r\n                                                </tr>\r\n                                            ))}\r\n\r\n                                        </>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"text-xl font-semibold text-red-400 text-center\">{dataInfo}</div>\r\n                        <div className=\"w-full h-40\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchHolding;\r\n","export const apiTimeout = 60000\r\n// export const apiTimeout = 1"],"names":["useState","isLoading","setisLoading","readymadeListData","setreadymadeListData","readymadeListStatus","setreadymadeListStatus","selectedPropId","setselectedPropId","setselectedUlbId","dataInfo","setdataInfo","ulbList","setulbList","notify","useContext","contextVar","otpCardStatus","setotpCardStatus","verifedMobileNo","setverifedMobileNo","erroState","seterroState","erroMessage","seterroMessage","useSetTitle","api_searchDirectHolding","PropertyApiList","CitizenApplyApiList","api_getAllUlb","api_sendMobileOtp","navigate","useNavigate","validationSchema","yup","holdingNo","required","ulbId","formik","useFormik","initialValues","onSubmit","values","console","log","data","requestBody","axios","then","res","status","catch","err","activateBottomErrorCard","fetchData","sendOtp","passedMobileNo","mobileNo","response","message","useEffect","timeout","error","state","msg","BrandLoader","className","OtpCard","closeOtpModal","bottomNaviation","headTitle","reSendOtp","callback","BarLoader","BottomErrorCard","errorTitle","handleSubmit","onChange","e","name","target","value","setFieldValue","allowCharacterNumberSlashInput","id","getFieldProps","disabled","selected","map","ulb_name","touched","errors","type","length","onClick","mobile_no","nullToNA","owner_name","holding_no","new_holding_no","ward_name","ulb","prop_address"],"sourceRoot":""}