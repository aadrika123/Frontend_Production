{"version":3,"file":"static/js/5485.e607f3cd.chunk.js","mappings":"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","sources":["Pages/AdvertisementModule/Advertisement/Agency/AgencyDashboard/HoardingArchivedList.jsx"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 14 july 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - PropertySafInbox (closed)\r\n//    DESCRIPTION - PropertySafInbox Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from 'react-modal';\r\nimport Loader from \"../../Loader\";\r\nimport AgencyNotification from \"../AgencyNotification\";\r\nimport BackToAgency from \"../../BackToAgency\";\r\nimport AdvertisementApiList from \"../../../AdvertisementApiList\";\r\nimport ApiHeaderAdvrt from \"../../../ApiHeaderAdvrt\";\r\nimport ErrorPage from \"../../../ErrorPage\";\r\nimport ListTableAdvert from \"../../../ListTableAdvert\";\r\nimport { useEffect } from \"react\";\r\nimport HoardingApplicationFullDetail from \"../Hoarding/HoardingApplicationFullDetail\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport BrandLoader from \"../../../../../Components/Common/BrandLoader\";\r\nimport CommonModal from \"../../../../../Components/GlobalData/CommonModal\";\r\nimport ServerErrorCard from \"../../../ServerErrorCard\";\r\nimport AxiosInterceptors from \"../../../../../Components/GlobalData/AxiosInterceptors\";\r\nimport AdvtListTablePagination from \"../../../AdvtListTablePagination\";\r\nimport ApiHeader from \"../../../../../Components/ApiList/ApiHeader\";\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'none'\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nfunction HoardingArchivedList(props) {\r\n    const [tableState, setTableState] = useState(false);\r\n    const [listStatus, setlistStatus] = useState(false);\r\n    const { api_getHoardingArchivedList } = AdvertisementApiList()\r\n    const [applicationDetail, setapplicationDetail] = useState()\r\n    const [tableStatus, settableStatus] = useState(false);\r\n    const [applicationType, setapplicationType] = useState()\r\n    const [applicationNo, setapplicationNo] = useState()\r\n    // const [isLoading, setisLoading] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n\r\n    const [show, setshow] = useState(false)\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(true)\r\n    const closeModal = () => setIsOpen(false)\r\n    const afterOpenModal = () => { }\r\n\r\n    const [documentList, setdocumentList] = useState()\r\n\r\n    ///testing pagination\r\n    const [readymadeListData, setreadymadeListData] = useState(false);\r\n    const [readymadeListStatus, setreadymadeListStatus] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    // table related states\r\n    const [totalDataCount, settotalDataCount] = useState(0);\r\n    const [currentPageIndex, setcurrentPageIndex] = useState(1);\r\n    const [lastPageIndex, setlastPageIndex] = useState(0);\r\n    const [pageLength, setpageLength] = useState(10);\r\n    const [searchValue, setsearchValue] = useState('');\r\n    const [refreshStatus, setrefreshStatus] = useState(false);\r\n\r\n    const { id } = useParams();\r\n    console.log(\"id im param\", id)\r\n\r\n    const showLoader = (val) => {\r\n        setshow(val);\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"#\",\r\n            // accessor: 'ward_no'\r\n            Cell: ({ row }) => <div className=\"pr-2\">{row.index + 1}</div>,\r\n        },\r\n        {\r\n            Header: \"Application No\",\r\n            accessor: \"application_no\",\r\n        },\r\n        {\r\n            Header: \"Apply Date.\",\r\n            accessor: \"application_date\",\r\n        },\r\n        // {\r\n        //     Header: \"Payment Amount\",\r\n        //     accessor: \"payment_amount\",\r\n        // },\r\n        // {\r\n        //     Header: \"Firm Name\",\r\n        //     accessor: \"bank_name\",\r\n        // },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"id\",\r\n            Cell: ({ cell }) => (\r\n                <div>\r\n                    <button\r\n                        onClick={() => modalAction(cell.row.values.id, \"Approve\")}\r\n                        className=\"bg-indigo-500 px-3 py-1 rounded leading-5 shadow-lg hover:shadow-xl hover:bg-indigo-700 \r\n                hover:text-white text-white\"\r\n                    >\r\n                        View\r\n                    </button>\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const modalAction = (applicationId, applicationType) => {\r\n        console.log(\"..............application id..............\", applicationId)\r\n        console.log(\"..............application type..............\", applicationType)\r\n        setapplicationNo(applicationId)\r\n        setapplicationType(applicationType)\r\n        openModal()\r\n    }\r\n\r\n\r\n    const onSuccess = (data) => {\r\n        console.log(\"after fetching inbox list ....\", data?.data?.data?.data);\r\n        {\r\n            data?.data?.data?.data?.length > 0 && setTableState(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInboxList(currentPageIndex, pageLength, searchValue)\r\n    }, [currentPageIndex, searchValue, pageLength])\r\n\r\n    const fetchInboxList = (page, perPage, key = '') => {\r\n        // console.log('at inbox list fetch')\r\n        setrefreshStatus(true)\r\n        setisLoading(true)\r\n\r\n        AxiosInterceptors.post(api_getHoardingArchivedList, { page: page, perPage: perPage, key: key }, ApiHeader())\r\n            .then((res) => {\r\n                // console.log('inbox list response...', res?.data?.data?.data)\r\n                setreadymadeListData(res.data?.data?.data)\r\n                setreadymadeListStatus(true)\r\n                setisLoading(false)\r\n\r\n                settotalDataCount(res.data?.data?.total);\r\n                setlastPageIndex(res.data?.data?.last_page)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error while fetching Filter Data\", err)\r\n                setreadymadeListStatus(false)\r\n                setisLoading(false)\r\n\r\n            });\r\n\r\n        setTimeout(() => {\r\n            setrefreshStatus(false)\r\n        }, [500])\r\n    }\r\n\r\n\r\n    const values = {\r\n        totalDataCount: totalDataCount,\r\n        currentPageIndex: currentPageIndex,\r\n        setcurrentPageIndex: setcurrentPageIndex,\r\n        pageLength: pageLength,\r\n        setpageLength: setpageLength,\r\n        lastPageIndex: lastPageIndex,\r\n        setlastPageIndex: setlastPageIndex,\r\n        fetchInboxList: fetchInboxList,\r\n        searchValue: searchValue,\r\n        setsearchValue: setsearchValue,\r\n        refreshStatus: refreshStatus\r\n    }\r\n\r\n    // const getApplicationList = () => {\r\n    //     seterroState(false)\r\n    //     setisLoading(true)\r\n    //     AxiosInterceptors.post(api_getHoardingArchivedList, {}, ApiHeaderAdvrt())\r\n    //         .then((res) => {\r\n    //             console.log(\"archived list\", res.data);\r\n    //             if (res.data.status) {\r\n    //                 setapplicationDetail(res.data.data);\r\n    //                 settableStatus(true);\r\n    //                 setisLoading(false)\r\n\r\n    //             } else {\r\n\r\n    //             }\r\n\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //             seterroState(true)\r\n    //             setisLoading(false)\r\n    //         })\r\n    // }\r\n    // useEffect(() => {\r\n    //     getApplicationList()\r\n    // }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <BrandLoader />\r\n            </>\r\n        )\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container bg-white text-gray-600 h-screen mx-auto mt-12'>\r\n                <div>\r\n                    {/* <BackToAgency /> */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-4 container mx-auto pt-4 \">\r\n                        <div className=\"col-span-12 p-2\">\r\n                            <div className=\"flex flex-row bg-white mb-4 rounded leading-5 shadow-md shadow-violet-100 \">\r\n                                <img src=\"https://cdn-icons-png.flaticon.com/512/3288/3288006.png\" className=\"h-10 ml-3 mt-2\" />\r\n                                <h1 className=\"text-xl text-gray-700 font-semibold p-4\">ARCHIVED APPLICATIONS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 p-2\">\r\n                        {/* {tableStatus && tableStatus?.data != null &&\r\n                            <ListTableAdvert\r\n                                assessmentType={false}\r\n                                columns={COLUMNS}\r\n                                dataList={applicationDetail?.data}\r\n                            />\r\n                        }\r\n                        {tableStatus && tableStatus?.data == null &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">No Data</div>\r\n                        } */}\r\n                        {readymadeListStatus && readymadeListData?.length != 0 &&\r\n                            // <ListTable assessmentType={false} columns={columnSchema} dataList={readymadeListData} />\r\n                            <AdvtListTablePagination columns={COLUMNS} dataList={readymadeListData} values={values} />\r\n                        }\r\n                        {\r\n                            readymadeListStatus && readymadeListData?.length == 0 &&\r\n                            <div className=\"text-xl font-semibold text-red-400 text-center\">Data Not Found</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div class=\" rounded-lg shadow-xl border-2 border-gray-50 mx-auto px-0 \" style={{ 'width': '80vw', 'height': '100%' }}>\r\n                                <div className='h-[44rem] bg-white overflow-y-auto'>\r\n                                    <HoardingApplicationFullDetail data={applicationNo} applicationType={applicationType} showLoader={showLoader} closeModal={closeModal} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HoardingArchivedList;"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","Modal","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","api_getHoardingArchivedList","AdvertisementApiList","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","applicationType","setapplicationType","_useState11","_useState12","applicationNo","setapplicationNo","_useState13","_useState14","erroState","_useState15","_useState16","setshow","_useState17","_useState18","modalIsOpen","setIsOpen","closeModal","_useState19","_useState20","_useState21","_useState22","readymadeListData","setreadymadeListData","_useState23","_useState24","readymadeListStatus","setreadymadeListStatus","_useState25","_useState26","isLoading","setisLoading","_useState27","_useState28","totalDataCount","settotalDataCount","_useState29","_useState30","currentPageIndex","setcurrentPageIndex","_useState31","_useState32","lastPageIndex","setlastPageIndex","_useState33","_useState34","pageLength","setpageLength","_useState35","_useState36","searchValue","setsearchValue","_useState37","_useState38","refreshStatus","setrefreshStatus","id","useParams","console","log","useNavigate","COLUMNS","Header","Cell","_ref","row","_jsx","className","children","index","accessor","_ref2","cell","onClick","modalAction","values","applicationId","useEffect","fetchInboxList","page","perPage","key","arguments","length","undefined","AxiosInterceptors","ApiHeader","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","data","total","last_page","catch","err","setTimeout","_Fragment","BrandLoader","CommonModal","ServerErrorCard","title","desc","buttonText","buttonUrl","_jsxs","src","AdvtListTablePagination","columns","dataList","isOpen","onAfterOpen","onRequestClose","style","contentLabel","class","HoardingApplicationFullDetail","showLoader","val"],"sourceRoot":""}