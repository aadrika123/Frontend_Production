{"version":3,"file":"static/js/2993.b247be2a.chunk.js","mappings":"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","sources":["Pages/Water/ViewConsumer/WaterDemandPaymentConfirmationModal.js","Pages/Water/ViewConsumer/WaterDemandPayment.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Dipu Singh\r\n//    Version - 1.0\r\n//    Date - 06 Dec 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - \r\n//    DESCRIPTION - \r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport RazorpayPaymentScreen from \"../../../Components/RazorpayPaymentScreen\";\r\nimport { HEADER } from \"../../Trade/tradeComponent/TradeApiListFile\";\r\nimport axios from \"axios\";\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList';\r\nimport imgSucess from '../../Water/success.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { contextVar } from '../../../Components/ContextVar'\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaterDemandPaymentConfirmationModal(props) {\r\n    // Modal.setAppElement('#yourAppElement');\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n\r\n    const transData = props?.transData;\r\n\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const paymentData = props.paymentData;\r\n    console.log(\"paymentData======\", paymentData)\r\n\r\n    // useEffect(() => {\r\n    //     if (props.openPaymentModal > 0) setIsOpen(true);\r\n    // }, [props.openPaymentModal]);\r\n\r\n    useEffect(() => {\r\n        setIsOpen(true)\r\n    }, [])\r\n\r\n\r\n    function afterOpenModal() { }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div >\r\n                    <div className=\"bg-green-200 shadow-2xl border border-sky-200 p-5 m-5 rounded-md\">\r\n                        <div onClick={closeModal} className=\"absolute cursor-pointer bg-green-100 hover:bg-gray-300 p-1 rounded-md\"><GrClose /> </div>\r\n                        <div className=\"flex justify-center\">\r\n                            <img src={imgSucess} className=\"h-20\" alt=\"\" srcset=\"\" />\r\n                        </div>\r\n                        <div className='py-1 pl-3 font-semibold text-center text-2xl text-gray-800'> Payment Completed Successfully </div>\r\n                        <p className=\"text-center\"><span className=\"text-base\"> Payment Transaction No</span> <span className=\"font-bold text-blue-700 text-xl\">{transData?.transectionNo}</span></p>\r\n                        <p className=\"border-b border-gray-300 mx-10 py-1\"></p>\r\n                        <div className='grid grid-cols-12 px-8 py-3 leading-8 space-x-8 text-sm'>\r\n                            <div className='md:col-span-6 col-span-12'>\r\n                                <div className='grid grid-cols-12'>\r\n                                    <div className='col-span-6 font-semibold'>\r\n                                        <p>Application No</p>\r\n                                        <p>Connection Type</p>\r\n                                    </div>\r\n                                    <div className='col-span-6 ml-3'>\r\n                                        <p>{transData?.applicationNo}</p>\r\n                                        <p>{transData?.tranType}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='md:col-span-6 col-span-12'>\r\n                                <div className='grid grid-cols-12'>\r\n                                    <div className='col-span-6 font-semibold'>\r\n                                        <p>Amount</p>\r\n                                        <p>Payment Date</p>\r\n                                    </div>\r\n                                    <div className='col-span-6'>\r\n                                        <p>{transData?.amount}</p>\r\n                                        <p>{transData?.transectionDate}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-span-12 md:mt-4 mt-10'>\r\n                                <div className='flex justify-center'>\r\n                                    <button onClick={closeModal} className='mx-2 bg-sky-600 hover:bg-sky-700 transition duration-200 hover:scale-105 font-normal text-white px-6 py-1 text-sm rounded-sm shadow-xl'>Close</button>\r\n                                    {transData && <button onClick={() => navigate(`/waterUserReceipt/${transData?.transectionNo}`)} className='mx-2 bg-indigo-600 hover:bg-indigo-700 transition duration-200 hover:scale-105 font-normal text-white px-4 py-2 text-sm  rounded-sm shadow-xl'>View Receipt</button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ReactDOM.render(<App />, appElement);\r\n\r\nexport default WaterDemandPaymentConfirmationModal;\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { MdTag } from 'react-icons/md'\r\nimport moment from 'moment'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport WaterApiList from '../../../Components/ApiList/WaterApiList'\r\nimport RazorpayPaymentScreen from '../../../Components/RazorpayPaymentScreen'\r\nimport { contextVar } from '../../../Components/ContextVar'\r\nimport BarLoader from '../../../Components/Common/BarLoader'\r\nimport WaterDemandPaymentConfirmationModal from './WaterDemandPaymentConfirmationModal'\r\nimport AxiosInterceptors from '../../../Components/GlobalData/AxiosInterceptors'\r\n\r\n\r\nconst WaterDemandPayment = () => {\r\n    const [applicationFullData, setApplicationFullData] = useState()\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [demandData, setDemandData] = useState()\r\n\r\n    const [demandCalculationData, setDemandCalculationData] = useState()\r\n    const [fromDate, setFromDate] = useState()\r\n    const [uptoDate, setUptoDate] = useState()\r\n    const [paymentStatus, setPaymentStatus] = useState(false)\r\n    const [transData, setTransData] = useState()\r\n\r\n\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const { notify } = useContext(contextVar)\r\n\r\n    // useSetTitle('Water Demand Payment')\r\n\r\n\r\n    const { api_getTranNo, api_waterApprovedApplicationDetails, api_waterListDemand, api_waterDemandCalculation, api_waterDemandPayment, header } = WaterApiList();\r\n\r\n    useEffect(() => {\r\n        getApplicationDetail() //Fetch Application Details\r\n        getDemandListDetails() //Fetch All Due Demand List\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        demandCalculation()\r\n    }, [uptoDate, fromDate])\r\n\r\n    const demandCalculation = () => {// Demand Calculation Api called\r\n\r\n        if (uptoDate == \"\") return setDemandCalculationData()\r\n        if (fromDate == \"\") return setDemandCalculationData()\r\n\r\n        setIsLoading(true)\r\n\r\n        const payload = {\r\n            \"consumerId\": id,\r\n            \"demandFrom\": fromDate,\r\n            \"demandUpto\": uptoDate\r\n        }\r\n\r\n        AxiosInterceptors.post(api_waterDemandCalculation, payload, header)\r\n            .then(function (response) {\r\n                console.log('water demand calculation Details', response.data.data)\r\n                setDemandCalculationData(response.data.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error : water calculating demand', error)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    const getApplicationDetail = () => {\r\n        setIsLoading(true)\r\n        AxiosInterceptors.post(api_waterApprovedApplicationDetails, { id: id }, header)\r\n            .then(function (response) {\r\n                console.log('water Approved Application Details', response.data.data)\r\n                setApplicationFullData(response.data.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error : water Approved Application Details', error)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const getDemandListDetails = () => {\r\n        AxiosInterceptors.post(api_waterListDemand, { \"ConsumerId\": id }, header)\r\n            .then((res) => {\r\n                console.log(\"Fetched Water Demand List\", res.data.data)\r\n                setDemandData(res.data.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Exception while fetching Water Demand\", err)\r\n            })\r\n    }\r\n\r\n\r\n    const dreturn = (data) => {   // In (DATA) this function returns the Payment Status, Message and Other Response data form Razorpay Server\r\n        console.log('Payment Status =>', data)\r\n        if (data.status == true) {\r\n            notify('Payment Done successfully', 'success')\r\n            setPaymentStatus(true)\r\n            const payload = {\r\n                \"orderId\": data.data.razorpay_order_id,\r\n                \"paymentId\": data.data.razorpay_payment_id\r\n            }\r\n\r\n            AxiosInterceptors.post(api_getTranNo, payload, header) // After Payment Completed it will send payload and get Transaction Details.\r\n                .then((res) => {\r\n                    console.log(\"Data after payment success by OrderId and PaymentID\", res)\r\n                    if (res.data.status == true) {\r\n                        setTransData(res.data.data)\r\n                    }\r\n                })\r\n                .catch((err) => console.log(\"Exception/Error while fetching by OrderID and Payment ID\", err))\r\n        }\r\n        getDemandListDetails() // Refetch Demand Payment list\r\n    }\r\n\r\n    const submitForm = () => {\r\n        setIsLoading(true)\r\n        const payload = {\r\n            'consumerId': id,\r\n            'demandFrom': fromDate,\r\n            'demandUpto': uptoDate,\r\n            'amount': demandCalculationData?.totalPayAmount,\r\n            \"paymentMode\": \"online\",\r\n            \"remarks\": \"citizen payment\"\r\n        }\r\n\r\n        console.log(\"final submit\", payload)\r\n\r\n        // return\r\n\r\n        AxiosInterceptors.post(api_waterDemandPayment, payload, header)\r\n            .then((res) => {\r\n                if (res.data.status) {\r\n                    // getDemandListDetails()\r\n                    setIsLoading(false)\r\n                    console.log(\"Order Id Generated Successfully\", res)\r\n                    if (res.data.status == true) {\r\n                        RazorpayPaymentScreen(res.data.data, dreturn)\r\n                    } else {\r\n                        notify(res.data.message, 'error')\r\n                    }\r\n                } else {\r\n                    console.log(\"Failed Generate Order ID.\", res)\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Exception while generating order id\", err)\r\n                setIsLoading(false)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    //Formik Start\r\n\r\n\r\n    const validationSchema = yup.object({\r\n\r\n        monthFrom: yup.string().required('Require Field'),\r\n        monthUpto: yup.string().required('Require Field'),\r\n        // remarks: yup.string().required('Require Field'),\r\n\r\n\r\n    })\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            monthFrom: '',\r\n            monthUpto: '',\r\n            penalty: '',\r\n            rebate: '',\r\n            advanced: '',\r\n        },\r\n\r\n        onSubmit: (values, resetForm) => {\r\n            // console.log(\"Form Data\", values)\r\n            submitForm(values)\r\n        }\r\n        , validationSchema\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n\r\n        { (name == 'monthFrom') && setFromDate(value) }\r\n        { (name == 'monthUpto') && setUptoDate(value) }\r\n\r\n    }\r\n\r\n    //Formik END\r\n\r\n\r\n    // Filter Data Demand upto should be greater than demand upto\r\n    const filterDate = demandData?.consumerDemands?.filter(item => moment(item.demand_upto, 'YYYY-MM-DD').format('yy-MM').toString() >= moment(fromDate, 'YYYY-MM-DD').format('yy-MM'));\r\n    // const filterDate =  demandData?.consumerDemands?.filter(item =>  item.demand_upto >= fromDate);\r\n\r\n    // console.log(\"filterDate\",fromDate, moment(fromDate, 'YYYY-MM-DD').format('MMyy'))\r\n    // console.log(\"filterDate\", filterDate)\r\n    return (\r\n        <>\r\n            {isLoading && <BarLoader />}\r\n\r\n            {paymentStatus && <WaterDemandPaymentConfirmationModal transData={transData} />}\r\n\r\n            <div className='grid grid-cols-1 md:grid-cols-12 lg:grid-cols-12 gap-2 container mx-auto w-full'>\r\n\r\n                <div className=\"col-span-12 rounded-lg p-4\">\r\n\r\n                    {/* Basic  details */}\r\n                    <div className='p-4'>\r\n                        <div className=''>\r\n                            <h1 className='px-1 font-semibold font-serif  text-gray-500'><MdTag className=\"inline\" /> Basic Details</h1>\r\n                            <div className='py-6 mt-2 bg-white rounded-lg shadow-xl p-4'>\r\n                                <div className=\"flex space-x-5 pl-4 \">\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-semibold text-sm'>{applicationFullData?.ulb_name ? applicationFullData?.ulb_name : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>ULB Name</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.ward_name ? applicationFullData?.ward_name : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Ward No.</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.consumer_no ? applicationFullData?.consumer_no : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Consumer No</div>\r\n                                    </div>\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-bold text-sm'>{applicationFullData?.connection_through ? applicationFullData?.connection_through : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Connection Through</div>\r\n                                    </div>\r\n                                    {applicationFullData?.connection_through == 'SAF' ?\r\n                                        <div className='flex-1'>\r\n                                            <div className='font-semibold text-md'>{applicationFullData?.saf_no ? applicationFullData?.saf_no : \"N/A\"}</div>\r\n                                            <div className='text-gray-500 text-xs'>SAF No</div>\r\n                                        </div> :\r\n                                        <div className='flex-1'>\r\n                                            <div className='font-semibold text-md'>{applicationFullData?.holding_no ? applicationFullData?.holding_no : \"N/A\"}</div>\r\n                                            <div className='text-gray-500 text-xs'>Holding No</div>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='flex-1'>\r\n                                        <div className='font-semibold text-md'>{applicationFullData?.owner_char_type ? applicationFullData?.owner_char_type : \"N/A\"}</div>\r\n                                        <div className='text-gray-500 text-xs'>Ownership Type</div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <>\r\n                        <div className='mt-5 p-4'>\r\n                            <h1 className='px-1 font-semibold font-serif text-gray-500'><MdTag className=\"inline\" />Due Demand Details</h1>\r\n\r\n                            <table className='min-w-full leading-normal mt-2 bg-white rounded-lg shadow-xl p-4'>\r\n                                <thead className='font-bold text-left text-sm border text-gray-800 bg-white'>\r\n                                    <tr>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">#</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand From</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand Upto</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Demand Amount</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Penalty</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Connection Type</th>\r\n                                        <th className=\"px-2 py-3 border-b border-gray-200  text-xs uppercase text-left\">Payable Amount </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"text-sm\">\r\n\r\n                                    <>\r\n                                        {demandData?.consumerDemands?.map((items, i) => (\r\n                                            <tr className=\"bg-white shadow-xl border-b border-gray-200\">\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{i + 1}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.demand_from ? moment(items?.demand_from, 'YYYY-MM-DD').format('DD-MMM-yy') : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.demand_upto ? moment(items?.demand_upto, 'YYYY-MM-DD').format('DD-MMM-yy') : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.balance_amount ? items?.balance_amount : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.penalty ? items?.penalty : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.connection_type ? items?.connection_type : \"N/A\"}</td>\r\n                                                <td className=\"px-2 py-2 text-left text-gray-500 text-xs\">{items?.amount ? '₹ ' + items?.amount : \"N/A\"}</td>\r\n\r\n                                            </tr>\r\n                                        ))}\r\n                                    </>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </>\r\n\r\n\r\n                    <div className=\"col-span-12 rounded-lg p-4\">\r\n                        <div className='py-6 mt-2 bg-white rounded-lg shadow-xl border border-y-gray-200 p-4'>\r\n                            <form onSubmit={formik.handleSubmit} onChange={handleChange} className=\"p-4 relative\">\r\n\r\n                                <div className=\"grid grid-cols-12\">\r\n\r\n                                    {/* Forms */}\r\n\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\" mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Month From</label>\r\n                                        <select {...formik.getFieldProps('monthFrom')} type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {demandData?.consumerDemands?.map((item, index) => (\r\n                                                <option key={index} value={item.demand_from}>{moment(item.demand_from, 'YYYY-MM-DD').format('MMM-yy')}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.monthFrom && formik.errors.monthFrom ? formik.errors.monthFrom : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\"><small className=\" mt-1 text-sm font-semibold text-red-600 inline \">*</small>Select Month Upto</label>\r\n                                        <select {...formik.getFieldProps('monthUpto')} type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {filterDate?.map((item, index) => (\r\n                                                <option key={index} value={item.demand_upto}>{moment(item.demand_upto, 'YYYY-MM-DD').format('MMM-yy')}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.monthUpto && formik.errors.monthUpto ? formik.errors.monthUpto : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Total Demand</label>\r\n                                        <input {...formik.getFieldProps('amount')} value={demandCalculationData?.totalDemand || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.amount && formik.errors.amount ? formik.errors.amount : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Penalty</label>\r\n                                        <input {...formik.getFieldProps('penalty')} value={demandCalculationData?.totalPenalty || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.penalty && formik.errors.penalty ? formik.errors.penalty : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Rebate</label>\r\n                                        <input {...formik.getFieldProps('rebate')} value={demandCalculationData?.totalRebate || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.rebate && formik.errors.rebate ? formik.errors.rebate : null}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-6 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <label className=\"form-label inline-block mb-1 text-gray-600 text-sm font-semibold\">Advanced</label>\r\n                                        <input {...formik.getFieldProps('advanced')} value={demandCalculationData?.totalAdvance || 0} disabled type=\"text\" className=\"form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:border-blue-600 focus:outline-none placeholder-gray-300 shadow-md bg-slate-200\" />\r\n                                        <span className=\"text-red-600 absolute text-xs\">{formik.touched.advanced && formik.errors.advanced ? formik.errors.advanced : null}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-4 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <p>Remain Advance : <span className='text-orange-700 font-semibold'>{demandCalculationData?.remaningAdvanceAmount || 0}</span></p>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-4 col-span-12 md:col-span-6 md:px-4\">\r\n                                        <p> Payable Amount : <span className='text-green-700 font-semibold'>{demandCalculationData?.totalPayAmount ? '₹' + demandCalculationData?.totalPayAmount : 0}</span></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-span-12 grid grid-cols-2 mt-10\">\r\n\r\n                                        <div className=''></div>\r\n                                        <div className='md:pl-10 text-right space-x-5'>\r\n                                            <button type='button' onClick={() => navigate(-1)} className=\" px-6 py-2.5 bg-sky-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-sky-700 hover:shadow-lg focus:bg-sky-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-indigo-800 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Back</button>\r\n                                            <button type='submit' className=\" px-6 py-2.5 bg-indigo-600 text-white font-medium text-xs leading-tight  rounded shadow-md hover:bg-indigo-600 hover:shadow-lg focus:bg-indigo-700 focus:shadow-lg focus:outline-none focus:ring-0 active:shadow-lg transition duration-150 ease-in-out cursor-pointer\">Pay Tax</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WaterDemandPayment"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","background","border","props","_React$useState","React","_React$useState2","_slicedToArray","modalIsOpen","setIsOpen","transData","navigate","useNavigate","paymentData","closeModal","console","log","useEffect","_jsx","className","children","Modal","isOpen","onAfterOpen","onRequestClose","style","contentLabel","_jsxs","onClick","GrClose","src","imgSucess","alt","srcset","transectionNo","applicationNo","tranType","amount","transectionDate","concat","_demandData$consumerD","_demandData$consumerD2","_demandData$consumerD3","_useState","useState","_useState2","applicationFullData","setApplicationFullData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","demandData","setDemandData","_useState7","_useState8","demandCalculationData","setDemandCalculationData","_useState9","_useState10","fromDate","setFromDate","_useState11","_useState12","uptoDate","setUptoDate","_useState13","_useState14","paymentStatus","setPaymentStatus","_useState15","_useState16","setTransData","id","useParams","notify","useContext","contextVar","_WaterApiList","WaterApiList","api_getTranNo","api_waterApprovedApplicationDetails","api_waterListDemand","api_waterDemandCalculation","api_waterDemandPayment","header","getApplicationDetail","getDemandListDetails","demandCalculation","payload","AxiosInterceptors","then","response","data","catch","error","res","err","dreturn","status","razorpay_order_id","razorpay_payment_id","validationSchema","yup","monthFrom","required","monthUpto","formik","useFormik","enableReinitialize","initialValues","penalty","rebate","advanced","onSubmit","values","resetForm","totalPayAmount","RazorpayPaymentScreen","message","submitForm","filterDate","consumerDemands","filter","item","moment","demand_upto","format","toString","_Fragment","BarLoader","WaterDemandPaymentConfirmationModal","MdTag","ulb_name","ward_name","consumer_no","connection_through","saf_no","holding_no","owner_char_type","map","items","i","demand_from","balance_amount","connection_type","handleSubmit","onChange","e","name","target","value","_objectSpread","getFieldProps","type","index","touched","errors","totalDemand","disabled","totalPenalty","totalRebate","totalAdvance","remaningAdvanceAmount"],"sourceRoot":""}