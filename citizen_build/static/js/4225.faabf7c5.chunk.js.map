{"version":3,"file":"static/js/4225.faabf7c5.chunk.js","mappings":"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","sources":["Components/Common/CustomErrorBoundary.js","Pages/AdvertisementModule/ServerErrorCard.js","Components/Common/ListTable/GlobalFilter.js","Components/Common/ListTable/ListTable.js","Pages/TransactionHistoryFactory/TransactionHistoryFactory.js"],"sourcesContent":["import React from 'react'\r\nclass CustomErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    // componentDidCatch(error, errorInfo) {\r\n    //   // You can also log the error to an error reporting service\r\n    //   logErrorToMyService(error, errorInfo);\r\n    // }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1 className='text-red-600 text-lg font-semibold'>{this.props?.errorMsg}</h1>;\r\n      }\r\n  \r\n      return this.props.children;\r\n    }\r\n  }\r\n  export default CustomErrorBoundary\r\n  ","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Component  - ServerErrorCard\r\n// DESCRIPTION - This component is rendered when there is some error in hitting the api to show text like server is busy..\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineReload } from 'react-icons/ai'\r\n\r\nfunction ServerErrorCard(props) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div class=\"items-center justify-center p-10 bg-white shadow-xl\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex rounded-full bg-red-100 p-4\">\r\n            <div class=\"rounded-full stroke-red-600 bg-red-200 p-4\">\r\n              <svg class=\"w-16 h-16\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 8H6.01M6 16H6.01M6 12H18C20.2091 12 22 10.2091 22 8C22 5.79086 20.2091 4 18 4H6C3.79086 4 2 5.79086 2 8C2 10.2091 3.79086 12 6 12ZM6 12C3.79086 12 2 13.7909 2 16C2 18.2091 3.79086 20 6 20H14\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M17 16L22 21M22 16L17 21\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" p-10\">\r\n          <div>\r\n            <div className=\"text-center font-semibold text-3xl\">{props?.title}</div>\r\n            <p class=\"text-slate-600 mt-1 lg:text-lg\">{props?.desc}</p>\r\n            <div className=\"text-center mt-10\">\r\n              <button className={`mr-4 bg-indigo-500  text-white px-6 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => window.location.reload()}><AiOutlineReload className=\"inline mr-2\" />Reload</button>\r\n              <button className={`mr-4 bg-white border border-indigo-500 text-indigo-500 px-4 py-1 shadow-lg hover:scale-105 rounded-sm`} onClick={() => navigate(props?.buttonUrl)}>{props?.buttonText}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServerErrorCard","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 24 june 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - GlobalFilter\r\n//    DESCRIPTION - GlobalFilter Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport React from 'react'\r\n\r\nfunction GlobalFilter({ filter, setFilter }) {\r\n  return (\r\n    <>\r\n      Search : {' '}\r\n      <input className='border-2 border-gray-600 px-2 bg-gray-200' type=\"text\" value={filter || ''} onChange={e => setFilter(e.target.value)} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GlobalFilter\r\n/**\r\n * Exported to :\r\n * 1. BasicTable Component\r\n * \r\n */","//////////////////////////////////////////////////////////////////////////////////////\r\n//    Author - Talib Hussain\r\n//    Version - 1.0\r\n//    Date - 24 june 2022\r\n//    Revision - 1\r\n//    Project - JUIDCO\r\n//    Component  - ListTable\r\n//    DESCRIPTION - ListTable Component\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nimport React, { useMemo, useState, useEffect } from 'react'\r\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table'\r\nimport { AiOutlineArrowDown } from 'react-icons/ai'\r\nimport { CSVLink } from \"react-csv\";\r\nimport GlobalFilter from './GlobalFilter'\r\nimport { format } from 'date-fns'\r\nimport axios from 'axios'\r\nimport { AiOutlineDoubleRight, AiOutlineDoubleLeft } from 'react-icons/ai'\r\n\r\n\r\nfunction ListTable(props) {\r\n    // console.log('lll ',props.dataList)\r\n    const [bounce, setbounce] = useState('hidden')\r\n    const columns = useMemo(() => props.columns, [])\r\n    const data = useMemo(() => props.dataList, [props.dataList])\r\n\r\n    useEffect(() => {\r\n        setPageSize(10)\r\n    }, [])\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        // rows,//since used pagination\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        prepareRow,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0 }\r\n    }, useGlobalFilter, useSortBy, usePagination)\r\n\r\n    const { globalFilter, pageIndex, pageSize } = state\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex mb-2 pb-2\">\r\n                <div className='flex-initial'><GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} /></div>\r\n                {props?.export != false && <div className='flex-initial ml-2'><button className='bg-sky-400 px-3 pr-3  shadow-lg rounded py-1 text-white hover:shadow-2xl hover:bg-green-600 text-center relative' onMouseEnter={() => setbounce('')} onMouseLeave={() => setbounce('hidden')}><CSVLink data={props.dataList}>Export</CSVLink><div className={bounce + ' absolute h-full top-3 text-sm left-0 text-center animate-bounce'}><AiOutlineArrowDown /></div></button></div>}\r\n                <div className='flex-1'>{props.children}</div>\r\n                {\r\n                    props.assessmentType && <div className='flex-initial flex'><div className=\"flex\">\r\n                        <div className='flex-initial h-4 w-4 text-green-900 text-xs font-semibold text-center bg-green-200 rounded-full flex-initial ml-4 '>N</div><div className='flex-initial text-xs ml-2'> New Assessment</div>\r\n                        <div className='flex-initial h-4 w-4 bg-blue-200 h-4 w-4 text-blue-900 text-xs font-semibold text-center rounded-full flex-initial ml-4'>R</div><div className='flex-initial text-xs ml-2'> Re-Assessment</div>\r\n                        <div className='flex-initial h-4 w-4 bg-red-200 h-4 w-4 text-red-900 text-xs font-semibold text-center rounded-full flex-initial ml-4'>M</div><div className='flex-initial text-xs ml-2'> Mutation</div>\r\n                    </div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\" py-2 overflow-x-auto\">\r\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden bg-white shadow-lg\">\r\n                    <table {...getTableBodyProps} className=\"min-w-full leading-normal\">\r\n                        <thead className='font-bold text-left text-sm bg-sky-50'>\r\n                            {\r\n                                headerGroups?.map((headerGroup) => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {\r\n                                            headerGroup.headers.map((column) => (\r\n                                                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"px-2 py-3 border-b border-gray-200 text-gray-800  text-left text-xs uppercase text-left\">{column.render('Header')}\r\n                                                    <span>{column.isSorted ? (column.isSortedDesc ? '⬆️' : '⬇️') : ''}</span></th>\r\n\r\n                                            ))\r\n                                        }\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n\r\n                        </thead>\r\n                        <tbody {...getTableBodyProps()} className=\"text-sm\">\r\n                            {/* {rows.map((row) => { */} {/**since used pagination */}\r\n                            {page?.map((row) => {\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()} className=\"bg-white shadow-lg border-b border-gray-200\">\r\n                                        {row?.cells?.map((cell) => {\r\n                                            return <td {...cell.getCellProps()} className=\"px-2 py-2 text-sm text-left\">{cell.render('Cell')}</td>\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className='mt-3 grid grid-cols-12'>\r\n                        {/* <span> Search Page Option\r\n                            | Go to page : {''}\r\n                            <input className='border-2 border-black rounded-lg' type=\"text\" defaultValue={pageIndex + 1} onChange={(e) => {\r\n                                const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                gotoPage(pageNumber)\r\n                            }} />\r\n                        </span> */}\r\n                        <div className='col-span-2'>  <select className=\"h-10 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" value={pageSize} onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                            {[5, 10, 25, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    show {pageSize}\r\n                                </option>\r\n                            ))}\r\n\r\n                        </select></div>\r\n                        <div className='col-span-4 text-center col-start-5'>   <span >\r\n                            page {''}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{''}\r\n                        </span></div>\r\n\r\n                        <div className='col-span-4 text-right'><button className='cursor-pointer hover:bg-sky-300 p-2 hover:text-white' onClick={() => gotoPage(0)} disabled={!canPreviousPage}><AiOutlineDoubleLeft /> </button>\r\n                            <button className={(!canPreviousPage ? 'opacity-50' : 'opacity-100') + ' text-xl hover:bg-sky-300 hover:text-white'} onClick={() => previousPage()} disabled={!canPreviousPage}>⬅️</button>\r\n                            <button className={(!canNextPage ? 'opacity-50' : 'opacity-100') + ' text-xl hover:bg-sky-300 hover:text-white'} onClick={() => nextPage()} disabled={!canNextPage}>➡️</button>\r\n                            <button className='cursor-pointer hover:bg-sky-300 p-2 hover:text-white' onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>  <AiOutlineDoubleRight /></button></div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTable\r\n/**\r\n * Exported to :\r\n * 1. MailboxContent Component\r\n * 2. PropertySafApplicationList Component\r\n * \r\n */","// Author - Talib Hussain\r\n// Version - 1.0\r\n// Date - 17 MARCH 2023\r\n// Revision - 1\r\n// Project - JUIDCO\r\n// Status - Closed\r\n// Component  - TransactionHistoryFactory\r\n// DESCRIPTION - This component is showing history of transaction done for property module.\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport ListTable from '../../Components/Common/ListTable/ListTable'\r\nimport CustomErrorBoundary from '../../Components/Common/CustomErrorBoundary'\r\nimport ApiHeader from '../../Components/ApiList/ApiHeader';\r\nimport BrandLoader from '../../Components/Common/BrandLoader';\r\nimport ServerErrorCard from '../AdvertisementModule/ServerErrorCard';\r\nimport CommonModal from '../../Components/GlobalData/CommonModal';\r\n\r\n\r\nfunction TransactionHistoryFactory(props) {\r\n\r\n    const [readyMadeListData, setreadyMadeListData] = useState();\r\n    const [readyMadeListStatus, setreadyMadeListStatus] = useState(false);\r\n    const [erroState, seterroState] = useState(false);\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    // GETTING TABLE COLUMN FROM PARENT COMPONENT\r\n    let columnSchema = [...props?.transactionRules?.tableColumns]\r\n\r\n    useEffect(() => {\r\n        fetchTranscationList();\r\n    }, [])\r\n\r\n    const fetchTranscationList = () => {\r\n        setisLoading(true)\r\n        seterroState(false)\r\n        setreadyMadeListStatus(false)\r\n\r\n        axios[props?.transactionRules?.api?.api_getTranscationHistory?.method](props?.transactionRules?.api?.api_getTranscationHistory?.url, ApiHeader())\r\n            .then(function (response) {\r\n                if (response?.data?.status) {\r\n                    setreadyMadeListData(response?.data?.data)\r\n                    setreadyMadeListStatus(true)\r\n                } else {\r\n                    seterroState(true)\r\n                }\r\n                setisLoading(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Server is too busy to respond, Please try again later', error);\r\n                seterroState(true)\r\n                setreadyMadeListStatus(false)\r\n                setisLoading(false)\r\n            })\r\n\r\n    }\r\n    if (erroState) {\r\n        return (\r\n            <CommonModal>\r\n                <ServerErrorCard title=\"Server is busy\" desc=\"Server is too busy to respond. Please try again later.\" buttonText=\"View Dashboard\" buttonUrl=\"/propertyDashboard\" />\r\n            </CommonModal>\r\n        )\r\n    }\r\n\r\n    if (!erroState) {\r\n        return (\r\n            <>\r\n                <div className='w-ful md:px-10 md:pt-5 mx-auto'>\r\n                    {isLoading && <BrandLoader />}\r\n                    {readyMadeListStatus && (\r\n                        <CustomErrorBoundary errorMsg=\"Some bug found\" >\r\n                            <ListTable\r\n                                assessmentType={false}\r\n                                columns={columnSchema}\r\n                                dataList={readyMadeListData}\r\n                                export={false}\r\n                            />\r\n                        </CustomErrorBoundary>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransactionHistoryFactory"],"names":["CustomErrorBoundary","props","state","hasError","this","className","errorMsg","children","error","React","navigate","useNavigate","class","viewBox","fill","xmlns","d","title","desc","onClick","window","location","reload","buttonUrl","buttonText","filter","setFilter","type","value","onChange","e","target","useState","bounce","setbounce","columns","useMemo","data","dataList","useEffect","setPageSize","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableBodyProps","getTableProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","prepareRow","pageOptions","gotoPage","pageCount","setGlobalFilter","globalFilter","pageSize","export","onMouseEnter","onMouseLeave","CSVLink","assessmentType","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Number","length","disabled","readyMadeListData","setreadyMadeListData","readyMadeListStatus","setreadyMadeListStatus","erroState","seterroState","isLoading","setisLoading","columnSchema","transactionRules","tableColumns","fetchTranscationList","axios","api","api_getTranscationHistory","method","url","ApiHeader","then","response","status","catch","console","log","CommonModal","ServerErrorCard","BrandLoader"],"sourceRoot":""}